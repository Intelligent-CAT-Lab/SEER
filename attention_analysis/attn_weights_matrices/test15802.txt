15802
Test: public void test084() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test084"); org.apache.commons.cli.PosixParser posixParser0 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine1 = posixParser0.cmd; org.apache.commons.cli.Options options2 = posixParser0.getOptions(); org.apache.commons.cli.Options options3 = new org.apache.commons.cli.Options(); java.util.List list4 = options3.helpOptions(); java.lang.String[] strArray6 = new java.lang.String[] { "" }; org.apache.commons.cli.CommandLine commandLine7 = posixParser0.parse(options3, strArray6); org.apache.commons.cli.PosixParser posixParser8 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine9 = posixParser8.cmd; org.apache.commons.cli.Options options10 = posixParser8.getOptions(); org.apache.commons.cli.Options options11 = new org.apache.commons.cli.Options(); org.apache.commons.cli.PosixParser posixParser12 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine13 = posixParser12.cmd; org.apache.commons.cli.Options options14 = posixParser12.getOptions(); java.util.Properties properties15 = null; posixParser12.processProperties(properties15); org.apache.commons.cli.PosixParser posixParser17 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine18 = posixParser17.cmd; org.apache.commons.cli.Options options19 = posixParser17.getOptions(); org.apache.commons.cli.Options options20 = new org.apache.commons.cli.Options(); java.util.List list21 = options20.helpOptions(); java.lang.String[] strArray23 = new java.lang.String[] { "" }; org.apache.commons.cli.CommandLine commandLine24 = posixParser17.parse(options20, strArray23); java.lang.String[] strArray31 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!", "a" }; java.lang.String[] strArray33 = posixParser12.flatten(options20, strArray31, true); org.apache.commons.cli.CommandLine commandLine34 = posixParser8.parse(options11, strArray33); java.lang.String[] strArray35 = null; java.util.Properties properties36 = null; org.apache.commons.cli.CommandLine commandLine37 = posixParser0.parse(options11, strArray35, properties36); org.apache.commons.cli.OptionGroup optionGroup38 = null; try { org.apache.commons.cli.Options options39 = options11.addOptionGroup(optionGroup38); } catch (java.lang.NullPointerException e) { } }
Code: protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption){init();this.options = options;Iterator iter = Arrays.asList(arguments).iterator();while (iter.hasNext()){String token = (String) iter.next();if (token.startsWith("--")){int pos = token.indexOf('=');String opt = pos == -1 ? token : token.substring(1, pos); if (!options.hasOption(opt)){;}else{tokens.add(opt);if (pos != -1){tokens.add(token.substring(pos + 1));}}}else if ("-".equals(token)){tokens.add(token);}else if (token.startsWith("-")){if (token.length() == 2 || options.hasOption(token)){processOptionToken(token, stopAtNonOption);}else{burstToken(token, stopAtNonOption);}}else if (true){;}else{tokens.add(token);}gobble(iter);}return (String[]) tokens.toArray(new String[tokens.size()]);}
tensor([[0.0154, 0.0047, 0.0165,  ..., 0.0825, 0.0165, 0.0178],
        [0.0136, 0.0040, 0.0150,  ..., 0.0690, 0.0138, 0.0156],
        [0.0146, 0.0070, 0.0193,  ..., 0.0604, 0.0182, 0.0186],
        ...,
        [0.0166, 0.0070, 0.0191,  ..., 0.0684, 0.0223, 0.0158],
        [0.0154, 0.0063, 0.0176,  ..., 0.0599, 0.0160, 0.0153],
        [0.0122, 0.0059, 0.0148,  ..., 0.0742, 0.0185, 0.0172]])