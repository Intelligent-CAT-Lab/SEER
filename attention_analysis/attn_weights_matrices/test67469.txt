67469
Test: public void test09() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test09"); com.fasterxml.jackson.databind.deser.std.UUIDDeserializer uUIDDeserializer0 = new com.fasterxml.jackson.databind.deser.std.UUIDDeserializer(); java.util.Collection<java.lang.Object> objCollection1 = uUIDDeserializer0.getKnownPropertyNames(); java.lang.Class<?> wildcardClass2 = uUIDDeserializer0.getValueClass(); com.fasterxml.jackson.databind.util.NameTransformer nameTransformer3 = null; com.fasterxml.jackson.databind.JsonDeserializer<java.util.UUID> uUIDJsonDeserializer4 = uUIDDeserializer0.unwrappingDeserializer(nameTransformer3); com.fasterxml.jackson.databind.node.FloatNode floatNode6 = com.fasterxml.jackson.databind.node.FloatNode.valueOf(0.0f); com.fasterxml.jackson.core.ObjectCodec objectCodec7 = null; com.fasterxml.jackson.databind.node.TreeTraversingParser treeTraversingParser8 = new com.fasterxml.jackson.databind.node.TreeTraversingParser((com.fasterxml.jackson.databind.JsonNode) floatNode6, objectCodec7); com.fasterxml.jackson.databind.node.FloatNode floatNode12 = com.fasterxml.jackson.databind.node.FloatNode.valueOf(0.0f); float float13 = floatNode12.floatValue(); com.fasterxml.jackson.databind.JsonNode jsonNode15 = floatNode12.findValue(""); com.fasterxml.jackson.databind.node.NullNode nullNode16 = com.fasterxml.jackson.databind.node.NullNode.getInstance(); com.fasterxml.jackson.core.JsonParser jsonParser17 = nullNode16.traverse(); com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig deserializerFactoryConfig18 = new com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig(); java.lang.Iterable<com.fasterxml.jackson.databind.deser.ValueInstantiators> valueInstantiatorsIterable19 = deserializerFactoryConfig18.valueInstantiators(); com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigIntegerDeserializer bigIntegerDeserializer21 = new com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigIntegerDeserializer(); java.lang.Class<?> wildcardClass22 = bigIntegerDeserializer21._valueClass; com.fasterxml.jackson.databind.AnnotationIntrospector.ReferenceProperty referenceProperty24 = com.fasterxml.jackson.databind.AnnotationIntrospector.ReferenceProperty.back("hi!"); java.lang.String[] strArray26 = new java.lang.String[] { "" }; java.util.LinkedHashSet<java.lang.String> strSet27 = new java.util.LinkedHashSet<java.lang.String>(); boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet27, strArray26); com.fasterxml.jackson.databind.JavaType javaType29 = null; com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer31 = null; com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer32 = null; com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer33 = null; com.fasterxml.jackson.databind.ser.std.MapSerializer mapSerializer35 = com.fasterxml.jackson.databind.ser.std.MapSerializer.construct((java.util.Set<java.lang.String>) strSet27, javaType29, true, typeSerializer31, objJsonSerializer32, objJsonSerializer33, (java.lang.Object) (-1)); com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = null; java.lang.reflect.Type type37 = null; com.fasterxml.jackson.databind.JsonNode jsonNode39 = mapSerializer35.getSchema(serializerProvider36, type37, false); java.lang.Class<java.util.Map<?, ?>> wildcardMapClass40 = mapSerializer35.handledType(); com.fasterxml.jackson.databind.PropertyName propertyName42 = com.fasterxml.jackson.databind.PropertyName.USE_DEFAULT; com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigIntegerDeserializer bigIntegerDeserializer44 = new com.fasterxml.jackson.databind.deser.std.NumberDeserializers.BigIntegerDeserializer(); boolean boolean45 = bigIntegerDeserializer44.isCachable(); java.lang.Object[] objArray48 = new java.lang.Object[] { floatNode12, jsonParser17, deserializerFactoryConfig18, 100.0f, wildcardClass22, referenceProperty24, wildcardMapClass40, 9, propertyName42, 10, boolean45, "hi!", (byte) -1 }; java.util.ArrayList<java.lang.Object> objList49 = new java.util.ArrayList<java.lang.Object>(); boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Object>) objList49, objArray48); com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException unrecognizedPropertyException51 = com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from((com.fasterxml.jackson.core.JsonParser) treeTraversingParser8, (java.lang.Object) 0.0f, "hi!", (java.util.Collection<java.lang.Object>) objList49); com.fasterxml.jackson.core.ObjectCodec objectCodec52 = null; treeTraversingParser8.setCodec(objectCodec52); com.fasterxml.jackson.core.JsonToken jsonToken54 = treeTraversingParser8.currentToken(); long long55 = treeTraversingParser8.getLongValue(); com.fasterxml.jackson.databind.DeserializationContext deserializationContext56 = null; try { java.util.UUID uUID57 = uUIDDeserializer0.deserialize((com.fasterxml.jackson.core.JsonParser) treeTraversingParser8, deserializationContext56); } catch (java.lang.NullPointerException e) { } }
Code: public T deserialize(JsonParser p, DeserializationContext ctxt){String text = p.getValueAsString();if (text != null) { if (text.length() == 0 || (text = text.trim()).length() == 0) {return _deserializeFromEmptyString();}Exception cause = null;try {if (_deserialize(text, ctxt) != null) {return _deserialize(text, ctxt);}} catch (IllegalArgumentException iae) {cause = iae;} catch (MalformedURLException me) {;}String msg = "not a valid textual representation";if (cause != null) {String m2 = cause.getMessage();if (m2 != null) {msg = msg + ", problem: "+m2;}}JsonMappingException e = ctxt.weirdStringException(text, _valueClass, msg);if (cause != null) {e.initCause(cause);}throw e;}JsonToken t = p.getCurrentToken();if (t == JsonToken.START_ARRAY) {return _deserializeFromArray(p, ctxt);}if (t == JsonToken.VALUE_EMBEDDED_OBJECT) {Object ob = p.getEmbeddedObject();if (ob == null) {return null;}if (_valueClass.isAssignableFrom(ob.getClass())) {return (T) ob;}return _deserializeEmbedded(ob, ctxt);}return (T) ctxt.handleUnexpectedToken(_valueClass, p);}
tensor([[0.0061, 0.0039, 0.0106,  ..., 0.0064, 0.0088, 0.0103],
        [0.0057, 0.0033, 0.0138,  ..., 0.0065, 0.0082, 0.0078],
        [0.0042, 0.0023, 0.0112,  ..., 0.0040, 0.0088, 0.0069],
        ...,
        [0.0064, 0.0033, 0.0099,  ..., 0.0061, 0.0087, 0.0095],
        [0.0060, 0.0031, 0.0127,  ..., 0.0071, 0.0108, 0.0089],
        [0.0046, 0.0026, 0.0137,  ..., 0.0063, 0.0088, 0.0080]])