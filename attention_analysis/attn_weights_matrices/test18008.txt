18008
Test: public void test07() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test07"); com.google.javascript.jscomp.AbstractCompiler abstractCompiler0 = null; com.google.javascript.jscomp.FlowSensitiveInlineVariables flowSensitiveInlineVariables1 = new com.google.javascript.jscomp.FlowSensitiveInlineVariables(abstractCompiler0); com.google.javascript.jscomp.ReferenceCollectingCallback.Behavior behavior2 = com.google.javascript.jscomp.ReferenceCollectingCallback.DO_NOTHING_BEHAVIOR; com.google.javascript.jscomp.AbstractCompiler abstractCompiler3 = null; com.google.javascript.jscomp.NodeTraversal.Callback callback4 = null; com.google.javascript.jscomp.ScopeCreator scopeCreator5 = null; com.google.javascript.jscomp.NodeTraversal nodeTraversal6 = new com.google.javascript.jscomp.NodeTraversal(abstractCompiler3, callback4, scopeCreator5); java.util.ArrayDeque<com.google.javascript.jscomp.ControlFlowGraph<com.google.javascript.rhino.Node>> nodeControlFlowGraphQueue7 = new java.util.ArrayDeque<com.google.javascript.jscomp.ControlFlowGraph<com.google.javascript.rhino.Node>>(); nodeTraversal6.cfgs = nodeControlFlowGraphQueue7; com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceMap referenceMap9 = null; behavior2.afterExitScope(nodeTraversal6, referenceMap9); com.google.javascript.rhino.Node[] nodeArray12 = new com.google.javascript.rhino.Node[] {}; com.google.javascript.rhino.Node node13 = new com.google.javascript.rhino.Node(0, nodeArray12); com.google.javascript.jscomp.Scope scope14 = null; com.google.javascript.jscomp.JSModule jSModule15 = null; com.google.javascript.jscomp.UseSite useSite16 = new com.google.javascript.jscomp.UseSite(node13, scope14, jSModule15); boolean boolean17 = com.google.javascript.jscomp.NodeUtil.isAssignmentOp(node13); com.google.javascript.jscomp.WarningsGuard[] warningsGuardArray19 = new com.google.javascript.jscomp.WarningsGuard[] {}; com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard20 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuardArray19); node13.putProp(0, (java.lang.Object) composeWarningsGuard20); com.google.javascript.rhino.Node[] nodeArray23 = new com.google.javascript.rhino.Node[] {}; com.google.javascript.rhino.Node node24 = new com.google.javascript.rhino.Node(0, nodeArray23); com.google.javascript.jscomp.Scope scope25 = null; com.google.javascript.jscomp.JSModule jSModule26 = null; com.google.javascript.jscomp.UseSite useSite27 = new com.google.javascript.jscomp.UseSite(node24, scope25, jSModule26); int int28 = node24.getSideEffectFlags(); boolean boolean29 = node24.isContinue(); boolean boolean30 = com.google.javascript.jscomp.NodeUtil.isHoistedFunctionDeclaration(node24); boolean boolean31 = flowSensitiveInlineVariables1.shouldTraverse(nodeTraversal6, node13, node24); com.google.javascript.jscomp.PrepareAst.PrepareAnnotations prepareAnnotations32 = new com.google.javascript.jscomp.PrepareAst.PrepareAnnotations(); com.google.javascript.jscomp.AbstractCompiler abstractCompiler33 = null; com.google.javascript.jscomp.FlowSensitiveInlineVariables flowSensitiveInlineVariables34 = new com.google.javascript.jscomp.FlowSensitiveInlineVariables(abstractCompiler33); com.google.javascript.jscomp.ReferenceCollectingCallback.Behavior behavior35 = com.google.javascript.jscomp.ReferenceCollectingCallback.DO_NOTHING_BEHAVIOR; com.google.javascript.jscomp.AbstractCompiler abstractCompiler36 = null; com.google.javascript.jscomp.NodeTraversal.Callback callback37 = null; com.google.javascript.jscomp.ScopeCreator scopeCreator38 = null; com.google.javascript.jscomp.NodeTraversal nodeTraversal39 = new com.google.javascript.jscomp.NodeTraversal(abstractCompiler36, callback37, scopeCreator38); java.util.ArrayDeque<com.google.javascript.jscomp.ControlFlowGraph<com.google.javascript.rhino.Node>> nodeControlFlowGraphQueue40 = new java.util.ArrayDeque<com.google.javascript.jscomp.ControlFlowGraph<com.google.javascript.rhino.Node>>(); nodeTraversal39.cfgs = nodeControlFlowGraphQueue40; com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceMap referenceMap42 = null; behavior35.afterExitScope(nodeTraversal39, referenceMap42); com.google.javascript.rhino.Node[] nodeArray45 = new com.google.javascript.rhino.Node[] {}; com.google.javascript.rhino.Node node46 = new com.google.javascript.rhino.Node(0, nodeArray45); com.google.javascript.jscomp.Scope scope47 = null; com.google.javascript.jscomp.JSModule jSModule48 = null; com.google.javascript.jscomp.UseSite useSite49 = new com.google.javascript.jscomp.UseSite(node46, scope47, jSModule48); boolean boolean50 = com.google.javascript.jscomp.NodeUtil.isAssignmentOp(node46); com.google.javascript.jscomp.WarningsGuard[] warningsGuardArray52 = new com.google.javascript.jscomp.WarningsGuard[] {}; com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard53 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuardArray52); node46.putProp(0, (java.lang.Object) composeWarningsGuard53); com.google.javascript.rhino.Node[] nodeArray56 = new com.google.javascript.rhino.Node[] {}; com.google.javascript.rhino.Node node57 = new com.google.javascript.rhino.Node(0, nodeArray56); com.google.javascript.jscomp.Scope scope58 = null; com.google.javascript.jscomp.JSModule jSModule59 = null; com.google.javascript.jscomp.UseSite useSite60 = new com.google.javascript.jscomp.UseSite(node57, scope58, jSModule59); int int61 = node57.getSideEffectFlags(); boolean boolean62 = node57.isContinue(); boolean boolean63 = com.google.javascript.jscomp.NodeUtil.isHoistedFunctionDeclaration(node57); boolean boolean64 = flowSensitiveInlineVariables34.shouldTraverse(nodeTraversal39, node46, node57); com.google.javascript.rhino.Node node66 = com.google.javascript.jscomp.parsing.JsDocInfoParser.parseTypeString("JSCOMPILER_PRESERVE"); boolean boolean67 = node66.isNull(); com.google.javascript.rhino.Node node68 = null; prepareAnnotations32.visit(nodeTraversal39, node66, node68); com.google.javascript.rhino.Node node71 = com.google.javascript.jscomp.parsing.JsDocInfoParser.parseTypeString("JSCOMPILER_PRESERVE"); boolean boolean72 = node71.isQuotedString(); com.google.javascript.rhino.Node node76 = com.google.javascript.rhino.Node.newNumber((double) 1000, 0, (int) (short) 100); com.google.javascript.rhino.Node[] nodeArray78 = new com.google.javascript.rhino.Node[] {}; com.google.javascript.rhino.Node node79 = new com.google.javascript.rhino.Node(0, nodeArray78); com.google.javascript.rhino.Node node80 = com.google.javascript.rhino.IR.switchNode(node76, nodeArray78); com.google.javascript.rhino.Node node81 = com.google.javascript.rhino.IR.block(nodeArray78); boolean boolean82 = flowSensitiveInlineVariables1.shouldTraverse(nodeTraversal39, node71, node81); }
Code: public void visit(NodeTraversal t, Node n, Node parent) { if (n.isName() && n.getString().equals(varName) && !(parent.isAssign() && (parent.getFirstChild() == n))) { numUsesWithinCfgNode++; } }
[[0.02882911 0.02366424 0.01379555 0.08982004 0.05668279 0.06063493
 0.05668279 0.03720257 0.04121412 0.0779901  0.0518247  0.01885794
 0.06374788 0.01885794 0.03780934 0.01885794 0.03406811 0.04468126
 0.10380621 0.04121412 0.05397804 0.01289012 0.01289012]
[0.02246038 0.02046905 0.00776551 0.13101965 0.06394406 0.08365942
 0.06394406 0.02815315 0.04310991 0.07533924 0.05013894 0.01453408
 0.05814695 0.01453408 0.03754558 0.01453408 0.02305172 0.03191806
 0.09356734 0.04310989 0.05314182 0.01295649 0.01295649]
[0.02197564 0.01571621 0.00974863 0.11033171 0.05055673 0.06979884
 0.05055673 0.02906922 0.04154357 0.11250034 0.05227637 0.01550663
 0.08253251 0.01550663 0.03740479 0.01550663 0.02543763 0.04954837
 0.10048099 0.04154357 0.03857205 0.00694313 0.00694313]
[0.02607834 0.01580785 0.00997563 0.11622333 0.06740114 0.05888541
 0.06740114 0.03957444 0.05206686 0.07427284 0.05605868 0.01613903
 0.06085227 0.01613903 0.03756541 0.01613903 0.02405379 0.03661519
 0.09028217 0.05206688 0.04737351 0.00951403 0.00951403]
[0.02117984 0.02207605 0.01046157 0.12045234 0.06444234 0.08298653
 0.06444234 0.02877952 0.0500651  0.07682091 0.0510226  0.01662873
 0.06612305 0.01662873 0.04095203 0.01662873 0.02285079 0.0364436
 0.07275473 0.05006511 0.04955804 0.00931868 0.00931868]
[0.02527645 0.01696918 0.01477767 0.12739795 0.05528447 0.07825918
 0.05528447 0.02383365 0.0535081  0.07205308 0.05681083 0.01566663
 0.06176425 0.01566663 0.03190722 0.01566663 0.02192277 0.03523652
 0.08654698 0.05350811 0.05989053 0.01138439 0.01138439]
[0.02117984 0.02207605 0.01046157 0.12045234 0.06444234 0.08298653
 0.06444234 0.02877952 0.0500651  0.07682091 0.0510226  0.01662873
 0.06612305 0.01662873 0.04095203 0.01662873 0.02285079 0.0364436
 0.07275473 0.05006511 0.04955804 0.00931868 0.00931868]
[0.02534565 0.01975374 0.00856543 0.11810106 0.06405769 0.06456393
 0.06405769 0.02294894 0.05070356 0.08552928 0.04075755 0.01600848
 0.07214144 0.01600848 0.04279709 0.01600848 0.02303955 0.03508462
 0.08780792 0.05070357 0.05511772 0.01044901 0.01044901]
[0.03227473 0.02825013 0.01674138 0.08308838 0.05391519 0.06693341
 0.05391519 0.02854322 0.05287992 0.0554565  0.04460207 0.02832579
 0.0577362  0.02832579 0.04049111 0.02832579 0.0302071  0.0343062
 0.07320227 0.05287993 0.07262477 0.01848746 0.01848746]
[0.01764789 0.01387045 0.00595292 0.18124898 0.06707414 0.07452133
 0.06707414 0.01946119 0.0419149  0.10130501 0.04274188 0.00952833
 0.05036365 0.00952833 0.03491613 0.00952833 0.01351773 0.03440212
 0.10987809 0.04191489 0.04115179 0.00622891 0.00622891]
[0.02910788 0.02355198 0.01543957 0.108909   0.04752399 0.07150426
 0.04752399 0.03710185 0.04401445 0.06823593 0.05471548 0.02048049
 0.06052655 0.02048049 0.04442829 0.02048049 0.03205454 0.0346817
 0.08007157 0.04401445 0.05654503 0.01930401 0.01930401]
[0.02262333 0.02152104 0.01046568 0.10559032 0.05250153 0.07775216
 0.05250153 0.03063832 0.04715208 0.07041747 0.04763404 0.01560411
 0.06525837 0.01560411 0.03691257 0.01560411 0.02352868 0.03863018
 0.10932616 0.04715208 0.0636231  0.01497953 0.01497953]
[0.02950808 0.02441621 0.01109831 0.1188723  0.05024922 0.07450542
 0.05024922 0.02568046 0.04762993 0.06924589 0.04645434 0.0181597
 0.06645253 0.0181597  0.04052829 0.0181597  0.02334951 0.03557365
 0.08866449 0.04762992 0.07101031 0.01220142 0.01220142]
[0.02262333 0.02152104 0.01046568 0.10559032 0.05250153 0.07775216
 0.05250153 0.03063832 0.04715208 0.07041747 0.04763404 0.01560411
 0.06525837 0.01560411 0.03691257 0.01560411 0.02352868 0.03863018
 0.10932616 0.04715208 0.0636231  0.01497953 0.01497953]
[0.02066938 0.01471503 0.01122012 0.14625154 0.04859997 0.06611077
 0.04859997 0.02946412 0.04493412 0.08797781 0.04596364 0.01409545
 0.06261846 0.01409545 0.03045382 0.01409545 0.0185458  0.03915367
 0.10965972 0.04493414 0.06565393 0.01109385 0.01109385]
[0.02262333 0.02152104 0.01046568 0.10559032 0.05250153 0.07775216
 0.05250153 0.03063832 0.04715208 0.07041747 0.04763404 0.01560411
 0.06525837 0.01560411 0.03691257 0.01560411 0.02352868 0.03863018
 0.10932616 0.04715208 0.0636231  0.01497953 0.01497953]
[0.02086558 0.01581971 0.00932891 0.11212468 0.06557802 0.08091661
 0.06557802 0.03220975 0.04762017 0.07888499 0.04578297 0.01301023
 0.06548111 0.01301023 0.03274946 0.01301023 0.0224452  0.04643462
 0.09305245 0.04762017 0.06041857 0.00902918 0.00902918]
[0.01706205 0.01884823 0.00787125 0.1297705  0.06344812 0.06289793
 0.06344812 0.03054789 0.04633366 0.09378658 0.04791389 0.01397556
 0.04884396 0.01397556 0.04076118 0.01397556 0.02045327 0.04179758
 0.10113958 0.04633367 0.05804524 0.0093853  0.0093853 ]
[0.02490149 0.01670212 0.01281479 0.12689526 0.05034968 0.07004131
 0.05034968 0.02970163 0.05574313 0.08088218 0.06178173 0.01583911
 0.05103824 0.01583911 0.0334275  0.01583911 0.02258024 0.03246125
 0.09026732 0.05574314 0.06333978 0.01173113 0.01173113]
[0.03227473 0.02825013 0.01674138 0.08308838 0.05391519 0.06693341
 0.05391519 0.02854322 0.05287992 0.0554565  0.04460207 0.02832579
 0.0577362  0.02832579 0.04049111 0.02832579 0.0302071  0.0343062
 0.07320227 0.05287993 0.07262477 0.01848746 0.01848746]
[0.02716236 0.01961628 0.0117832  0.1311191  0.05379994 0.05840117
 0.05379994 0.02835962 0.05532017 0.07923198 0.0545973  0.01740773
 0.06139334 0.01740773 0.03677524 0.01740773 0.02463344 0.03629546
 0.08842649 0.05532017 0.05551227 0.00811469 0.00811469]
[0.01980275 0.01830463 0.01070799 0.11274491 0.07731628 0.05477677
 0.07731628 0.03525058 0.05025809 0.07628441 0.05031244 0.01687301
 0.06592254 0.01687301 0.03285243 0.01687301 0.02499678 0.03426314
 0.0893085  0.05025809 0.04701275 0.01084583 0.01084583]
[0.01980275 0.01830463 0.01070799 0.11274491 0.07731628 0.05477677
 0.07731628 0.03525058 0.05025809 0.07628441 0.05031244 0.01687301
 0.06592254 0.01687301 0.03285243 0.01687301 0.02499678 0.03426314
 0.0893085  0.05025809 0.04701275 0.01084583 0.01084583]]