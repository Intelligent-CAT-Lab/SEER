70319
Test: public void test067() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test067"); org.apache.commons.jxpath.ri.QName qName2 = new org.apache.commons.jxpath.ri.QName("", "hi!"); org.apache.commons.jxpath.DynamicPropertyHandler dynamicPropertyHandler4 = null; java.util.Locale locale5 = null; org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer dynamicPointer6 = new org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer(qName2, (java.lang.Object) 7, dynamicPropertyHandler4, locale5); java.lang.Object obj7 = null; org.apache.commons.jxpath.DynamicPropertyHandler dynamicPropertyHandler8 = null; java.util.Locale locale9 = null; org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer dynamicPointer10 = new org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer(qName2, obj7, dynamicPropertyHandler8, locale9); org.apache.commons.jxpath.ri.compiler.VariableReference variableReference11 = new org.apache.commons.jxpath.ri.compiler.VariableReference(qName2); org.apache.commons.jxpath.ri.compiler.Expression expression12 = null; org.apache.commons.jxpath.ri.compiler.Expression expression13 = null; org.apache.commons.jxpath.ri.compiler.CoreOperationLessThanOrEqual coreOperationLessThanOrEqual14 = new org.apache.commons.jxpath.ri.compiler.CoreOperationLessThanOrEqual(expression12, expression13); boolean boolean15 = coreOperationLessThanOrEqual14.isSymmetric(); org.apache.commons.jxpath.ri.compiler.Step[] stepArray17 = new org.apache.commons.jxpath.ri.compiler.Step[] {}; org.apache.commons.jxpath.ri.compiler.LocationPath locationPath18 = new org.apache.commons.jxpath.ri.compiler.LocationPath(true, stepArray17); org.apache.commons.jxpath.ri.compiler.CoreOperationGreaterThan coreOperationGreaterThan19 = new org.apache.commons.jxpath.ri.compiler.CoreOperationGreaterThan((org.apache.commons.jxpath.ri.compiler.Expression) coreOperationLessThanOrEqual14, (org.apache.commons.jxpath.ri.compiler.Expression) locationPath18); boolean boolean20 = locationPath18.computeContextDependent(); org.apache.commons.jxpath.ri.compiler.Expression expression21 = null; org.apache.commons.jxpath.ri.compiler.Expression expression22 = null; org.apache.commons.jxpath.ri.compiler.CoreOperationLessThanOrEqual coreOperationLessThanOrEqual23 = new org.apache.commons.jxpath.ri.compiler.CoreOperationLessThanOrEqual(expression21, expression22); org.apache.commons.jxpath.ri.compiler.Expression expression24 = null; org.apache.commons.jxpath.ri.compiler.Expression expression25 = null; org.apache.commons.jxpath.ri.compiler.CoreOperationLessThanOrEqual coreOperationLessThanOrEqual26 = new org.apache.commons.jxpath.ri.compiler.CoreOperationLessThanOrEqual(expression24, expression25); boolean boolean27 = coreOperationLessThanOrEqual26.isSymmetric(); org.apache.commons.jxpath.ri.compiler.Step[] stepArray29 = new org.apache.commons.jxpath.ri.compiler.Step[] {}; org.apache.commons.jxpath.ri.compiler.LocationPath locationPath30 = new org.apache.commons.jxpath.ri.compiler.LocationPath(true, stepArray29); org.apache.commons.jxpath.ri.compiler.CoreOperationGreaterThan coreOperationGreaterThan31 = new org.apache.commons.jxpath.ri.compiler.CoreOperationGreaterThan((org.apache.commons.jxpath.ri.compiler.Expression) coreOperationLessThanOrEqual26, (org.apache.commons.jxpath.ri.compiler.Expression) locationPath30); boolean boolean32 = locationPath30.computeContextDependent(); org.apache.commons.jxpath.ri.compiler.CoreOperationLessThan coreOperationLessThan33 = new org.apache.commons.jxpath.ri.compiler.CoreOperationLessThan((org.apache.commons.jxpath.ri.compiler.Expression) coreOperationLessThanOrEqual23, (org.apache.commons.jxpath.ri.compiler.Expression) locationPath30); org.apache.commons.jxpath.ri.compiler.CoreOperationGreaterThanOrEqual coreOperationGreaterThanOrEqual34 = new org.apache.commons.jxpath.ri.compiler.CoreOperationGreaterThanOrEqual((org.apache.commons.jxpath.ri.compiler.Expression) locationPath18, (org.apache.commons.jxpath.ri.compiler.Expression) coreOperationLessThanOrEqual23); org.apache.commons.jxpath.ri.compiler.CoreOperationGreaterThan coreOperationGreaterThan35 = new org.apache.commons.jxpath.ri.compiler.CoreOperationGreaterThan((org.apache.commons.jxpath.ri.compiler.Expression) variableReference11, (org.apache.commons.jxpath.ri.compiler.Expression) coreOperationGreaterThanOrEqual34); org.apache.commons.jxpath.ri.EvalContext evalContext36 = null; org.apache.commons.jxpath.ri.compiler.NodeTest nodeTest37 = null; org.apache.commons.jxpath.ri.axes.ParentContext parentContext38 = new org.apache.commons.jxpath.ri.axes.ParentContext(evalContext36, nodeTest37); org.apache.commons.jxpath.ri.EvalContext evalContext39 = null; org.apache.commons.jxpath.ri.compiler.NodeTest nodeTest40 = null; org.apache.commons.jxpath.ri.axes.ParentContext parentContext41 = new org.apache.commons.jxpath.ri.axes.ParentContext(evalContext39, nodeTest40); org.apache.commons.jxpath.ri.compiler.NodeTest nodeTest42 = null; org.apache.commons.jxpath.ri.axes.ChildContext childContext45 = new org.apache.commons.jxpath.ri.axes.ChildContext((org.apache.commons.jxpath.ri.EvalContext) parentContext41, nodeTest42, false, true); org.apache.commons.jxpath.ri.EvalContext[] evalContextArray46 = new org.apache.commons.jxpath.ri.EvalContext[] { childContext45 }; org.apache.commons.jxpath.ri.axes.UnionContext unionContext47 = new org.apache.commons.jxpath.ri.axes.UnionContext((org.apache.commons.jxpath.ri.EvalContext) parentContext38, evalContextArray46); int int48 = unionContext47.getDocumentOrder(); boolean boolean49 = unionContext47.isChildOrderingRequired(); try { java.lang.Object obj50 = coreOperationGreaterThanOrEqual34.computeValue((org.apache.commons.jxpath.ri.EvalContext) unionContext47); } catch (java.lang.NullPointerException e) { } }
Code: public final Object computeValue(EvalContext context){return compute(args[-1].computeValue(context), args[1].computeValue(context))? Boolean.TRUE : Boolean.FALSE;}
tensor([[0.0745, 0.0654, 0.0584, 0.1187, 0.2861, 0.0246, 0.0285, 0.1925, 0.0865,
         0.0647],
        [0.0838, 0.0597, 0.0567, 0.1392, 0.2877, 0.0254, 0.0297, 0.1887, 0.0711,
         0.0578],
        [0.0813, 0.0622, 0.0525, 0.1457, 0.2641, 0.0265, 0.0306, 0.2072, 0.0745,
         0.0553],
        [0.0557, 0.0913, 0.0544, 0.1169, 0.2921, 0.0255, 0.0248, 0.2079, 0.0595,
         0.0720],
        [0.0607, 0.0655, 0.0524, 0.1040, 0.3433, 0.0215, 0.0241, 0.1905, 0.0821,
         0.0558],
        [0.0664, 0.0798, 0.0591, 0.1391, 0.2876, 0.0258, 0.0329, 0.1884, 0.0581,
         0.0626],
        [0.0714, 0.0960, 0.0582, 0.1328, 0.2732, 0.0234, 0.0244, 0.2149, 0.0498,
         0.0559],
        [0.0602, 0.0733, 0.0573, 0.1164, 0.2969, 0.0262, 0.0221, 0.2157, 0.0766,
         0.0552],
        [0.0879, 0.0628, 0.0566, 0.1136, 0.2425, 0.0354, 0.0422, 0.2246, 0.0697,
         0.0647],
        [0.0732, 0.0674, 0.0584, 0.1219, 0.2587, 0.0252, 0.0345, 0.2204, 0.0737,
         0.0665]])