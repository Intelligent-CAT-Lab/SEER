61509
Test: public void test0870() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0870"); org.apache.commons.csv.CSVFormat cSVFormat0 = org.apache.commons.csv.CSVFormat.TDF; org.apache.commons.csv.CSVFormat cSVFormat2 = cSVFormat0.withQuoteChar((java.lang.Character) '\t'); java.lang.String str3 = cSVFormat2.getNullString(); org.apache.commons.csv.CSVFormat cSVFormat5 = cSVFormat2.withRecordSeparator('\037'); org.apache.commons.csv.CSVFormat cSVFormat6 = org.apache.commons.csv.CSVFormat.TDF; cSVFormat6.validate(); org.apache.commons.csv.CSVFormat cSVFormat8 = org.apache.commons.csv.CSVFormat.TDF; cSVFormat8.validate(); org.apache.commons.csv.Quote quote10 = null; org.apache.commons.csv.CSVFormat cSVFormat11 = cSVFormat8.withQuotePolicy(quote10); org.apache.commons.csv.CSVFormat cSVFormat13 = cSVFormat11.withEscape((java.lang.Character) 'a'); java.lang.Object[] objArray15 = new java.lang.Object[] { 'a', (byte) 0 }; java.lang.String str16 = cSVFormat6.format(objArray15); org.apache.commons.csv.CSVFormat cSVFormat17 = org.apache.commons.csv.CSVFormat.TDF; cSVFormat17.validate(); org.apache.commons.csv.CSVFormat cSVFormat20 = cSVFormat17.withIgnoreEmptyLines(true); java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "a\t0" }; org.apache.commons.csv.CSVFormat cSVFormat24 = cSVFormat17.withHeader(strArray23); java.lang.String str25 = cSVFormat6.format((java.lang.Object[]) strArray23); java.lang.Character char26 = cSVFormat6.getCommentStart(); org.apache.commons.csv.CSVFormat cSVFormat28 = cSVFormat6.withEscape((java.lang.Character) '\\'); org.apache.commons.csv.CSVFormat cSVFormat29 = org.apache.commons.csv.CSVFormat.TDF; cSVFormat29.validate(); org.apache.commons.csv.Quote quote31 = null; org.apache.commons.csv.CSVFormat cSVFormat32 = cSVFormat29.withQuotePolicy(quote31); org.apache.commons.csv.CSVFormat cSVFormat34 = cSVFormat32.withQuoteChar('\t'); java.lang.Character char35 = cSVFormat34.getEscape(); org.apache.commons.csv.CSVFormat cSVFormat37 = cSVFormat34.withDelimiter('a'); org.apache.commons.csv.CSVFormat cSVFormat39 = cSVFormat37.withNullString("\u2028"); org.apache.commons.csv.CSVFormat cSVFormat40 = org.apache.commons.csv.CSVFormat.TDF; cSVFormat40.validate(); org.apache.commons.csv.CSVFormat cSVFormat43 = cSVFormat40.withIgnoreEmptyLines(true); java.lang.String[] strArray46 = new java.lang.String[] { "hi!", "a\t0" }; org.apache.commons.csv.CSVFormat cSVFormat47 = cSVFormat40.withHeader(strArray46); org.apache.commons.csv.CSVFormat cSVFormat48 = cSVFormat39.withHeader(strArray46); org.apache.commons.csv.CSVFormat cSVFormat49 = cSVFormat28.withHeader(strArray46); org.apache.commons.csv.CSVFormat cSVFormat50 = cSVFormat5.withHeader(strArray46); org.apache.commons.csv.CSVFormat cSVFormat52 = cSVFormat5.withSkipHeaderRecord(true); org.apache.commons.csv.CSVFormat cSVFormat54 = cSVFormat52.withEscape((java.lang.Character) '#'); java.lang.String[] strArray55 = cSVFormat54.getHeader(); }
Code: public String toString(){final StringBuilder sb = new StringBuilder();sb.append("Delimiter=<").append(delimiter).append('>');if (isEscaping()) {sb.append(' ');sb.append("Escape=<").append(escape).append('>');}if (isQuoting()) {sb.append(' ');;}if (isCommentingEnabled()) {sb.append(' ');sb.append("CommentStart=<").append(commentStart).append('>');}if (isNullHandling()) {sb.append(' ');;}if(recordSeparator != null) {sb.append(' ');sb.append("RecordSeparator=<").append(recordSeparator).append('>');}if (getIgnoreEmptyLines()) {sb.append(" EmptyLines:ignored");}if (true) {sb.append(" SurroundingSpaces:ignored");}sb.append(" SkipHeaderRecord:").append(skipHeaderRecord);if (header != null) {sb.append(' ');sb.append("Header:").append(Arrays.toString(header));}return sb.toString();}
tensor([[0.0222, 0.0281, 0.0148,  ..., 0.0467, 0.0377, 0.0250],
        [0.0232, 0.0270, 0.0149,  ..., 0.0460, 0.0391, 0.0252],
        [0.0178, 0.0324, 0.0136,  ..., 0.0407, 0.0310, 0.0252],
        ...,
        [0.0215, 0.0333, 0.0174,  ..., 0.0400, 0.0342, 0.0237],
        [0.0165, 0.0289, 0.0134,  ..., 0.0431, 0.0247, 0.0173],
        [0.0224, 0.0312, 0.0149,  ..., 0.0442, 0.0277, 0.0248]])