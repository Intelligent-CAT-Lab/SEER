17863
Test: public void testMayBeString() { }
Code: static boolean mayBeString(Node n, boolean recurse) { if (recurse) { return anyResultsMatch(n, MAY_BE_STRING_PREDICATE); } else { return mayBeStringHelper(n); } }
tensor([[0.0882, 0.0953, 0.0301, 0.0640, 0.0953, 0.0138, 0.0601, 0.0871, 0.0360,
         0.0601, 0.0306, 0.0754, 0.0163, 0.0161, 0.0424, 0.0601, 0.0306, 0.0665,
         0.0161, 0.0161],
        [0.0860, 0.1123, 0.0248, 0.0580, 0.1123, 0.0114, 0.0570, 0.0827, 0.0341,
         0.0570, 0.0370, 0.0710, 0.0108, 0.0106, 0.0461, 0.0570, 0.0370, 0.0736,
         0.0106, 0.0106],
        [0.0883, 0.0923, 0.0283, 0.0555, 0.0923, 0.0173, 0.0539, 0.0982, 0.0448,
         0.0539, 0.0467, 0.0632, 0.0130, 0.0081, 0.0509, 0.0539, 0.0467, 0.0765,
         0.0081, 0.0081],
        [0.0918, 0.0910, 0.0256, 0.0851, 0.0910, 0.0131, 0.0575, 0.0779, 0.0348,
         0.0575, 0.0354, 0.0829, 0.0131, 0.0123, 0.0423, 0.0575, 0.0354, 0.0712,
         0.0123, 0.0123],
        [0.0860, 0.1123, 0.0248, 0.0580, 0.1123, 0.0114, 0.0570, 0.0827, 0.0341,
         0.0570, 0.0370, 0.0710, 0.0108, 0.0106, 0.0461, 0.0570, 0.0370, 0.0736,
         0.0106, 0.0106],
        [0.0932, 0.1076, 0.0229, 0.0508, 0.1076, 0.0119, 0.0576, 0.0817, 0.0371,
         0.0576, 0.0345, 0.0707, 0.0128, 0.0092, 0.0540, 0.0576, 0.0345, 0.0806,
         0.0092, 0.0092],
        [0.0835, 0.0782, 0.0362, 0.0744, 0.0782, 0.0206, 0.0571, 0.0611, 0.0471,
         0.0571, 0.0408, 0.0636, 0.0202, 0.0201, 0.0577, 0.0571, 0.0408, 0.0658,
         0.0201, 0.0201],
        [0.1243, 0.0967, 0.0240, 0.0707, 0.0967, 0.0076, 0.0446, 0.1027, 0.0284,
         0.0446, 0.0238, 0.0784, 0.0090, 0.0065, 0.0588, 0.0446, 0.0238, 0.1016,
         0.0065, 0.0065],
        [0.0871, 0.0908, 0.0341, 0.0612, 0.0908, 0.0212, 0.0537, 0.0639, 0.0444,
         0.0537, 0.0395, 0.0793, 0.0207, 0.0184, 0.0424, 0.0537, 0.0395, 0.0686,
         0.0184, 0.0184],
        [0.0835, 0.0782, 0.0362, 0.0744, 0.0782, 0.0206, 0.0571, 0.0611, 0.0471,
         0.0571, 0.0408, 0.0636, 0.0202, 0.0201, 0.0577, 0.0571, 0.0408, 0.0658,
         0.0201, 0.0201],
        [0.1057, 0.0970, 0.0265, 0.0733, 0.0970, 0.0111, 0.0461, 0.0852, 0.0389,
         0.0461, 0.0302, 0.0648, 0.0125, 0.0124, 0.0578, 0.0461, 0.0302, 0.0943,
         0.0124, 0.0124],
        [0.0999, 0.0952, 0.0280, 0.0667, 0.0952, 0.0127, 0.0541, 0.0714, 0.0430,
         0.0541, 0.0380, 0.0738, 0.0149, 0.0118, 0.0501, 0.0541, 0.0380, 0.0755,
         0.0118, 0.0118],
        [0.0999, 0.0816, 0.0301, 0.0673, 0.0816, 0.0113, 0.0600, 0.1010, 0.0342,
         0.0600, 0.0386, 0.0611, 0.0133, 0.0117, 0.0469, 0.0600, 0.0386, 0.0798,
         0.0117, 0.0117],
        [0.0953, 0.0793, 0.0282, 0.0627, 0.0793, 0.0140, 0.0580, 0.0876, 0.0421,
         0.0580, 0.0495, 0.0777, 0.0124, 0.0125, 0.0543, 0.0580, 0.0495, 0.0564,
         0.0125, 0.0125],
        [0.0872, 0.0986, 0.0351, 0.0766, 0.0986, 0.0109, 0.0514, 0.0817, 0.0385,
         0.0514, 0.0350, 0.0564, 0.0148, 0.0106, 0.0506, 0.0514, 0.0350, 0.0948,
         0.0106, 0.0106],
        [0.0835, 0.0782, 0.0362, 0.0744, 0.0782, 0.0206, 0.0571, 0.0611, 0.0471,
         0.0571, 0.0408, 0.0636, 0.0202, 0.0201, 0.0577, 0.0571, 0.0408, 0.0658,
         0.0201, 0.0201],
        [0.1057, 0.0970, 0.0265, 0.0733, 0.0970, 0.0111, 0.0461, 0.0852, 0.0389,
         0.0461, 0.0302, 0.0648, 0.0125, 0.0124, 0.0578, 0.0461, 0.0302, 0.0943,
         0.0124, 0.0124],
        [0.1185, 0.0981, 0.0273, 0.0802, 0.0981, 0.0117, 0.0527, 0.1035, 0.0304,
         0.0527, 0.0291, 0.0754, 0.0109, 0.0085, 0.0294, 0.0527, 0.0291, 0.0746,
         0.0085, 0.0085],
        [0.0953, 0.0793, 0.0282, 0.0627, 0.0793, 0.0140, 0.0580, 0.0876, 0.0421,
         0.0580, 0.0495, 0.0777, 0.0124, 0.0125, 0.0543, 0.0580, 0.0495, 0.0564,
         0.0125, 0.0125],
        [0.0953, 0.0793, 0.0282, 0.0627, 0.0793, 0.0140, 0.0580, 0.0876, 0.0421,
         0.0580, 0.0495, 0.0777, 0.0124, 0.0125, 0.0543, 0.0580, 0.0495, 0.0564,
         0.0125, 0.0125]])