69045
Test: public void test39() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test39"); org.jsoup.nodes.DocumentType documentType3 = new org.jsoup.nodes.DocumentType("[]", "#text", ""); org.jsoup.nodes.Node node6 = documentType3.attr("", "PUBLIC"); org.jsoup.helper.W3CDom w3CDom7 = new org.jsoup.helper.W3CDom(); org.jsoup.nodes.Document document10 = org.jsoup.parser.Parser.parse("hi!", ""); org.jsoup.nodes.Document.OutputSettings outputSettings11 = document10.outputSettings(); java.util.List<org.jsoup.nodes.Node> nodeList12 = document10.siblingNodes(); org.jsoup.nodes.Document.QuirksMode quirksMode13 = document10.quirksMode(); org.w3c.dom.Document document14 = w3CDom7.fromJsoup(document10); org.jsoup.helper.W3CDom.W3CBuilder w3CBuilder15 = new org.jsoup.helper.W3CDom.W3CBuilder(document14); org.jsoup.select.NodeTraversor nodeTraversor16 = new org.jsoup.select.NodeTraversor((org.jsoup.select.NodeVisitor) w3CBuilder15); org.jsoup.nodes.Node node17 = documentType3.traverse((org.jsoup.select.NodeVisitor) w3CBuilder15); org.jsoup.select.Evaluator.ContainsData containsData20 = new org.jsoup.select.Evaluator.ContainsData("hi!"); org.jsoup.nodes.Document document23 = org.jsoup.parser.Parser.parse("hi!", ""); org.jsoup.nodes.Element element25 = document23.prependElement("hi!"); org.jsoup.nodes.Document document28 = org.jsoup.parser.Parser.parse("hi!", ""); org.jsoup.nodes.Element element30 = document28.prependElement("hi!"); boolean boolean31 = containsData20.matches(element25, (org.jsoup.nodes.Element) document28); org.jsoup.select.Elements elements33 = element25.getElementsByIndexEquals((int) (byte) 10); org.jsoup.parser.ParseErrorList parseErrorList35 = null; java.util.List<org.jsoup.nodes.Node> nodeList36 = org.jsoup.parser.Parser.parseFragment("", element25, "", parseErrorList35); org.jsoup.nodes.Node node37 = element25.parent(); org.jsoup.select.Elements elements38 = element25.parents(); java.lang.String str39 = element25.val(); boolean boolean40 = element25.hasParent(); try { w3CBuilder15.head((org.jsoup.nodes.Node) element25, (int) (byte) 0); } catch (org.w3c.dom.DOMException e) { } }
Code: public void head(org.jsoup.nodes.Node source, int depth) { namespacesStack.push(new HashMap<>(namespacesStack.peek())); if (source instanceof org.jsoup.nodes.Element) { org.jsoup.nodes.Element sourceEl = (org.jsoup.nodes.Element) source; String prefix = updateNamespaces(sourceEl); String namespace = namespacesStack.peek().get(prefix); Element el = doc.createElementNS(namespace, sourceEl.tagName()); copyAttributes(sourceEl, el); if (dest == null) { doc.appendChild(el); } else { dest.appendChild(el); } dest = el; } else if (source instanceof org.jsoup.nodes.TextNode) { org.jsoup.nodes.TextNode sourceText = (org.jsoup.nodes.TextNode) source; Text text = doc.createTextNode(sourceText.getWholeText()); dest.appendChild(text); } else if (source instanceof org.jsoup.nodes.Comment) { org.jsoup.nodes.Comment sourceComment = (org.jsoup.nodes.Comment) source; Comment comment = doc.createComment(sourceComment.getData()); dest.appendChild(comment); } else if (source instanceof org.jsoup.nodes.DataNode) { org.jsoup.nodes.DataNode sourceData = (org.jsoup.nodes.DataNode) source; Text node = doc.createTextNode(sourceData.getWholeData()); dest.appendChild(node); } else { } }
tensor([[0.0074, 0.0061, 0.0108,  ..., 0.0108, 0.0033, 0.0033],
        [0.0057, 0.0051, 0.0082,  ..., 0.0107, 0.0032, 0.0032],
        [0.0077, 0.0060, 0.0088,  ..., 0.0122, 0.0028, 0.0028],
        ...,
        [0.0076, 0.0066, 0.0082,  ..., 0.0124, 0.0043, 0.0043],
        [0.0052, 0.0049, 0.0100,  ..., 0.0133, 0.0029, 0.0029],
        [0.0052, 0.0049, 0.0100,  ..., 0.0133, 0.0029, 0.0029]])