69063
Test: public void test33() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test33"); org.jsoup.helper.W3CDom w3CDom0 = new org.jsoup.helper.W3CDom(); org.jsoup.nodes.Document document2 = org.jsoup.Jsoup.parseBodyFragment(""); org.jsoup.nodes.Element element4 = document2.text("\n<!--hi!-->"); org.jsoup.nodes.Element element6 = document2.prependText("\n<!--hi!-->"); java.lang.String str7 = document2.ownText(); org.jsoup.nodes.Element element8 = document2.parent(); org.w3c.dom.Document document9 = w3CDom0.fromJsoup(document2); org.jsoup.helper.W3CDom.W3CBuilder w3CBuilder10 = new org.jsoup.helper.W3CDom.W3CBuilder(document9); org.jsoup.nodes.Node node11 = null; w3CBuilder10.head(node11, (int) (short) -1); org.jsoup.select.NodeTraversor nodeTraversor14 = new org.jsoup.select.NodeTraversor((org.jsoup.select.NodeVisitor) w3CBuilder10); org.jsoup.nodes.Comment comment16 = new org.jsoup.nodes.Comment("hi!"); boolean boolean18 = comment16.hasAttr(""); boolean boolean20 = comment16.equals((java.lang.Object) (-1.0d)); org.jsoup.parser.ParseError[] parseErrorArray21 = new org.jsoup.parser.ParseError[] {}; java.util.ArrayList<org.jsoup.parser.ParseError> parseErrorList22 = new java.util.ArrayList<org.jsoup.parser.ParseError>(); boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.jsoup.parser.ParseError>) parseErrorList22, parseErrorArray21); java.lang.Object[] objArray24 = parseErrorList22.toArray(); java.util.stream.Stream<org.jsoup.parser.ParseError> parseErrorStream25 = parseErrorList22.stream(); org.jsoup.parser.ParseError[] parseErrorArray26 = new org.jsoup.parser.ParseError[] {}; java.util.ArrayList<org.jsoup.parser.ParseError> parseErrorList27 = new java.util.ArrayList<org.jsoup.parser.ParseError>(); boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.jsoup.parser.ParseError>) parseErrorList27, parseErrorArray26); java.util.stream.Stream<org.jsoup.parser.ParseError> parseErrorStream29 = parseErrorList27.parallelStream(); java.util.ListIterator<org.jsoup.parser.ParseError> parseErrorItor31 = parseErrorList27.listIterator(0); boolean boolean32 = parseErrorList22.containsAll((java.util.Collection<org.jsoup.parser.ParseError>) parseErrorList27); int int34 = parseErrorList22.indexOf((java.lang.Object) 1); java.util.ListIterator<org.jsoup.parser.ParseError> parseErrorItor35 = parseErrorList22.listIterator(); boolean boolean36 = comment16.equals((java.lang.Object) parseErrorItor35); org.jsoup.nodes.Node node38 = comment16.removeAttr(""); try { org.jsoup.select.NodeTraversor.traverse((org.jsoup.select.NodeVisitor) w3CBuilder10, (org.jsoup.nodes.Node) comment16); } catch (java.lang.NullPointerException e) { } }
Code: public void head(org.jsoup.nodes.Node source, int depth) { namespacesStack.push(new HashMap<>(namespacesStack.peek())); if (source instanceof org.jsoup.nodes.Element) { org.jsoup.nodes.Element sourceEl = (org.jsoup.nodes.Element) source; String prefix = updateNamespaces(sourceEl); String namespace = namespacesStack.peek().get(prefix); String tagName = sourceEl.tagName(); Element el = doc.createElementNS(namespace, tagName); copyAttributes(sourceEl, el); if (dest == null) { doc.appendChild(el); } else { dest.appendChild(el); } dest = el; } else if (source instanceof org.jsoup.nodes.TextNode) { org.jsoup.nodes.TextNode sourceText = (org.jsoup.nodes.TextNode) source; Text text = doc.createTextNode(sourceText.getWholeText()); dest.appendChild(text); } else if (source instanceof org.jsoup.nodes.Comment) { org.jsoup.nodes.Comment sourceComment = (org.jsoup.nodes.Comment) source; Comment comment = doc.createComment(sourceComment.getData()); dest.appendChild(comment); } else if (source instanceof org.jsoup.nodes.DataNode) { org.jsoup.nodes.DataNode sourceData = (org.jsoup.nodes.DataNode) source; Text node = doc.createTextNode(sourceData.getWholeData()); dest.appendChild(node); } else { } }
tensor([[0.0071, 0.0059, 0.0104,  ..., 0.0104, 0.0032, 0.0032],
        [0.0055, 0.0049, 0.0079,  ..., 0.0103, 0.0031, 0.0031],
        [0.0074, 0.0058, 0.0085,  ..., 0.0117, 0.0027, 0.0027],
        ...,
        [0.0073, 0.0064, 0.0080,  ..., 0.0119, 0.0042, 0.0042],
        [0.0051, 0.0047, 0.0096,  ..., 0.0128, 0.0028, 0.0028],
        [0.0051, 0.0047, 0.0096,  ..., 0.0128, 0.0028, 0.0028]])