17979
Test: public void test9() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test9"); com.google.javascript.rhino.Node node1 = com.google.javascript.rhino.IR.name("[singleton]"); node1.setVarArgs(false); com.google.javascript.jscomp.Compiler compiler4 = new com.google.javascript.jscomp.Compiler(); com.google.javascript.rhino.Node node6 = compiler4.parseTestCode("NUMBER 2.0"); boolean boolean7 = compiler4.isTypeCheckingEnabled(); boolean boolean8 = com.google.javascript.jscomp.NodeUtil.mayHaveSideEffects(node1, (com.google.javascript.jscomp.AbstractCompiler) compiler4); com.google.javascript.jscomp.FlowSensitiveInlineVariables flowSensitiveInlineVariables9 = new com.google.javascript.jscomp.FlowSensitiveInlineVariables((com.google.javascript.jscomp.AbstractCompiler) compiler4); com.google.javascript.jscomp.PassFactory passFactory11 = com.google.javascript.jscomp.DefaultPassConfig.createEmptyPass(""); com.google.javascript.jscomp.Compiler compiler12 = new com.google.javascript.jscomp.Compiler(); com.google.javascript.jscomp.CompilerPass compilerPass13 = passFactory11.create((com.google.javascript.jscomp.AbstractCompiler) compiler12); com.google.javascript.rhino.Node node15 = new com.google.javascript.rhino.Node(15); compiler12.externAndJsRoot = node15; com.google.javascript.jscomp.PassFactory passFactory18 = com.google.javascript.jscomp.DefaultPassConfig.createEmptyPass(""); com.google.javascript.jscomp.Compiler compiler19 = new com.google.javascript.jscomp.Compiler(); com.google.javascript.jscomp.CompilerPass compilerPass20 = passFactory18.create((com.google.javascript.jscomp.AbstractCompiler) compiler19); com.google.javascript.rhino.Node node22 = new com.google.javascript.rhino.Node(15); compiler19.externAndJsRoot = node22; com.google.javascript.jscomp.CheckRegExp checkRegExp24 = new com.google.javascript.jscomp.CheckRegExp((com.google.javascript.jscomp.AbstractCompiler) compiler19); com.google.javascript.jscomp.NodeTraversal nodeTraversal25 = new com.google.javascript.jscomp.NodeTraversal((com.google.javascript.jscomp.AbstractCompiler) compiler12, (com.google.javascript.jscomp.NodeTraversal.Callback) checkRegExp24); boolean boolean26 = nodeTraversal25.inGlobalScope(); com.google.javascript.rhino.InputId inputId27 = nodeTraversal25.getInputId(); flowSensitiveInlineVariables9.exitScope(nodeTraversal25); com.google.javascript.jscomp.PassFactory passFactory30 = com.google.javascript.jscomp.DefaultPassConfig.createEmptyPass(""); com.google.javascript.jscomp.Compiler compiler31 = new com.google.javascript.jscomp.Compiler(); com.google.javascript.jscomp.CompilerPass compilerPass32 = passFactory30.create((com.google.javascript.jscomp.AbstractCompiler) compiler31); com.google.javascript.rhino.Node node34 = new com.google.javascript.rhino.Node(15); compiler31.externAndJsRoot = node34; compiler31.addToDebugLog("overriding prototype with non-object"); com.google.javascript.rhino.Node node39 = com.google.javascript.rhino.IR.number((double) 2); com.google.javascript.rhino.Node node40 = com.google.javascript.rhino.IR.pos(node39); compiler31.jsRoot = node40; com.google.javascript.rhino.Node node43 = com.google.javascript.rhino.IR.number((double) 2); java.lang.String str44 = node43.toString(); boolean boolean45 = node43.hasOneChild(); com.google.javascript.rhino.Node node46 = com.google.javascript.rhino.IR.getelem(node40, node43); com.google.javascript.rhino.Node node49 = com.google.javascript.rhino.Node.newString(113, "[singleton]"); boolean boolean50 = com.google.javascript.jscomp.ControlFlowAnalysis.mayThrowException(node49); boolean boolean51 = node49.isContinue(); boolean boolean52 = com.google.javascript.jscomp.NodeUtil.isFunctionExpression(node49); boolean boolean53 = node49.isWhile(); boolean boolean54 = node49.isVar(); com.google.javascript.jscomp.NodeUtil.MayBeStringResultPredicate mayBeStringResultPredicate55 = new com.google.javascript.jscomp.NodeUtil.MayBeStringResultPredicate(); com.google.javascript.rhino.ErrorReporter errorReporter56 = null; com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry58 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter56, true); com.google.javascript.rhino.jstype.JSType[] jSTypeArray59 = new com.google.javascript.rhino.jstype.JSType[] {}; com.google.javascript.rhino.Node node60 = jSTypeRegistry58.createOptionalParameters(jSTypeArray59); int int61 = node60.getChildCount(); boolean boolean62 = mayBeStringResultPredicate55.apply(node60); boolean boolean64 = com.google.javascript.jscomp.ControlFlowAnalysis.isBreakTarget(node60, "goog.exportSymbol"); com.google.javascript.rhino.Node node65 = node49.useSourceInfoIfMissingFromForTree(node60); boolean boolean66 = node60.isParamList(); try { flowSensitiveInlineVariables9.process(node43, node60); } catch (java.lang.RuntimeException e) { } }
Code: public void process(Node externs, Node root) { (new NodeTraversal(compiler, this)).traverseRoots(externs, root); }
[[0.08177998 0.06398819 0.07496551 0.03046305 0.13736506 0.1689268
 0.0917138  0.06580587 0.04856149 0.16490102 0.04047702 0.03105221]
[0.0803609  0.06000858 0.08038422 0.02416026 0.16817656 0.18567461
 0.09357825 0.06089085 0.04865588 0.13496767 0.03275171 0.03039053]
[0.07100757 0.05998905 0.08574536 0.02954677 0.14200497 0.19522277
 0.08069988 0.05815024 0.03714735 0.18194088 0.03783409 0.02071107]
[0.07521019 0.07307622 0.09852587 0.03281138 0.1429021  0.14378592
 0.09509362 0.06764822 0.05316559 0.13338047 0.04931616 0.0350842 ]
[0.07241884 0.05950291 0.08745864 0.02886363 0.16840686 0.1538067
 0.10172565 0.0642735  0.04803122 0.16208647 0.0305104  0.02291513]
[0.07809018 0.0520054  0.08113413 0.03744709 0.15595318 0.15408984
 0.10599469 0.0512347  0.053358   0.15023763 0.04326462 0.03719054]
[0.08355773 0.07039554 0.08814275 0.04638436 0.12863193 0.11700997
 0.10554789 0.07354411 0.04862018 0.14983864 0.04651713 0.04180977]
[0.06856367 0.05476581 0.10174318 0.02815772 0.13758472 0.15897015
 0.10055938 0.06883669 0.04494855 0.16742197 0.04132022 0.02712796]
[0.0729095  0.06952456 0.07970536 0.03260202 0.17013666 0.15443826
 0.10663392 0.05719195 0.04253498 0.15109831 0.03762104 0.02560339]
[0.07793174 0.05718263 0.08055832 0.03140353 0.14676134 0.14863533
 0.10350589 0.05948394 0.04304835 0.17536679 0.04551441 0.03060771]
[0.06967994 0.05557607 0.08137339 0.02537264 0.17299578 0.16888028
 0.1160092  0.0644022  0.04693139 0.13953683 0.03727359 0.02196865]
[0.06346894 0.05374913 0.09838743 0.03280609 0.1978753  0.12848955
 0.11143547 0.05945091 0.05353822 0.13715701 0.03717084 0.02647105]]