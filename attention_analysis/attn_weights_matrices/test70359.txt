70359
Test: public void test098() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test098"); org.apache.commons.jxpath.ri.compiler.Step[] stepArray1 = new org.apache.commons.jxpath.ri.compiler.Step[] {}; org.apache.commons.jxpath.ri.compiler.LocationPath locationPath2 = new org.apache.commons.jxpath.ri.compiler.LocationPath(false, stepArray1); org.apache.commons.jxpath.ri.compiler.Constant constant4 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant6 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.NameAttributeTest nameAttributeTest7 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest((org.apache.commons.jxpath.ri.compiler.Expression) constant4, (org.apache.commons.jxpath.ri.compiler.Expression) constant6); int int8 = nameAttributeTest7.getPrecedence(); org.apache.commons.jxpath.ri.compiler.Constant constant10 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant12 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant14 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.NameAttributeTest nameAttributeTest15 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest((org.apache.commons.jxpath.ri.compiler.Expression) constant12, (org.apache.commons.jxpath.ri.compiler.Expression) constant14); org.apache.commons.jxpath.ri.compiler.CoreOperationEqual coreOperationEqual16 = new org.apache.commons.jxpath.ri.compiler.CoreOperationEqual((org.apache.commons.jxpath.ri.compiler.Expression) constant10, (org.apache.commons.jxpath.ri.compiler.Expression) nameAttributeTest15); boolean boolean17 = nameAttributeTest15.isContextDependent(); org.apache.commons.jxpath.ri.compiler.Constant constant19 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant21 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.NameAttributeTest nameAttributeTest22 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest((org.apache.commons.jxpath.ri.compiler.Expression) constant19, (org.apache.commons.jxpath.ri.compiler.Expression) constant21); org.apache.commons.jxpath.ri.EvalContext evalContext23 = null; org.apache.commons.jxpath.ri.compiler.Constant constant25 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant27 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.NameAttributeTest nameAttributeTest28 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest((org.apache.commons.jxpath.ri.compiler.Expression) constant25, (org.apache.commons.jxpath.ri.compiler.Expression) constant27); org.apache.commons.jxpath.ri.compiler.Constant constant30 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant32 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.NameAttributeTest nameAttributeTest33 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest((org.apache.commons.jxpath.ri.compiler.Expression) constant30, (org.apache.commons.jxpath.ri.compiler.Expression) constant32); boolean boolean34 = nameAttributeTest22.equal(evalContext23, (org.apache.commons.jxpath.ri.compiler.Expression) constant25, (org.apache.commons.jxpath.ri.compiler.Expression) nameAttributeTest33); org.apache.commons.jxpath.ri.compiler.Constant constant36 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant38 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant40 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.NameAttributeTest nameAttributeTest41 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest((org.apache.commons.jxpath.ri.compiler.Expression) constant38, (org.apache.commons.jxpath.ri.compiler.Expression) constant40); org.apache.commons.jxpath.ri.compiler.CoreOperationEqual coreOperationEqual42 = new org.apache.commons.jxpath.ri.compiler.CoreOperationEqual((org.apache.commons.jxpath.ri.compiler.Expression) constant36, (org.apache.commons.jxpath.ri.compiler.Expression) nameAttributeTest41); org.apache.commons.jxpath.ri.compiler.Constant constant44 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant46 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant48 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.NameAttributeTest nameAttributeTest49 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest((org.apache.commons.jxpath.ri.compiler.Expression) constant46, (org.apache.commons.jxpath.ri.compiler.Expression) constant48); org.apache.commons.jxpath.ri.compiler.CoreOperationEqual coreOperationEqual50 = new org.apache.commons.jxpath.ri.compiler.CoreOperationEqual((org.apache.commons.jxpath.ri.compiler.Expression) constant44, (org.apache.commons.jxpath.ri.compiler.Expression) nameAttributeTest49); boolean boolean51 = org.apache.commons.jxpath.util.ValueUtils.isCollection((java.lang.Object) constant44); org.apache.commons.jxpath.ri.compiler.Expression[] expressionArray52 = new org.apache.commons.jxpath.ri.compiler.Expression[] { nameAttributeTest33, constant36, constant44 }; nameAttributeTest15.args = expressionArray52; org.apache.commons.jxpath.ri.EvalContext evalContext54 = null; org.apache.commons.jxpath.ri.compiler.NodeTest nodeTest55 = null; org.apache.commons.jxpath.ri.axes.SelfContext selfContext56 = new org.apache.commons.jxpath.ri.axes.SelfContext(evalContext54, nodeTest55); int int57 = selfContext56.getCurrentPosition(); org.apache.commons.jxpath.ri.compiler.Constant constant59 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant61 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.NameAttributeTest nameAttributeTest62 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest((org.apache.commons.jxpath.ri.compiler.Expression) constant59, (org.apache.commons.jxpath.ri.compiler.Expression) constant61); org.apache.commons.jxpath.ri.EvalContext evalContext63 = null; org.apache.commons.jxpath.ri.compiler.NodeTest nodeTest64 = null; org.apache.commons.jxpath.ri.axes.SelfContext selfContext65 = new org.apache.commons.jxpath.ri.axes.SelfContext(evalContext63, nodeTest64); java.lang.Object obj66 = constant59.computeValue(evalContext63); org.apache.commons.jxpath.ri.compiler.Constant constant68 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant70 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant72 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.NameAttributeTest nameAttributeTest73 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest((org.apache.commons.jxpath.ri.compiler.Expression) constant70, (org.apache.commons.jxpath.ri.compiler.Expression) constant72); org.apache.commons.jxpath.ri.compiler.CoreOperationEqual coreOperationEqual74 = new org.apache.commons.jxpath.ri.compiler.CoreOperationEqual((org.apache.commons.jxpath.ri.compiler.Expression) constant68, (org.apache.commons.jxpath.ri.compiler.Expression) nameAttributeTest73); boolean boolean75 = nameAttributeTest15.equal((org.apache.commons.jxpath.ri.EvalContext) selfContext56, (org.apache.commons.jxpath.ri.compiler.Expression) constant59, (org.apache.commons.jxpath.ri.compiler.Expression) nameAttributeTest73); java.lang.Object obj76 = nameAttributeTest7.compute((org.apache.commons.jxpath.ri.EvalContext) selfContext56); int int77 = selfContext56.getDocumentOrder(); selfContext56.reset(); org.apache.commons.jxpath.ri.compiler.NodeTest nodeTest80 = null; org.apache.commons.jxpath.ri.EvalContext evalContext81 = locationPath2.createContextForStep((org.apache.commons.jxpath.ri.EvalContext) selfContext56, 18, nodeTest80); try { org.apache.commons.jxpath.JXPathContext jXPathContext82 = selfContext56.getJXPathContext(); } catch (java.lang.NullPointerException e) { } }
Code: protected boolean equal( EvalContext context, Expression left, Expression right) { Object l = left.compute(context); Object r = right.compute(context); if (l instanceof InitialContext) { ((EvalContext) l).reset(); } if (l instanceof SelfContext) { l = ((EvalContext) l).getSingleNodePointer(); } if (r instanceof InitialContext) { ; } if (r instanceof SelfContext) { r = ((EvalContext) r).getSingleNodePointer(); } if (l instanceof Collection) { ; } if (r instanceof Collection) { r = ((Collection) r).iterator(); } if ((l instanceof Iterator) && !(r instanceof Iterator)) { return contains((Iterator) l, r); } if (!(l instanceof Iterator) && (r instanceof Iterator)) { return contains((Iterator) r, l); } if (l instanceof Iterator && r instanceof Iterator) { return findMatch((Iterator) l, (Iterator) r); } return equal(l, r); }
tensor([[0.0115, 0.0201, 0.0292,  ..., 0.0162, 0.0096, 0.0021],
        [0.0124, 0.0261, 0.0279,  ..., 0.0225, 0.0097, 0.0021],
        [0.0091, 0.0190, 0.0381,  ..., 0.0162, 0.0106, 0.0019],
        ...,
        [0.0131, 0.0183, 0.0300,  ..., 0.0221, 0.0118, 0.0020],
        [0.0111, 0.0226, 0.0239,  ..., 0.0155, 0.0099, 0.0023],
        [0.0107, 0.0168, 0.0171,  ..., 0.0201, 0.0123, 0.0024]])