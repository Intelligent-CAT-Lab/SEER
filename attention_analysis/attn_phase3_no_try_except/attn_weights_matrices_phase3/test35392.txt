35392
Test: public void test50() throws Throwable { BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance(); DateTimeZone dateTimeZone0 = buddhistChronology0.getZone(); boolean boolean0 = dateTimeZone0.isStandardOffset(0L); }
Code: public boolean isStandardOffset(long instant) { return getOffset(instant) == getStandardOffset(instant); }
[[0.07930398 0.19181803 0.11002088 0.04062117 0.11170089 0.08801299
 0.11002088 0.1233876  0.11002091 0.03509267]
[0.05412032 0.27021614 0.10268127 0.02567612 0.14234455 0.09142273
 0.10268127 0.08184344 0.10268129 0.02633281]
[0.06423697 0.23044798 0.10554913 0.04231011 0.11104126 0.07820875
 0.10554913 0.12003156 0.10554915 0.0370759 ]
[0.06899984 0.23726293 0.09799458 0.03333702 0.12226004 0.09254893
 0.09799458 0.117768   0.0979946  0.0338395 ]
[0.08381325 0.17512347 0.10625146 0.0472855  0.1427087  0.09541821
 0.10625146 0.08784706 0.10625149 0.0490494 ]
[0.05588036 0.26182088 0.10694469 0.02934759 0.11836245 0.07956542
 0.10694469 0.10221454 0.10694471 0.03197458]
[0.06423697 0.23044798 0.10554913 0.04231011 0.11104126 0.07820875
 0.10554913 0.12003156 0.10554915 0.0370759 ]
[0.04888828 0.33108762 0.07062346 0.02436222 0.15532877 0.08243951
 0.07062346 0.11555922 0.07062346 0.03046397]
[0.06423699 0.23044801 0.10554914 0.04231012 0.11104129 0.07820876
 0.10554914 0.12003155 0.10554915 0.03707591]
[0.05598155 0.18664326 0.10231325 0.03515458 0.15760818 0.12623698
 0.10231325 0.09818139 0.10231327 0.03325428]]