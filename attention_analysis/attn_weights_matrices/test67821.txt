67821
Test: public void testSimpleNumbers() throws Exception { final StringBuilder sb = new StringBuilder(); MAPPER.acceptJsonFormatVisitor(Numbers.class, new JsonFormatVisitorWrapper.Base() { @Override public JsonObjectFormatVisitor expectObjectFormat(final JavaType type) { return new JsonObjectFormatVisitor.Base(getProvider()) { @Override public void optionalProperty(BeanProperty prop) throws JsonMappingException { sb.append("[optProp ").append(prop.getName()).append("("); JsonSerializer<Object> ser = null; if (prop instanceof BeanPropertyWriter) { BeanPropertyWriter bpw = (BeanPropertyWriter) prop; ser = bpw.getSerializer(); } final SerializerProvider prov = getProvider(); if (ser == null) { ser = prov.findValueSerializer(prop.getType(), prop); } ser.acceptJsonFormatVisitor(new JsonFormatVisitorWrapper.Base() { @Override public JsonNumberFormatVisitor expectNumberFormat( JavaType t) throws JsonMappingException { return new JsonNumberFormatVisitor() { @Override public void format(JsonValueFormat format) { sb.append("[numberFormat=").append(format).append("]"); } @Override public void enumTypes(Set<String> enums) { } @Override public void numberType(NumberType numberType) { sb.append("[numberType=").append(numberType).append("]"); } }; } @Override public JsonIntegerFormatVisitor expectIntegerFormat(JavaType t) throws JsonMappingException { return new JsonIntegerFormatVisitor() { @Override public void format(JsonValueFormat format) { sb.append("[integerFormat=").append(format).append("]"); } @Override public void enumTypes(Set<String> enums) { } @Override public void numberType(NumberType numberType) { sb.append("[numberType=").append(numberType).append("]"); } }; } }, prop.getType()); sb.append(")]"); } }; } }); }
Code: public String toString() { return _raw.getName()+"<>"; }
tensor([[0.1383, 0.1778, 0.1824, 0.1830, 0.1521, 0.1077, 0.0586],
        [0.1403, 0.1631, 0.1982, 0.2015, 0.1411, 0.1042, 0.0515],
        [0.0993, 0.2510, 0.1675, 0.1802, 0.1497, 0.1049, 0.0473],
        [0.1341, 0.1998, 0.1415, 0.2082, 0.1552, 0.0866, 0.0746],
        [0.1062, 0.2389, 0.1522, 0.2053, 0.1546, 0.0865, 0.0564],
        [0.1271, 0.2111, 0.1953, 0.1775, 0.1285, 0.0950, 0.0654],
        [0.0931, 0.1707, 0.1936, 0.2142, 0.1961, 0.0851, 0.0473]])