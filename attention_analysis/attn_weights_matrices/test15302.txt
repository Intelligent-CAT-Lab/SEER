15302
Test: public void test060() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test060"); org.apache.commons.cli2.option.PropertyOption propertyOption3 = new org.apache.commons.cli2.option.PropertyOption("", "hi!", (int) 'a'); org.apache.commons.cli2.WriteableCommandLine writeableCommandLine4 = null; propertyOption3.defaults(writeableCommandLine4); java.util.prefs.Preferences preferences6 = null; org.apache.commons.cli2.commandline.PreferencesCommandLine preferencesCommandLine8 = new org.apache.commons.cli2.commandline.PreferencesCommandLine((org.apache.commons.cli2.Option) propertyOption3, preferences6, 'a'); org.apache.commons.cli2.Option option10 = preferencesCommandLine8.getOption("<property>=<value>"); org.apache.commons.cli2.option.PropertyOption propertyOption14 = new org.apache.commons.cli2.option.PropertyOption("", "hi!", (int) 'a'); java.util.List list15 = null; org.apache.commons.cli2.commandline.WriteableCommandLineImpl writeableCommandLineImpl16 = new org.apache.commons.cli2.commandline.WriteableCommandLineImpl((org.apache.commons.cli2.Option) propertyOption14, list15); org.apache.commons.cli2.option.PropertyOption propertyOption20 = new org.apache.commons.cli2.option.PropertyOption("", "hi!", (int) 'a'); java.util.List list21 = null; org.apache.commons.cli2.commandline.WriteableCommandLineImpl writeableCommandLineImpl22 = new org.apache.commons.cli2.commandline.WriteableCommandLineImpl((org.apache.commons.cli2.Option) propertyOption20, list21); org.apache.commons.cli2.option.PropertyOption propertyOption26 = new org.apache.commons.cli2.option.PropertyOption("", "hi!", (int) 'a'); java.lang.String str27 = propertyOption26.getPreferredName(); writeableCommandLineImpl22.addOption((org.apache.commons.cli2.Option) propertyOption26); java.lang.Boolean boolean30 = writeableCommandLineImpl16.getSwitch((org.apache.commons.cli2.Option) propertyOption26, (java.lang.Boolean) true); org.apache.commons.cli2.option.PropertyOption propertyOption34 = new org.apache.commons.cli2.option.PropertyOption("", "hi!", (int) 'a'); java.lang.Object obj35 = null; boolean boolean36 = propertyOption34.equals(obj35); java.util.List list37 = writeableCommandLineImpl16.getValues((org.apache.commons.cli2.Option) propertyOption34); org.apache.commons.cli2.option.PropertyOption propertyOption41 = new org.apache.commons.cli2.option.PropertyOption("", "hi!", (int) 'a'); java.lang.String str42 = propertyOption41.getPreferredName(); org.apache.commons.cli2.WriteableCommandLine writeableCommandLine43 = null; boolean boolean45 = propertyOption41.canProcess(writeableCommandLine43, "hi!"); org.apache.commons.cli2.option.PropertyOption propertyOption49 = new org.apache.commons.cli2.option.PropertyOption("", "hi!", (int) 'a'); java.util.List list50 = null; org.apache.commons.cli2.commandline.WriteableCommandLineImpl writeableCommandLineImpl51 = new org.apache.commons.cli2.commandline.WriteableCommandLineImpl((org.apache.commons.cli2.Option) propertyOption49, list50); org.apache.commons.cli2.option.PropertyOption propertyOption55 = new org.apache.commons.cli2.option.PropertyOption("", "hi!", (int) 'a'); java.lang.String str56 = propertyOption55.getPreferredName(); writeableCommandLineImpl51.addOption((org.apache.commons.cli2.Option) propertyOption55); java.util.List list58 = writeableCommandLineImpl51.getOptions(); java.util.List list59 = writeableCommandLineImpl16.getValues((org.apache.commons.cli2.Option) propertyOption41, list58); org.apache.commons.cli2.option.PropertyOption propertyOption63 = new org.apache.commons.cli2.option.PropertyOption("", "hi!", (int) 'a'); java.util.List list64 = null; org.apache.commons.cli2.commandline.WriteableCommandLineImpl writeableCommandLineImpl65 = new org.apache.commons.cli2.commandline.WriteableCommandLineImpl((org.apache.commons.cli2.Option) propertyOption63, list64); org.apache.commons.cli2.option.PropertyOption propertyOption69 = new org.apache.commons.cli2.option.PropertyOption("", "hi!", (int) 'a'); java.lang.String str70 = propertyOption69.getPreferredName(); writeableCommandLineImpl65.addOption((org.apache.commons.cli2.Option) propertyOption69); org.apache.commons.cli2.option.PropertyOption propertyOption75 = new org.apache.commons.cli2.option.PropertyOption("", "hi!", (int) 'a'); org.apache.commons.cli2.WriteableCommandLine writeableCommandLine76 = null; propertyOption75.defaults(writeableCommandLine76); java.util.List list78 = null; java.util.List list79 = writeableCommandLineImpl65.getValues((org.apache.commons.cli2.Option) propertyOption75, list78); int int80 = propertyOption75.getId(); java.lang.Boolean boolean81 = writeableCommandLineImpl16.getSwitch((org.apache.commons.cli2.Option) propertyOption75); try { java.lang.Boolean boolean83 = preferencesCommandLine8.getSwitch((org.apache.commons.cli2.Option) propertyOption75, (java.lang.Boolean) true); } catch (java.lang.NullPointerException e) { } }
Code: public void addOption(Option option) { options.add(option); nameToOption.put(option.getPreferredName(), option); for (Iterator i = option.getTriggers().iterator(); i.hasNext();) { nameToOption.put(i.next(), option); } Option parent = option.getParent(); while (parent != null && !options.contains(parent)) { options.add(parent); parent = parent.getParent(); } }
tensor([[0.0206, 0.0166, 0.0663,  ..., 0.0497, 0.0087, 0.0087],
        [0.0151, 0.0131, 0.0968,  ..., 0.0666, 0.0079, 0.0079],
        [0.0145, 0.0144, 0.0798,  ..., 0.0517, 0.0077, 0.0077],
        ...,
        [0.0193, 0.0157, 0.0691,  ..., 0.0520, 0.0083, 0.0083],
        [0.0141, 0.0128, 0.0646,  ..., 0.0448, 0.0074, 0.0074],
        [0.0141, 0.0128, 0.0646,  ..., 0.0448, 0.0074, 0.0074]])