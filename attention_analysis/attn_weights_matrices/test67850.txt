67850
Test: public void testCustomLists() throws Exception { ObjectMapper mapper = new ObjectMapper(); SimpleModule module = new SimpleModule("test", Version.unknownVersion()); JsonSerializer<?> ser = new CollectionSerializer(null, false, null, null); final JsonSerializer<Object> collectionSerializer = (JsonSerializer<Object>) ser; module.addSerializer(Collection.class, new JsonSerializer<Collection>() { @Override public void serialize(Collection value, JsonGenerator jgen, SerializerProvider provider) throws IOException, JsonProcessingException { if (value.size() != 0) { collectionSerializer.serialize(value, jgen, provider); } else { jgen.writeNull(); } } }); mapper.registerModule(module); }
Code: public void serialize(Object value, JsonGenerator g, SerializerProvider provider) throws IOException { switch (_typeId) { case TYPE_DATE: ; break; case TYPE_CALENDAR: provider.defaultSerializeDateKey(((Calendar) value).getTimeInMillis(), g); break; case TYPE_CLASS: g.writeFieldName(((Class<?>)value).getName()); break; case TYPE_ENUM: { String str = false ? value.toString() : ((Enum<?>) value).name(); g.writeFieldName(str); } break; case TYPE_TO_STRING: default: g.writeFieldName(value.toString()); } }
tensor([[0.0137, 0.0113, 0.0303,  ..., 0.0255, 0.0062, 0.0062],
        [0.0105, 0.0096, 0.0262,  ..., 0.0426, 0.0061, 0.0061],
        [0.0160, 0.0120, 0.0302,  ..., 0.0275, 0.0076, 0.0076],
        ...,
        [0.0098, 0.0082, 0.0337,  ..., 0.0293, 0.0046, 0.0046],
        [0.0100, 0.0092, 0.0319,  ..., 0.0315, 0.0053, 0.0053],
        [0.0100, 0.0092, 0.0319,  ..., 0.0315, 0.0053, 0.0053]])