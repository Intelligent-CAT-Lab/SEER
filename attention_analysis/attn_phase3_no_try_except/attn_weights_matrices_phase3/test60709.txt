60709
Test: public void test20138() throws Throwable { DateTimeFormatterBuilder dateTimeFormatterBuilder0 = new DateTimeFormatterBuilder(); DateTimeFormatterBuilder dateTimeFormatterBuilder1 = dateTimeFormatterBuilder0.appendDayOfYear(44); HashMap<String, DateTimeZone> hashMap0 = new HashMap<String, DateTimeZone>(); HashMap<String, DateTimeZone> hashMap1 = new HashMap<String, DateTimeZone>(hashMap0); DateTimeFormatterBuilder dateTimeFormatterBuilder2 = dateTimeFormatterBuilder1.appendTimeZoneShortName((Map<String, DateTimeZone>) hashMap1); DateTimeFormatterBuilder dateTimeFormatterBuilder3 = dateTimeFormatterBuilder2.appendTimeZoneShortName(); DateTimeFormatterBuilder dateTimeFormatterBuilder4 = dateTimeFormatterBuilder3.appendFractionOfDay(44, 44); DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.clockhourOfDay(); DateTimeFormatterBuilder dateTimeFormatterBuilder5 = dateTimeFormatterBuilder4.appendShortText(dateTimeFieldType0); DateTimeFormatterBuilder.StringLiteral dateTimeFormatterBuilder_StringLiteral0 = new DateTimeFormatterBuilder.StringLiteral("@ajD#nrVuM"); DateTimePrinter dateTimePrinter0 = InternalPrinterDateTimePrinter.of(dateTimeFormatterBuilder_StringLiteral0); DateTimeParser[] dateTimeParserArray0 = new DateTimeParser[1]; DateTimeParser dateTimeParser0 = InternalParserDateTimeParser.of(dateTimeFormatterBuilder_StringLiteral0); GJChronology gJChronology0 = GJChronology.getInstance(); StrictChronology strictChronology0 = StrictChronology.getInstance(gJChronology0); DateTimeZone dateTimeZone0 = gJChronology0.getZone(); ZonedChronology zonedChronology0 = ZonedChronology.getInstance(strictChronology0, dateTimeZone0); Chronology chronology0 = zonedChronology0.withUTC(); DateTimeField dateTimeField0 = dateTimeFieldType0.getField(chronology0); dateTimeParserArray0[0] = dateTimeParser0; DateTimeFormatterBuilder dateTimeFormatterBuilder6 = dateTimeFormatterBuilder5.append(dateTimePrinter0, dateTimeParserArray0); DateTimeFormatter dateTimeFormatter0 = dateTimeFormatterBuilder4.toFormatter(); DateTimeFormatterBuilder dateTimeFormatterBuilder7 = dateTimeFormatterBuilder5.appendTimeZoneName((Map<String, DateTimeZone>) hashMap0); boolean boolean0 = dateTimeFormatterBuilder5.canBuildParser(); DateTimeFormatterBuilder dateTimeFormatterBuilder8 = dateTimeFormatterBuilder3.appendDayOfYear(5); DateTimeFormatterBuilder dateTimeFormatterBuilder9 = dateTimeFormatterBuilder1.appendMonthOfYear(5); DateTimeFormatterBuilder dateTimeFormatterBuilder10 = dateTimeFormatterBuilder5.appendTimeZoneOffset("", "@ajD#nrVuM", false, 45, 48); DateTimePrinter dateTimePrinter1 = dateTimeFormatterBuilder3.toPrinter(); DateTimeFormatterBuilder dateTimeFormatterBuilder11 = dateTimeFormatterBuilder2.appendMillisOfDay(5); Locale locale0 = Locale.FRENCH; Integer integer0 = Integer.getInteger("org.joda.time.chrono.BasicMonthOfYearDateTimeField", 0); DateTimeParserBucket dateTimeParserBucket0 = new DateTimeParserBucket(5, chronology0, locale0, integer0, 50); int int0 = dateTimeFormatterBuilder_StringLiteral0.parseInto(dateTimeParserBucket0, "", 65533); }
Code: public DateTimeFormatterBuilder appendMillisOfDay(int minDigits) { return appendDecimal(DateTimeFieldType.millisOfDay(), minDigits, 8); }
[[0.08040926 0.11154577 0.11154577 0.11154577 0.10436547 0.0881414
 0.11154577 0.11154577 0.13571873 0.03363619]
[0.06972283 0.11535972 0.11535972 0.11535972 0.11611994 0.08477157
 0.11535972 0.11535972 0.11352505 0.039062  ]
[0.06972283 0.11535972 0.11535972 0.11535972 0.11611994 0.08477157
 0.11535972 0.11535972 0.11352505 0.039062  ]
[0.06972283 0.11535972 0.11535972 0.11535972 0.11611994 0.08477157
 0.11535972 0.11535972 0.11352505 0.039062  ]
[0.08302988 0.10524233 0.10524233 0.10524233 0.14141083 0.09452167
 0.10524233 0.10524233 0.10622814 0.0485979 ]
[0.0603817  0.12134844 0.12134844 0.12134844 0.11604784 0.08800804
 0.12134844 0.12134844 0.09691593 0.0319043 ]
[0.06972283 0.11535972 0.11535972 0.11535972 0.11611994 0.08477157
 0.11535972 0.11535972 0.11352505 0.039062  ]
[0.06972283 0.11535972 0.11535972 0.11535972 0.11611994 0.08477157
 0.11535972 0.11535972 0.11352505 0.039062  ]
[0.09043597 0.11275336 0.11275336 0.11275336 0.12616533 0.08407987
 0.11275336 0.11275336 0.10795958 0.02759244]
[0.05623842 0.10340782 0.10340782 0.10340782 0.15472111 0.1257726
 0.10340782 0.10340782 0.11342485 0.03280397]]