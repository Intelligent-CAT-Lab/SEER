67935
Test: public void test182() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test182"); javax.xml.stream.XMLInputFactory xMLInputFactory0 = null; com.fasterxml.jackson.core.ObjectCodec objectCodec1 = null; javax.xml.stream.XMLInputFactory xMLInputFactory2 = null; javax.xml.stream.XMLOutputFactory xMLOutputFactory3 = null; com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory4 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec1, xMLInputFactory2, xMLOutputFactory3); javax.xml.stream.XMLInputFactory xMLInputFactory5 = null; com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper6 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory5); com.fasterxml.jackson.core.JsonFactory jsonFactory7 = xmlFactory4.setCodec((com.fasterxml.jackson.core.ObjectCodec) xmlMapper6); com.fasterxml.jackson.core.io.OutputDecorator outputDecorator8 = xmlFactory4.getOutputDecorator(); com.fasterxml.jackson.core.ObjectCodec objectCodec9 = xmlFactory4.getCodec(); boolean boolean10 = xmlFactory4.canUseCharArrays(); javax.xml.stream.XMLOutputFactory xMLOutputFactory11 = xmlFactory4.getXMLOutputFactory(); com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper12 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory11); com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper13 = xmlMapper12.copy(); com.fasterxml.jackson.core.ObjectCodec objectCodec14 = null; javax.xml.stream.XMLInputFactory xMLInputFactory15 = null; javax.xml.stream.XMLOutputFactory xMLOutputFactory16 = null; com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory17 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec14, xMLInputFactory15, xMLOutputFactory16); com.fasterxml.jackson.core.JsonFactory jsonFactory19 = xmlFactory17.setRootValueSeparator(""); com.fasterxml.jackson.core.FormatSchema formatSchema20 = null; boolean boolean21 = xmlFactory17.canUseSchema(formatSchema20); java.io.DataOutput dataOutput22 = null; com.fasterxml.jackson.core.JsonEncoding jsonEncoding23 = null; com.fasterxml.jackson.core.JsonGenerator jsonGenerator24 = xmlFactory17.createGenerator(dataOutput22, jsonEncoding23); int[] intArray31 = new int[] { (short) 100, (-1), (byte) 10, (byte) 1, 0, '#' }; jsonGenerator24.writeArray(intArray31, 0, 0); javax.xml.stream.XMLInputFactory xMLInputFactory35 = null; com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper36 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory35); com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray37 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {}; com.fasterxml.jackson.databind.ObjectMapper objectMapper38 = xmlMapper36.enable(featureArray37); com.fasterxml.jackson.databind.jsontype.SubtypeResolver subtypeResolver39 = null; com.fasterxml.jackson.databind.ObjectMapper objectMapper40 = xmlMapper36.setSubtypeResolver(subtypeResolver39); com.fasterxml.jackson.databind.node.ArrayNode arrayNode41 = xmlMapper36.createArrayNode(); xmlMapper12.writeTree(jsonGenerator24, (com.fasterxml.jackson.databind.JsonNode) arrayNode41); jsonGenerator24.writeStartArray(0); byte[] byteArray47 = new byte[] { (byte) 1, (byte) 10 }; jsonGenerator24.writeBinary(byteArray47); }
Code: public void writeBinary(Base64Variant b64variant, byte[] data, int offset, int len) throws IOException { if (data == null) { writeNull(); return; } _verifyValueWrite("write Binary value"); if (_nextName == null) { handleMissingName(); } try { if (true) { byte[] fullBuffer = toFullBuffer(data, offset, len); _xmlWriter.writeBinaryAttribute("", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer); } else if (checkNextIsUnwrapped()) { _xmlWriter.writeBinary(data, offset, len); } else { if (_xmlPrettyPrinter != null) { _xmlPrettyPrinter.writeLeafElement(_xmlWriter, _nextName.getNamespaceURI(), _nextName.getLocalPart(), data, offset, len); } else { _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart()); _xmlWriter.writeBinary(data, offset, len); _xmlWriter.writeEndElement(); } } } catch (XMLStreamException e) { StaxUtil.throwAsGenerationException(e, this); } }
tensor([[0.0077, 0.0063, 0.0030,  ..., 0.0231, 0.0034, 0.0034],
        [0.0060, 0.0054, 0.0021,  ..., 0.0270, 0.0034, 0.0034],
        [0.0058, 0.0052, 0.0020,  ..., 0.0245, 0.0030, 0.0030],
        ...,
        [0.0068, 0.0042, 0.0037,  ..., 0.0237, 0.0028, 0.0028],
        [0.0053, 0.0049, 0.0036,  ..., 0.0239, 0.0029, 0.0029],
        [0.0053, 0.0049, 0.0036,  ..., 0.0239, 0.0029, 0.0029]])