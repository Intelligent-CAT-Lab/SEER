64619
Test: public void test689() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test689"); com.fasterxml.jackson.core.util.BufferRecycler bufferRecycler0 = null; com.fasterxml.jackson.core.util.TextBuffer textBuffer1 = new com.fasterxml.jackson.core.util.TextBuffer(bufferRecycler0); int int2 = textBuffer1.getCurrentSegmentSize(); char[] charArray3 = textBuffer1.getCurrentSegment(); textBuffer1.resetWithEmpty(); int int5 = textBuffer1.getCurrentSegmentSize(); com.fasterxml.jackson.core.util.BufferRecycler bufferRecycler6 = null; com.fasterxml.jackson.core.util.TextBuffer textBuffer7 = new com.fasterxml.jackson.core.util.TextBuffer(bufferRecycler6); textBuffer7.append('a'); char[] charArray10 = textBuffer7.finishCurrentSegment(); com.fasterxml.jackson.core.JsonFactory jsonFactory11 = new com.fasterxml.jackson.core.JsonFactory(); com.fasterxml.jackson.core.JsonFactory jsonFactory12 = new com.fasterxml.jackson.core.JsonFactory(); byte[] byteArray16 = new byte[] { (byte) 1, (byte) 10, (byte) 0 }; com.fasterxml.jackson.core.JsonParser jsonParser17 = jsonFactory12.createJsonParser(byteArray16); com.fasterxml.jackson.core.JsonParser jsonParser20 = jsonFactory11.createJsonParser(byteArray16, (-1), (int) (byte) 0); java.lang.String str21 = jsonFactory11.getFormatName(); com.fasterxml.jackson.core.util.BufferRecycler bufferRecycler22 = null; com.fasterxml.jackson.core.util.TextBuffer textBuffer23 = new com.fasterxml.jackson.core.util.TextBuffer(bufferRecycler22); int int24 = textBuffer23.getCurrentSegmentSize(); char[] charArray25 = textBuffer23.getCurrentSegment(); com.fasterxml.jackson.core.JsonParser jsonParser28 = jsonFactory11.createParser(charArray25, (int) '#', 7); textBuffer7.append(charArray25, 3, 100); textBuffer1.resetWithCopy(charArray25, 0, 512); com.fasterxml.jackson.core.util.BufferRecycler bufferRecycler35 = new com.fasterxml.jackson.core.util.BufferRecycler(); int int37 = bufferRecycler35.charBufferLength((int) (byte) 1); com.fasterxml.jackson.core.util.TextBuffer textBuffer38 = new com.fasterxml.jackson.core.util.TextBuffer(bufferRecycler35); char[][] charArray39 = bufferRecycler35._charBuffers; com.fasterxml.jackson.core.util.TextBuffer textBuffer40 = new com.fasterxml.jackson.core.util.TextBuffer(bufferRecycler35); com.fasterxml.jackson.core.util.BufferRecycler bufferRecycler41 = null; com.fasterxml.jackson.core.util.TextBuffer textBuffer42 = new com.fasterxml.jackson.core.util.TextBuffer(bufferRecycler41); int int43 = textBuffer42.getCurrentSegmentSize(); com.fasterxml.jackson.core.JsonFactory jsonFactory44 = new com.fasterxml.jackson.core.JsonFactory(); byte[] byteArray48 = new byte[] { (byte) 1, (byte) 10, (byte) 0 }; com.fasterxml.jackson.core.JsonParser jsonParser49 = jsonFactory44.createJsonParser(byteArray48); java.io.OutputStream outputStream50 = null; com.fasterxml.jackson.core.JsonGenerator jsonGenerator51 = jsonFactory44.createJsonGenerator(outputStream50); com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes52 = null; com.fasterxml.jackson.core.JsonFactory jsonFactory53 = jsonFactory44.setCharacterEscapes(characterEscapes52); com.fasterxml.jackson.core.util.BufferRecycler bufferRecycler54 = null; com.fasterxml.jackson.core.util.TextBuffer textBuffer55 = new com.fasterxml.jackson.core.util.TextBuffer(bufferRecycler54); textBuffer55.append('a'); char[] charArray58 = textBuffer55.finishCurrentSegment(); com.fasterxml.jackson.core.JsonParser jsonParser59 = jsonFactory53.createParser(charArray58); textBuffer42.append(charArray58, 0, (int) (byte) 0); textBuffer40.append(charArray58, (int) (short) 10, (int) (byte) 0); char[] charArray66 = textBuffer40.getTextBuffer(); char[] charArray68 = textBuffer40.expandCurrentSegment(1000); textBuffer1.resetWithShared(charArray68, 11, 8000); }
Code: public char[] expandCurrentSegment() { final char[] curr = _currentSegment; final int len = curr.length; int newLen = len + (len >>> 1); if (newLen >= MAX_SEGMENT_LEN) { newLen = len / (len >> 0); } return (_currentSegment = Arrays.copyOf(curr, newLen)); }
tensor([[0.0195, 0.0067, 0.0177,  ..., 0.0750, 0.0373, 0.0091],
        [0.0140, 0.0058, 0.0134,  ..., 0.0887, 0.0469, 0.0058],
        [0.0180, 0.0067, 0.0142,  ..., 0.0876, 0.0407, 0.0065],
        ...,
        [0.0191, 0.0047, 0.0183,  ..., 0.0829, 0.0487, 0.0066],
        [0.0202, 0.0062, 0.0197,  ..., 0.0668, 0.0484, 0.0091],
        [0.0141, 0.0065, 0.0157,  ..., 0.0900, 0.0387, 0.0082]])