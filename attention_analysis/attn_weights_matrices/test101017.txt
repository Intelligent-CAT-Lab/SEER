101017
Test: public void test0283() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0283"); org.joda.time.chrono.BasicChronology basicChronology0 = null; org.joda.time.chrono.BasicChronology basicChronology1 = null; org.joda.time.chrono.GJChronology gJChronology2 = org.joda.time.chrono.GJChronology.getInstanceUTC(); org.joda.time.DateTimeField dateTimeField3 = gJChronology2.yearOfCentury(); org.joda.time.DateTimeField dateTimeField4 = gJChronology2.yearOfEra(); org.joda.time.DurationField durationField5 = gJChronology2.hours(); long long8 = durationField5.getMillis((long) (byte) 100, (long) 100); org.joda.time.chrono.BasicDayOfYearDateTimeField basicDayOfYearDateTimeField9 = new org.joda.time.chrono.BasicDayOfYearDateTimeField(basicChronology1, durationField5); org.joda.time.chrono.GJDayOfWeekDateTimeField gJDayOfWeekDateTimeField10 = new org.joda.time.chrono.GJDayOfWeekDateTimeField(basicChronology0, durationField5); int int12 = gJDayOfWeekDateTimeField10.getMaximumValue((long) ' '); long long14 = gJDayOfWeekDateTimeField10.remainder((long) 2755981); long long17 = gJDayOfWeekDateTimeField10.add((long) 354, 2762392); org.joda.time.DurationField durationField18 = gJDayOfWeekDateTimeField10.getDurationField(); try { int int20 = gJDayOfWeekDateTimeField10.get((long) 2769819); } catch (java.lang.NullPointerException e) { } }
Code: public long add(long instant, int value) { if (instant >= iCutover) { instant = iGregorianField.add(instant, value); if (instant < iCutover) { if (instant + iGapDuration < iCutover) { instant = gregorianToJulian(instant); } } } else { instant = iJulianField.add(instant, value); if (instant >= iCutover) { if (instant - iGapDuration >= iCutover) { instant = julianToGregorian(instant); } } } return instant; }
tensor([[0.0123, 0.0201, 0.0151,  ..., 0.0137, 0.0126, 0.0055],
        [0.0082, 0.0163, 0.0198,  ..., 0.0120, 0.0118, 0.0049],
        [0.0095, 0.0154, 0.0148,  ..., 0.0158, 0.0115, 0.0037],
        ...,
        [0.0082, 0.0217, 0.0175,  ..., 0.0117, 0.0139, 0.0045],
        [0.0101, 0.0171, 0.0141,  ..., 0.0148, 0.0134, 0.0036],
        [0.0091, 0.0148, 0.0133,  ..., 0.0197, 0.0141, 0.0049]])