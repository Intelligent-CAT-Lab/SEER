16023
Test: public void test1148() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1148"); org.apache.commons.cli.Option option4 = new org.apache.commons.cli.Option("", "hi!", false, "hi!"); option4.setDescription("hi!"); char char7 = option4.getValueSeparator(); int int8 = option4.getArgs(); option4.setArgs(0); char char11 = option4.getValueSeparator(); int int12 = option4.getArgs(); java.lang.String str13 = option4.getArgName(); org.apache.commons.cli.Option option18 = new org.apache.commons.cli.Option("", "hi!", false, "hi!"); option18.setDescription("hi!"); char char21 = option18.getValueSeparator(); int int22 = option18.getArgs(); option18.setArgs(0); char char25 = option18.getValueSeparator(); java.lang.String str26 = option18.getValue(); boolean boolean27 = option4.equals((java.lang.Object) option18); org.apache.commons.cli.Option option29 = org.apache.commons.cli.OptionBuilder.create(' '); option29.setLongOpt(""); boolean boolean32 = option29.hasArgName(); boolean boolean33 = option29.hasArg(); java.lang.String str35 = option29.getValue((int) (byte) 10); option29.setOptionalArg(false); boolean boolean38 = option29.hasArg(); option29.setArgs((int) '4'); java.lang.String str41 = option29.getKey(); java.lang.Object obj42 = option29.clone(); option18.setType((java.lang.Object) option29); java.lang.String str44 = option18.getValue(); java.lang.String str45 = option18.getKey(); }
Code: public static Option create(String opt){Option option = new Option(opt, description);option.setLongOpt(longopt);option.setRequired(required);option.setOptionalArg(optionalArg);;;option.setValueSeparator(valuesep);option.setArgName(argName);OptionBuilder.reset();return option;}
[[0.04345746 0.15316142 0.13699752 0.09402715 0.3046214  0.07605035
 0.02819395 0.02099895 0.04924829 0.06332195 0.02992154]
[0.0493681  0.14693263 0.13307194 0.09563477 0.29144815 0.08660324
 0.03206248 0.02201797 0.04151158 0.07782221 0.02352696]
[0.03622774 0.1612905  0.11167943 0.11007743 0.32754314 0.06432296
 0.03181071 0.01704223 0.04996352 0.06447807 0.02556427]
[0.03285652 0.15918076 0.13211595 0.09193385 0.31482592 0.08600664
 0.02482557 0.01948406 0.05241121 0.05674882 0.02961071]
[0.04255279 0.13868655 0.13454548 0.07580141 0.33331648 0.05979241
 0.04094732 0.0244185  0.05563453 0.06333815 0.03096641]
[0.02946324 0.13857543 0.08725481 0.11287636 0.40468985 0.06188472
 0.02477934 0.01878084 0.0427282  0.05498578 0.02398139]
[0.05912233 0.1398948  0.1357292  0.11788283 0.21203902 0.08359264
 0.04831596 0.02768516 0.04920703 0.07897082 0.04756014]
[0.04007956 0.13012199 0.11874628 0.08163871 0.36926353 0.07234047
 0.0304275  0.0238229  0.04450955 0.06262235 0.02642727]
[0.05737652 0.13694063 0.12686676 0.0744507  0.2935184  0.08552504
 0.03840671 0.02333249 0.05779004 0.07647413 0.02931861]
[0.03477099 0.17002852 0.10833288 0.08048815 0.39223257 0.05850341
 0.01956289 0.01481587 0.0414165  0.06017112 0.01967705]
[0.03979606 0.13929549 0.11786073 0.08592558 0.31651202 0.08077376
 0.03588105 0.03099133 0.05122191 0.06968429 0.03205781]]