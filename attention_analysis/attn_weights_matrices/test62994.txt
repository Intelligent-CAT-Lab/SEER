62994
Test: public void test261() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test261"); com.google.gson.DefaultDateTypeAdapter defaultDateTypeAdapter2 = new com.google.gson.DefaultDateTypeAdapter((int) (byte) 0, 0); com.google.gson.internal.bind.JsonTreeWriter jsonTreeWriter3 = new com.google.gson.internal.bind.JsonTreeWriter(); com.google.gson.stream.JsonWriter jsonWriter5 = jsonTreeWriter3.value(false); boolean boolean6 = jsonWriter5.getSerializeNulls(); com.google.gson.stream.JsonWriter jsonWriter8 = jsonWriter5.value("$"); java.util.Date date9 = null; defaultDateTypeAdapter2.write(jsonWriter8, date9); java.lang.String str11 = defaultDateTypeAdapter2.toString(); com.google.gson.internal.bind.JsonTreeWriter jsonTreeWriter12 = new com.google.gson.internal.bind.JsonTreeWriter(); com.google.gson.stream.JsonWriter jsonWriter14 = jsonTreeWriter12.value(false); com.google.gson.stream.JsonWriter jsonWriter15 = jsonTreeWriter12.beginArray(); com.google.gson.stream.JsonWriter jsonWriter16 = jsonWriter15.nullValue(); com.google.gson.stream.JsonWriter jsonWriter18 = jsonWriter15.value(10.0d); java.util.Date date19 = null; defaultDateTypeAdapter2.write(jsonWriter15, date19); com.google.gson.internal.bind.JsonTreeWriter jsonTreeWriter21 = new com.google.gson.internal.bind.JsonTreeWriter(); com.google.gson.stream.JsonWriter jsonWriter23 = jsonTreeWriter21.value(false); com.google.gson.stream.JsonWriter jsonWriter24 = jsonTreeWriter21.nullValue(); com.google.gson.stream.JsonWriter jsonWriter26 = jsonTreeWriter21.value(false); com.google.gson.JsonElement jsonElement27 = jsonTreeWriter21.get(); com.google.gson.internal.bind.JsonTreeReader jsonTreeReader28 = new com.google.gson.internal.bind.JsonTreeReader(jsonElement27); jsonTreeReader28.setLenient(true); java.lang.String str31 = jsonTreeReader28.toString(); java.lang.String str32 = jsonTreeReader28.getPath(); try { java.util.Date date33 = defaultDateTypeAdapter2.read((com.google.gson.stream.JsonReader) jsonTreeReader28); } catch (java.lang.IllegalStateException e) { } }
Code: public Date read(JsonReader in) throws IOException { if (in.peek() != JsonToken.STRING) { throw new JsonParseException("The date should be a string value"); } Date date = deserializeToDate(in.nextString()); if (dateType == Date.class) { return date; } else if (dateType == Timestamp.class) { return new Timestamp(date.getTime()); } else if (dateType == java.sql.Date.class) { return new java.sql.Date(date.getTime()); } else { throw new AssertionError(); } }
tensor([[0.0125, 0.0063, 0.0167,  ..., 0.0147, 0.0057, 0.0057],
        [0.0106, 0.0058, 0.0163,  ..., 0.0164, 0.0040, 0.0040],
        [0.0084, 0.0045, 0.0139,  ..., 0.0158, 0.0044, 0.0044],
        ...,
        [0.0122, 0.0061, 0.0202,  ..., 0.0162, 0.0072, 0.0072],
        [0.0084, 0.0039, 0.0201,  ..., 0.0141, 0.0047, 0.0047],
        [0.0084, 0.0039, 0.0201,  ..., 0.0141, 0.0047, 0.0047]])