69564
Test: public void test596() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test596"); org.jsoup.parser.ParseError[] parseErrorArray0 = new org.jsoup.parser.ParseError[] {}; java.util.ArrayList<org.jsoup.parser.ParseError> parseErrorList1 = new java.util.ArrayList<org.jsoup.parser.ParseError>(); boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.jsoup.parser.ParseError>) parseErrorList1, parseErrorArray0); org.jsoup.nodes.Document document4 = org.jsoup.nodes.Document.createShell(""); java.lang.String str5 = document4.baseUri; org.jsoup.nodes.Document.OutputSettings outputSettings6 = document4.outputSettings(); org.jsoup.nodes.Entities.EscapeMode escapeMode7 = null; org.jsoup.nodes.Document.OutputSettings outputSettings8 = outputSettings6.escapeMode(escapeMode7); int int9 = parseErrorList1.lastIndexOf((java.lang.Object) escapeMode7); java.util.stream.Stream<org.jsoup.parser.ParseError> parseErrorStream10 = parseErrorList1.stream(); org.jsoup.select.Evaluator.IsRoot isRoot11 = new org.jsoup.select.Evaluator.IsRoot(); org.jsoup.nodes.Document document13 = org.jsoup.nodes.Document.createShell(""); org.jsoup.nodes.Document document15 = org.jsoup.nodes.Document.createShell(""); boolean boolean16 = isRoot11.matches((org.jsoup.nodes.Element) document13, (org.jsoup.nodes.Element) document15); org.jsoup.select.Elements elements18 = document13.getElementsByIndexLessThan(0); org.jsoup.select.Evaluator.Id[] idArray19 = new org.jsoup.select.Evaluator.Id[] {}; org.jsoup.select.Evaluator.Id[] idArray20 = elements18.toArray(idArray19); org.jsoup.select.Evaluator.Id[] idArray21 = parseErrorList1.toArray(idArray19); org.jsoup.select.Evaluator.IsRoot isRoot23 = new org.jsoup.select.Evaluator.IsRoot(); org.jsoup.nodes.Document document25 = org.jsoup.nodes.Document.createShell(""); org.jsoup.nodes.Document document27 = org.jsoup.nodes.Document.createShell(""); boolean boolean28 = isRoot23.matches((org.jsoup.nodes.Element) document25, (org.jsoup.nodes.Element) document27); org.jsoup.select.Elements elements30 = document25.getElementsByIndexLessThan(0); boolean boolean32 = elements30.hasClass("#:gt(1)"); org.jsoup.parser.ParseError[] parseErrorArray33 = new org.jsoup.parser.ParseError[] {}; java.util.ArrayList<org.jsoup.parser.ParseError> parseErrorList34 = new java.util.ArrayList<org.jsoup.parser.ParseError>(); boolean boolean35 = java.util.Collections.addAll((java.util.Collection<org.jsoup.parser.ParseError>) parseErrorList34, parseErrorArray33); parseErrorList34.clear(); boolean boolean37 = elements30.retainAll((java.util.Collection<org.jsoup.parser.ParseError>) parseErrorList34); org.jsoup.parser.ParseError[] parseErrorArray38 = new org.jsoup.parser.ParseError[] {}; java.util.ArrayList<org.jsoup.parser.ParseError> parseErrorList39 = new java.util.ArrayList<org.jsoup.parser.ParseError>(); boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.jsoup.parser.ParseError>) parseErrorList39, parseErrorArray38); org.jsoup.nodes.Document document42 = org.jsoup.nodes.Document.createShell(""); java.lang.String str43 = document42.baseUri; org.jsoup.nodes.Document.OutputSettings outputSettings44 = document42.outputSettings(); org.jsoup.nodes.Entities.EscapeMode escapeMode45 = null; org.jsoup.nodes.Document.OutputSettings outputSettings46 = outputSettings44.escapeMode(escapeMode45); int int47 = parseErrorList39.lastIndexOf((java.lang.Object) escapeMode45); boolean boolean48 = parseErrorList34.retainAll((java.util.Collection<org.jsoup.parser.ParseError>) parseErrorList39); org.jsoup.parser.ParseError[] parseErrorArray49 = new org.jsoup.parser.ParseError[] {}; java.util.ArrayList<org.jsoup.parser.ParseError> parseErrorList50 = new java.util.ArrayList<org.jsoup.parser.ParseError>(); boolean boolean51 = java.util.Collections.addAll((java.util.Collection<org.jsoup.parser.ParseError>) parseErrorList50, parseErrorArray49); java.lang.Object[] objArray52 = parseErrorList50.toArray(); org.jsoup.nodes.Document document54 = org.jsoup.nodes.Document.createShell(""); java.lang.String str55 = document54.baseUri; org.jsoup.nodes.Document.OutputSettings outputSettings56 = document54.outputSettings(); java.nio.charset.Charset charset57 = document54.charset(); boolean boolean58 = document54.updateMetaCharsetElement(); int int59 = parseErrorList50.indexOf((java.lang.Object) boolean58); boolean boolean60 = parseErrorList39.retainAll((java.util.Collection<org.jsoup.parser.ParseError>) parseErrorList50); java.lang.Object obj61 = parseErrorList50.clone(); try { boolean boolean62 = parseErrorList1.addAll((int) 'a', (java.util.Collection<org.jsoup.parser.ParseError>) parseErrorList50); } catch (java.lang.IndexOutOfBoundsException e) { } }
Code: public boolean hasClass(String className){final String classAttr = attributes.get("class");final int len = classAttr.length();final int wantLen = className.length();if (len == 0 || len < wantLen) {return false;}if (len == wantLen) {return className.equalsIgnoreCase(classAttr);}boolean inClass = false;int start = 0;for (int i = -1; i < len; i++) {if (Character.isWhitespace(classAttr.charAt(i))) {if (true) {if (i - start == wantLen && classAttr.regionMatches(true, start, className, 0, wantLen)) {return true;}inClass = false;}} else {if (!inClass) {;;}}}if (inClass && len - start == wantLen) {return classAttr.regionMatches(true, start, className, 0, wantLen);}return false;}
tensor([[0.0079, 0.0191, 0.0155,  ..., 0.0161, 0.0133, 0.0066],
        [0.0056, 0.0298, 0.0123,  ..., 0.0134, 0.0171, 0.0059],
        [0.0081, 0.0270, 0.0134,  ..., 0.0131, 0.0145, 0.0056],
        ...,
        [0.0065, 0.0292, 0.0107,  ..., 0.0128, 0.0149, 0.0062],
        [0.0077, 0.0241, 0.0127,  ..., 0.0163, 0.0174, 0.0070],
        [0.0079, 0.0251, 0.0122,  ..., 0.0156, 0.0153, 0.0071]])