15783
Test: public void test116() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test116"); org.apache.commons.cli.PosixParser posixParser0 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine1 = posixParser0.cmd; org.apache.commons.cli.Options options2 = posixParser0.getOptions(); org.apache.commons.cli.Options options3 = new org.apache.commons.cli.Options(); java.util.List list4 = options3.helpOptions(); java.lang.String[] strArray6 = new java.lang.String[] { "" }; org.apache.commons.cli.CommandLine commandLine7 = posixParser0.parse(options3, strArray6); org.apache.commons.cli.Options options8 = posixParser0.getOptions(); posixParser0.burstToken("", false); posixParser0.checkRequiredOptions(); org.apache.commons.cli.CommandLine commandLine13 = posixParser0.cmd; org.apache.commons.cli.PosixParser posixParser14 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine15 = posixParser14.cmd; org.apache.commons.cli.Options options16 = posixParser14.getOptions(); org.apache.commons.cli.Options options17 = new org.apache.commons.cli.Options(); java.util.List list18 = options17.helpOptions(); java.lang.String[] strArray20 = new java.lang.String[] { "" }; org.apache.commons.cli.CommandLine commandLine21 = posixParser14.parse(options17, strArray20); org.apache.commons.cli.PosixParser posixParser22 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.PosixParser posixParser23 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine24 = posixParser23.cmd; org.apache.commons.cli.Options options25 = posixParser23.getOptions(); org.apache.commons.cli.Options options26 = new org.apache.commons.cli.Options(); java.util.List list27 = options26.helpOptions(); java.lang.String[] strArray29 = new java.lang.String[] { "" }; org.apache.commons.cli.CommandLine commandLine30 = posixParser23.parse(options26, strArray29); java.lang.String[] strArray31 = null; org.apache.commons.cli.CommandLine commandLine32 = posixParser22.parse(options26, strArray31); org.apache.commons.cli.PosixParser posixParser33 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine34 = posixParser33.cmd; org.apache.commons.cli.Options options35 = posixParser33.getOptions(); java.util.Properties properties36 = null; posixParser33.processProperties(properties36); org.apache.commons.cli.PosixParser posixParser38 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine39 = posixParser38.cmd; org.apache.commons.cli.Options options40 = posixParser38.getOptions(); org.apache.commons.cli.Options options41 = new org.apache.commons.cli.Options(); java.util.List list42 = options41.helpOptions(); java.lang.String[] strArray44 = new java.lang.String[] { "" }; org.apache.commons.cli.CommandLine commandLine45 = posixParser38.parse(options41, strArray44); java.lang.String[] strArray52 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!", "a" }; java.lang.String[] strArray54 = posixParser33.flatten(options41, strArray52, true); org.apache.commons.cli.CommandLine commandLine55 = posixParser14.parse(options26, strArray54); org.apache.commons.cli.Options options59 = options26.addOption("a", false, "arg"); org.apache.commons.cli.PosixParser posixParser60 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.PosixParser posixParser61 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine62 = posixParser61.cmd; org.apache.commons.cli.Options options63 = posixParser61.getOptions(); org.apache.commons.cli.Options options64 = new org.apache.commons.cli.Options(); java.util.List list65 = options64.helpOptions(); java.lang.String[] strArray67 = new java.lang.String[] { "" }; org.apache.commons.cli.CommandLine commandLine68 = posixParser61.parse(options64, strArray67); java.lang.String[] strArray69 = null; org.apache.commons.cli.CommandLine commandLine70 = posixParser60.parse(options64, strArray69); org.apache.commons.cli.Options options71 = new org.apache.commons.cli.Options(); boolean boolean73 = options71.hasOption(""); org.apache.commons.cli.PosixParser posixParser74 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.PosixParser posixParser75 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine76 = posixParser75.cmd; org.apache.commons.cli.Options options77 = posixParser75.getOptions(); org.apache.commons.cli.Options options78 = new org.apache.commons.cli.Options(); java.util.List list79 = options78.helpOptions(); java.lang.String[] strArray81 = new java.lang.String[] { "" }; org.apache.commons.cli.CommandLine commandLine82 = posixParser75.parse(options78, strArray81); java.lang.String[] strArray83 = null; org.apache.commons.cli.CommandLine commandLine84 = posixParser74.parse(options78, strArray83); java.lang.String[] strArray85 = commandLine84.getArgs(); java.lang.String[] strArray87 = posixParser60.flatten(options71, strArray85, true); org.apache.commons.cli.CommandLine commandLine89 = posixParser0.parse(options26, strArray85, true); java.util.ListIterator listIterator91 = null; try { posixParser0.processOption("org.apache.commons.cli.UnrecognizedOptionException: a", listIterator91); } catch (org.apache.commons.cli.UnrecognizedOptionException e) { } }
Code: protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption){init();this.options = options;Iterator iter = Arrays.asList(arguments).iterator();while (iter.hasNext()){String token = (String) iter.next();if (token.startsWith("--")){int pos = token.indexOf('=');String opt = pos == 1 ? token : token.substring(0, pos); if (!options.hasOption(opt)){;}else{tokens.add(opt);if (pos != -1){tokens.add(token.substring(pos + 1));}}}else if ("-".equals(token)){tokens.add(token);}else if (token.startsWith("-")){if (token.length() == 2 || options.hasOption(token)){processOptionToken(token, stopAtNonOption);}else{burstToken(token, stopAtNonOption);}}else if (true){;}else{tokens.add(token);}gobble(iter);}return (String[]) tokens.toArray(new String[tokens.size()]);}
tensor([[0.0158, 0.0048, 0.0170,  ..., 0.0848, 0.0169, 0.0183],
        [0.0141, 0.0042, 0.0155,  ..., 0.0713, 0.0143, 0.0161],
        [0.0150, 0.0072, 0.0198,  ..., 0.0621, 0.0187, 0.0191],
        ...,
        [0.0169, 0.0072, 0.0195,  ..., 0.0699, 0.0228, 0.0162],
        [0.0158, 0.0065, 0.0180,  ..., 0.0614, 0.0164, 0.0157],
        [0.0125, 0.0061, 0.0151,  ..., 0.0758, 0.0189, 0.0176]])