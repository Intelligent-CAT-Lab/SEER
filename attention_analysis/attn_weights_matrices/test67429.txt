67429
Test: public void testSimpleRootRecovery() throws Exception { final String JSON = aposToQuotes("{'a':3}{'a':27,'foo':[1,2],'b':{'x':3}} {'a':1,'b':2} "); MappingIterator<Bean> it = MAPPER.readerFor(Bean.class).readValues(JSON); Bean bean = it.nextValue(); try { it.nextValue(); } catch (JsonMappingException e) { verifyException(e, "Unrecognized field \"foo\""); } bean = it.nextValue(); it.close(); }
Code: public <T> MappingIterator<T> readValues(byte[] src, int offset, int length){if (_dataFormatReaders != null) {return _detectBindAndReadValues(_dataFormatReaders.findFormat(src, offset, length), true);}return _bindAndReadValues(_considerFilter(_parserFactory.createParser(src),false));}
tensor([[0.0313, 0.0967, 0.0408, 0.0611, 0.0304, 0.0183, 0.1110, 0.0183, 0.0853,
         0.0332, 0.0180, 0.0158, 0.1042, 0.0334, 0.1110, 0.0253, 0.1278, 0.0383],
        [0.0283, 0.1052, 0.0447, 0.0493, 0.0279, 0.0120, 0.1248, 0.0120, 0.0815,
         0.0290, 0.0202, 0.0162, 0.0664, 0.0384, 0.1248, 0.0224, 0.1622, 0.0345],
        [0.0300, 0.1006, 0.0391, 0.0599, 0.0266, 0.0135, 0.1193, 0.0135, 0.0959,
         0.0270, 0.0164, 0.0139, 0.0783, 0.0378, 0.1193, 0.0266, 0.1437, 0.0385],
        [0.0280, 0.0904, 0.0438, 0.0550, 0.0245, 0.0145, 0.1296, 0.0145, 0.0822,
         0.0334, 0.0166, 0.0137, 0.0763, 0.0402, 0.1296, 0.0253, 0.1453, 0.0372],
        [0.0235, 0.1058, 0.0468, 0.0575, 0.0235, 0.0142, 0.1112, 0.0142, 0.0939,
         0.0365, 0.0120, 0.0115, 0.1160, 0.0317, 0.1112, 0.0198, 0.1349, 0.0357],
        [0.0223, 0.1059, 0.0455, 0.0547, 0.0267, 0.0153, 0.1076, 0.0153, 0.1021,
         0.0285, 0.0144, 0.0132, 0.1268, 0.0319, 0.1076, 0.0222, 0.1217, 0.0383],
        [0.0354, 0.1244, 0.0495, 0.0623, 0.0307, 0.0178, 0.0941, 0.0178, 0.0882,
         0.0358, 0.0224, 0.0179, 0.0844, 0.0357, 0.0941, 0.0265, 0.1295, 0.0332],
        [0.0223, 0.1059, 0.0455, 0.0547, 0.0267, 0.0153, 0.1076, 0.0153, 0.1021,
         0.0285, 0.0144, 0.0132, 0.1268, 0.0319, 0.1076, 0.0222, 0.1217, 0.0383],
        [0.0279, 0.0828, 0.0455, 0.0622, 0.0311, 0.0174, 0.0964, 0.0174, 0.0914,
         0.0327, 0.0189, 0.0163, 0.1142, 0.0487, 0.0964, 0.0305, 0.1363, 0.0340],
        [0.0281, 0.1225, 0.0367, 0.0456, 0.0231, 0.0116, 0.1239, 0.0116, 0.0995,
         0.0253, 0.0136, 0.0091, 0.0795, 0.0272, 0.1239, 0.0214, 0.1649, 0.0325],
        [0.0192, 0.1075, 0.0382, 0.0456, 0.0201, 0.0108, 0.1285, 0.0108, 0.0765,
         0.0247, 0.0089, 0.0098, 0.1315, 0.0314, 0.1285, 0.0189, 0.1548, 0.0344],
        [0.0233, 0.1049, 0.0438, 0.0633, 0.0245, 0.0111, 0.1109, 0.0111, 0.0708,
         0.0268, 0.0135, 0.0133, 0.1055, 0.0502, 0.1109, 0.0263, 0.1588, 0.0312],
        [0.0232, 0.0918, 0.0491, 0.0556, 0.0290, 0.0139, 0.1134, 0.0139, 0.0826,
         0.0401, 0.0164, 0.0158, 0.1040, 0.0353, 0.1134, 0.0285, 0.1359, 0.0380],
        [0.0324, 0.0989, 0.0475, 0.0485, 0.0394, 0.0211, 0.1106, 0.0211, 0.0719,
         0.0361, 0.0273, 0.0231, 0.0840, 0.0513, 0.1106, 0.0277, 0.1116, 0.0369],
        [0.0354, 0.1244, 0.0495, 0.0623, 0.0307, 0.0178, 0.0941, 0.0178, 0.0882,
         0.0358, 0.0224, 0.0179, 0.0844, 0.0357, 0.0941, 0.0265, 0.1295, 0.0332],
        [0.0327, 0.1020, 0.0526, 0.0487, 0.0311, 0.0155, 0.1185, 0.0155, 0.0760,
         0.0340, 0.0198, 0.0176, 0.0827, 0.0403, 0.1185, 0.0296, 0.1317, 0.0332],
        [0.0365, 0.0993, 0.0532, 0.0621, 0.0270, 0.0169, 0.1167, 0.0169, 0.0810,
         0.0309, 0.0181, 0.0173, 0.0813, 0.0295, 0.1167, 0.0242, 0.1301, 0.0423],
        [0.0348, 0.0843, 0.0440, 0.0501, 0.0320, 0.0152, 0.1194, 0.0152, 0.0898,
         0.0316, 0.0182, 0.0154, 0.0668, 0.0395, 0.1194, 0.0309, 0.1480, 0.0454]])