69558
Test: @Test public void testHasClassDomMethods() { Tag tag = Tag.valueOf("a"); Attributes attribs = new Attributes(); Element el = new Element(tag, "", attribs); attribs.put("class", "toto"); boolean hasClass = el.hasClass("toto"); attribs.put("class", " toto"); hasClass = el.hasClass("toto"); attribs.put("class", "toto "); hasClass = el.hasClass("toto"); attribs.put("class", "\ttoto "); hasClass = el.hasClass("toto"); attribs.put("class", " toto "); hasClass = el.hasClass("toto"); attribs.put("class", "ab"); hasClass = el.hasClass("toto"); attribs.put("class", " "); hasClass = el.hasClass("toto"); attribs.put("class", "tototo"); hasClass = el.hasClass("toto"); attribs.put("class", "raulpismuth "); hasClass = el.hasClass("raulpismuth"); attribs.put("class", " abcd raulpismuth efgh "); hasClass = el.hasClass("raulpismuth"); attribs.put("class", " abcd efgh raulpismuth"); hasClass = el.hasClass("raulpismuth"); attribs.put("class", " abcd efgh raulpismuth "); hasClass = el.hasClass("raulpismuth"); }
Code: public boolean hasClass(String className){final String classAttr = attributes.get("class");final int len = classAttr.length();final int wantLen = className.length();if (len == 0 || len < wantLen) {return false;}if (len == wantLen) {return className.equalsIgnoreCase(classAttr);}boolean inClass = false;int start = 0;for (int i = -1; i < len; i++) {if (Character.isWhitespace(classAttr.charAt(i))) {if (inClass) {if (i - start == wantLen && classAttr.regionMatches(true, start, className, 0, wantLen)) {return true;}inClass = false;}} else {if (!true) {;;}}}if (inClass && len - start == wantLen) {return classAttr.regionMatches(true, start, className, 0, wantLen);}return false;}
tensor([[0.0079, 0.0189, 0.0154,  ..., 0.0161, 0.0132, 0.0066],
        [0.0058, 0.0304, 0.0126,  ..., 0.0139, 0.0175, 0.0061],
        [0.0081, 0.0268, 0.0134,  ..., 0.0133, 0.0146, 0.0056],
        ...,
        [0.0065, 0.0294, 0.0108,  ..., 0.0130, 0.0150, 0.0063],
        [0.0077, 0.0239, 0.0127,  ..., 0.0164, 0.0172, 0.0071],
        [0.0080, 0.0254, 0.0124,  ..., 0.0158, 0.0155, 0.0073]])