28107
Test: public void test81() throws Throwable { Vector2D.Unit vector2D_Unit0 = Vector2D.Unit.PLUS_Y; Precision.DoubleEquivalence precision_DoubleEquivalence0 = mock(Precision.DoubleEquivalence.class, new ViolatedAssumptionAnswer()); doReturn(false).when(precision_DoubleEquivalence0).eq(anyDouble() , anyDouble()); doReturn(false, true, false, true).when(precision_DoubleEquivalence0).eqZero(anyDouble()); Line line0 = new Line(vector2D_Unit0, (-1.5707963267948966), precision_DoubleEquivalence0); Rotation2D rotation2D0 = Rotation2D.of((-1.5707963267948966)); AffineTransformMatrix2D affineTransformMatrix2D0 = rotation2D0.toMatrix(); Line line1 = line0.transform(affineTransformMatrix2D0); line0.isParallel(line1); double double0 = line1.offset(line0); line0.contains((Vector2D) vector2D_Unit0); double double1 = line1.distance(line0); }
Code: public double getOriginOffset() { return originOffset; }
[[0.12138198 0.21067072 0.16837692 0.14996013 0.13211727 0.16837692
 0.04911605]
[0.09638105 0.21385449 0.17573197 0.15400177 0.1425685  0.17573196
 0.0417302 ]
[0.10521905 0.1977453  0.17666146 0.16101982 0.12755397 0.17666146
 0.05513891]
[0.12052633 0.16450168 0.162176   0.18418273 0.13996387 0.162176
 0.06647336]
[0.08993015 0.1981554  0.18714294 0.15971428 0.1333277  0.18714294
 0.04458664]
[0.10521905 0.1977453  0.17666146 0.16101982 0.12755397 0.17666146
 0.05513891]
[0.08478323 0.18134877 0.16373265 0.18798338 0.17652494 0.16373263
 0.04189442]]