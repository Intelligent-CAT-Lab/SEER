143412
Test: public void test23() throws Throwable { CompositeCacheManager compositeCacheManager0 = CompositeCacheManager.getInstance(""); CompositeCacheAttributes compositeCacheAttributes0 = new CompositeCacheAttributes(); ElementAttributes elementAttributes0 = new ElementAttributes(); compositeCacheAttributes0.setShrinkerIntervalSeconds(169L); IElementAttributes iElementAttributes0 = elementAttributes0.clone(); CompositeCache<CacheElement<Integer, Object>, CacheElementSerialized<Integer, Object>> compositeCache0 = compositeCacheManager0.getCache("", (ICompositeCacheAttributes) compositeCacheAttributes0, iElementAttributes0); CacheAccess<CacheElement<Integer, Object>, CacheElementSerialized<Integer, Object>> cacheAccess0 = new CacheAccess<CacheElement<Integer, Object>, CacheElementSerialized<Integer, Object>>(compositeCache0); cacheAccess0.getMatchingCacheElements("Failure getting element attributes"); // Undeclared exception!  cacheAccess0.getCacheElements((Set<CacheElement<Integer, Object>>) null);   }
Code: public Map<K, ICacheElement<K, V>> getCacheElements( final Set<K> names ) { return this.getCacheControl().getMultiple( names ); }
[[0.05691753 0.07895907 0.07895907 0.044404   0.07895907 0.0456446
 0.04004666 0.07895907 0.09933583 0.07558256 0.06260162 0.07895907
 0.07895908 0.07752984 0.02418294]
[0.04705813 0.07812376 0.07812376 0.0462927  0.07812376 0.04606622
 0.0455907  0.07812376 0.11273167 0.07691419 0.05717649 0.07812376
 0.07812378 0.07345398 0.02597326]
[0.04705813 0.07812376 0.07812376 0.0462927  0.07812376 0.04606622
 0.0455907  0.07812376 0.11273167 0.07691419 0.05717649 0.07812376
 0.07812378 0.07345398 0.02597326]
[0.03559527 0.08399978 0.08399978 0.04598178 0.08399978 0.04051798
 0.03665994 0.08399978 0.09852336 0.08759417 0.06358569 0.08399979
 0.0839998  0.06794235 0.01960071]
[0.04705813 0.07812376 0.07812376 0.0462927  0.07812376 0.04606622
 0.0455907  0.07812376 0.11273167 0.07691419 0.05717649 0.07812376
 0.07812378 0.07345398 0.02597326]
[0.05246974 0.08031631 0.08031631 0.03891512 0.08031631 0.03512198
 0.03980233 0.08031631 0.10875604 0.08984188 0.07632957 0.08031631
 0.08031631 0.0592008  0.01766458]
[0.05258119 0.07577779 0.07577779 0.03831002 0.07577779 0.03738046
 0.04807597 0.07577779 0.12076472 0.09340778 0.0644038  0.07577778
 0.0757778  0.07104722 0.019362  ]
[0.04705813 0.07812376 0.07812376 0.0462927  0.07812376 0.04606622
 0.0455907  0.07812376 0.11273167 0.07691419 0.05717649 0.07812376
 0.07812378 0.07345398 0.02597326]
[0.05578987 0.07566901 0.07566901 0.03820109 0.07566901 0.05378672
 0.04161766 0.07566901 0.0921704  0.11610337 0.06487493 0.07566902
 0.07566902 0.05434123 0.02910068]
[0.05681035 0.07246941 0.07246941 0.05280307 0.07246941 0.05595434
 0.04795096 0.07246941 0.09721255 0.09572203 0.06480828 0.07246941
 0.07246942 0.06087002 0.03305193]
[0.04085232 0.08230248 0.08230248 0.04318601 0.08230248 0.03729929
 0.03839878 0.08230248 0.09939933 0.07810073 0.05961438 0.08230248
 0.0823025  0.08784124 0.02149308]
[0.04705813 0.07812376 0.07812376 0.0462927  0.07812376 0.04606622
 0.0455907  0.07812376 0.11273167 0.07691419 0.05717649 0.07812376
 0.07812378 0.07345398 0.02597326]
[0.04705814 0.07812376 0.07812376 0.0462927  0.07812376 0.04606624
 0.0455907  0.07812376 0.11273168 0.07691421 0.05717651 0.07812376
 0.07812378 0.073454   0.02597327]
[0.04256579 0.07732996 0.07732996 0.03426138 0.07732996 0.04603057
 0.04111257 0.07732996 0.10641637 0.10653338 0.07436599 0.07732996
 0.07732996 0.06677179 0.01796246]
[0.0409345  0.07548897 0.07548897 0.04367924 0.07548897 0.0374726
 0.03223108 0.07548897 0.11440253 0.11134077 0.09117758 0.07548897
 0.07548898 0.05216391 0.02366395]]