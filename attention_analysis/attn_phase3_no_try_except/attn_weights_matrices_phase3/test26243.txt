26243
Test: public void test77() throws Throwable { Vector1D.Unit vector1D_Unit0 = Vector1D.Unit.PLUS; Precision.DoubleEquivalence precision_DoubleEquivalence0 = mock(Precision.DoubleEquivalence.class, new ViolatedAssumptionAnswer()); OrientedPoint orientedPoint0 = new OrientedPoint(vector1D_Unit0, false, precision_DoubleEquivalence0); Interval interval0 = Interval.of((OrientedPoint) null, orientedPoint0); }
Code: public double getMin() { return (minBoundary != null) ? minBoundary.getLocation() : Double.NEGATIVE_INFINITY; }
[[0.06862939 0.1181751  0.09520862 0.09345584 0.07576971 0.09520862
 0.03771354 0.03657695 0.12025866 0.09520862 0.06413981 0.06998837
 0.0296668 ]
[0.05730216 0.12423217 0.10267998 0.10106721 0.08746766 0.10267998
 0.03210352 0.02802379 0.12324748 0.10267999 0.04807115 0.06387441
 0.02657049]
[0.05882363 0.10965809 0.09753612 0.09680874 0.07148933 0.09753612
 0.03938501 0.04215868 0.13345991 0.09753612 0.05667868 0.06628443
 0.03264515]
[0.0714421  0.09639399 0.09329416 0.11553273 0.0821328  0.09329416
 0.05074714 0.04606995 0.09238834 0.09329417 0.0587097  0.06607109
 0.04062964]
[0.05163116 0.11112499 0.1043956  0.09793445 0.07547623 0.1043956
 0.0314725  0.03069361 0.14919549 0.1043956  0.04730912 0.06498422
 0.02699138]
[0.05882363 0.10965809 0.09753612 0.09680874 0.07148933 0.09753612
 0.03938501 0.04215868 0.13345991 0.09753612 0.05667868 0.06628443
 0.03264515]
[0.05523498 0.10674557 0.09680343 0.13559242 0.07735717 0.09680343
 0.02407894 0.028446   0.15631518 0.09680345 0.03588459 0.06630008
 0.02363474]
[0.05866636 0.0952747  0.10522898 0.13431077 0.0713076  0.10522898
 0.0324728  0.03608295 0.13130082 0.10522899 0.044009   0.06028809
 0.02059995]
[0.05817089 0.11921102 0.09161054 0.13296157 0.07931867 0.09161054
 0.03453632 0.02903323 0.13210228 0.09161054 0.05770059 0.05675321
 0.02538049]
[0.05882363 0.10965809 0.09753612 0.09680874 0.07148933 0.09753612
 0.03938501 0.04215868 0.13345991 0.09753612 0.05667868 0.06628443
 0.03264515]
[0.06860201 0.10369197 0.0839285  0.10446337 0.08646289 0.0839285
 0.04339387 0.03757781 0.15664247 0.0839285  0.04688111 0.06415102
 0.03634798]
[0.06366844 0.10066959 0.09836191 0.12498241 0.07716991 0.09836191
 0.03426942 0.03463167 0.13089637 0.09836189 0.04969646 0.05969234
 0.02923767]
[0.0491063  0.11173832 0.09177583 0.12653975 0.10734788 0.09177583
 0.03591065 0.03076966 0.12315635 0.09177583 0.04604817 0.06684109
 0.02721435]]