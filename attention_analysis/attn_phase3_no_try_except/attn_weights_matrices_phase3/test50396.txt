50396
Test: public void test9641() throws Throwable { DateTimeFormatterBuilder dateTimeFormatterBuilder0 = new DateTimeFormatterBuilder(); int int0 = 66; DateTimeFormatterBuilder dateTimeFormatterBuilder1 = dateTimeFormatterBuilder0.appendMinuteOfDay(66); DateTimeParser dateTimeParser0 = InternalParserDateTimeParser.of((InternalParser) null); boolean boolean0 = dateTimeFormatterBuilder1.canBuildParser(); DateTimeFormatterBuilder dateTimeFormatterBuilder2 = dateTimeFormatterBuilder1.appendDayOfWeek(66); InternalParser[] internalParserArray0 = new InternalParser[9]; internalParserArray0[0] = null; internalParserArray0[1] = null; internalParserArray0[2] = null; internalParserArray0[3] = null; internalParserArray0[4] = null; internalParserArray0[5] = null; internalParserArray0[6] = null; internalParserArray0[7] = null; internalParserArray0[8] = null; DateTimeFormatterBuilder.MatchingParser dateTimeFormatterBuilder_MatchingParser0 = new DateTimeFormatterBuilder.MatchingParser(internalParserArray0); EthiopicChronology ethiopicChronology0 = EthiopicChronology.getInstance(); Locale locale0 = Locale.CHINA; DateTimeParserBucket dateTimeParserBucket0 = new DateTimeParserBucket(66, ethiopicChronology0, locale0, (Integer) 1, 115); StringBuilder stringBuilder0 = new StringBuilder(); StringBuilder stringBuilder1 = stringBuilder0.append('y'); StringBuilder stringBuilder2 = stringBuilder1.append(true); DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.weekyear(); DateTimeFormatterBuilder.FixedNumber dateTimeFormatterBuilder_FixedNumber0 = new DateTimeFormatterBuilder.FixedNumber(dateTimeFieldType0, 1, true); StringBuilder stringBuilder3 = stringBuilder2.append((Object) dateTimeFormatterBuilder_FixedNumber0); int int1 = dateTimeFormatterBuilder_MatchingParser0.parseInto(dateTimeParserBucket0, stringBuilder3, 66); DateTimeFieldType dateTimeFieldType1 = DateTimeFieldType.year(); DateTimeFormatterBuilder.PaddedNumber dateTimeFormatterBuilder_PaddedNumber0 = new DateTimeFormatterBuilder.PaddedNumber(dateTimeFieldType1, 66, false, 1352); DateTimeFormatterBuilder dateTimeFormatterBuilder3 = dateTimeFormatterBuilder2.appendEraText(); DateTimeFormatterBuilder dateTimeFormatterBuilder4 = dateTimeFormatterBuilder3.appendMillisOfDay(66); boolean boolean1 = dateTimeFormatterBuilder4.canBuildPrinter(); DateTimeFieldType dateTimeFieldType2 = DateTimeFieldType.dayOfWeek(); DateTimeFormatterBuilder.PaddedNumber dateTimeFormatterBuilder_PaddedNumber1 = new DateTimeFormatterBuilder.PaddedNumber(dateTimeFieldType2, 66, true, 0); DateTimePrinter dateTimePrinter0 = InternalPrinterDateTimePrinter.of(dateTimeFormatterBuilder_PaddedNumber1); DateTimeFormatterBuilder dateTimeFormatterBuilder5 = dateTimeFormatterBuilder1.append(dateTimePrinter0); String string0 = "5@4Z5"; int int2 = (-3284); DateTimeParser[] dateTimeParserArray0 = new DateTimeParser[8]; DateTimeParser dateTimeParser1 = InternalParserDateTimeParser.of(dateTimeFormatterBuilder_PaddedNumber1); }
Code: public DateTimeFormatterBuilder append(DateTimeFormatter formatter) { if (formatter == null) { throw new IllegalArgumentException("No formatter supplied"); } return append0(formatter.getPrinter0(), formatter.getParser0()); }
[[0.03798506 0.05269531 0.05269531 0.05269531 0.05084591 0.10240706
 0.05269531 0.05985814 0.02036356 0.05084591 0.03830481 0.01914437
 0.06126169 0.11583294 0.05269531 0.01622745 0.04182839 0.05269531
 0.05269531 0.01622745]
[0.0333316  0.05571314 0.05571314 0.05571314 0.05239169 0.08188047
 0.05571314 0.06326768 0.02375212 0.05239169 0.03936923 0.02529858
 0.0588895  0.10331649 0.05571314 0.01783776 0.04044344 0.05571314
 0.05571314 0.01783776]
[0.0333316  0.05571314 0.05571314 0.05571314 0.05239169 0.08188047
 0.05571314 0.06326768 0.02375212 0.05239169 0.03936923 0.02529858
 0.0588895  0.10331649 0.05571314 0.01783776 0.04044344 0.05571314
 0.05571314 0.01783776]
[0.0333316  0.05571314 0.05571314 0.05571314 0.05239169 0.08188047
 0.05571314 0.06326768 0.02375212 0.05239169 0.03936923 0.02529858
 0.0588895  0.10331649 0.05571314 0.01783776 0.04044344 0.05571314
 0.05571314 0.01783776]
[0.0417992  0.05465835 0.05465835 0.05465835 0.06742977 0.07196087
 0.05465835 0.04467342 0.02698709 0.06742977 0.03821136 0.02328906
 0.04884414 0.0912122  0.05465835 0.02373948 0.04807577 0.05465835
 0.05465835 0.02373948]
[0.02608154 0.05994735 0.05994735 0.05994735 0.0555507  0.1473274
 0.05994735 0.05318783 0.00996249 0.0555507  0.02530143 0.01011999
 0.04360848 0.10231835 0.05994735 0.00848073 0.0343982  0.05994736
 0.05994736 0.00848073]
[0.0333316  0.05571314 0.05571314 0.05571314 0.05239169 0.08188047
 0.05571314 0.06326768 0.02375212 0.05239169 0.03936923 0.02529858
 0.0588895  0.10331649 0.05571314 0.01783776 0.04044344 0.05571314
 0.05571314 0.01783776]
[0.02688092 0.04448639 0.04448639 0.04448639 0.06736667 0.14835563
 0.04448639 0.06690037 0.01749754 0.06736667 0.03265608 0.01777543
 0.05198455 0.11990714 0.04448639 0.01389505 0.04411413 0.04448639
 0.04448639 0.01389505]
[0.03028838 0.05444303 0.05444303 0.05444303 0.06909839 0.13724002
 0.05444303 0.05652188 0.01865706 0.06909839 0.02856464 0.01235673
 0.049776   0.08926572 0.05444303 0.01061236 0.03680684 0.05444303
 0.05444303 0.01061236]
[0.0417992  0.05465835 0.05465835 0.05465835 0.06742977 0.07196087
 0.05465835 0.04467342 0.02698709 0.06742977 0.03821136 0.02328906
 0.04884414 0.0912122  0.05465835 0.02373948 0.04807577 0.05465835
 0.05465835 0.02373948]
[0.03094807 0.05147027 0.05147027 0.05147027 0.07434376 0.10633843
 0.05147027 0.04750386 0.0182577  0.07434376 0.03662114 0.01695634
 0.0570223  0.09956985 0.05147027 0.01267385 0.05245516 0.05147028
 0.05147028 0.01267386]
[0.0343523  0.05323554 0.05323554 0.05323554 0.06089561 0.11751303
 0.05323554 0.06442646 0.01956504 0.06089561 0.03860389 0.02248236
 0.04867055 0.07610078 0.05323554 0.01777613 0.0482933  0.05323554
 0.05323554 0.01777613]
[0.02875154 0.0502187  0.0502187  0.0502187  0.06272832 0.11434648
 0.0502187  0.06030472 0.01494033 0.06272832 0.04198225 0.01847336
 0.05532032 0.11015761 0.0502187  0.01523933 0.04825725 0.05021869
 0.05021869 0.01523933]
[0.03321809 0.04941773 0.04941773 0.04941773 0.06294851 0.14289893
 0.04941773 0.05800085 0.01535599 0.06294851 0.03831878 0.01658413
 0.05637175 0.08869326 0.04941773 0.01539333 0.04795041 0.04941772
 0.04941772 0.01539333]
[0.0333316  0.05571314 0.05571314 0.05571314 0.05239169 0.08188047
 0.05571314 0.06326768 0.02375212 0.05239169 0.03936923 0.02529858
 0.0588895  0.10331649 0.05571314 0.01783776 0.04044344 0.05571314
 0.05571314 0.01783776]
[0.02802198 0.05246909 0.05246909 0.05246909 0.07164138 0.10806146
 0.05246909 0.04852873 0.01757713 0.07164138 0.03817824 0.01570343
 0.05030905 0.09109093 0.05246909 0.01543486 0.06109296 0.05246908
 0.05246908 0.01543486]
[0.0282358  0.057271   0.057271   0.057271   0.05319022 0.11775176
 0.057271   0.05585063 0.0168176  0.05319022 0.03259487 0.01692978
 0.06608424 0.08776107 0.057271   0.01467881 0.04133917 0.057271
 0.057271   0.01467881]
[0.0333316  0.05571314 0.05571314 0.05571314 0.05239169 0.08188047
 0.05571314 0.06326768 0.02375212 0.05239169 0.03936923 0.02529858
 0.0588895  0.10331649 0.05571314 0.01783776 0.04044344 0.05571314
 0.05571314 0.01783776]
[0.0333316  0.05571314 0.05571314 0.05571314 0.05239169 0.08188047
 0.05571314 0.06326768 0.02375212 0.05239169 0.03936923 0.02529858
 0.0588895  0.10331649 0.05571314 0.01783776 0.04044344 0.05571314
 0.05571314 0.01783776]
[0.02802198 0.05246909 0.05246909 0.05246909 0.07164138 0.10806146
 0.05246909 0.04852873 0.01757713 0.07164138 0.03817824 0.01570343
 0.05030905 0.09109093 0.05246909 0.01543486 0.06109296 0.05246908
 0.05246908 0.01543486]]