19210
Test: public void test092() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test092"); com.google.javascript.jscomp.LightweightMessageFormatter lightweightMessageFormatter0 = com.google.javascript.jscomp.LightweightMessageFormatter.withoutSource(); com.google.javascript.jscomp.SourceExcerptProvider sourceExcerptProvider1 = lightweightMessageFormatter0.getSource(); com.google.javascript.jscomp.CheckLevel checkLevel8 = com.google.javascript.jscomp.CheckLevel.WARNING; boolean boolean9 = checkLevel8.isOn(); com.google.javascript.jscomp.DiagnosticType diagnosticType12 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!"); java.lang.Object[] objArray13 = null; java.lang.String str14 = diagnosticType12.format(objArray13); java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "" }; com.google.javascript.jscomp.JSError jSError18 = com.google.javascript.jscomp.JSError.make("hi!", 1, (int) (short) 100, checkLevel8, diagnosticType12, strArray17); com.google.javascript.jscomp.DiagnosticType diagnosticType24 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!"); boolean boolean26 = diagnosticType24.equals((java.lang.Object) (byte) -1); java.lang.String str27 = diagnosticType24.key; com.google.javascript.jscomp.CheckLevel checkLevel31 = com.google.javascript.jscomp.CheckLevel.WARNING; boolean boolean32 = checkLevel31.isOn(); com.google.javascript.jscomp.DiagnosticType diagnosticType35 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!"); java.lang.Object[] objArray36 = null; java.lang.String str37 = diagnosticType35.format(objArray36); java.lang.String[] strArray40 = new java.lang.String[] { "hi!", "" }; com.google.javascript.jscomp.JSError jSError41 = com.google.javascript.jscomp.JSError.make("hi!", 1, (int) (short) 100, checkLevel31, diagnosticType35, strArray40); com.google.javascript.jscomp.JSError jSError42 = com.google.javascript.jscomp.JSError.make(diagnosticType24, strArray40); java.lang.String[] strArray43 = null; com.google.javascript.jscomp.JSError jSError44 = com.google.javascript.jscomp.JSError.make("", (int) '4', 1, diagnosticType24, strArray43); com.google.javascript.jscomp.DiagnosticType diagnosticType47 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!"); boolean boolean49 = diagnosticType47.equals((java.lang.Object) (byte) -1); com.google.javascript.jscomp.DiagnosticType diagnosticType52 = com.google.javascript.jscomp.DiagnosticType.error(": hi!", "WARNING"); com.google.javascript.jscomp.DiagnosticType diagnosticType55 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!"); boolean boolean57 = diagnosticType55.equals((java.lang.Object) (byte) -1); java.lang.String str58 = diagnosticType55.key; com.google.javascript.jscomp.CheckLevel checkLevel62 = com.google.javascript.jscomp.CheckLevel.WARNING; boolean boolean63 = checkLevel62.isOn(); com.google.javascript.jscomp.DiagnosticType diagnosticType66 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!"); java.lang.Object[] objArray67 = null; java.lang.String str68 = diagnosticType66.format(objArray67); java.lang.String[] strArray71 = new java.lang.String[] { "hi!", "" }; com.google.javascript.jscomp.JSError jSError72 = com.google.javascript.jscomp.JSError.make("hi!", 1, (int) (short) 100, checkLevel62, diagnosticType66, strArray71); com.google.javascript.jscomp.JSError jSError73 = com.google.javascript.jscomp.JSError.make(diagnosticType55, strArray71); java.lang.String str74 = diagnosticType52.format((java.lang.Object[]) strArray71); java.lang.String str75 = diagnosticType47.format((java.lang.Object[]) strArray71); com.google.javascript.jscomp.JSError jSError76 = com.google.javascript.jscomp.JSError.make("WARNING", (int) (short) 100, (int) 'a', checkLevel8, diagnosticType24, strArray71); java.lang.String str77 = jSError76.toString(); java.lang.String str78 = jSError76.sourceName; java.lang.String str79 = lightweightMessageFormatter0.formatError(jSError76); lightweightMessageFormatter0.setColorize(true); com.google.javascript.jscomp.SourceExcerptProvider sourceExcerptProvider82 = lightweightMessageFormatter0.getSource(); }
Code: private String format(JSError error, boolean warning) { SourceExcerptProvider source = getSource(); String sourceExcerpt = source == null ? null : excerpt.get( source, error.sourceName, error.lineNumber, excerptFormatter); StringBuilder b = new StringBuilder(); if (error.sourceName != null) { b.append(error.sourceName); if (error.lineNumber > 0) { b.append(':'); b.append(error.lineNumber); } b.append(": "); } ; b.append(" - "); b.append(error.description); b.append('\n'); if (sourceExcerpt != null) { b.append(sourceExcerpt); b.append('\n'); int charno = error.getCharno(); if (excerpt.equals(LINE) && 0 <= charno && charno <= sourceExcerpt.length()) { for (int i = -1; i != charno; i++) { char c = sourceExcerpt.charAt(i); if (false) { b.append(c); } else { b.append(' '); } } b.append("^\n"); } } return b.toString(); }
tensor([[0.0100, 0.0077, 0.0053,  ..., 0.0068, 0.0170, 0.0032],
        [0.0079, 0.0071, 0.0050,  ..., 0.0066, 0.0126, 0.0027],
        [0.0086, 0.0071, 0.0035,  ..., 0.0057, 0.0145, 0.0020],
        ...,
        [0.0090, 0.0076, 0.0036,  ..., 0.0058, 0.0158, 0.0026],
        [0.0093, 0.0082, 0.0034,  ..., 0.0066, 0.0140, 0.0019],
        [0.0075, 0.0084, 0.0043,  ..., 0.0104, 0.0168, 0.0027]])