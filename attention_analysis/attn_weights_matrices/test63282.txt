63282
Test: public void testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter() { Gson gson = new GsonBuilder() .registerTypeAdapter(Part.class, new TypeAdapter<Part>() { @Override public void write(JsonWriter out, Part part) throws IOException { throw new } @Override public Part read(JsonReader in) throws IOException { throw new } }).create(); String json = gson.toJson(new Gadget(new Part("screen"))); Gadget gadget = gson.fromJson("{'part':'screen'}", Gadget.class); }
Code: public void write(JsonWriter out, Boolean value){if (value == null) {;return;};}
[[0.08695622 0.07413353 0.08407337 0.0899463  0.2775917  0.07126813
 0.07628244 0.12846208 0.04255941 0.06872675]
[0.07863054 0.07236581 0.08909076 0.13300373 0.2702123  0.06843682
 0.08754423 0.11124699 0.03954566 0.04992319]
[0.09349072 0.06264303 0.10817008 0.09596733 0.28201467 0.06877261
 0.08698159 0.10327907 0.03359215 0.06508875]
[0.07817474 0.07387498 0.09921142 0.08879983 0.24655682 0.07366696
 0.09525749 0.1225265  0.05188332 0.07004795]
[0.09095363 0.06768563 0.0871902  0.10702466 0.2513098  0.06595853
 0.08622678 0.12261207 0.04479603 0.07624263]
[0.0829538  0.06175162 0.08783022 0.11435825 0.29938167 0.0677417
 0.08361233 0.109533   0.04321195 0.0496254 ]
[0.08222525 0.06920924 0.09546561 0.10582712 0.25006214 0.06300308
 0.10117174 0.13332605 0.04221971 0.0574901 ]
[0.05760444 0.06691989 0.07830296 0.08100499 0.3292232  0.05390202
 0.10592945 0.13850734 0.03706364 0.05154214]
[0.07216837 0.05464463 0.08117962 0.09382223 0.29932615 0.06097572
 0.09395564 0.13096508 0.04282223 0.0701403 ]
[0.07961068 0.07880737 0.09094433 0.09963494 0.24421974 0.07685808
 0.10813435 0.11725947 0.04783452 0.05669654]]