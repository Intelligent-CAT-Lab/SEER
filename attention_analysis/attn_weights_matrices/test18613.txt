18613
Test: public void test101() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test101"); com.google.javascript.jscomp.DiagnosticType diagnosticType2 = com.google.javascript.jscomp.DiagnosticType.warning("", ""); com.google.javascript.jscomp.DiagnosticType diagnosticType5 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!"); java.lang.Object[] objArray6 = null; java.lang.String str7 = diagnosticType5.format(objArray6); int int8 = diagnosticType2.compareTo(diagnosticType5); java.text.MessageFormat messageFormat9 = diagnosticType5.format; com.google.javascript.jscomp.LightweightMessageFormatter lightweightMessageFormatter10 = com.google.javascript.jscomp.LightweightMessageFormatter.withoutSource(); com.google.javascript.jscomp.CheckLevel checkLevel14 = com.google.javascript.jscomp.CheckLevel.WARNING; com.google.javascript.jscomp.DiagnosticType diagnosticType17 = com.google.javascript.jscomp.DiagnosticType.warning("", ""); java.lang.String[] strArray24 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "", ": hi!" }; com.google.javascript.jscomp.JSError jSError25 = com.google.javascript.jscomp.JSError.make(": hi!", (int) (short) 1, (int) (short) 1, checkLevel14, diagnosticType17, strArray24); com.google.javascript.rhino.Node node26 = jSError25.node; boolean boolean28 = jSError25.equals((java.lang.Object) ": hi!"); com.google.javascript.jscomp.CheckLevel checkLevel29 = jSError25.level; java.lang.String str30 = lightweightMessageFormatter10.getLevelName(checkLevel29); com.google.javascript.jscomp.SourceExcerptProvider sourceExcerptProvider31 = lightweightMessageFormatter10.getSource(); com.google.javascript.jscomp.SourceExcerptProvider sourceExcerptProvider32 = lightweightMessageFormatter10.getSource(); lightweightMessageFormatter10.setColorize(false); com.google.javascript.jscomp.DiagnosticType diagnosticType37 = com.google.javascript.jscomp.DiagnosticType.error("hi!:1: WARNING - hi!\n", ""); com.google.javascript.jscomp.LightweightMessageFormatter lightweightMessageFormatter38 = com.google.javascript.jscomp.LightweightMessageFormatter.withoutSource(); com.google.javascript.jscomp.CheckLevel checkLevel42 = com.google.javascript.jscomp.CheckLevel.WARNING; com.google.javascript.jscomp.DiagnosticType diagnosticType45 = com.google.javascript.jscomp.DiagnosticType.warning("", ""); java.lang.String[] strArray52 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "", ": hi!" }; com.google.javascript.jscomp.JSError jSError53 = com.google.javascript.jscomp.JSError.make(": hi!", (int) (short) 1, (int) (short) 1, checkLevel42, diagnosticType45, strArray52); com.google.javascript.rhino.Node node54 = jSError53.node; boolean boolean56 = jSError53.equals((java.lang.Object) ": hi!"); com.google.javascript.jscomp.CheckLevel checkLevel57 = jSError53.level; java.lang.String str58 = lightweightMessageFormatter38.getLevelName(checkLevel57); com.google.javascript.jscomp.CheckLevel checkLevel62 = com.google.javascript.jscomp.CheckLevel.WARNING; com.google.javascript.jscomp.DiagnosticType diagnosticType65 = com.google.javascript.jscomp.DiagnosticType.warning("", ""); java.lang.String[] strArray72 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "", ": hi!" }; com.google.javascript.jscomp.JSError jSError73 = com.google.javascript.jscomp.JSError.make(": hi!", (int) (short) 1, (int) (short) 1, checkLevel62, diagnosticType65, strArray72); com.google.javascript.rhino.Node node74 = jSError73.node; java.lang.String str75 = lightweightMessageFormatter38.formatError(jSError73); com.google.javascript.jscomp.CheckLevel checkLevel79 = com.google.javascript.jscomp.CheckLevel.WARNING; boolean boolean80 = checkLevel79.isOn(); com.google.javascript.jscomp.DiagnosticType diagnosticType83 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!"); java.lang.Object[] objArray84 = null; java.lang.String str85 = diagnosticType83.format(objArray84); java.lang.String[] strArray88 = new java.lang.String[] { "hi!", "" }; com.google.javascript.jscomp.JSError jSError89 = com.google.javascript.jscomp.JSError.make("hi!", 1, (int) (short) 100, checkLevel79, diagnosticType83, strArray88); java.lang.String str90 = lightweightMessageFormatter38.formatWarning(jSError89); com.google.javascript.jscomp.CheckLevel checkLevel91 = jSError89.level; diagnosticType37.level = checkLevel91; java.lang.String str93 = lightweightMessageFormatter10.getLevelName(checkLevel91); diagnosticType5.level = checkLevel91; }
Code: private String format(JSError error, boolean warning) { SourceExcerptProvider source = getSource(); String sourceExcerpt = source == null ? null : excerpt.get( source, error.sourceName, error.lineNumber, excerptFormatter); StringBuilder b = new StringBuilder(); if (error.sourceName != null) { b.append(error.sourceName); if (error.lineNumber > 0) { b.append(':'); b.append(error.lineNumber); } b.append(": "); } ; b.append(" - "); b.append(error.description); b.append('\n'); if (sourceExcerpt != null) { b.append(sourceExcerpt); b.append('\n'); int charno = error.getCharno(); if (excerpt.equals(LINE) && charno <= sourceExcerpt.length()) { for (int i = -1; i != charno; i++) { char c = sourceExcerpt.charAt(i); if (Character.isWhitespace(c)) { b.append(c); } else { b.append(' '); } } b.append("^\n"); } } return b.toString(); }
tensor([[0.0103, 0.0080, 0.0055,  ..., 0.0071, 0.0176, 0.0033],
        [0.0082, 0.0074, 0.0052,  ..., 0.0069, 0.0131, 0.0028],
        [0.0089, 0.0073, 0.0036,  ..., 0.0059, 0.0149, 0.0021],
        ...,
        [0.0092, 0.0079, 0.0037,  ..., 0.0060, 0.0163, 0.0026],
        [0.0096, 0.0086, 0.0035,  ..., 0.0068, 0.0144, 0.0020],
        [0.0077, 0.0088, 0.0045,  ..., 0.0107, 0.0174, 0.0028]])