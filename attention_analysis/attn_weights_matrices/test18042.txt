18042
Test: public void test2() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test2"); com.google.javascript.jscomp.AbstractCompiler abstractCompiler0 = null; com.google.javascript.jscomp.CheckDebuggerStatement checkDebuggerStatement1 = new com.google.javascript.jscomp.CheckDebuggerStatement(abstractCompiler0); com.google.javascript.jscomp.NodeTraversal nodeTraversal2 = null; com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.IR.labelName("%="); boolean boolean5 = node4.isBlock(); com.google.javascript.jscomp.AbstractCompiler abstractCompiler6 = null; boolean boolean7 = com.google.javascript.jscomp.NodeUtil.nodeTypeMayHaveSideEffects(node4, abstractCompiler6); java.lang.String str8 = node4.toStringTree(); boolean boolean9 = node4.isVar(); com.google.javascript.rhino.Node node11 = com.google.javascript.rhino.IR.labelName("%="); com.google.javascript.rhino.Node node13 = com.google.javascript.rhino.IR.labelName("%="); boolean boolean14 = node13.isSetterDef(); boolean boolean15 = node13.hasMoreThanOneChild(); boolean boolean16 = node13.isLabel(); com.google.javascript.rhino.Node node18 = com.google.javascript.rhino.IR.labelName("%="); boolean boolean19 = node18.isSetterDef(); boolean boolean20 = node18.hasMoreThanOneChild(); boolean boolean21 = node18.isLabel(); com.google.javascript.jscomp.Scope.Var var22 = null; com.google.javascript.jscomp.JSModule jSModule24 = new com.google.javascript.jscomp.JSModule("%="); com.google.javascript.jscomp.AnalyzePrototypeProperties.LiteralProperty literalProperty25 = new com.google.javascript.jscomp.AnalyzePrototypeProperties.LiteralProperty(node4, node11, node13, node18, var22, jSModule24); com.google.javascript.jscomp.GoogleCodingConvention googleCodingConvention26 = new com.google.javascript.jscomp.GoogleCodingConvention(); boolean boolean28 = googleCodingConvention26.isConstantKey("%="); com.google.javascript.rhino.Node node31 = com.google.javascript.rhino.IR.labelName("%="); boolean boolean32 = node31.isSetterDef(); com.google.javascript.rhino.Node node34 = com.google.javascript.rhino.IR.labelName("%="); node34.setSourceFileForTesting("Unknown class name"); com.google.javascript.rhino.Node node37 = new com.google.javascript.rhino.Node(0, node31, node34); com.google.javascript.rhino.Node node39 = com.google.javascript.rhino.IR.labelName("%="); boolean boolean40 = node39.isBlock(); com.google.javascript.jscomp.AbstractCompiler abstractCompiler41 = null; boolean boolean42 = com.google.javascript.jscomp.NodeUtil.nodeTypeMayHaveSideEffects(node39, abstractCompiler41); java.lang.String str43 = node39.toStringTree(); boolean boolean44 = node39.isVar(); com.google.javascript.rhino.Node node46 = com.google.javascript.rhino.IR.labelName("%="); com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.IR.labelName("%="); boolean boolean49 = node48.isSetterDef(); boolean boolean50 = node48.hasMoreThanOneChild(); boolean boolean51 = node48.isLabel(); com.google.javascript.rhino.Node node53 = com.google.javascript.rhino.IR.labelName("%="); boolean boolean54 = node53.isSetterDef(); boolean boolean55 = node53.hasMoreThanOneChild(); boolean boolean56 = node53.isLabel(); com.google.javascript.jscomp.Scope.Var var57 = null; com.google.javascript.jscomp.JSModule jSModule59 = new com.google.javascript.jscomp.JSModule("%="); com.google.javascript.jscomp.AnalyzePrototypeProperties.LiteralProperty literalProperty60 = new com.google.javascript.jscomp.AnalyzePrototypeProperties.LiteralProperty(node39, node46, node48, node53, var57, jSModule59); java.lang.String str61 = googleCodingConvention26.extractClassNameIfRequire(node31, node53); boolean boolean62 = checkDebuggerStatement1.shouldTraverse(nodeTraversal2, node11, node53); boolean boolean63 = node53.isUnscopedQualifiedName(); com.google.javascript.jscomp.Compiler compiler64 = new com.google.javascript.jscomp.Compiler(); com.google.javascript.jscomp.CodingConvention codingConvention65 = null; compiler64.defaultCodingConvention = codingConvention65; boolean boolean67 = com.google.javascript.jscomp.NodeUtil.mayHaveSideEffects(node53, (com.google.javascript.jscomp.AbstractCompiler) compiler64); com.google.javascript.jscomp.CrossModuleMethodMotion.IdGenerator idGenerator68 = null; com.google.javascript.jscomp.CrossModuleMethodMotion crossModuleMethodMotion70 = new com.google.javascript.jscomp.CrossModuleMethodMotion((com.google.javascript.jscomp.AbstractCompiler) compiler64, idGenerator68, true); try { com.google.javascript.jscomp.Tracer tracer72 = compiler64.newTracer("%="); } catch (java.lang.NullPointerException e) { } }
Code: public boolean shouldTraverse(NodeTraversal t, Node n, Node parent) { if (isPrototypePropertyAssign(n)) { symbolStack.push(new NameContext(getNameInfoForName( n.getFirstChild().getLastChild().getString(), PROPERTY))); } else if (isGlobalFunctionDeclaration(t, n)) { String name = parent.isName() ? parent.getString() : n.getFirstChild().getString() ; symbolStack.push(new NameContext(getNameInfoForName(name, VAR))); } else if (n.isFunction()) { symbolStack.push(new NameContext(anonymousNode)); } return true; }
tensor([[0.0159, 0.0398, 0.0247,  ..., 0.0175, 0.0109, 0.0068],
        [0.0110, 0.0604, 0.0213,  ..., 0.0175, 0.0092, 0.0049],
        [0.0117, 0.0535, 0.0278,  ..., 0.0172, 0.0102, 0.0040],
        ...,
        [0.0103, 0.0519, 0.0278,  ..., 0.0148, 0.0081, 0.0056],
        [0.0127, 0.0627, 0.0289,  ..., 0.0165, 0.0120, 0.0050],
        [0.0102, 0.0368, 0.0252,  ..., 0.0215, 0.0135, 0.0052]])