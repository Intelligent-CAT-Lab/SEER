18252
Test: public void test231() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test231"); com.google.javascript.rhino.ErrorReporter errorReporter0 = null; com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true); com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType> jSTypeStaticScope3 = null; jSTypeRegistry2.resolveTypesInScope(jSTypeStaticScope3); com.google.javascript.rhino.jstype.JSType jSType6 = jSTypeRegistry2.getType("BREAK"); com.google.javascript.rhino.jstype.FunctionParamBuilder functionParamBuilder7 = new com.google.javascript.rhino.jstype.FunctionParamBuilder(jSTypeRegistry2); com.google.javascript.rhino.Node node10 = com.google.javascript.rhino.IR.breakNode(); com.google.javascript.rhino.Node node11 = com.google.javascript.rhino.IR.breakNode(); com.google.javascript.rhino.Node node12 = null; com.google.javascript.jscomp.CodingConvention.Bind bind13 = new com.google.javascript.jscomp.CodingConvention.Bind(node10, node11, node12); boolean boolean14 = node11.isEmpty(); boolean boolean15 = node11.isNot(); node11.setVarArgs(false); com.google.javascript.rhino.Node node18 = node11.cloneNode(); boolean boolean19 = node18.isNoSideEffectsCall(); boolean boolean20 = node18.isDefaultCase(); com.google.javascript.rhino.Node node21 = com.google.javascript.rhino.IR.breakNode(); com.google.javascript.rhino.Node node22 = com.google.javascript.rhino.IR.breakNode(); com.google.javascript.rhino.Node node23 = null; com.google.javascript.jscomp.CodingConvention.Bind bind24 = new com.google.javascript.jscomp.CodingConvention.Bind(node21, node22, node23); node22.setType(4095); com.google.javascript.rhino.Node node27 = node18.copyInformationFromForTree(node22); com.google.javascript.rhino.Node node28 = com.google.javascript.rhino.IR.breakNode(); com.google.javascript.rhino.Node node29 = com.google.javascript.rhino.IR.breakNode(); com.google.javascript.rhino.Node node30 = null; com.google.javascript.jscomp.CodingConvention.Bind bind31 = new com.google.javascript.jscomp.CodingConvention.Bind(node28, node29, node30); boolean boolean32 = node29.isEmpty(); boolean boolean33 = node29.isNot(); node29.setVarArgs(false); com.google.javascript.rhino.Node node36 = node29.cloneNode(); com.google.javascript.rhino.Node node38 = com.google.javascript.rhino.IR.breakNode(); com.google.javascript.rhino.Node node39 = com.google.javascript.rhino.IR.breakNode(); com.google.javascript.rhino.Node node40 = null; com.google.javascript.jscomp.CodingConvention.Bind bind41 = new com.google.javascript.jscomp.CodingConvention.Bind(node38, node39, node40); boolean boolean42 = node39.isEmpty(); boolean boolean43 = node39.isNot(); boolean boolean44 = node39.isInc(); com.google.javascript.rhino.Node node47 = new com.google.javascript.rhino.Node(0, node39, 51, (int) '4'); com.google.javascript.rhino.Node node48 = node29.copyInformationFrom(node39); com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel49 = com.google.javascript.jscomp.SourceMap.DetailLevel.ALL; com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.IR.breakNode(); boolean boolean51 = detailLevel49.apply(node50); com.google.javascript.rhino.Node node52 = new com.google.javascript.rhino.Node(43, node18, node48, node50); com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry53 = null; com.google.javascript.rhino.jstype.ObjectType objectType54 = null; com.google.javascript.rhino.jstype.JSType jSType55 = null; com.google.javascript.rhino.jstype.IndexedType indexedType56 = new com.google.javascript.rhino.jstype.IndexedType(jSTypeRegistry53, objectType54, jSType55); boolean boolean57 = indexedType56.isTheObjectType(); java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable58 = indexedType56.getCtorImplementedInterfaces(); com.google.javascript.rhino.jstype.JSType jSType59 = indexedType56.autoboxesTo(); com.google.javascript.rhino.jstype.StaticSlot<com.google.javascript.rhino.jstype.JSType> jSTypeStaticSlot61 = indexedType56.getSlot("goog.abstractMethod"); com.google.javascript.rhino.jstype.BooleanLiteralSet booleanLiteralSet62 = indexedType56.getPossibleToBooleanOutcomes(); com.google.javascript.rhino.jstype.EnumType enumType63 = new com.google.javascript.rhino.jstype.EnumType(jSTypeRegistry2, "", node48, (com.google.javascript.rhino.jstype.JSType) indexedType56); com.google.javascript.rhino.jstype.JSType jSType64 = null; try { boolean boolean65 = enumType63.isSubtype(jSType64); } catch (java.lang.NullPointerException e) { } }
Code: static boolean isSubtype(ObjectType typeA, RecordType typeB){for (String property : typeB.properties.keySet()) {if (!typeA.hasProperty(property)) {return false;}JSType propA = typeA.getPropertyType(property);JSType propB = typeB.getPropertyType(property);if (!propA.isUnknownType() && !propB.isUnknownType()) {if (typeA.isPropertyTypeDeclared(property)) {if (!propA.isInvariant(propB)) {return false;}} else {if (!propA.isSubtype(propB)) {return false;}}}}return false;}
tensor([[0.0498, 0.0709, 0.0183,  ..., 0.0544, 0.0143, 0.0172],
        [0.0449, 0.0835, 0.0140,  ..., 0.0516, 0.0105, 0.0128],
        [0.0526, 0.0653, 0.0136,  ..., 0.0552, 0.0071, 0.0111],
        ...,
        [0.0488, 0.0534, 0.0182,  ..., 0.0485, 0.0117, 0.0138],
        [0.0590, 0.0816, 0.0154,  ..., 0.0473, 0.0089, 0.0115],
        [0.0491, 0.0681, 0.0218,  ..., 0.0392, 0.0147, 0.0168]])