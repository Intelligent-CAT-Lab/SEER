25130
Test: public void test13() throws Throwable { ArrayDeque<Point2S> arrayDeque0 = new ArrayDeque<Point2S>(0); boolean boolean0 = true; Vector3D.Unit vector3D_Unit0 = Vector3D.Unit.MINUS_X; Precision.DoubleEquivalence precision_DoubleEquivalence0 = mock(Precision.DoubleEquivalence.class, new ViolatedAssumptionAnswer()); doReturn((String) null, (String) null).when(precision_DoubleEquivalence0).toString(); doReturn(false).when(precision_DoubleEquivalence0).eq(anyDouble() , anyDouble()); doReturn(true, false, false).when(precision_DoubleEquivalence0).eqZero(anyDouble()); GreatCircle greatCircle0 = new GreatCircle(vector3D_Unit0, vector3D_Unit0, vector3D_Unit0, precision_DoubleEquivalence0); GreatCircle greatCircle1 = greatCircle0.reverse(); Point1S point1S0 = Point1S.of((double) 0); GreatArc greatArc0 = greatCircle1.arc(point1S0, point1S0); Precision.DoubleEquivalence precision_DoubleEquivalence1 = greatArc0.getPrecision(); GreatArcPath.Builder greatArcPath_Builder0 = GreatArcPath.builder(precision_DoubleEquivalence1); Point2S point2S0 = Point2S.MINUS_I; GreatArcPath.Builder greatArcPath_Builder1 = greatArcPath_Builder0.prepend(point2S0); GreatArcPath.Builder greatArcPath_Builder2 = greatArcPath_Builder1.setPrecision(precision_DoubleEquivalence1); GreatArcPath.Builder greatArcPath_Builder3 = greatArcPath_Builder2.appendVertices((Collection<Point2S>) arrayDeque0); // Undeclared exception!  greatArcPath_Builder3.append(point2S0);   }
Code: public static Builder builder(final Precision.DoubleEquivalence precision) { return new Builder(precision); }
[[0.07278831 0.19439915 0.10096359 0.10096359 0.10096359 0.10096359
 0.08378887 0.07846795 0.03762729 0.10096361 0.0281104 ]
[0.07200445 0.18628486 0.09773995 0.09773995 0.09773995 0.09773995
 0.12110939 0.06774192 0.03088228 0.09773997 0.03327729]
[0.05944466 0.2027372  0.09992199 0.09992199 0.09992199 0.09992199
 0.09033345 0.07204624 0.04484767 0.09992201 0.03098078]
[0.05944466 0.2027372  0.09992199 0.09992199 0.09992199 0.09992199
 0.09033345 0.07204624 0.04484767 0.09992201 0.03098078]
[0.05944466 0.2027372  0.09992199 0.09992199 0.09992199 0.09992199
 0.09033345 0.07204624 0.04484767 0.09992201 0.03098078]
[0.05944466 0.2027372  0.09992199 0.09992199 0.09992199 0.09992199
 0.09033345 0.07204624 0.04484767 0.09992201 0.03098078]
[0.0724615  0.16931322 0.09566914 0.09566914 0.09566914 0.09566914
 0.11484104 0.08361058 0.04067044 0.09566915 0.0407576 ]
[0.04972354 0.21115437 0.1051597  0.1051597  0.1051597  0.1051597
 0.08485726 0.07431078 0.03027352 0.10515972 0.02388195]
[0.06199908 0.18112117 0.09901337 0.09901337 0.09901337 0.09901337
 0.10291892 0.08696474 0.04137903 0.09901339 0.03055015]
[0.05944467 0.20273718 0.09992199 0.09992199 0.09992199 0.09992199
 0.09033345 0.07204624 0.04484767 0.099922   0.03098078]
[0.04946463 0.20140511 0.0935588  0.0935588  0.0935588  0.0935588
 0.12103355 0.10627264 0.02769083 0.09355882 0.02633921]]