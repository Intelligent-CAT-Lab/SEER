62860
Test: public void testSuperSubtype() { }
Code: public static WildcardType subtypeOf(Type bound) { Type[] upperBounds; upperBounds = new Type[] { bound }; return new WildcardTypeImpl(upperBounds, EMPTY_TYPE_ARRAY); }
tensor([[0.0369, 0.1076, 0.1403, 0.0501, 0.0295, 0.0476, 0.0236, 0.0491, 0.0313,
         0.0231, 0.0187, 0.0236, 0.0476, 0.0898, 0.0364, 0.0404, 0.0187, 0.1426,
         0.0274, 0.0154],
        [0.0389, 0.0984, 0.1492, 0.0366, 0.0284, 0.0628, 0.0240, 0.0411, 0.0274,
         0.0252, 0.0166, 0.0240, 0.0628, 0.0948, 0.0370, 0.0365, 0.0166, 0.1369,
         0.0254, 0.0174],
        [0.0250, 0.1016, 0.1512, 0.0332, 0.0293, 0.0535, 0.0202, 0.0590, 0.0220,
         0.0244, 0.0145, 0.0202, 0.0535, 0.1083, 0.0327, 0.0433, 0.0145, 0.1561,
         0.0233, 0.0142],
        [0.0205, 0.1239, 0.1470, 0.0278, 0.0279, 0.0460, 0.0191, 0.0655, 0.0302,
         0.0170, 0.0129, 0.0191, 0.0460, 0.0996, 0.0249, 0.0409, 0.0129, 0.1900,
         0.0211, 0.0076],
        [0.0216, 0.0868, 0.1561, 0.0261, 0.0243, 0.0518, 0.0159, 0.0673, 0.0233,
         0.0181, 0.0112, 0.0159, 0.0518, 0.1061, 0.0321, 0.0417, 0.0112, 0.2064,
         0.0197, 0.0129],
        [0.0388, 0.0885, 0.1170, 0.0497, 0.0325, 0.0586, 0.0283, 0.0435, 0.0315,
         0.0321, 0.0222, 0.0283, 0.0586, 0.0947, 0.0398, 0.0452, 0.0222, 0.1139,
         0.0334, 0.0213],
        [0.0327, 0.0772, 0.1382, 0.0361, 0.0310, 0.0636, 0.0219, 0.0328, 0.0292,
         0.0211, 0.0175, 0.0219, 0.0636, 0.0965, 0.0262, 0.0458, 0.0175, 0.1870,
         0.0305, 0.0097],
        [0.0294, 0.0811, 0.1616, 0.0335, 0.0276, 0.0498, 0.0273, 0.0410, 0.0265,
         0.0187, 0.0172, 0.0273, 0.0498, 0.1168, 0.0335, 0.0384, 0.0172, 0.1623,
         0.0261, 0.0151],
        [0.0370, 0.0806, 0.1331, 0.0452, 0.0311, 0.0487, 0.0283, 0.0455, 0.0240,
         0.0276, 0.0245, 0.0283, 0.0487, 0.1030, 0.0334, 0.0569, 0.0245, 0.1367,
         0.0291, 0.0137],
        [0.0464, 0.1032, 0.1125, 0.0546, 0.0329, 0.0474, 0.0237, 0.0410, 0.0282,
         0.0370, 0.0215, 0.0237, 0.0474, 0.0931, 0.0509, 0.0499, 0.0215, 0.1151,
         0.0285, 0.0215],
        [0.0277, 0.0843, 0.1534, 0.0332, 0.0233, 0.0524, 0.0184, 0.0390, 0.0210,
         0.0220, 0.0178, 0.0184, 0.0524, 0.1138, 0.0351, 0.0391, 0.0178, 0.1928,
         0.0231, 0.0151],
        [0.0327, 0.0772, 0.1382, 0.0361, 0.0310, 0.0636, 0.0219, 0.0328, 0.0292,
         0.0211, 0.0175, 0.0219, 0.0636, 0.0965, 0.0262, 0.0458, 0.0175, 0.1870,
         0.0305, 0.0097],
        [0.0388, 0.0885, 0.1170, 0.0497, 0.0325, 0.0586, 0.0283, 0.0435, 0.0315,
         0.0321, 0.0222, 0.0283, 0.0586, 0.0947, 0.0398, 0.0452, 0.0222, 0.1139,
         0.0334, 0.0213],
        [0.0388, 0.0993, 0.1422, 0.0403, 0.0302, 0.0507, 0.0280, 0.0469, 0.0343,
         0.0210, 0.0206, 0.0280, 0.0507, 0.1116, 0.0343, 0.0480, 0.0206, 0.1111,
         0.0286, 0.0147],
        [0.0329, 0.0865, 0.1188, 0.0379, 0.0325, 0.0571, 0.0228, 0.0403, 0.0309,
         0.0278, 0.0198, 0.0228, 0.0571, 0.0989, 0.0339, 0.0471, 0.0198, 0.1689,
         0.0305, 0.0135],
        [0.0225, 0.1040, 0.1908, 0.0315, 0.0223, 0.0439, 0.0188, 0.0472, 0.0217,
         0.0220, 0.0134, 0.0188, 0.0439, 0.1093, 0.0334, 0.0327, 0.0134, 0.1730,
         0.0256, 0.0120],
        [0.0277, 0.0843, 0.1534, 0.0332, 0.0233, 0.0524, 0.0184, 0.0390, 0.0210,
         0.0220, 0.0178, 0.0184, 0.0524, 0.1138, 0.0351, 0.0391, 0.0178, 0.1928,
         0.0231, 0.0151],
        [0.0268, 0.0899, 0.1264, 0.0299, 0.0247, 0.0599, 0.0281, 0.0382, 0.0263,
         0.0277, 0.0142, 0.0281, 0.0599, 0.1041, 0.0437, 0.0433, 0.0142, 0.1714,
         0.0273, 0.0155],
        [0.0296, 0.1096, 0.1494, 0.0318, 0.0303, 0.0472, 0.0212, 0.0413, 0.0275,
         0.0261, 0.0134, 0.0212, 0.0472, 0.0934, 0.0300, 0.0398, 0.0134, 0.1934,
         0.0229, 0.0113],
        [0.0273, 0.1037, 0.1251, 0.0389, 0.0310, 0.0604, 0.0255, 0.0397, 0.0309,
         0.0236, 0.0152, 0.0255, 0.0604, 0.0956, 0.0348, 0.0568, 0.0152, 0.1496,
         0.0273, 0.0135]])