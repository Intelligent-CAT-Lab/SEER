69369
Test: public void test406() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test406"); org.jsoup.parser.HtmlTreeBuilder htmlTreeBuilder0 = new org.jsoup.parser.HtmlTreeBuilder(); htmlTreeBuilder0.setFosterInserts(true); org.jsoup.parser.ParseSettings parseSettings3 = htmlTreeBuilder0.settings; org.jsoup.nodes.Document document4 = htmlTreeBuilder0.doc; org.jsoup.nodes.Element element6 = null; org.jsoup.parser.Parser parser8 = org.jsoup.parser.Parser.htmlParser(); java.util.List<org.jsoup.nodes.Node> nodeList9 = htmlTreeBuilder0.parseFragment(" #data=\"\" #document", element6, "#text", parser8); htmlTreeBuilder0.clearStackToTableRowContext(); java.io.InputStream inputStream11 = null; org.jsoup.parser.Parser parser14 = null; org.jsoup.nodes.Document document15 = org.jsoup.helper.DataUtil.load(inputStream11, "hi!", "", parser14); java.util.Set<java.lang.String> strSet16 = document15.classNames(); java.lang.String str17 = document15.title(); org.jsoup.nodes.Element element19 = document15.addClass("#hi!"); org.jsoup.select.Elements elements21 = document15.getElementsByTag("multipart"); htmlTreeBuilder0.insertInFosterParent((org.jsoup.nodes.Node) document15); org.jsoup.nodes.Element element24 = htmlTreeBuilder0.insertStartTag("/form-data"); org.jsoup.parser.Token.CData cData26 = new org.jsoup.parser.Token.CData("Content-Type"); boolean boolean27 = cData26.isDoctype(); boolean boolean28 = cData26.isDoctype(); htmlTreeBuilder0.insert((org.jsoup.parser.Token.Character) cData26); boolean boolean30 = htmlTreeBuilder0.framesetOk(); boolean boolean32 = htmlTreeBuilder0.inButtonScope("#root"); java.io.InputStream inputStream33 = null; org.jsoup.parser.Parser parser36 = null; org.jsoup.nodes.Document document37 = org.jsoup.helper.DataUtil.load(inputStream33, "hi!", "", parser36); java.lang.String str38 = document37.data(); org.jsoup.select.Elements elements40 = document37.getElementsContainingText("hi!"); java.util.List<org.jsoup.nodes.Node> nodeList41 = document37.siblingNodes(); org.jsoup.select.Elements elements42 = document37.parents(); java.io.InputStream inputStream43 = null; org.jsoup.parser.Parser parser46 = null; org.jsoup.nodes.Document document47 = org.jsoup.helper.DataUtil.load(inputStream43, "hi!", "", parser46); java.lang.String str48 = document47.location(); org.jsoup.nodes.Document.QuirksMode quirksMode49 = document47.quirksMode(); org.jsoup.nodes.Element element50 = document37.appendChild((org.jsoup.nodes.Node) document47); org.jsoup.nodes.Element element51 = element50.empty(); org.jsoup.select.Elements elements52 = element50.children(); boolean boolean53 = htmlTreeBuilder0.removeFromStack(element50); org.jsoup.parser.CharacterReader characterReader55 = new org.jsoup.parser.CharacterReader("multipart/form-data"); java.lang.String str56 = characterReader55.consumeLetterThenDigitSequence(); characterReader55.advance(); boolean boolean59 = characterReader55.matchConsumeIgnoreCase("org.jsoup.SerializationException: hi!"); boolean boolean61 = characterReader55.matches("[^hi!]"); htmlTreeBuilder0.reader = characterReader55; org.jsoup.nodes.Element element63 = htmlTreeBuilder0.lastFormattingElement(); }
Code: public CharacterReader(Reader input, int sz) { Validate.notNull(input); Validate.isTrue(input.markSupported()); reader = input; charBuf = new char[sz > maxBufferLen ? maxBufferLen : sz]; bufferUp(); if (isBinary()) { throw new UncheckedIOException("Input is binary and unsupported"); } }
tensor([[0.0208, 0.0405, 0.0856,  ..., 0.0145, 0.0097, 0.0097],
        [0.0169, 0.0333, 0.0804,  ..., 0.0132, 0.0051, 0.0051],
        [0.0159, 0.0317, 0.0788,  ..., 0.0157, 0.0089, 0.0089],
        ...,
        [0.0213, 0.0421, 0.0649,  ..., 0.0164, 0.0060, 0.0060],
        [0.0149, 0.0285, 0.0736,  ..., 0.0162, 0.0082, 0.0082],
        [0.0149, 0.0285, 0.0736,  ..., 0.0162, 0.0082, 0.0082]])