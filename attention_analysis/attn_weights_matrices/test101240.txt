101240
Test: public void test075() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test075"); org.joda.time.chrono.GJChronology gJChronology0 = org.joda.time.chrono.GJChronology.getInstance(); org.joda.time.DurationField durationField1 = gJChronology0.halfdays(); org.joda.time.DateTimeField dateTimeField2 = gJChronology0.secondOfDay(); org.joda.time.chrono.GJChronology gJChronology3 = org.joda.time.chrono.GJChronology.getInstance(); org.joda.time.DateTimeField dateTimeField4 = gJChronology3.minuteOfHour(); org.joda.time.DateTimeField dateTimeField5 = gJChronology3.hourOfDay(); org.joda.time.field.SkipDateTimeField skipDateTimeField6 = new org.joda.time.field.SkipDateTimeField((org.joda.time.Chronology) gJChronology0, dateTimeField5); int int8 = skipDateTimeField6.getMinimumValue((long) 'a'); org.joda.time.chrono.ISOChronology iSOChronology9 = org.joda.time.chrono.ISOChronology.getInstance(); java.lang.String str10 = iSOChronology9.toString(); org.joda.time.Chronology chronology11 = iSOChronology9.withUTC(); org.joda.time.DateTimeField dateTimeField12 = iSOChronology9.millisOfDay(); org.joda.time.LocalDate localDate13 = new org.joda.time.LocalDate(); org.joda.time.DateTime dateTime14 = localDate13.toDateTimeAtCurrentTime(); int[] intArray15 = localDate13.getValues(); org.joda.time.LocalDate localDate17 = localDate13.minusWeeks((int) (byte) 1); int[] intArray19 = iSOChronology9.get((org.joda.time.ReadablePartial) localDate13, (long) (short) -1); org.joda.time.LocalDate localDate20 = new org.joda.time.LocalDate(); boolean boolean21 = org.joda.time.DateTimeUtils.isContiguous((org.joda.time.ReadablePartial) localDate20); org.joda.time.DateTimeZone dateTimeZone23 = org.joda.time.DateTimeZone.forOffsetMillis(0); org.joda.time.Interval interval24 = localDate20.toInterval(dateTimeZone23); org.joda.time.DurationFieldType durationFieldType25 = org.joda.time.DurationFieldType.years(); java.lang.String str26 = durationFieldType25.toString(); org.joda.time.LocalDate localDate28 = localDate20.withFieldAdded(durationFieldType25, 36); int int29 = localDate13.compareTo((org.joda.time.ReadablePartial) localDate20); org.joda.time.DateTimeFieldType dateTimeFieldType30 = org.joda.time.DateTimeFieldType.dayOfWeek(); boolean boolean31 = localDate13.isSupported(dateTimeFieldType30); org.joda.time.LocalDate localDate33 = new org.joda.time.LocalDate(); boolean boolean34 = org.joda.time.DateTimeUtils.isContiguous((org.joda.time.ReadablePartial) localDate33); org.joda.time.DateTimeZone dateTimeZone36 = org.joda.time.DateTimeZone.forOffsetMillis(0); org.joda.time.Interval interval37 = localDate33.toInterval(dateTimeZone36); org.joda.time.Chronology chronology38 = org.joda.time.DateTimeUtils.getIntervalChronology((org.joda.time.ReadableInterval) interval37); org.joda.time.chrono.GJChronology gJChronology39 = org.joda.time.chrono.GJChronology.getInstance(); org.joda.time.DateTimeField dateTimeField40 = gJChronology39.yearOfEra(); int int42 = dateTimeField40.getMinimumValue(0L); org.joda.time.DateTimeFieldType dateTimeFieldType43 = org.joda.time.DateTimeFieldType.weekyearOfCentury(); org.joda.time.field.OffsetDateTimeField offsetDateTimeField45 = new org.joda.time.field.OffsetDateTimeField(dateTimeField40, dateTimeFieldType43, (int) (short) 10); org.joda.time.DurationField durationField46 = offsetDateTimeField45.getRangeDurationField(); java.lang.String str47 = offsetDateTimeField45.toString(); long long50 = offsetDateTimeField45.addWrapField((long) (byte) 10, (-1)); org.joda.time.LocalDate localDate51 = new org.joda.time.LocalDate(); org.joda.time.DateTime dateTime52 = localDate51.toDateTimeAtCurrentTime(); int[] intArray53 = localDate51.getValues(); org.joda.time.LocalDate localDate55 = localDate51.minusWeeks((int) (byte) 1); java.util.Locale locale57 = null; java.lang.String str58 = offsetDateTimeField45.getAsText((org.joda.time.ReadablePartial) localDate51, (int) (short) -1, locale57); int[] intArray60 = chronology38.get((org.joda.time.ReadablePartial) localDate51, (long) 10); java.util.Locale locale62 = null; try { int[] intArray63 = skipDateTimeField6.set((org.joda.time.ReadablePartial) localDate13, 36, intArray60, "", locale62); } catch (org.joda.time.IllegalFieldValueException e) { } }
Code: public int compareTo(DurationField durationField) { return 0; }
[[0.11504672 0.07088312 0.22071868 0.09066784 0.16294885 0.12779254
 0.16083539 0.05110686]
[0.07928596 0.0558209  0.24616511 0.09625609 0.18735772 0.12893778
 0.16655207 0.03962431]
[0.11457121 0.05334648 0.23531055 0.09587287 0.18281381 0.1058514
 0.17308146 0.03915217]
[0.08398679 0.04311445 0.26733202 0.09647291 0.1708708  0.1196094
 0.17559966 0.04301397]
[0.10497404 0.04898982 0.24481355 0.10018218 0.1817163  0.11911991
 0.13819627 0.06200793]
[0.07951632 0.04447542 0.31265107 0.08226886 0.17065464 0.11283726
 0.15159996 0.04599651]
[0.10038751 0.05522908 0.22225319 0.10987818 0.1732733  0.12319817
 0.16946179 0.04631881]
[0.07304599 0.0548218  0.22016698 0.0877915  0.19865648 0.16269505
 0.16059923 0.04222292]]