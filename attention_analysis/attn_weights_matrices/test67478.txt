67478
Test: public void test45() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test45"); com.fasterxml.jackson.databind.JavaType javaType0 = null; com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer2 = null; com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null; com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = null; com.fasterxml.jackson.databind.ser.std.CollectionSerializer collectionSerializer5 = new com.fasterxml.jackson.databind.ser.std.CollectionSerializer(javaType0, true, typeSerializer2, beanProperty3, objJsonSerializer4); com.fasterxml.jackson.databind.JavaType javaType6 = collectionSerializer5.getContentType(); com.fasterxml.jackson.databind.JavaType javaType7 = null; com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer9 = null; com.fasterxml.jackson.databind.ser.std.SqlDateSerializer sqlDateSerializer11 = new com.fasterxml.jackson.databind.ser.std.SqlDateSerializer((java.lang.Boolean) false); com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = null; com.fasterxml.jackson.databind.BeanProperty beanProperty13 = null; com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = sqlDateSerializer11.createContextual(serializerProvider12, beanProperty13); com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer objectArraySerializer15 = new com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer(javaType7, false, typeSerializer9, (com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) wildcardJsonSerializer14); com.fasterxml.jackson.databind.ObjectMapper objectMapper16 = null; com.fasterxml.jackson.databind.MappingJsonFactory mappingJsonFactory17 = new com.fasterxml.jackson.databind.MappingJsonFactory(objectMapper16); com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider18 = null; com.fasterxml.jackson.databind.deser.DefaultDeserializationContext defaultDeserializationContext19 = null; com.fasterxml.jackson.databind.ObjectMapper objectMapper20 = new com.fasterxml.jackson.databind.ObjectMapper((com.fasterxml.jackson.core.JsonFactory) mappingJsonFactory17, defaultSerializerProvider18, defaultDeserializationContext19); com.fasterxml.jackson.databind.MapperFeature[] mapperFeatureArray21 = new com.fasterxml.jackson.databind.MapperFeature[] {}; com.fasterxml.jackson.databind.ObjectMapper objectMapper22 = objectMapper20.enable(mapperFeatureArray21); com.fasterxml.jackson.core.JsonGenerator jsonGenerator23 = null; com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = null; objectArraySerializer15.serializeContents((java.lang.Object[]) mapperFeatureArray21, jsonGenerator23, serializerProvider24); com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap propertySerializerMap26 = com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap.emptyForRootValues(); objectArraySerializer15._dynamicSerializers = propertySerializerMap26; com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer inetSocketAddressSerializer28 = new com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer(); java.lang.Class<java.net.InetSocketAddress> inetSocketAddressClass29 = inetSocketAddressSerializer28.handledType(); com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer stdKeyDeserializer30 = com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.forType(inetSocketAddressClass29); java.lang.Class<?> wildcardClass31 = com.fasterxml.jackson.databind.util.ClassUtil.getEnclosingClass(inetSocketAddressClass29); com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null; try { com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer33 = collectionSerializer5._findAndAddDynamic(propertySerializerMap26, inetSocketAddressClass29, serializerProvider32); } catch (java.lang.NullPointerException e) { } }
Code: public JsonSerializer<?> createContextual(SerializerProvider serializers,BeanProperty property){if (property == null) {return this;}JsonFormat.Value format = findFormatOverrides(serializers, property, handledType());if (format == null) {return this;}JsonFormat.Shape shape = format.getShape();if (shape.isNumeric()) {return withFormat(Boolean.TRUE, null);}if ((shape == JsonFormat.Shape.STRING) || format.hasPattern()|| format.hasLocale() || format.hasTimeZone()) {TimeZone tz = format.getTimeZone();final String pattern = format.hasPattern()? format.getPattern(): StdDateFormat.DATE_FORMAT_STR_ISO8601;final Locale loc = format.hasLocale()? format.getLocale(): serializers.getLocale();SimpleDateFormat df = new SimpleDateFormat(pattern, loc);if (tz == null) {;};return withFormat(Boolean.FALSE, df);}return this;}
tensor([[0.0112, 0.0521, 0.0067,  ..., 0.0154, 0.0114, 0.0123],
        [0.0118, 0.0572, 0.0074,  ..., 0.0135, 0.0106, 0.0087],
        [0.0092, 0.0777, 0.0069,  ..., 0.0137, 0.0113, 0.0083],
        ...,
        [0.0128, 0.0550, 0.0094,  ..., 0.0152, 0.0111, 0.0071],
        [0.0129, 0.0663, 0.0069,  ..., 0.0159, 0.0102, 0.0090],
        [0.0122, 0.0468, 0.0076,  ..., 0.0153, 0.0129, 0.0104]])