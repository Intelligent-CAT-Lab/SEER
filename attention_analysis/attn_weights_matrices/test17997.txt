17997
Test: public void test2() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test2"); java.io.PrintStream printStream0 = null; com.google.javascript.jscomp.Compiler compiler1 = new com.google.javascript.jscomp.Compiler(printStream0); com.google.javascript.jscomp.DefaultPassConfig defaultPassConfig2 = compiler1.ensureDefaultPassConfig(); com.google.javascript.jscomp.PassFactory passFactory3 = defaultPassConfig2.denormalize; com.google.javascript.jscomp.DefaultPassConfig.HotSwapPassFactory hotSwapPassFactory4 = defaultPassConfig2.checkRequires; java.io.PrintStream printStream5 = null; com.google.javascript.jscomp.Compiler compiler6 = new com.google.javascript.jscomp.Compiler(printStream5); com.google.javascript.jscomp.StrictModeCheck strictModeCheck7 = new com.google.javascript.jscomp.StrictModeCheck((com.google.javascript.jscomp.AbstractCompiler) compiler6); com.google.javascript.jscomp.CheckSideEffects.StripProtection stripProtection8 = new com.google.javascript.jscomp.CheckSideEffects.StripProtection((com.google.javascript.jscomp.AbstractCompiler) compiler6); com.google.javascript.rhino.Node node10 = com.google.javascript.rhino.IR.string("(hi!)"); int int11 = node10.getSourcePosition(); int int12 = com.google.javascript.jscomp.InlineCostEstimator.getCost(node10); boolean boolean13 = node10.isAdd(); java.lang.String str14 = compiler6.toSource(node10); try { com.google.javascript.jscomp.HotSwapCompilerPass hotSwapCompilerPass15 = hotSwapPassFactory4.getHotSwapPass((com.google.javascript.jscomp.AbstractCompiler) compiler6); } catch (java.lang.NullPointerException e) { } }
Code: static int getCost(Node root, int costThreshhold) { CompiledSizeEstimator estimator = new CompiledSizeEstimator(costThreshhold); estimator.add(root); return estimator.getCost(); }
[[0.12346302 0.02495446 0.10577968 0.03532153 0.02495446 0.11625371
 0.08055165 0.03619042 0.06935342 0.03073813 0.02040167 0.12195339
 0.05823167 0.04474354 0.08501945 0.02208978]
[0.16465138 0.02318267 0.10386046 0.03599318 0.02318267 0.08877917
 0.05768717 0.05099526 0.05063372 0.0252028  0.01621219 0.14150906
 0.05730741 0.04694091 0.1004016  0.01346038]
[0.1094861  0.01801649 0.11377136 0.03391069 0.01801649 0.10985362
 0.06894436 0.03507575 0.0736694  0.02500906 0.01747387 0.15160061
 0.06409086 0.036261   0.1080911  0.01672926]
[0.12217925 0.02190037 0.09448772 0.04419277 0.02190037 0.1352167
 0.04937388 0.03641614 0.06443687 0.02858199 0.0172211  0.11042137
 0.06196702 0.0496255  0.12714706 0.01493188]
[0.16465138 0.02318267 0.10386046 0.03599318 0.02318267 0.08877917
 0.05768717 0.05099526 0.05063372 0.0252028  0.01621219 0.14150906
 0.05730741 0.04694091 0.1004016  0.01346038]
[0.1292502  0.02407164 0.1035238  0.04030939 0.02407164 0.10320187
 0.05834467 0.03816383 0.07848138 0.02939293 0.02537784 0.1279804
 0.05950783 0.05699331 0.08366796 0.01766139]
[0.10650012 0.02258719 0.10060555 0.03444978 0.02258719 0.08033084
 0.07097168 0.04530416 0.06634718 0.03846698 0.0264178  0.135349
 0.07170434 0.05387987 0.09889386 0.02560443]
[0.11704119 0.02202829 0.08275279 0.03792392 0.02202829 0.10231364
 0.07692114 0.04801916 0.05856482 0.03151418 0.02199082 0.1235946
 0.06568429 0.05630779 0.1177384  0.01557668]
[0.11558849 0.01989082 0.08785875 0.03082095 0.01989082 0.11395796
 0.09564742 0.04017356 0.0629717  0.02609575 0.01551509 0.15296431
 0.05541409 0.04165237 0.10806803 0.01348988]
[0.12150268 0.03121096 0.08667015 0.03297876 0.03121096 0.08990383
 0.0558801  0.05367337 0.07281173 0.04184927 0.02395172 0.13881719
 0.06508464 0.05575742 0.0740907  0.02460651]
[0.11052325 0.02404108 0.09243976 0.03690749 0.02404108 0.10888267
 0.06709291 0.04072957 0.06924993 0.02937983 0.02384745 0.1426866
 0.07309225 0.05174946 0.08588988 0.01944685]
[0.14934537 0.01456015 0.11197399 0.03171464 0.01456015 0.10235385
 0.06193767 0.04317018 0.06551836 0.02342166 0.0138759  0.14760415
 0.06369464 0.04451349 0.10097856 0.01077725]
[0.11307096 0.02502758 0.11428551 0.02983372 0.02502758 0.10113855
 0.07391872 0.03470424 0.08013245 0.0326953  0.02195175 0.12246459
 0.05478466 0.04881039 0.10458706 0.01756697]
[0.12992267 0.01696131 0.08074974 0.03866543 0.01696131 0.12107228
 0.05459731 0.0414786  0.05287274 0.02759815 0.01688088 0.17988408
 0.06758226 0.04116059 0.09861617 0.01499651]
[0.11792965 0.02003081 0.09978438 0.03983934 0.02003081 0.11769509
 0.05825268 0.03476937 0.08371039 0.02794295 0.01828329 0.12527321
 0.06510133 0.05046095 0.10322592 0.01766986]
[0.11982378 0.0239323  0.08552182 0.03700864 0.0239323  0.1431733
 0.07028986 0.03524537 0.05669415 0.02704597 0.01735303 0.13203503
 0.04440049 0.06506954 0.10288981 0.01558453]]