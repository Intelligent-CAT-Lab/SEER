62334
Test: public void testParameterizedTypesWithCustomDeserializer() { Type ptIntegerType = new TypeToken<MyParameterizedType<Integer>>() {}.getType(); Type ptStringType = new TypeToken<MyParameterizedType<String>>() {}.getType(); Gson gson = new GsonBuilder().registerTypeAdapter( ptIntegerType, new MyParameterizedTypeAdapter<Integer>()) .registerTypeAdapter(ptStringType, new MyParameterizedTypeAdapter<String>()) .registerTypeAdapter(ptStringType, new MyParameterizedTypeInstanceCreator<String>("")) .registerTypeAdapter(ptIntegerType, new MyParameterizedTypeInstanceCreator<Integer>(new Integer(0))) .create(); MyParameterizedType<Integer> src = new MyParameterizedType<Integer>(10); String json = MyParameterizedTypeAdapter.<Integer>getExpectedJson(src); MyParameterizedType<Integer> intTarget = gson.fromJson(json, ptIntegerType); MyParameterizedType<String> srcStr = new MyParameterizedType<String>("abc"); json = MyParameterizedTypeAdapter.<String>getExpectedJson(srcStr); MyParameterizedType<String> stringTarget = gson.fromJson(json, ptStringType); }
Code: public <T2> TypeAdapter<T2> create(Gson gson, TypeToken<T2> typeToken) { final Class<? super T2> requestedType = typeToken.getRawType(); if (!clazz.isAssignableFrom(requestedType)) { return null; } return (TypeAdapter<T2>) new TypeAdapter<T1>() { @Override public void write(JsonWriter out, T1 value) throws IOException { typeAdapter.write(out, value); } @Override public T1 read(JsonReader in) throws IOException { T1 result = typeAdapter.read(in); if (result != null && !requestedType.isInstance(result)) { throw new JsonSyntaxException("Expected a " + requestedType.getName() + " but was " + result.getClass().getName()); } return result; } }; }
tensor([[0.0102, 0.0084, 0.0149,  ..., 0.0047, 0.0109, 0.0047],
        [0.0097, 0.0096, 0.0149,  ..., 0.0048, 0.0104, 0.0048],
        [0.0093, 0.0084, 0.0187,  ..., 0.0039, 0.0099, 0.0039],
        ...,
        [0.0070, 0.0063, 0.0117,  ..., 0.0039, 0.0098, 0.0039],
        [0.0091, 0.0093, 0.0123,  ..., 0.0039, 0.0096, 0.0039],
        [0.0070, 0.0063, 0.0117,  ..., 0.0039, 0.0098, 0.0039]])