157414
Test: public void test4664() throws Throwable { PooledObjectFactory<OutOfMemoryError> pooledObjectFactory0 = (PooledObjectFactory<OutOfMemoryError>) mock(PooledObjectFactory.class, new ViolatedAssumptionAnswer()); doReturn((String) null).when(pooledObjectFactory0).toString(); doReturn((PooledObject) null).when(pooledObjectFactory0).makeObject(); PooledObjectFactory<OutOfMemoryError> pooledObjectFactory1 = PoolUtils.synchronizedPooledFactory(pooledObjectFactory0); GenericObjectPoolConfig<OutOfMemoryError> genericObjectPoolConfig0 = new GenericObjectPoolConfig<OutOfMemoryError>(); GenericObjectPoolConfig<OutOfMemoryError> genericObjectPoolConfig1 = genericObjectPoolConfig0.clone(); GenericObjectPool<OutOfMemoryError> genericObjectPool0 = new GenericObjectPool<OutOfMemoryError>(pooledObjectFactory1, genericObjectPoolConfig1); int int0 = genericObjectPool0.getNumActive(); genericObjectPoolConfig1.setJmxEnabled(true); }
Code: public static <T> PooledObjectFactory<T> synchronizedPooledFactory( final PooledObjectFactory<T> factory) { return new SynchronizedPooledObjectFactory<>(factory); }
[[0.06098477 0.15339214 0.13181189 0.08458589 0.08458589 0.0467689
 0.08458589 0.08458589 0.0647748  0.06507316 0.03190029 0.08458589
 0.02236463]
[0.05926134 0.14283538 0.15577897 0.08174805 0.08174805 0.04131977
 0.08174805 0.08174805 0.08735594 0.05490904 0.0249562  0.08174805
 0.02484315]
[0.05564339 0.12854314 0.15033047 0.08597139 0.08597139 0.03951098
 0.08597139 0.08597139 0.08751354 0.06170957 0.02652381 0.08597139
 0.02036818]
[0.0493087  0.1600623  0.13800016 0.08429313 0.08429313 0.04433332
 0.08429313 0.08429313 0.06714143 0.05955601 0.03652145 0.08429313
 0.02361099]
[0.0493087  0.1600623  0.13800016 0.08429313 0.08429313 0.04433332
 0.08429313 0.08429313 0.06714143 0.05955601 0.03652145 0.08429313
 0.02361099]
[0.05056037 0.14700659 0.16006638 0.08433323 0.08433323 0.03269166
 0.08433323 0.08433323 0.07576071 0.07325597 0.02354067 0.08433323
 0.01545153]
[0.0493087  0.1600623  0.13800016 0.08429313 0.08429313 0.04433332
 0.08429313 0.08429313 0.06714143 0.05955601 0.03652145 0.08429313
 0.02361099]
[0.0493087  0.1600623  0.13800016 0.08429313 0.08429313 0.04433332
 0.08429313 0.08429313 0.06714143 0.05955601 0.03652145 0.08429313
 0.02361099]
[0.0591732  0.13425739 0.12253873 0.08050961 0.08050961 0.05783409
 0.08050961 0.08050961 0.08843419 0.06897643 0.03398684 0.08050962
 0.03225106]
[0.04044    0.16111423 0.15253277 0.08886416 0.08886416 0.03492589
 0.08886416 0.08886416 0.0621816  0.06160922 0.02497804 0.08886416
 0.01789738]
[0.05248884 0.15075539 0.10978387 0.08594464 0.08594464 0.04131021
 0.08594464 0.08594464 0.08208568 0.073484   0.0356117  0.08594465
 0.02475712]
[0.0493087  0.1600623  0.13800016 0.08429313 0.08429313 0.04433332
 0.08429313 0.08429313 0.06714143 0.05955601 0.03652145 0.08429313
 0.02361099]
[0.04048727 0.14614691 0.17482357 0.07936645 0.07936645 0.0349623
 0.07936645 0.07936645 0.08296715 0.08233121 0.02257916 0.07936645
 0.01887026]]