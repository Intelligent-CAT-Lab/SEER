101609
Test: public void testUnsupportedMethods() { DateTimeField fieldOne = UnsupportedDateTimeField.getInstance( dateTimeFieldTypeOne, UnsupportedDurationField .getInstance(weeks)); try { fieldOne.add(localTime, 0, new int[] { 0, 100 }, 100); } catch (UnsupportedOperationException e) { } try { fieldOne.addWrapField(100000L, 250); } catch (UnsupportedOperationException e) { } try { fieldOne.addWrapField(localTime, 0, new int[] { 0, 100 }, 100); } catch (UnsupportedOperationException e) { } try { fieldOne.addWrapPartial(localTime, 0, new int[] { 0, 100 }, 100); } catch (UnsupportedOperationException e) { } try { fieldOne.get(1000L); } catch (UnsupportedOperationException e) { } try { fieldOne.getAsShortText(0, Locale.getDefault()); } catch (UnsupportedOperationException e) { } try { fieldOne.getAsShortText(100000L); } catch (UnsupportedOperationException e) { } try { fieldOne.getAsShortText(100000L, Locale.getDefault()); } catch (UnsupportedOperationException e) { } try { fieldOne.getAsShortText(localTime, 0, Locale.getDefault()); } catch (UnsupportedOperationException e) { } try { fieldOne.getAsShortText(localTime, Locale.getDefault()); } catch (UnsupportedOperationException e) { } try { fieldOne.getAsText(0, Locale.getDefault()); } catch (UnsupportedOperationException e) { } try { fieldOne.getAsText(1000L); } catch (UnsupportedOperationException e) { } try { fieldOne.getAsText(1000L, Locale.getDefault()); } catch (UnsupportedOperationException e) { } try { fieldOne.getAsText(localTime, 0, Locale.getDefault()); } catch (UnsupportedOperationException e) { } try { fieldOne.getAsText(localTime, Locale.getDefault()); } catch (UnsupportedOperationException e) { } try { fieldOne.getLeapAmount(System.currentTimeMillis()); } catch (UnsupportedOperationException e) { } try { fieldOne.getMaximumShortTextLength(Locale.getDefault()); } catch (UnsupportedOperationException e) { } try { fieldOne.getMaximumTextLength(Locale.getDefault()); } catch (UnsupportedOperationException e) { } try { fieldOne.getMaximumValue(); } catch (UnsupportedOperationException e) { } try { fieldOne.getMaximumValue(1000000L); } catch (UnsupportedOperationException e) { } try { fieldOne.getMaximumValue(localTime); } catch (UnsupportedOperationException e) { } try { fieldOne.getMaximumValue(localTime, new int[] { 0 }); } catch (UnsupportedOperationException e) { } try { fieldOne.getMinimumValue(); } catch (UnsupportedOperationException e) { } try { fieldOne.getMinimumValue(10000000L); } catch (UnsupportedOperationException e) { } try { fieldOne.getMinimumValue(localTime); } catch (UnsupportedOperationException e) { } try { fieldOne.getMinimumValue(localTime, new int[] { 0 }); } catch (UnsupportedOperationException e) { } try { fieldOne.isLeap(System.currentTimeMillis()); } catch (UnsupportedOperationException e) { } try { fieldOne.remainder(1000000L); } catch (UnsupportedOperationException e) { } try { fieldOne.roundCeiling(1000000L); } catch (UnsupportedOperationException e) { } try { fieldOne.roundFloor(1000000L); } catch (UnsupportedOperationException e) { } try { fieldOne.roundHalfCeiling(1000000L); } catch (UnsupportedOperationException e) { } try { fieldOne.roundHalfEven(1000000L); } catch (UnsupportedOperationException e) { } try { fieldOne.roundHalfFloor(1000000L); } catch (UnsupportedOperationException e) { } try { fieldOne.set(1000000L, 1000); } catch (UnsupportedOperationException e) { } try { fieldOne.set(1000000L, "Unsupported Operation"); } catch (UnsupportedOperationException e) { } try { fieldOne .set(1000000L, "Unsupported Operation", Locale.getDefault()); } catch (UnsupportedOperationException e) { } try { fieldOne.set(localTime, 0, new int[] { 0 }, 10000); } catch (UnsupportedOperationException e) { } try { fieldOne.set(localTime, 0, new int[] { 0 }, "Unsupported Operation", Locale.getDefault()); } catch (UnsupportedOperationException e) { } }
Code: public long roundCeiling(long instant) { if (false) { int offset = getOffsetToAdd(instant); ; return instant - offset; } else { long localInstant = iZone.convertUTCToLocal(instant); ; return iZone.convertLocalToUTC(localInstant, false, instant); } }
tensor([[0.0284, 0.0465, 0.0425, 0.0144, 0.0394, 0.0766, 0.0197, 0.0394, 0.0176,
         0.0419, 0.0179, 0.0226, 0.0160, 0.0314, 0.0320, 0.0887, 0.0538, 0.0124,
         0.0402, 0.0394, 0.0465, 0.0157, 0.0179, 0.0236, 0.0160, 0.0314, 0.0389,
         0.0307, 0.0336, 0.0124, 0.0124],
        [0.0208, 0.0431, 0.0380, 0.0084, 0.0490, 0.0784, 0.0157, 0.0490, 0.0126,
         0.0373, 0.0159, 0.0230, 0.0111, 0.0307, 0.0319, 0.1044, 0.0564, 0.0117,
         0.0448, 0.0490, 0.0431, 0.0082, 0.0159, 0.0188, 0.0111, 0.0307, 0.0612,
         0.0209, 0.0359, 0.0117, 0.0117],
        [0.0248, 0.0467, 0.0366, 0.0122, 0.0456, 0.0817, 0.0265, 0.0456, 0.0116,
         0.0450, 0.0170, 0.0184, 0.0117, 0.0281, 0.0231, 0.1029, 0.0485, 0.0107,
         0.0574, 0.0456, 0.0467, 0.0119, 0.0170, 0.0254, 0.0117, 0.0281, 0.0478,
         0.0191, 0.0314, 0.0107, 0.0107],
        [0.0237, 0.0442, 0.0404, 0.0111, 0.0397, 0.0909, 0.0204, 0.0397, 0.0149,
         0.0364, 0.0167, 0.0204, 0.0117, 0.0317, 0.0327, 0.0985, 0.0488, 0.0113,
         0.0437, 0.0397, 0.0442, 0.0116, 0.0167, 0.0247, 0.0117, 0.0317, 0.0666,
         0.0260, 0.0275, 0.0113, 0.0113],
        [0.0288, 0.0466, 0.0366, 0.0156, 0.0455, 0.0498, 0.0228, 0.0455, 0.0139,
         0.0459, 0.0240, 0.0217, 0.0162, 0.0333, 0.0225, 0.0833, 0.0347, 0.0162,
         0.0478, 0.0455, 0.0466, 0.0159, 0.0240, 0.0276, 0.0162, 0.0333, 0.0456,
         0.0238, 0.0389, 0.0162, 0.0162],
        [0.0187, 0.0510, 0.0304, 0.0080, 0.0418, 0.1065, 0.0123, 0.0418, 0.0092,
         0.0458, 0.0149, 0.0194, 0.0083, 0.0248, 0.0262, 0.1249, 0.0582, 0.0063,
         0.0721, 0.0418, 0.0510, 0.0094, 0.0149, 0.0173, 0.0083, 0.0248, 0.0535,
         0.0192, 0.0267, 0.0063, 0.0063],
        [0.0225, 0.0324, 0.0430, 0.0086, 0.0429, 0.1024, 0.0163, 0.0429, 0.0124,
         0.0511, 0.0163, 0.0152, 0.0124, 0.0330, 0.0240, 0.1084, 0.0520, 0.0091,
         0.0438, 0.0429, 0.0324, 0.0118, 0.0163, 0.0249, 0.0124, 0.0330, 0.0569,
         0.0243, 0.0381, 0.0091, 0.0091],
        [0.0288, 0.0466, 0.0366, 0.0156, 0.0455, 0.0498, 0.0228, 0.0455, 0.0139,
         0.0459, 0.0240, 0.0217, 0.0162, 0.0333, 0.0225, 0.0833, 0.0347, 0.0162,
         0.0478, 0.0455, 0.0466, 0.0159, 0.0240, 0.0276, 0.0162, 0.0333, 0.0456,
         0.0238, 0.0389, 0.0162, 0.0162],
        [0.0195, 0.0428, 0.0518, 0.0099, 0.0428, 0.1125, 0.0195, 0.0428, 0.0143,
         0.0412, 0.0165, 0.0182, 0.0160, 0.0313, 0.0238, 0.0752, 0.0593, 0.0094,
         0.0419, 0.0428, 0.0428, 0.0117, 0.0165, 0.0272, 0.0160, 0.0313, 0.0509,
         0.0205, 0.0330, 0.0094, 0.0094],
        [0.0218, 0.0348, 0.0369, 0.0106, 0.0503, 0.0860, 0.0183, 0.0503, 0.0144,
         0.0445, 0.0211, 0.0214, 0.0122, 0.0320, 0.0311, 0.0990, 0.0638, 0.0085,
         0.0400, 0.0503, 0.0348, 0.0117, 0.0211, 0.0219, 0.0122, 0.0320, 0.0516,
         0.0253, 0.0254, 0.0085, 0.0085],
        [0.0322, 0.0398, 0.0406, 0.0190, 0.0358, 0.0712, 0.0259, 0.0358, 0.0196,
         0.0436, 0.0265, 0.0273, 0.0201, 0.0353, 0.0241, 0.0692, 0.0468, 0.0156,
         0.0401, 0.0358, 0.0398, 0.0177, 0.0265, 0.0291, 0.0201, 0.0353, 0.0454,
         0.0245, 0.0259, 0.0156, 0.0156],
        [0.0225, 0.0434, 0.0376, 0.0128, 0.0447, 0.0847, 0.0190, 0.0447, 0.0156,
         0.0435, 0.0204, 0.0198, 0.0113, 0.0306, 0.0261, 0.1033, 0.0484, 0.0117,
         0.0413, 0.0447, 0.0434, 0.0104, 0.0204, 0.0214, 0.0113, 0.0306, 0.0535,
         0.0280, 0.0315, 0.0117, 0.0117],
        [0.0191, 0.0415, 0.0364, 0.0100, 0.0543, 0.0837, 0.0181, 0.0543, 0.0121,
         0.0533, 0.0165, 0.0155, 0.0119, 0.0360, 0.0344, 0.0951, 0.0541, 0.0068,
         0.0391, 0.0543, 0.0415, 0.0120, 0.0165, 0.0228, 0.0119, 0.0360, 0.0522,
         0.0204, 0.0269, 0.0068, 0.0068],
        [0.0199, 0.0542, 0.0316, 0.0100, 0.0395, 0.0818, 0.0185, 0.0395, 0.0118,
         0.0426, 0.0195, 0.0175, 0.0121, 0.0288, 0.0295, 0.1044, 0.0526, 0.0108,
         0.0617, 0.0395, 0.0542, 0.0108, 0.0195, 0.0204, 0.0121, 0.0288, 0.0544,
         0.0218, 0.0305, 0.0108, 0.0108],
        [0.0278, 0.0436, 0.0421, 0.0127, 0.0398, 0.0771, 0.0225, 0.0398, 0.0152,
         0.0382, 0.0189, 0.0213, 0.0124, 0.0342, 0.0297, 0.0907, 0.0481, 0.0118,
         0.0491, 0.0398, 0.0436, 0.0124, 0.0189, 0.0255, 0.0124, 0.0342, 0.0491,
         0.0248, 0.0405, 0.0118, 0.0118],
        [0.0313, 0.0385, 0.0407, 0.0178, 0.0464, 0.0684, 0.0239, 0.0464, 0.0188,
         0.0419, 0.0229, 0.0327, 0.0176, 0.0313, 0.0259, 0.0738, 0.0491, 0.0143,
         0.0309, 0.0464, 0.0385, 0.0152, 0.0229, 0.0239, 0.0176, 0.0313, 0.0446,
         0.0255, 0.0329, 0.0143, 0.0143],
        [0.0236, 0.0470, 0.0303, 0.0104, 0.0451, 0.0997, 0.0189, 0.0451, 0.0124,
         0.0484, 0.0171, 0.0188, 0.0136, 0.0342, 0.0236, 0.1029, 0.0438, 0.0098,
         0.0455, 0.0451, 0.0470, 0.0132, 0.0171, 0.0238, 0.0136, 0.0342, 0.0396,
         0.0246, 0.0320, 0.0098, 0.0098],
        [0.0203, 0.0329, 0.0490, 0.0114, 0.0484, 0.0775, 0.0161, 0.0484, 0.0155,
         0.0414, 0.0179, 0.0197, 0.0154, 0.0432, 0.0213, 0.0889, 0.0485, 0.0106,
         0.0503, 0.0484, 0.0329, 0.0110, 0.0179, 0.0227, 0.0154, 0.0432, 0.0561,
         0.0258, 0.0286, 0.0106, 0.0106],
        [0.0232, 0.0460, 0.0400, 0.0099, 0.0434, 0.0735, 0.0179, 0.0434, 0.0121,
         0.0442, 0.0168, 0.0220, 0.0131, 0.0314, 0.0251, 0.1011, 0.0593, 0.0091,
         0.0492, 0.0434, 0.0460, 0.0120, 0.0168, 0.0211, 0.0131, 0.0314, 0.0530,
         0.0233, 0.0413, 0.0091, 0.0091],
        [0.0288, 0.0466, 0.0366, 0.0156, 0.0455, 0.0498, 0.0228, 0.0455, 0.0139,
         0.0459, 0.0240, 0.0217, 0.0162, 0.0333, 0.0225, 0.0833, 0.0347, 0.0162,
         0.0478, 0.0455, 0.0466, 0.0159, 0.0240, 0.0276, 0.0162, 0.0333, 0.0456,
         0.0238, 0.0389, 0.0162, 0.0162],
        [0.0208, 0.0431, 0.0380, 0.0084, 0.0490, 0.0784, 0.0157, 0.0490, 0.0126,
         0.0373, 0.0159, 0.0230, 0.0111, 0.0307, 0.0319, 0.1044, 0.0564, 0.0117,
         0.0448, 0.0490, 0.0431, 0.0082, 0.0159, 0.0188, 0.0111, 0.0307, 0.0612,
         0.0209, 0.0359, 0.0117, 0.0117],
        [0.0271, 0.0484, 0.0368, 0.0113, 0.0434, 0.0891, 0.0205, 0.0434, 0.0157,
         0.0446, 0.0180, 0.0222, 0.0146, 0.0343, 0.0268, 0.0728, 0.0442, 0.0114,
         0.0416, 0.0434, 0.0484, 0.0120, 0.0180, 0.0257, 0.0146, 0.0343, 0.0491,
         0.0341, 0.0314, 0.0114, 0.0114],
        [0.0322, 0.0398, 0.0406, 0.0190, 0.0358, 0.0712, 0.0259, 0.0358, 0.0196,
         0.0436, 0.0265, 0.0273, 0.0201, 0.0353, 0.0241, 0.0692, 0.0468, 0.0156,
         0.0401, 0.0358, 0.0398, 0.0177, 0.0265, 0.0291, 0.0201, 0.0353, 0.0454,
         0.0245, 0.0259, 0.0156, 0.0156],
        [0.0281, 0.0398, 0.0363, 0.0117, 0.0492, 0.0732, 0.0156, 0.0492, 0.0132,
         0.0435, 0.0183, 0.0188, 0.0148, 0.0350, 0.0330, 0.1017, 0.0484, 0.0116,
         0.0419, 0.0492, 0.0398, 0.0108, 0.0183, 0.0218, 0.0148, 0.0350, 0.0482,
         0.0228, 0.0331, 0.0116, 0.0116],
        [0.0191, 0.0415, 0.0364, 0.0100, 0.0543, 0.0837, 0.0181, 0.0543, 0.0121,
         0.0533, 0.0165, 0.0155, 0.0119, 0.0360, 0.0344, 0.0951, 0.0541, 0.0068,
         0.0391, 0.0543, 0.0415, 0.0120, 0.0165, 0.0228, 0.0119, 0.0360, 0.0522,
         0.0204, 0.0269, 0.0068, 0.0068],
        [0.0199, 0.0542, 0.0316, 0.0100, 0.0395, 0.0818, 0.0185, 0.0395, 0.0118,
         0.0426, 0.0195, 0.0175, 0.0121, 0.0288, 0.0295, 0.1044, 0.0526, 0.0108,
         0.0617, 0.0395, 0.0542, 0.0108, 0.0195, 0.0204, 0.0121, 0.0288, 0.0544,
         0.0218, 0.0305, 0.0108, 0.0108],
        [0.0228, 0.0536, 0.0354, 0.0086, 0.0483, 0.0813, 0.0248, 0.0483, 0.0108,
         0.0392, 0.0186, 0.0155, 0.0103, 0.0266, 0.0249, 0.1025, 0.0525, 0.0104,
         0.0586, 0.0483, 0.0536, 0.0094, 0.0186, 0.0214, 0.0103, 0.0266, 0.0498,
         0.0200, 0.0280, 0.0104, 0.0104],
        [0.0231, 0.0356, 0.0412, 0.0107, 0.0501, 0.0772, 0.0147, 0.0501, 0.0130,
         0.0530, 0.0143, 0.0173, 0.0113, 0.0336, 0.0315, 0.1128, 0.0644, 0.0075,
         0.0389, 0.0501, 0.0356, 0.0119, 0.0143, 0.0202, 0.0113, 0.0336, 0.0483,
         0.0229, 0.0366, 0.0075, 0.0075],
        [0.0228, 0.0373, 0.0323, 0.0089, 0.0445, 0.0795, 0.0197, 0.0445, 0.0133,
         0.0396, 0.0170, 0.0171, 0.0122, 0.0312, 0.0320, 0.1326, 0.0567, 0.0085,
         0.0496, 0.0445, 0.0373, 0.0119, 0.0170, 0.0247, 0.0122, 0.0312, 0.0499,
         0.0250, 0.0300, 0.0085, 0.0085],
        [0.0203, 0.0329, 0.0490, 0.0114, 0.0484, 0.0775, 0.0161, 0.0484, 0.0155,
         0.0414, 0.0179, 0.0197, 0.0154, 0.0432, 0.0213, 0.0889, 0.0485, 0.0106,
         0.0503, 0.0484, 0.0329, 0.0110, 0.0179, 0.0227, 0.0154, 0.0432, 0.0561,
         0.0258, 0.0286, 0.0106, 0.0106],
        [0.0203, 0.0329, 0.0490, 0.0114, 0.0484, 0.0775, 0.0161, 0.0484, 0.0155,
         0.0414, 0.0179, 0.0197, 0.0154, 0.0432, 0.0213, 0.0889, 0.0485, 0.0106,
         0.0503, 0.0484, 0.0329, 0.0110, 0.0179, 0.0227, 0.0154, 0.0432, 0.0561,
         0.0258, 0.0286, 0.0106, 0.0106]])