25353
Test: public void test9() throws Throwable { BoundaryIOManager3D boundaryIOManager3D0 = new BoundaryIOManager3D(); boundaryIOManager3D0.registerDefaultHandlers(); CsvBoundaryWriteHandler3D csvBoundaryWriteHandler3D0 = new CsvBoundaryWriteHandler3D(); Charset charset0 = csvBoundaryWriteHandler3D0.getDefaultCharset(); InputStream inputStream0 = mock(InputStream.class, new ViolatedAssumptionAnswer()); doReturn(0).when(inputStream0).read(any(byte[].class)); GeometryInput geometryInput0 = mock(GeometryInput.class, new ViolatedAssumptionAnswer()); doReturn(charset0, (Charset) null).when(geometryInput0).getCharset(); doReturn("w}&6r").when(geometryInput0).getFileName(); doReturn(inputStream0, inputStream0).when(geometryInput0).getInputStream(); StlBoundaryWriteHandler3D stlBoundaryWriteHandler3D0 = new StlBoundaryWriteHandler3D(); GeometryFormat geometryFormat0 = stlBoundaryWriteHandler3D0.getFormat(); Precision.DoubleEquivalence precision_DoubleEquivalence0 = mock(Precision.DoubleEquivalence.class, new ViolatedAssumptionAnswer()); // Undeclared exception!  boundaryIOManager3D0.triangles(geometryInput0, geometryFormat0, precision_DoubleEquivalence0);   }
Code: public Stream<Triangle3D> triangles(final GeometryInput in, final GeometryFormat fmt, final Precision.DoubleEquivalence precision) { return boundaries(in, fmt, precision) .flatMap(p -> p.toTriangles().stream()); }
[[0.03931294 0.05453854 0.05453854 0.05453854 0.04647533 0.03173392
 0.05453854 0.05453854 0.03173392 0.05453854 0.05453854 0.05377605
 0.043433   0.05453854 0.05453854 0.05453854 0.05453854 0.08202538
 0.05453854 0.01704692]
[0.0325608  0.05372049 0.05372049 0.05372049 0.05674712 0.03241715
 0.05372049 0.05372049 0.03241715 0.05372049 0.05372049 0.05507358
 0.03961091 0.05372049 0.05372049 0.05372049 0.0537205  0.08805882
 0.0537205  0.01846857]
[0.0325608  0.05372049 0.05372049 0.05372049 0.05674712 0.03241715
 0.05372049 0.05372049 0.03241715 0.05372049 0.05372049 0.05507358
 0.03961091 0.05372049 0.05372049 0.05372049 0.0537205  0.08805882
 0.0537205  0.01846857]
[0.0325608  0.05372049 0.05372049 0.05372049 0.05674712 0.03241715
 0.05372049 0.05372049 0.03241715 0.05372049 0.05372049 0.05507358
 0.03961091 0.05372049 0.05372049 0.05372049 0.0537205  0.08805882
 0.0537205  0.01846857]
[0.04801217 0.05213343 0.05213343 0.05213343 0.05812398 0.03393083
 0.05213343 0.05213343 0.03393083 0.05213343 0.05213343 0.0586843
 0.05406046 0.05213343 0.05213343 0.05213343 0.05213342 0.07059433
 0.05213342 0.01706203]
[0.03764872 0.05464451 0.05464451 0.05464451 0.05718131 0.02569677
 0.05464451 0.05464451 0.02569677 0.05464451 0.05464451 0.06911498
 0.05489621 0.05464451 0.05464451 0.05464451 0.0546445  0.06068088
 0.0546445  0.01335033]
[0.0325608  0.05372049 0.05372049 0.05372049 0.05674712 0.03241715
 0.05372049 0.05372049 0.03241715 0.05372049 0.05372049 0.05507358
 0.03961091 0.05372049 0.05372049 0.05372049 0.0537205  0.08805882
 0.0537205  0.01846857]
[0.0325608  0.05372049 0.05372049 0.05372049 0.05674712 0.03241715
 0.05372049 0.05372049 0.03241715 0.05372049 0.05372049 0.05507358
 0.03961091 0.05372049 0.05372049 0.05372049 0.0537205  0.08805882
 0.0537205  0.01846857]
[0.03764872 0.05464451 0.05464451 0.05464451 0.05718131 0.02569677
 0.05464451 0.05464451 0.02569677 0.05464451 0.05464451 0.06911498
 0.05489621 0.05464451 0.05464451 0.05464451 0.0546445  0.06068088
 0.0546445  0.01335033]
[0.0325608  0.05372049 0.05372049 0.05372049 0.05674712 0.03241715
 0.05372049 0.05372049 0.03241715 0.05372049 0.05372049 0.05507358
 0.03961091 0.05372049 0.05372049 0.05372049 0.0537205  0.08805882
 0.0537205  0.01846857]
[0.0325608  0.05372049 0.05372049 0.05372049 0.05674712 0.03241715
 0.05372049 0.05372049 0.03241715 0.05372049 0.05372049 0.05507358
 0.03961091 0.05372049 0.05372049 0.05372049 0.0537205  0.08805882
 0.0537205  0.01846857]
[0.04128222 0.05086935 0.05086935 0.05086935 0.05462939 0.04081972
 0.05086935 0.05086935 0.04081972 0.05086935 0.05086935 0.07357548
 0.04656905 0.05086935 0.05086935 0.05086935 0.05086936 0.06707892
 0.05086936 0.02479333]
[0.02837908 0.05633828 0.05633828 0.05633828 0.0622362  0.0261365
 0.05633828 0.05633828 0.0261365  0.05633828 0.05633828 0.05596408
 0.04111925 0.05633828 0.05633828 0.05633828 0.05633828 0.06865664
 0.05633828 0.01531243]
[0.0325608  0.05372049 0.05372049 0.05372049 0.05674712 0.03241715
 0.05372049 0.05372049 0.03241715 0.05372049 0.05372049 0.05507358
 0.03961091 0.05372049 0.05372049 0.05372049 0.0537205  0.08805882
 0.0537205  0.01846857]
[0.0325608  0.05372049 0.05372049 0.05372049 0.05674712 0.03241715
 0.05372049 0.05372049 0.03241715 0.05372049 0.05372049 0.05507358
 0.03961091 0.05372049 0.05372049 0.05372049 0.0537205  0.08805882
 0.0537205  0.01846857]
[0.0325608  0.05372049 0.05372049 0.05372049 0.05674712 0.03241715
 0.05372049 0.05372049 0.03241715 0.05372049 0.05372049 0.05507358
 0.03961091 0.05372049 0.05372049 0.05372049 0.0537205  0.08805882
 0.0537205  0.01846857]
[0.0325608  0.05372049 0.05372049 0.05372049 0.05674712 0.03241715
 0.05372049 0.05372049 0.03241715 0.05372049 0.05372049 0.05507358
 0.03961091 0.05372049 0.05372049 0.05372049 0.0537205  0.08805882
 0.0537205  0.01846857]
[0.03995439 0.05229669 0.05229669 0.05229669 0.06129741 0.03250762
 0.05229669 0.05229669 0.03250762 0.05229669 0.05229669 0.07995678
 0.04713909 0.05229669 0.05229669 0.05229669 0.05229668 0.06286995
 0.05229668 0.01620686]
[0.0325608  0.05372049 0.05372049 0.05372049 0.05674712 0.03241715
 0.05372049 0.05372049 0.03241715 0.05372049 0.05372049 0.05507358
 0.03961091 0.05372049 0.05372049 0.05372049 0.0537205  0.08805882
 0.0537205  0.01846857]
[0.0288183  0.0512406  0.0512406  0.0512406  0.06517802 0.02723194
 0.0512406  0.0512406  0.02723194 0.0512406  0.0512406  0.08938362
 0.06736927 0.0512406  0.0512406  0.0512406  0.05124059 0.06140327
 0.05124059 0.01849638]]