59880
Test: public void test19307() throws Throwable { DateTimeFormatterBuilder.TwoDigitYear dateTimeFormatterBuilder_TwoDigitYear0 = new DateTimeFormatterBuilder.TwoDigitYear((DateTimeFieldType) null, 1351, true); MockFileWriter mockFileWriter0 = new MockFileWriter(">H<0\"nU*GQURTN#", true); BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance(); DateTimeZone dateTimeZone0 = DateTimeZone.getDefault(); Locale locale0 = Locale.FRENCH; dateTimeFormatterBuilder_TwoDigitYear0.printTo((Appendable) mockFileWriter0, (long) 1351, (Chronology) buddhistChronology0, 399, dateTimeZone0, locale0); DateTimeFormatterBuilder dateTimeFormatterBuilder0 = new DateTimeFormatterBuilder(); HashMap<String, DateTimeZone> hashMap0 = new HashMap<String, DateTimeZone>(); DateTimeFormatterBuilder dateTimeFormatterBuilder1 = dateTimeFormatterBuilder0.appendTimeZoneName((Map<String, DateTimeZone>) hashMap0); DateTimeFormatterBuilder dateTimeFormatterBuilder2 = dateTimeFormatterBuilder1.appendSecondOfMinute(1); DateTimeFormatterBuilder dateTimeFormatterBuilder3 = dateTimeFormatterBuilder2.appendLiteral("org/joda/time/tz/data"); DateTimeFormatterBuilder dateTimeFormatterBuilder4 = dateTimeFormatterBuilder3.appendTwoDigitYear(2086, false); DateTimeFormatterBuilder dateTimeFormatterBuilder5 = dateTimeFormatterBuilder4.appendMillisOfDay(399); DateTimeFormatterBuilder dateTimeFormatterBuilder6 = dateTimeFormatterBuilder5.appendTimeZoneShortName((Map<String, DateTimeZone>) hashMap0); }
Code: public DateTimeFormatterBuilder appendTimeZoneShortName() { return append0(new TimeZoneName(TimeZoneName.SHORT_NAME, null), null); }
[[0.08012262 0.11115308 0.11115308 0.10916809 0.0884663  0.11115308
 0.11115308 0.09912787 0.14385425 0.03464847]
[0.07042983 0.11656789 0.11656789 0.11708504 0.08562556 0.11656789
 0.11656789 0.09413633 0.12705052 0.03940118]
[0.07042983 0.11656789 0.11656789 0.11708504 0.08562556 0.11656789
 0.11656789 0.09413633 0.12705052 0.03940118]
[0.08487944 0.10984352 0.10984352 0.13950083 0.09728849 0.10984352
 0.10984352 0.10558198 0.08467154 0.04870359]
[0.05754321 0.11578456 0.11578456 0.11030475 0.08392026 0.11578456
 0.11578456 0.11597976 0.13877359 0.03034024]
[0.07042983 0.11656789 0.11656789 0.11708504 0.08562556 0.11656789
 0.11656789 0.09413633 0.12705052 0.03940118]
[0.07042983 0.11656789 0.11656789 0.11708504 0.08562556 0.11656789
 0.11656789 0.09413633 0.12705052 0.03940118]
[0.07080813 0.12333415 0.12333415 0.12378629 0.0818281  0.12333415
 0.12333415 0.09085685 0.10461998 0.03476402]
[0.06017945 0.1197181  0.1197181  0.12990889 0.10868198 0.1197181
 0.1197181  0.09163325 0.10846609 0.02225792]
[0.05653403 0.10466577 0.10466577 0.15140845 0.12524104 0.10466577
 0.10466577 0.12644745 0.08941863 0.03228738]]