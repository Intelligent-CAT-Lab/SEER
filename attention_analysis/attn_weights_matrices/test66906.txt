66906
Test: public void testWithUUID() throws IOException { ObjectMapper mapper = new ObjectMapper(); for (String value : new String[] { "00000007-0000-0000-0000-000000000000", "76e6d183-5f68-4afa-b94a-922c1fdb83f8", "540a88d1-e2d8-4fb1-9396-9212280d0a7f", "2c9e441d-1cd0-472d-9bab-69838f877574", "591b2869-146e-41d7-8048-e8131f1fdec5", "82994ac2-7b23-49f2-8cc5-e24cf6ed77be", }) { TokenBuffer buf = new TokenBuffer(mapper, false); UUID uuid = UUID.fromString(value); mapper.writeValue(buf, uuid); buf.close(); UUID out = mapper.readValue(buf.asParser(), UUID.class); JsonParser jp = buf.asParser(); String str = jp.getText(); jp.close(); } }
Code: public TokenBuffer(JsonParser p, DeserializationContext ctxt) { _objectCodec = p.getCodec(); _generatorFeatures = DEFAULT_GENERATOR_FEATURES; _writeContext = JsonWriteContext.createRootContext(null); _first = _last = new Segment(); _appendAt = 0; _hasNativeTypeIds = p.canReadTypeId(); _hasNativeObjectIds = p.canReadObjectId(); _mayHaveNativeIds = _hasNativeTypeIds | _hasNativeObjectIds; _forceBigDecimal = (ctxt == null) ? false : ctxt.isEnabled(DeserializationFeature.USE_BIG_DECIMAL_FOR_FLOATS); }
tensor([[0.0176, 0.0161, 0.0241,  ..., 0.0174, 0.0288, 0.0081],
        [0.0146, 0.0169, 0.0301,  ..., 0.0126, 0.0370, 0.0068],
        [0.0135, 0.0170, 0.0232,  ..., 0.0136, 0.0307, 0.0076],
        ...,
        [0.0178, 0.0153, 0.0274,  ..., 0.0124, 0.0242, 0.0096],
        [0.0145, 0.0150, 0.0304,  ..., 0.0101, 0.0276, 0.0075],
        [0.0125, 0.0143, 0.0270,  ..., 0.0118, 0.0256, 0.0070]])