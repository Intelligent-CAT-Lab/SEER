15769
Test: public void test051() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test051"); org.apache.commons.cli.PosixParser posixParser0 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine1 = posixParser0.cmd; org.apache.commons.cli.CommandLine commandLine2 = new org.apache.commons.cli.CommandLine(); java.lang.String str4 = commandLine2.getOptionValue("hi!"); posixParser0.cmd = commandLine2; org.apache.commons.cli.PosixParser posixParser6 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine7 = posixParser6.cmd; org.apache.commons.cli.Options options8 = posixParser6.getOptions(); org.apache.commons.cli.Options options9 = new org.apache.commons.cli.Options(); org.apache.commons.cli.PosixParser posixParser10 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine11 = posixParser10.cmd; org.apache.commons.cli.Options options12 = posixParser10.getOptions(); java.util.Properties properties13 = null; posixParser10.processProperties(properties13); org.apache.commons.cli.PosixParser posixParser15 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine16 = posixParser15.cmd; org.apache.commons.cli.Options options17 = posixParser15.getOptions(); org.apache.commons.cli.Options options18 = new org.apache.commons.cli.Options(); java.util.List list19 = options18.helpOptions(); java.lang.String[] strArray21 = new java.lang.String[] { "" }; org.apache.commons.cli.CommandLine commandLine22 = posixParser15.parse(options18, strArray21); java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!", "a" }; java.lang.String[] strArray31 = posixParser10.flatten(options18, strArray29, true); org.apache.commons.cli.CommandLine commandLine32 = posixParser6.parse(options9, strArray31); org.apache.commons.cli.PosixParser posixParser33 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine34 = posixParser33.cmd; org.apache.commons.cli.Options options35 = posixParser33.getOptions(); java.util.Properties properties36 = null; posixParser33.processProperties(properties36); org.apache.commons.cli.PosixParser posixParser38 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine39 = posixParser38.cmd; org.apache.commons.cli.Options options40 = posixParser38.getOptions(); org.apache.commons.cli.Options options41 = new org.apache.commons.cli.Options(); java.util.List list42 = options41.helpOptions(); java.lang.String[] strArray44 = new java.lang.String[] { "" }; org.apache.commons.cli.CommandLine commandLine45 = posixParser38.parse(options41, strArray44); java.lang.String[] strArray52 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!", "a" }; java.lang.String[] strArray54 = posixParser33.flatten(options41, strArray52, true); org.apache.commons.cli.CommandLine commandLine55 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj57 = commandLine55.getOptionObject('a'); commandLine55.addArg("org.apache.commons.cli.MissingArgumentException: a"); java.lang.String[] strArray61 = commandLine55.getOptionValues('#'); java.util.Properties properties63 = commandLine55.getOptionProperties(""); org.apache.commons.cli.CommandLine commandLine64 = posixParser0.parse(options9, strArray54, properties63); org.apache.commons.cli.PosixParser posixParser65 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.PosixParser posixParser66 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine67 = posixParser66.cmd; org.apache.commons.cli.Options options68 = posixParser66.getOptions(); org.apache.commons.cli.Options options69 = new org.apache.commons.cli.Options(); java.util.List list70 = options69.helpOptions(); java.lang.String[] strArray72 = new java.lang.String[] { "" }; org.apache.commons.cli.CommandLine commandLine73 = posixParser66.parse(options69, strArray72); java.lang.String[] strArray74 = null; org.apache.commons.cli.CommandLine commandLine75 = posixParser65.parse(options69, strArray74); java.util.Properties properties77 = commandLine75.getOptionProperties(""); posixParser0.processProperties(properties77); }
Code: protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption){init();this.options = options;Iterator iter = Arrays.asList(arguments).iterator();while (iter.hasNext()){String token = (String) iter.next();if (token.startsWith("--")){int pos = token.indexOf('=');String opt = pos == -1 ? token : token.substring(0, pos); if (!options.hasOption(opt)){;}else{tokens.add(opt);if (pos != -1){tokens.add(token.substring(pos + 1));}}}else if ("-".equals(token)){tokens.add(token);}else if (token.startsWith("-")){if (token.length() == -2 || options.hasOption(token)){processOptionToken(token, stopAtNonOption);}else{burstToken(token, stopAtNonOption);}}else if (true){;}else{tokens.add(token);}gobble(iter);}return (String[]) tokens.toArray(new String[tokens.size()]);}
tensor([[0.0158, 0.0048, 0.0170,  ..., 0.0848, 0.0169, 0.0183],
        [0.0141, 0.0042, 0.0155,  ..., 0.0713, 0.0143, 0.0161],
        [0.0150, 0.0072, 0.0198,  ..., 0.0619, 0.0187, 0.0190],
        ...,
        [0.0169, 0.0072, 0.0195,  ..., 0.0699, 0.0228, 0.0162],
        [0.0157, 0.0065, 0.0179,  ..., 0.0611, 0.0164, 0.0156],
        [0.0125, 0.0061, 0.0151,  ..., 0.0759, 0.0189, 0.0176]])