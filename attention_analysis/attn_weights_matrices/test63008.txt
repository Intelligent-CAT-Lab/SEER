63008
Test: public void test488() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test488"); com.google.gson.DefaultDateTypeAdapter defaultDateTypeAdapter2 = new com.google.gson.DefaultDateTypeAdapter((int) (byte) 0, 0); com.google.gson.internal.bind.JsonTreeWriter jsonTreeWriter3 = new com.google.gson.internal.bind.JsonTreeWriter(); com.google.gson.stream.JsonWriter jsonWriter5 = jsonTreeWriter3.value(false); com.google.gson.stream.JsonWriter jsonWriter7 = jsonWriter5.value(true); java.util.Date date8 = null; defaultDateTypeAdapter2.write(jsonWriter7, date8); com.google.gson.internal.bind.JsonTreeWriter jsonTreeWriter10 = new com.google.gson.internal.bind.JsonTreeWriter(); com.google.gson.stream.JsonWriter jsonWriter12 = jsonTreeWriter10.value(false); com.google.gson.stream.JsonWriter jsonWriter13 = jsonTreeWriter10.beginArray(); com.google.gson.stream.JsonWriter jsonWriter15 = jsonTreeWriter10.value(true); com.google.gson.stream.JsonWriter jsonWriter17 = jsonTreeWriter10.value((java.lang.Number) (-1.0f)); com.google.gson.stream.JsonWriter jsonWriter18 = jsonTreeWriter10.nullValue(); com.google.gson.stream.JsonWriter jsonWriter19 = jsonTreeWriter10.beginArray(); java.util.Date date20 = null; defaultDateTypeAdapter2.write(jsonWriter19, date20); com.google.gson.DefaultDateTypeAdapter defaultDateTypeAdapter24 = new com.google.gson.DefaultDateTypeAdapter((int) (byte) 0, 0); com.google.gson.TypeAdapter<java.util.Date> dateTypeAdapter25 = defaultDateTypeAdapter24.nullSafe(); com.google.gson.TypeAdapter<java.util.Date> dateTypeAdapter26 = dateTypeAdapter25.nullSafe(); java.util.Date date27 = null; com.google.gson.JsonElement jsonElement28 = dateTypeAdapter25.toJsonTree(date27); java.util.Date date29 = defaultDateTypeAdapter2.fromJsonTree(jsonElement28); com.google.gson.internal.bind.JsonTreeWriter jsonTreeWriter30 = new com.google.gson.internal.bind.JsonTreeWriter(); com.google.gson.stream.JsonWriter jsonWriter32 = jsonTreeWriter30.value(false); com.google.gson.stream.JsonWriter jsonWriter33 = jsonTreeWriter30.nullValue(); java.util.Date date34 = null; defaultDateTypeAdapter2.write(jsonWriter33, date34); com.google.gson.DefaultDateTypeAdapter defaultDateTypeAdapter38 = new com.google.gson.DefaultDateTypeAdapter((int) (byte) 0, 0); com.google.gson.internal.bind.JsonTreeWriter jsonTreeWriter39 = new com.google.gson.internal.bind.JsonTreeWriter(); com.google.gson.stream.JsonWriter jsonWriter41 = jsonTreeWriter39.value(false); boolean boolean42 = jsonWriter41.getSerializeNulls(); com.google.gson.stream.JsonWriter jsonWriter44 = jsonWriter41.value("$"); java.util.Date date45 = null; defaultDateTypeAdapter38.write(jsonWriter44, date45); java.util.Date date47 = null; com.google.gson.JsonElement jsonElement48 = defaultDateTypeAdapter38.toJsonTree(date47); java.util.Date date49 = null; com.google.gson.JsonElement jsonElement50 = defaultDateTypeAdapter38.toJsonTree(date49); java.util.Date date51 = defaultDateTypeAdapter2.fromJsonTree(jsonElement50); com.google.gson.TypeAdapter<java.util.Date> dateTypeAdapter52 = defaultDateTypeAdapter2.nullSafe(); com.google.gson.internal.bind.JsonTreeWriter jsonTreeWriter53 = new com.google.gson.internal.bind.JsonTreeWriter(); com.google.gson.stream.JsonWriter jsonWriter55 = jsonTreeWriter53.value(false); com.google.gson.stream.JsonWriter jsonWriter56 = jsonTreeWriter53.nullValue(); com.google.gson.stream.JsonWriter jsonWriter58 = jsonTreeWriter53.value(false); com.google.gson.JsonElement jsonElement59 = jsonTreeWriter53.get(); com.google.gson.internal.bind.JsonTreeReader jsonTreeReader60 = new com.google.gson.internal.bind.JsonTreeReader(jsonElement59); jsonTreeReader60.setLenient(true); java.lang.String str63 = jsonTreeReader60.toString(); java.lang.String str64 = jsonTreeReader60.getPath(); jsonTreeReader60.close(); try { java.util.Date date66 = defaultDateTypeAdapter2.read((com.google.gson.stream.JsonReader) jsonTreeReader60); } catch (java.lang.IllegalStateException e) { } }
Code: public Date read(JsonReader in) throws IOException { if (in.peek() != JsonToken.STRING) { throw new JsonParseException("The date should be a string value"); } Date date = deserializeToDate(in.nextString()); if (dateType == Date.class) { return date; } else if (dateType == Timestamp.class) { return new Timestamp(date.getTime()); } else if (dateType == java.sql.Date.class) { return new java.sql.Date(date.getTime()); } else { throw new AssertionError(); } }
tensor([[0.0125, 0.0063, 0.0167,  ..., 0.0147, 0.0057, 0.0057],
        [0.0106, 0.0058, 0.0163,  ..., 0.0164, 0.0040, 0.0040],
        [0.0084, 0.0045, 0.0139,  ..., 0.0158, 0.0044, 0.0044],
        ...,
        [0.0122, 0.0061, 0.0202,  ..., 0.0162, 0.0072, 0.0072],
        [0.0084, 0.0039, 0.0201,  ..., 0.0141, 0.0047, 0.0047],
        [0.0084, 0.0039, 0.0201,  ..., 0.0141, 0.0047, 0.0047]])