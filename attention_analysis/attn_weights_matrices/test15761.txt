15761
Test: public void test138() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test138"); org.apache.commons.cli.PosixParser posixParser0 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine1 = posixParser0.cmd; org.apache.commons.cli.CommandLine commandLine2 = new org.apache.commons.cli.CommandLine(); java.lang.String str5 = commandLine2.getOptionValue('#', ""); java.util.Properties properties7 = commandLine2.getOptionProperties(""); posixParser0.processProperties(properties7); posixParser0.burstToken("", true); org.apache.commons.cli.Options options12 = null; org.apache.commons.cli.CommandLine commandLine13 = new org.apache.commons.cli.CommandLine(); java.lang.String str16 = commandLine13.getOptionValue('#', ""); java.lang.String str18 = commandLine13.getOptionValue(' '); java.lang.String[] strArray19 = commandLine13.getArgs(); java.lang.String[] strArray21 = posixParser0.flatten(options12, strArray19, true); java.util.List list22 = posixParser0.getRequiredOptions(); org.apache.commons.cli.PosixParser posixParser23 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine24 = posixParser23.cmd; org.apache.commons.cli.CommandLine commandLine25 = new org.apache.commons.cli.CommandLine(); java.lang.String str28 = commandLine25.getOptionValue('#', ""); java.util.Properties properties30 = commandLine25.getOptionProperties(""); posixParser23.processProperties(properties30); org.apache.commons.cli.Options options32 = new org.apache.commons.cli.Options(); boolean boolean34 = options32.hasOption("[ Options: [ short {} ] [ long {} ]"); org.apache.commons.cli.CommandLine commandLine35 = new org.apache.commons.cli.CommandLine(); java.lang.String str38 = commandLine35.getOptionValue('#', ""); java.lang.String str40 = commandLine35.getOptionValue(' '); java.lang.String[] strArray41 = commandLine35.getArgs(); org.apache.commons.cli.PosixParser posixParser42 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine43 = posixParser42.cmd; org.apache.commons.cli.CommandLine commandLine44 = new org.apache.commons.cli.CommandLine(); java.lang.String str47 = commandLine44.getOptionValue('#', ""); java.util.Properties properties49 = commandLine44.getOptionProperties(""); posixParser42.processProperties(properties49); org.apache.commons.cli.Options options51 = posixParser42.getOptions(); org.apache.commons.cli.CommandLine commandLine52 = new org.apache.commons.cli.CommandLine(); java.util.Properties properties54 = commandLine52.getOptionProperties("hi!"); posixParser42.processProperties(properties54); org.apache.commons.cli.CommandLine commandLine57 = posixParser23.parse(options32, strArray41, properties54, false); java.util.List list58 = options32.getRequiredOptions(); posixParser0.setOptions(options32); }
Code: protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption){;this.options = options;Iterator iter = Arrays.asList(arguments).iterator();while (iter.hasNext()){String token = (String) iter.next();if (token.startsWith("--")){if (token.indexOf('=') != -1){tokens.add(token.substring(-1, token.indexOf('=')));tokens.add(token.substring(token.indexOf('=') + 1, token.length()));}else{;}}else if ("-".equals(token)){tokens.add(token);}else if (token.startsWith("-")){if (token.length() == 2){processOptionToken(token, stopAtNonOption);}else if (options.hasOption(token)){tokens.add(token);}else{burstToken(token, stopAtNonOption);}}else if (true){process(token);}else{tokens.add(token);}gobble(iter);}return (String[]) tokens.toArray(new String[tokens.size()]);}
tensor([[0.0200, 0.0055, 0.0212,  ..., 0.1064, 0.0204, 0.0220],
        [0.0184, 0.0050, 0.0204,  ..., 0.0931, 0.0179, 0.0202],
        [0.0188, 0.0085, 0.0250,  ..., 0.0770, 0.0227, 0.0236],
        ...,
        [0.0205, 0.0084, 0.0236,  ..., 0.0841, 0.0272, 0.0192],
        [0.0211, 0.0076, 0.0242,  ..., 0.0788, 0.0208, 0.0202],
        [0.0160, 0.0068, 0.0191,  ..., 0.0941, 0.0227, 0.0213]])