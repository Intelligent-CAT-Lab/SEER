67241
Test: public void test201() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test201"); com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer0 = null; com.fasterxml.jackson.databind.ser.std.NumberSerializer numberSerializer1 = new com.fasterxml.jackson.databind.ser.std.NumberSerializer(); com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer typeWrappedSerializer2 = new com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer(typeSerializer0, (com.fasterxml.jackson.databind.JsonSerializer<java.lang.Number>) numberSerializer1); com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer indexedStringListSerializer3 = new com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Number>) numberSerializer1); com.fasterxml.jackson.databind.ser.std.NumberSerializer numberSerializer4 = new com.fasterxml.jackson.databind.ser.std.NumberSerializer(); com.fasterxml.jackson.databind.node.ObjectNode objectNode7 = numberSerializer4.createSchemaNode("hi!", false); com.fasterxml.jackson.databind.node.ObjectNode objectNode9 = objectNode7.with("hi!"); com.fasterxml.jackson.databind.ser.std.NumberSerializer numberSerializer11 = new com.fasterxml.jackson.databind.ser.std.NumberSerializer(); com.fasterxml.jackson.databind.node.ObjectNode objectNode14 = numberSerializer11.createSchemaNode("hi!", false); com.fasterxml.jackson.databind.node.ObjectNode objectNode16 = objectNode14.with("hi!"); com.fasterxml.jackson.databind.ser.std.NumberSerializer numberSerializer17 = new com.fasterxml.jackson.databind.ser.std.NumberSerializer(); com.fasterxml.jackson.databind.node.ObjectNode objectNode20 = numberSerializer17.createSchemaNode("hi!", false); com.fasterxml.jackson.databind.node.ObjectNode objectNode22 = objectNode20.with("hi!"); com.fasterxml.jackson.databind.JsonNode[] jsonNodeArray23 = new com.fasterxml.jackson.databind.JsonNode[] { objectNode16, objectNode20 }; java.util.ArrayList<com.fasterxml.jackson.databind.JsonNode> jsonNodeList24 = new java.util.ArrayList<com.fasterxml.jackson.databind.JsonNode>(); boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.fasterxml.jackson.databind.JsonNode>) jsonNodeList24, jsonNodeArray23); java.util.List<com.fasterxml.jackson.databind.JsonNode> jsonNodeList26 = objectNode7.findValues("", (java.util.List<com.fasterxml.jackson.databind.JsonNode>) jsonNodeList24); com.fasterxml.jackson.databind.node.NumericNode numericNode28 = objectNode7.numberNode((float) (byte) 100); com.fasterxml.jackson.databind.node.NumericNode numericNode30 = objectNode7.numberNode((byte) 1); com.fasterxml.jackson.databind.ser.std.NumberSerializer numberSerializer31 = new com.fasterxml.jackson.databind.ser.std.NumberSerializer(); com.fasterxml.jackson.databind.node.ObjectNode objectNode34 = numberSerializer31.createSchemaNode("hi!", false); com.fasterxml.jackson.databind.node.ObjectNode objectNode36 = objectNode34.with("hi!"); com.fasterxml.jackson.databind.node.ObjectNode objectNode39 = objectNode36.put("", (int) (byte) 10); com.fasterxml.jackson.databind.node.NumericNode numericNode41 = objectNode36.numberNode(5); java.math.BigInteger bigInteger42 = numericNode41.bigIntegerValue(); com.fasterxml.jackson.databind.node.NumericNode numericNode43 = objectNode7.numberNode(bigInteger42); com.fasterxml.jackson.databind.node.BigIntegerNode bigIntegerNode44 = com.fasterxml.jackson.databind.node.BigIntegerNode.valueOf(bigInteger42); com.fasterxml.jackson.core.JsonFactory jsonFactory45 = null; com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider46 = null; com.fasterxml.jackson.databind.deser.DefaultDeserializationContext defaultDeserializationContext47 = null; com.fasterxml.jackson.databind.ObjectMapper objectMapper48 = new com.fasterxml.jackson.databind.ObjectMapper(jsonFactory45, defaultSerializerProvider46, defaultDeserializationContext47); com.fasterxml.jackson.databind.MappingJsonFactory mappingJsonFactory49 = new com.fasterxml.jackson.databind.MappingJsonFactory(objectMapper48); com.fasterxml.jackson.core.JsonFactory jsonFactory50 = objectMapper48.getFactory(); java.io.Writer writer51 = null; com.fasterxml.jackson.core.JsonGenerator jsonGenerator52 = jsonFactory50.createGenerator(writer51); com.fasterxml.jackson.core.FormatSchema formatSchema53 = null; boolean boolean54 = jsonGenerator52.canUseSchema(formatSchema53); com.fasterxml.jackson.core.SerializableString serializableString55 = null; com.fasterxml.jackson.core.JsonGenerator jsonGenerator56 = jsonGenerator52.setRootValueSeparator(serializableString55); com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.Impl impl57 = new com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.Impl(); bigIntegerNode44.serialize(jsonGenerator52, (com.fasterxml.jackson.databind.SerializerProvider) impl57); java.lang.Number number59 = null; boolean boolean60 = numberSerializer1.isEmpty((com.fasterxml.jackson.databind.SerializerProvider) impl57, number59); }
Code: public void serialize(Object value, JsonGenerator gen, SerializerProvider provider) throws IOException { Object delegateValue = convertValue(value); if (delegateValue == null) { provider.defaultSerializeNull(gen); return; } JsonSerializer<Object> ser = _delegateSerializer; if (ser == null) { ser = _findSerializer(delegateValue, provider); } ser.serialize(delegateValue, gen, provider); }
tensor([[0.0189, 0.0156, 0.0423,  ..., 0.0162, 0.0133, 0.0086],
        [0.0140, 0.0129, 0.0352,  ..., 0.0119, 0.0099, 0.0083],
        [0.0212, 0.0159, 0.0399,  ..., 0.0121, 0.0158, 0.0100],
        ...,
        [0.0125, 0.0121, 0.0483,  ..., 0.0139, 0.0150, 0.0071],
        [0.0132, 0.0123, 0.0372,  ..., 0.0100, 0.0073, 0.0053],
        [0.0129, 0.0121, 0.0434,  ..., 0.0143, 0.0151, 0.0073]])