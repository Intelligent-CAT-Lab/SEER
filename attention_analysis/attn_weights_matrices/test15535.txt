15535
Test: public void test0523() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0523"); org.apache.commons.cli.Option option4 = new org.apache.commons.cli.Option("", "hi!", false, "hi!"); option4.setDescription("hi!"); char char7 = option4.getValueSeparator(); int int8 = option4.getArgs(); option4.setRequired(true); org.apache.commons.cli.Option option12 = org.apache.commons.cli.OptionBuilder.create("arg"); int int13 = option12.getId(); boolean boolean14 = option4.equals((java.lang.Object) option12); org.apache.commons.cli.Option option19 = new org.apache.commons.cli.Option("arg", "arg", true, "arg"); boolean boolean20 = option19.hasValueSeparator(); option19.setValueSeparator('a'); java.lang.String str24 = option19.getValue("[ option: hi! :: arg :: [ option: hi! :: hi! ] ]"); boolean boolean25 = option12.equals((java.lang.Object) "[ option: hi! :: arg :: [ option: hi! :: hi! ] ]"); java.lang.String str26 = option12.getDescription(); }
Code: public static Option create(String opt) throws IllegalArgumentException { Option option = null; try { option = new Option(opt, description); option.setLongOpt(longopt); option.setRequired(required); option.setOptionalArg(optionalArg); option.setArgs(numberOfArgs); option.setType(type); option.setValueSeparator(valuesep); option.setArgName(argName); } finally { OptionBuilder.reset(); } return option; }
tensor([[0.0173, 0.0538, 0.0483,  ..., 0.0192, 0.0336, 0.0076],
        [0.0186, 0.0490, 0.0420,  ..., 0.0176, 0.0368, 0.0088],
        [0.0150, 0.0578, 0.0388,  ..., 0.0218, 0.0288, 0.0064],
        ...,
        [0.0114, 0.0535, 0.0516,  ..., 0.0164, 0.0313, 0.0062],
        [0.0175, 0.0506, 0.0489,  ..., 0.0204, 0.0313, 0.0058],
        [0.0126, 0.0506, 0.0360,  ..., 0.0269, 0.0303, 0.0066]])