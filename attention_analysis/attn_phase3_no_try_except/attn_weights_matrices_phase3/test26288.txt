26288
Test: public void test122() throws Throwable { Precision.DoubleEquivalence precision_DoubleEquivalence0 = mock(Precision.DoubleEquivalence.class, new ViolatedAssumptionAnswer()); doReturn((-980.43904926), (-980.43904926)).when(precision_DoubleEquivalence0).signum(anyDouble()); Interval interval0 = Interval.of(1338.1161294, (-980.43904926), precision_DoubleEquivalence0); boolean boolean0 = interval0.contains(Double.POSITIVE_INFINITY); }
Code: public boolean contains(final double x) { return classify(x) != RegionLocation.OUTSIDE; }
[[0.06855704 0.1608128  0.09511612 0.11715847 0.11965257 0.10159943
 0.07670778 0.09511612 0.0387247  0.09511614 0.03143886]
[0.04781412 0.22580037 0.08964366 0.08297543 0.10708184 0.1339096
 0.08333527 0.08964366 0.02571896 0.08964367 0.02443341]
[0.05462106 0.18784812 0.08851507 0.10033068 0.1514674  0.10124099
 0.06668137 0.08851507 0.03891124 0.08851509 0.0333539 ]
[0.05116547 0.19075856 0.08784273 0.10471067 0.13743372 0.11053873
 0.08387539 0.08784273 0.03050657 0.08784275 0.02748266]
[0.06581773 0.18061537 0.08181117 0.10346589 0.15240562 0.11364526
 0.07258301 0.08181117 0.036916   0.08181119 0.02911757]
[0.06975006 0.1388661  0.0858748  0.09206338 0.14501911 0.12447743
 0.07866107 0.0858748  0.05161596 0.08587482 0.04192244]
[0.04669809 0.2093191  0.08796575 0.09491388 0.15993749 0.10179047
 0.06599745 0.08796575 0.03008327 0.08796577 0.02736303]
[0.05462106 0.18784812 0.08851507 0.10033068 0.1514674  0.10124099
 0.06668137 0.08851507 0.03891124 0.08851509 0.0333539 ]
[0.04988604 0.2000053  0.08816117 0.10066249 0.12079231 0.1438516
 0.07289081 0.08816117 0.02354353 0.08816119 0.0238844 ]
[0.05462107 0.18784812 0.08851507 0.10033067 0.1514674  0.10124099
 0.06668137 0.08851507 0.03891123 0.08851507 0.0333539 ]
[0.04820405 0.15866163 0.08751198 0.11533429 0.10036422 0.13910139
 0.10967874 0.08751198 0.03691939 0.087512   0.02920033]]