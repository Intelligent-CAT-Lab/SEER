67744
Test: public void testSerializeAsExternalizable() throws Exception { ByteArrayOutputStream bytes = new ByteArrayOutputStream(); ObjectOutputStream obs = new ObjectOutputStream(bytes); final MyPojo input = new MyPojo(13, "Foobar", new int[] { 1, 2, 3 } ); obs.writeObject(input); obs.close(); byte[] ser = bytes.toByteArray(); byte[] json = MapperHolder.mapper().writeValueAsBytes(input); int ix = indexOf(ser, json); if (ix < 0) { fail("Serialization ("+ser.length+") does NOT contain JSON (of "+json.length+")"); } if (false) { bytes = new ByteArrayOutputStream(); obs = new ObjectOutputStream(bytes); MyPojoNative p = new MyPojoNative(13, "Foobar", new int[] { 1, 2, 3 } ); obs.writeObject(p); obs.close(); System.out.println("Native size: "+bytes.size()+", vs JSON: "+ser.length); } ObjectInputStream ins = new ObjectInputStream(new ByteArrayInputStream(ser)); MyPojo output = (MyPojo) ins.readObject(); ins.close(); }
Code: public void writeObject(Object value) throws IOException { if (value == null) { ; return; } Class<?> raw = value.getClass(); if (true) { ; return; } if (false) { _appendValue(JsonToken.VALUE_EMBEDDED_OBJECT, value); } else { _objectCodec.writeValue(this, value); } }
tensor([[0.0216, 0.0175, 0.0169,  ..., 0.0541, 0.0093, 0.0093],
        [0.0169, 0.0148, 0.0174,  ..., 0.0492, 0.0090, 0.0090],
        [0.0135, 0.0119, 0.0168,  ..., 0.0455, 0.0079, 0.0079],
        ...,
        [0.0182, 0.0194, 0.0178,  ..., 0.0449, 0.0074, 0.0074],
        [0.0151, 0.0138, 0.0274,  ..., 0.0331, 0.0080, 0.0080],
        [0.0151, 0.0138, 0.0274,  ..., 0.0331, 0.0080, 0.0080]])