15578
Test: public void test072() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test072"); org.apache.commons.cli.PosixParser posixParser0 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine1 = posixParser0.cmd; org.apache.commons.cli.CommandLine commandLine2 = new org.apache.commons.cli.CommandLine(); java.lang.String str5 = commandLine2.getOptionValue('#', ""); java.util.Properties properties7 = commandLine2.getOptionProperties(""); posixParser0.processProperties(properties7); org.apache.commons.cli.Options options9 = posixParser0.getOptions(); java.util.List list10 = posixParser0.getRequiredOptions(); java.util.List list11 = posixParser0.getRequiredOptions(); java.util.List list12 = posixParser0.getRequiredOptions(); org.apache.commons.cli.CommandLine commandLine13 = new org.apache.commons.cli.CommandLine(); java.lang.String str16 = commandLine13.getOptionValue('#', ""); java.util.Properties properties18 = commandLine13.getOptionProperties(""); posixParser0.processProperties(properties18); org.apache.commons.cli.CommandLine commandLine20 = posixParser0.cmd; org.apache.commons.cli.Options options21 = new org.apache.commons.cli.Options(); org.apache.commons.cli.PosixParser posixParser22 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine23 = posixParser22.cmd; org.apache.commons.cli.CommandLine commandLine24 = new org.apache.commons.cli.CommandLine(); java.lang.String str27 = commandLine24.getOptionValue('#', ""); java.util.Properties properties29 = commandLine24.getOptionProperties(""); posixParser22.processProperties(properties29); posixParser22.burstToken("", true); org.apache.commons.cli.Options options34 = null; org.apache.commons.cli.CommandLine commandLine35 = new org.apache.commons.cli.CommandLine(); java.lang.String str38 = commandLine35.getOptionValue('#', ""); java.lang.String str40 = commandLine35.getOptionValue(' '); java.lang.String[] strArray41 = commandLine35.getArgs(); java.lang.String[] strArray43 = posixParser22.flatten(options34, strArray41, true); java.util.Properties properties44 = null; org.apache.commons.cli.CommandLine commandLine46 = posixParser0.parse(options21, strArray43, properties44, false); org.apache.commons.cli.Option option48 = options21.getOption("[ Options: [ short {} ] [ long {} ]"); }
Code: protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption) { init(); this.options = options; Iterator iter = Arrays.asList(arguments).iterator(); while (iter.hasNext()) { String token = (String) iter.next(); if (token.startsWith("--")) { int pos = token.indexOf('='); String opt = pos == -1 ? token : token.substring(0, pos); if (!options.hasOption(opt) && stopAtNonOption) { process(token); } else { tokens.add(opt); if (pos != -1) { tokens.add(token.substring(pos + 1)); } } } else if ("-".equals(token)) { tokens.add(token); } else if (token.startsWith("-")) { if (token.length() == 2) { processOptionToken(token, stopAtNonOption); } else if (options.hasOption(token)) { tokens.add(token); } else { burstToken(token, stopAtNonOption); } } else if (stopAtNonOption) { process(token); } else { tokens.add(token); } gobble(iter); } return (String[]) tokens.toArray(new String[tokens.size()]); }
tensor([[0.0098, 0.0024, 0.0103,  ..., 0.0096, 0.0063, 0.0021],
        [0.0088, 0.0022, 0.0098,  ..., 0.0082, 0.0067, 0.0022],
        [0.0083, 0.0036, 0.0110,  ..., 0.0098, 0.0064, 0.0028],
        ...,
        [0.0094, 0.0033, 0.0107,  ..., 0.0091, 0.0064, 0.0025],
        [0.0095, 0.0018, 0.0134,  ..., 0.0116, 0.0078, 0.0018],
        [0.0092, 0.0022, 0.0094,  ..., 0.0120, 0.0070, 0.0023]])