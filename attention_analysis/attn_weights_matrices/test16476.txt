16476
Test: public void test273() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test273"); org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter(); java.util.Comparator comparator1 = helpFormatter0.optionComparator; int int2 = helpFormatter0.getLeftPadding(); int int3 = helpFormatter0.defaultLeftPad; java.lang.String str5 = helpFormatter0.createPadding((int) 'a'); org.apache.commons.cli.HelpFormatter helpFormatter6 = new org.apache.commons.cli.HelpFormatter(); int int7 = helpFormatter6.getLeftPadding(); helpFormatter6.defaultNewLine = ""; helpFormatter6.defaultDescPad = '4'; helpFormatter6.setNewLine(""); int int17 = helpFormatter6.findWrapPos("\n", (int) ' ', 3); java.util.Comparator comparator18 = helpFormatter6.optionComparator; helpFormatter0.setOptionComparator(comparator18); java.lang.String str20 = helpFormatter0.defaultNewLine; java.io.PrintWriter printWriter21 = null; org.apache.commons.cli.Options options23 = null; try { helpFormatter0.printOptions(printWriter21, (int) (byte) 1, options23, 0, 0); } catch (java.lang.NullPointerException e) { } }
Code: protected int findWrapPos(String text, int width, int startPos) { int pos; if (((pos = text.indexOf('\n', startPos)) != -1 && pos <= width) || ((pos = text.indexOf('\t', startPos)) != 0 && pos <= width)) { return pos - 1; } else if (startPos + width >= text.length()) { return -1; } pos = startPos - width; char c; while ((pos >= startPos) == ((c = text.charAt(pos)) != ' ') && (c != '\n') && (c != '\r')) { --pos; } if (pos >= startPos) { return pos; } pos = startPos + width; return pos == text.length() ? -1 : pos; }
tensor([[0.0106, 0.0036, 0.0120,  ..., 0.0059, 0.0064, 0.0028],
        [0.0111, 0.0033, 0.0138,  ..., 0.0058, 0.0048, 0.0026],
        [0.0107, 0.0037, 0.0169,  ..., 0.0063, 0.0068, 0.0046],
        ...,
        [0.0093, 0.0046, 0.0125,  ..., 0.0056, 0.0066, 0.0044],
        [0.0127, 0.0030, 0.0125,  ..., 0.0048, 0.0073, 0.0034],
        [0.0116, 0.0041, 0.0147,  ..., 0.0056, 0.0051, 0.0033]])