63050
Test: public void test736() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test736"); com.google.gson.DefaultDateTypeAdapter defaultDateTypeAdapter2 = new com.google.gson.DefaultDateTypeAdapter((int) (byte) 0, 0); com.google.gson.internal.bind.JsonTreeWriter jsonTreeWriter3 = new com.google.gson.internal.bind.JsonTreeWriter(); com.google.gson.stream.JsonWriter jsonWriter5 = jsonTreeWriter3.value(false); boolean boolean6 = jsonWriter5.getSerializeNulls(); com.google.gson.stream.JsonWriter jsonWriter8 = jsonWriter5.value("$"); java.util.Date date9 = null; defaultDateTypeAdapter2.write(jsonWriter8, date9); java.lang.String str11 = defaultDateTypeAdapter2.toString(); java.lang.String str12 = defaultDateTypeAdapter2.toString(); java.lang.String str13 = defaultDateTypeAdapter2.toString(); com.google.gson.internal.bind.JsonTreeWriter jsonTreeWriter14 = new com.google.gson.internal.bind.JsonTreeWriter(); com.google.gson.stream.JsonWriter jsonWriter16 = jsonTreeWriter14.value(false); com.google.gson.stream.JsonWriter jsonWriter17 = jsonTreeWriter14.nullValue(); com.google.gson.stream.JsonWriter jsonWriter19 = jsonTreeWriter14.value((double) (short) 1); com.google.gson.JsonElement jsonElement20 = jsonTreeWriter14.get(); com.google.gson.stream.JsonWriter jsonWriter21 = jsonTreeWriter14.beginArray(); com.google.gson.stream.JsonWriter jsonWriter23 = jsonTreeWriter14.value((long) 100); com.google.gson.stream.JsonWriter jsonWriter24 = jsonTreeWriter14.nullValue(); com.google.gson.stream.JsonWriter jsonWriter25 = jsonTreeWriter14.endArray(); jsonTreeWriter14.setSerializeNulls(false); com.google.gson.stream.JsonWriter jsonWriter29 = jsonTreeWriter14.value((java.lang.Number) 1.0d); java.util.Date date30 = null; defaultDateTypeAdapter2.write(jsonWriter29, date30); java.lang.String str32 = defaultDateTypeAdapter2.toString(); java.util.Date date33 = null; com.google.gson.JsonElement jsonElement34 = defaultDateTypeAdapter2.toJsonTree(date33); com.google.gson.internal.bind.JsonTreeWriter jsonTreeWriter35 = new com.google.gson.internal.bind.JsonTreeWriter(); com.google.gson.stream.JsonWriter jsonWriter37 = jsonTreeWriter35.value(false); com.google.gson.stream.JsonWriter jsonWriter38 = jsonTreeWriter35.nullValue(); com.google.gson.stream.JsonWriter jsonWriter40 = jsonTreeWriter35.value(false); com.google.gson.JsonElement jsonElement41 = jsonTreeWriter35.get(); com.google.gson.internal.bind.JsonTreeReader jsonTreeReader42 = new com.google.gson.internal.bind.JsonTreeReader(jsonElement41); jsonTreeReader42.skipValue(); com.google.gson.stream.JsonToken jsonToken44 = jsonTreeReader42.peek(); try { java.util.Date date45 = defaultDateTypeAdapter2.read((com.google.gson.stream.JsonReader) jsonTreeReader42); } catch (java.lang.IllegalStateException e) { } }
Code: public Date read(JsonReader in) throws IOException { if (in.peek() != JsonToken.STRING) { throw new JsonParseException("The date should be a string value"); } Date date = deserializeToDate(in.nextString()); if (dateType == Date.class) { return date; } else if (dateType == Timestamp.class) { return new Timestamp(date.getTime()); } else if (dateType == java.sql.Date.class) { return new java.sql.Date(date.getTime()); } else { throw new AssertionError(); } }
tensor([[0.0125, 0.0063, 0.0167,  ..., 0.0147, 0.0057, 0.0057],
        [0.0106, 0.0058, 0.0163,  ..., 0.0164, 0.0040, 0.0040],
        [0.0084, 0.0045, 0.0139,  ..., 0.0158, 0.0044, 0.0044],
        ...,
        [0.0122, 0.0061, 0.0202,  ..., 0.0162, 0.0072, 0.0072],
        [0.0084, 0.0039, 0.0201,  ..., 0.0141, 0.0047, 0.0047],
        [0.0084, 0.0039, 0.0201,  ..., 0.0141, 0.0047, 0.0047]])