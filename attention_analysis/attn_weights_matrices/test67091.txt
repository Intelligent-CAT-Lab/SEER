67091
Test: public void testNumberOverflowLong() throws IOException { try (TokenBuffer buf = new TokenBuffer(null, false)) { BigInteger big = BigInteger.valueOf(Long.MAX_VALUE).add(BigInteger.ONE); buf.writeNumber(big); try (JsonParser p = buf.asParser()) { try { p.getLongValue(); fail("Expected failure for `long` overflow"); } catch (InputCoercionException e) { verifyException(e, "Numeric value ("+big+") out of range of long"); } } } }
Code: public long getLongValue() throws IOException { final NumericNode node = (NumericNode) currentNumericNode(); return node.longValue(); }
[[0.04388259 0.06822045 0.0675187  0.09393058 0.02620762 0.07223849
 0.0370329  0.13938928 0.20401825 0.02848805 0.01476519 0.04241351
 0.04998975 0.09020443 0.02170025]
[0.02649609 0.04689516 0.07509932 0.10171404 0.02540291 0.08523414
 0.02793729 0.17833984 0.233099   0.02081554 0.00840107 0.02991327
 0.03847548 0.08313076 0.01904603]
[0.03702595 0.04789511 0.08163525 0.10536109 0.02423176 0.08933431
 0.03057011 0.12458092 0.2515255  0.0231162  0.01145283 0.04433997
 0.04357615 0.06875437 0.0166005 ]
[0.02687771 0.04699977 0.0606406  0.10994811 0.02118251 0.0857216
 0.02380848 0.1392406  0.27941635 0.0251031  0.00783028 0.03409833
 0.04785033 0.07585187 0.01543039]
[0.02983335 0.05423055 0.06766114 0.11062856 0.02093846 0.07077211
 0.02945012 0.13805744 0.24594049 0.02489805 0.00992859 0.03466456
 0.0469602  0.1023473  0.01368904]
[0.04551311 0.06616932 0.06316459 0.07798064 0.03243    0.08436082
 0.04513205 0.11973429 0.20066628 0.03839625 0.01781562 0.04380995
 0.05091774 0.08594856 0.02796076]
[0.04045608 0.05325045 0.06339831 0.09402395 0.02847075 0.08110967
 0.02834196 0.1674604  0.21472773 0.03107845 0.0100368  0.03984498
 0.05917695 0.07328416 0.01533937]
[0.03530098 0.04955849 0.07029919 0.10951717 0.02476756 0.08029111
 0.03465246 0.13946086 0.22171992 0.02368873 0.01516552 0.04128724
 0.04112779 0.09393304 0.01922991]
[0.02960675 0.05316253 0.07767    0.12623313 0.02654424 0.07417528
 0.02814599 0.15057245 0.21686713 0.02771998 0.01150478 0.03145117
 0.04401595 0.0865019  0.01582876]
[0.0544754  0.06699995 0.0892747  0.08289797 0.03585548 0.06415354
 0.04597914 0.12228023 0.13320558 0.04592271 0.02713925 0.06011496
 0.06029208 0.08407669 0.02733234]
[0.02831328 0.05225092 0.06118711 0.11102092 0.02338577 0.07713694
 0.03384251 0.15973574 0.20862341 0.02293467 0.01109603 0.03310824
 0.05617607 0.10811897 0.01306942]
[0.04190226 0.05492395 0.0730107  0.10244858 0.02928011 0.05835941
 0.03752795 0.1542035  0.20022747 0.02850698 0.01236544 0.04139001
 0.04509667 0.09794566 0.02281131]
[0.02804395 0.060982   0.06620007 0.08637749 0.02612358 0.06843903
 0.02756149 0.15779884 0.26850373 0.02824743 0.00932449 0.0435647
 0.0383795  0.07238881 0.01806488]
[0.03951507 0.04982078 0.07468392 0.08988315 0.02405869 0.09067807
 0.02683774 0.16795012 0.2417502  0.02487861 0.00724152 0.03730571
 0.04257653 0.06692736 0.01589255]
[0.02859816 0.04648434 0.07537428 0.11939421 0.02562417 0.08735356
 0.02691969 0.1542524  0.19706598 0.02736525 0.01018386 0.03449614
 0.06646518 0.08229269 0.01813011]]