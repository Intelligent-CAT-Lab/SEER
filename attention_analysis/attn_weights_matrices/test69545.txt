69545
Test: public void test757() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test757"); org.jsoup.nodes.Document document2 = org.jsoup.Jsoup.parse("", "hi!"); document2.ensureChildNodes(); java.util.regex.Pattern pattern5 = null; org.jsoup.select.Elements elements6 = document2.getElementsByAttributeValueMatching("hi!", pattern5); java.util.regex.Pattern pattern8 = null; org.jsoup.select.Elements elements9 = document2.getElementsByAttributeValueMatching("", pattern8); org.jsoup.nodes.Attributes attributes10 = document2.attributes(); java.util.Spliterator<org.jsoup.nodes.Attribute> attributeSpliterator11 = attributes10.spliterator(); java.lang.Appendable appendable12 = null; org.jsoup.nodes.Document document15 = org.jsoup.Jsoup.parse("", "hi!"); document15.ensureChildNodes(); java.util.regex.Pattern pattern18 = null; org.jsoup.select.Elements elements19 = document15.getElementsByAttributeValueMatching("hi!", pattern18); java.util.regex.Pattern pattern21 = null; org.jsoup.select.Elements elements22 = document15.getElementsByAttributeValueMatching("", pattern21); org.jsoup.nodes.Element element23 = document15.nextElementSibling(); org.jsoup.select.Elements elements25 = document15.getElementsByIndexGreaterThan((int) (short) 1); org.jsoup.nodes.Document document28 = org.jsoup.Jsoup.parse("", "hi!"); boolean boolean30 = document28.hasAttr("hi!"); org.jsoup.nodes.Document.OutputSettings outputSettings31 = document28.getOutputSettings(); org.jsoup.nodes.Document document32 = document15.outputSettings(outputSettings31); attributes10.html(appendable12, outputSettings31); java.util.Iterator<org.jsoup.nodes.Attribute> attributeItor34 = attributes10.iterator(); org.jsoup.nodes.Document document37 = org.jsoup.Jsoup.parse("", "hi!"); document37.ensureChildNodes(); java.util.regex.Pattern pattern40 = null; org.jsoup.select.Elements elements41 = document37.getElementsByAttributeValueMatching("hi!", pattern40); java.util.regex.Pattern pattern43 = null; org.jsoup.select.Elements elements44 = document37.getElementsByAttributeValueMatching("", pattern43); org.jsoup.nodes.Attributes attributes45 = document37.attributes(); java.util.Spliterator<org.jsoup.nodes.Attribute> attributeSpliterator46 = attributes45.spliterator(); java.util.List<org.jsoup.nodes.Attribute> attributeList47 = attributes45.asList(); attributes10.addAll(attributes45); org.jsoup.nodes.Document document51 = org.jsoup.Jsoup.parse("", "hi!"); document51.ensureChildNodes(); java.util.regex.Pattern pattern54 = null; org.jsoup.select.Elements elements55 = document51.getElementsByAttributeValueMatching("hi!", pattern54); java.util.regex.Pattern pattern57 = null; org.jsoup.select.Elements elements58 = document51.getElementsByAttributeValueMatching("", pattern57); org.jsoup.nodes.Attributes attributes59 = document51.attributes(); java.util.Spliterator<org.jsoup.nodes.Attribute> attributeSpliterator60 = attributes59.spliterator(); java.lang.Appendable appendable61 = null; org.jsoup.nodes.Document document64 = org.jsoup.Jsoup.parse("", "hi!"); document64.ensureChildNodes(); java.util.regex.Pattern pattern67 = null; org.jsoup.select.Elements elements68 = document64.getElementsByAttributeValueMatching("hi!", pattern67); java.util.regex.Pattern pattern70 = null; org.jsoup.select.Elements elements71 = document64.getElementsByAttributeValueMatching("", pattern70); org.jsoup.nodes.Element element72 = document64.nextElementSibling(); org.jsoup.select.Elements elements74 = document64.getElementsByIndexGreaterThan((int) (short) 1); org.jsoup.nodes.Document document77 = org.jsoup.Jsoup.parse("", "hi!"); boolean boolean79 = document77.hasAttr("hi!"); org.jsoup.nodes.Document.OutputSettings outputSettings80 = document77.getOutputSettings(); org.jsoup.nodes.Document document81 = document64.outputSettings(outputSettings80); attributes59.html(appendable61, outputSettings80); java.lang.String str84 = attributes59.get("#document"); java.lang.String str86 = attributes59.getIgnoreCase("*"); java.lang.String str87 = attributes59.toString(); attributes45.addAll(attributes59); attributes45.removeIgnoreCase("<html>\n <head></head>\n <body></body>\n</html>"); org.jsoup.nodes.Attributes attributes91 = attributes45.clone(); }
Code: public void removeIgnoreCase(String key){;if (attributes == null)return;for (Iterator<String> it = attributes.keySet().iterator(); it.hasNext(); ) {String attrKey = it.next();if (attrKey.equalsIgnoreCase(key));}}
tensor([[0.0402, 0.0342, 0.1274, 0.0709, 0.0468, 0.0597, 0.0925, 0.0275, 0.0533,
         0.0261, 0.0502, 0.0563, 0.0812, 0.0682, 0.0446, 0.0261, 0.0573, 0.0372],
        [0.0313, 0.0322, 0.2302, 0.0670, 0.0345, 0.0419, 0.0792, 0.0159, 0.0448,
         0.0293, 0.0348, 0.0611, 0.0991, 0.0587, 0.0296, 0.0293, 0.0465, 0.0347],
        [0.0310, 0.0286, 0.1860, 0.0702, 0.0402, 0.0495, 0.0801, 0.0248, 0.0512,
         0.0283, 0.0355, 0.0499, 0.0935, 0.0637, 0.0347, 0.0283, 0.0596, 0.0447],
        [0.0350, 0.0267, 0.1845, 0.0942, 0.0324, 0.0581, 0.1036, 0.0197, 0.0440,
         0.0228, 0.0342, 0.0624, 0.0861, 0.0552, 0.0326, 0.0228, 0.0516, 0.0342],
        [0.0290, 0.0259, 0.1569, 0.0692, 0.0407, 0.0541, 0.1026, 0.0233, 0.0564,
         0.0301, 0.0444, 0.0470, 0.0849, 0.0711, 0.0387, 0.0301, 0.0559, 0.0399],
        [0.0234, 0.0305, 0.2368, 0.0686, 0.0357, 0.0535, 0.0869, 0.0174, 0.0512,
         0.0258, 0.0324, 0.0523, 0.0885, 0.0592, 0.0280, 0.0258, 0.0462, 0.0379],
        [0.0352, 0.0294, 0.1450, 0.0729, 0.0404, 0.0601, 0.0954, 0.0252, 0.0549,
         0.0276, 0.0420, 0.0578, 0.0709, 0.0733, 0.0379, 0.0276, 0.0615, 0.0432],
        [0.0422, 0.0350, 0.1411, 0.0632, 0.0396, 0.0612, 0.0873, 0.0275, 0.0583,
         0.0334, 0.0502, 0.0396, 0.0783, 0.0699, 0.0395, 0.0334, 0.0577, 0.0426],
        [0.0331, 0.0297, 0.1706, 0.0626, 0.0397, 0.0550, 0.0979, 0.0203, 0.0602,
         0.0247, 0.0436, 0.0605, 0.0819, 0.0684, 0.0412, 0.0247, 0.0508, 0.0350],
        [0.0486, 0.0408, 0.1145, 0.0634, 0.0392, 0.0532, 0.0803, 0.0344, 0.0524,
         0.0420, 0.0455, 0.0378, 0.0755, 0.0812, 0.0532, 0.0420, 0.0513, 0.0449],
        [0.0318, 0.0293, 0.1696, 0.0557, 0.0442, 0.0545, 0.1138, 0.0276, 0.0456,
         0.0279, 0.0379, 0.0553, 0.0788, 0.0629, 0.0426, 0.0279, 0.0593, 0.0354],
        [0.0341, 0.0282, 0.1882, 0.0629, 0.0475, 0.0466, 0.1023, 0.0200, 0.0548,
         0.0258, 0.0321, 0.0567, 0.0809, 0.0620, 0.0360, 0.0258, 0.0577, 0.0386],
        [0.0401, 0.0429, 0.1705, 0.0756, 0.0361, 0.0512, 0.0801, 0.0218, 0.0470,
         0.0287, 0.0499, 0.0378, 0.0730, 0.0762, 0.0497, 0.0287, 0.0559, 0.0346],
        [0.0394, 0.0315, 0.1230, 0.0696, 0.0468, 0.0570, 0.0870, 0.0242, 0.0494,
         0.0344, 0.0472, 0.0487, 0.0840, 0.0784, 0.0422, 0.0344, 0.0609, 0.0418],
        [0.0334, 0.0259, 0.1422, 0.0607, 0.0494, 0.0544, 0.0900, 0.0219, 0.0490,
         0.0333, 0.0465, 0.0599, 0.0826, 0.0771, 0.0359, 0.0333, 0.0645, 0.0399],
        [0.0486, 0.0408, 0.1145, 0.0634, 0.0392, 0.0532, 0.0803, 0.0344, 0.0524,
         0.0420, 0.0455, 0.0378, 0.0755, 0.0812, 0.0532, 0.0420, 0.0513, 0.0449],
        [0.0284, 0.0286, 0.1697, 0.0626, 0.0443, 0.0475, 0.0939, 0.0217, 0.0584,
         0.0253, 0.0403, 0.0662, 0.1032, 0.0573, 0.0370, 0.0253, 0.0523, 0.0381],
        [0.0506, 0.0362, 0.1306, 0.0469, 0.0506, 0.0561, 0.0770, 0.0300, 0.0538,
         0.0365, 0.0520, 0.0563, 0.0689, 0.0681, 0.0435, 0.0365, 0.0635, 0.0428]])