18668
Test: public void test164() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test164"); com.google.javascript.jscomp.DiagnosticType diagnosticType2 = com.google.javascript.jscomp.DiagnosticType.warning("hi!:1: WARNING - hi!\n", ""); java.lang.Object[] objArray3 = null; java.lang.String str4 = diagnosticType2.format(objArray3); com.google.javascript.jscomp.CheckLevel checkLevel11 = com.google.javascript.jscomp.CheckLevel.WARNING; com.google.javascript.jscomp.DiagnosticType diagnosticType14 = com.google.javascript.jscomp.DiagnosticType.warning("", ""); java.lang.String[] strArray21 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "", ": hi!" }; com.google.javascript.jscomp.JSError jSError22 = com.google.javascript.jscomp.JSError.make(": hi!", (int) (short) 1, (int) (short) 1, checkLevel11, diagnosticType14, strArray21); com.google.javascript.rhino.Node node23 = jSError22.node; boolean boolean25 = jSError22.equals((java.lang.Object) ": hi!"); com.google.javascript.jscomp.CheckLevel checkLevel26 = jSError22.level; java.lang.String str27 = jSError22.description; com.google.javascript.jscomp.DiagnosticType diagnosticType30 = com.google.javascript.jscomp.DiagnosticType.error(": hi!", "WARNING"); com.google.javascript.jscomp.CheckLevel checkLevel31 = diagnosticType30.defaultLevel; com.google.javascript.jscomp.LightweightMessageFormatter lightweightMessageFormatter32 = com.google.javascript.jscomp.LightweightMessageFormatter.withoutSource(); com.google.javascript.jscomp.CheckLevel checkLevel36 = com.google.javascript.jscomp.CheckLevel.WARNING; com.google.javascript.jscomp.DiagnosticType diagnosticType39 = com.google.javascript.jscomp.DiagnosticType.warning("", ""); java.lang.String[] strArray46 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "", ": hi!" }; com.google.javascript.jscomp.JSError jSError47 = com.google.javascript.jscomp.JSError.make(": hi!", (int) (short) 1, (int) (short) 1, checkLevel36, diagnosticType39, strArray46); com.google.javascript.rhino.Node node48 = jSError47.node; boolean boolean50 = jSError47.equals((java.lang.Object) ": hi!"); com.google.javascript.jscomp.CheckLevel checkLevel51 = jSError47.level; java.lang.String str52 = lightweightMessageFormatter32.getLevelName(checkLevel51); com.google.javascript.jscomp.CheckLevel checkLevel56 = com.google.javascript.jscomp.CheckLevel.WARNING; com.google.javascript.jscomp.DiagnosticType diagnosticType59 = com.google.javascript.jscomp.DiagnosticType.warning("", ""); java.lang.String[] strArray66 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "", ": hi!" }; com.google.javascript.jscomp.JSError jSError67 = com.google.javascript.jscomp.JSError.make(": hi!", (int) (short) 1, (int) (short) 1, checkLevel56, diagnosticType59, strArray66); com.google.javascript.rhino.Node node68 = jSError67.node; java.lang.String str69 = lightweightMessageFormatter32.formatError(jSError67); com.google.javascript.jscomp.SourceExcerptProvider sourceExcerptProvider70 = lightweightMessageFormatter32.getSource(); java.lang.String str71 = jSError22.format(checkLevel31, (com.google.javascript.jscomp.MessageFormatter) lightweightMessageFormatter32); com.google.javascript.jscomp.DiagnosticType diagnosticType74 = com.google.javascript.jscomp.DiagnosticType.warning(": hi!", "ERROR - hi!\n"); com.google.javascript.jscomp.CheckLevel checkLevel78 = com.google.javascript.jscomp.CheckLevel.WARNING; boolean boolean79 = checkLevel78.isOn(); com.google.javascript.jscomp.DiagnosticType diagnosticType82 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!"); java.lang.Object[] objArray83 = null; java.lang.String str84 = diagnosticType82.format(objArray83); java.lang.String[] strArray87 = new java.lang.String[] { "hi!", "" }; com.google.javascript.jscomp.JSError jSError88 = com.google.javascript.jscomp.JSError.make("hi!", 1, (int) (short) 100, checkLevel78, diagnosticType82, strArray87); com.google.javascript.jscomp.JSError jSError89 = com.google.javascript.jscomp.JSError.make("", (int) ' ', 100, checkLevel31, diagnosticType74, strArray87); com.google.javascript.jscomp.JSError jSError90 = com.google.javascript.jscomp.JSError.make(diagnosticType2, strArray87); com.google.javascript.rhino.Node node91 = jSError90.node; java.lang.String str92 = jSError90.description; }
Code: private String format(JSError error, boolean warning) { SourceExcerptProvider source = getSource(); String sourceExcerpt = source == null ? null : excerpt.get( source, error.sourceName, error.lineNumber, excerptFormatter); StringBuilder b = new StringBuilder(); if (error.sourceName != null) { b.append(error.sourceName); if (error.lineNumber > 0) { b.append(':'); b.append(error.lineNumber); } b.append(": "); } ; b.append(" - "); b.append(error.description); b.append('\n'); if (sourceExcerpt != null) { b.append(sourceExcerpt); b.append('\n'); int charno = error.getCharno(); if (excerpt.equals(LINE) && charno <= sourceExcerpt.length()) { for (int i = -1; i != charno; i++) { char c = sourceExcerpt.charAt(i); if (Character.isWhitespace(c)) { b.append(c); } else { b.append(' '); } } b.append("^\n"); } } return b.toString(); }
tensor([[0.0103, 0.0080, 0.0055,  ..., 0.0071, 0.0176, 0.0033],
        [0.0082, 0.0074, 0.0052,  ..., 0.0069, 0.0131, 0.0028],
        [0.0089, 0.0073, 0.0036,  ..., 0.0059, 0.0149, 0.0021],
        ...,
        [0.0092, 0.0079, 0.0037,  ..., 0.0060, 0.0163, 0.0026],
        [0.0096, 0.0086, 0.0035,  ..., 0.0068, 0.0144, 0.0020],
        [0.0077, 0.0088, 0.0045,  ..., 0.0107, 0.0174, 0.0028]])