24523
Test: public void test59() throws Throwable { Point1S point1S0 = Point1S.PI; Precision.DoubleEquivalence precision_DoubleEquivalence0 = mock(Precision.DoubleEquivalence.class, new ViolatedAssumptionAnswer()); CutAngle cutAngle0 = new CutAngle(point1S0, true, precision_DoubleEquivalence0); Precision.DoubleEquivalence precision_DoubleEquivalence1 = mock(Precision.DoubleEquivalence.class, new ViolatedAssumptionAnswer()); doReturn(false).when(precision_DoubleEquivalence1).eqZero(anyDouble()); boolean boolean0 = cutAngle0.eq(cutAngle0, precision_DoubleEquivalence1); }
Code: public boolean eq(final CutAngle other, final Precision.DoubleEquivalence precision) { return point.eq(other.point, precision) && positiveFacing == other.positiveFacing; }
[[0.04568981 0.11030386 0.0633871  0.0633871  0.0633871  0.03715386
 0.0633871  0.0633871  0.06456508 0.05073334 0.0633871  0.0633871
 0.02977816 0.0633871  0.07102794 0.0633871  0.02026413]
[0.03225484 0.15827742 0.06096675 0.06096675 0.06096675 0.0319035
 0.06096675 0.06096675 0.08657946 0.05503545 0.06096675 0.06096675
 0.02260269 0.06096675 0.04870186 0.06096675 0.01594409]
[0.03783868 0.1332294  0.06179045 0.06179045 0.06179045 0.03870347
 0.06179045 0.06179045 0.06752649 0.04612461 0.06179045 0.06179045
 0.02775116 0.06179045 0.07030516 0.06179045 0.022407  ]
[0.03783868 0.1332294  0.06179045 0.06179045 0.06179045 0.03870347
 0.06179045 0.06179045 0.06752649 0.04612461 0.06179045 0.06179045
 0.02775116 0.06179045 0.07030516 0.06179045 0.022407  ]
[0.03783868 0.1332294  0.06179045 0.06179045 0.06179045 0.03870347
 0.06179045 0.06179045 0.06752649 0.04612461 0.06179045 0.06179045
 0.02775116 0.06179045 0.07030516 0.06179045 0.022407  ]
[0.04320911 0.11247496 0.06217263 0.06217263 0.06217263 0.02958202
 0.06217263 0.06217263 0.08016772 0.06302705 0.06217263 0.06217263
 0.03376577 0.06217263 0.06277494 0.06217263 0.01544478]
[0.03783868 0.1332294  0.06179045 0.06179045 0.06179045 0.03870347
 0.06179045 0.06179045 0.06752649 0.04612461 0.06179045 0.06179045
 0.02775116 0.06179045 0.07030516 0.06179045 0.022407  ]
[0.03783868 0.1332294  0.06179045 0.06179045 0.06179045 0.03870347
 0.06179045 0.06179045 0.06752649 0.04612461 0.06179045 0.06179045
 0.02775116 0.06179045 0.07030516 0.06179045 0.022407  ]
[0.04893637 0.09644776 0.05988599 0.05988599 0.05988599 0.04842507
 0.05988599 0.05988599 0.08814777 0.05508181 0.05988599 0.05988599
 0.04423771 0.05988599 0.05017965 0.05988599 0.02956994]
[0.03273308 0.15388414 0.06272176 0.06272176 0.06272176 0.03075697
 0.06272176 0.06272176 0.0691763  0.04663403 0.06272176 0.06272176
 0.02365088 0.06272176 0.05997398 0.06272176 0.01869472]
[0.03783868 0.1332294  0.06179045 0.06179045 0.06179045 0.03870347
 0.06179045 0.06179045 0.06752649 0.04612461 0.06179045 0.06179045
 0.02775116 0.06179045 0.07030516 0.06179045 0.022407  ]
[0.03783868 0.1332294  0.06179045 0.06179045 0.06179045 0.03870347
 0.06179045 0.06179045 0.06752649 0.04612461 0.06179045 0.06179045
 0.02775116 0.06179045 0.07030516 0.06179045 0.022407  ]
[0.03436669 0.1562692  0.06170891 0.06170891 0.06170891 0.02970135
 0.06170891 0.06170891 0.07494274 0.04396069 0.06170891 0.06170891
 0.02410293 0.06170891 0.05763677 0.06170891 0.02363942]
[0.03783868 0.1332294  0.06179045 0.06179045 0.06179045 0.03870347
 0.06179045 0.06179045 0.06752649 0.04612461 0.06179045 0.06179045
 0.02775116 0.06179045 0.07030516 0.06179045 0.022407  ]
[0.03310892 0.21754706 0.04706837 0.04706837 0.04706837 0.03406953
 0.04706837 0.04706837 0.10762025 0.05599439 0.04706837 0.04706837
 0.02922032 0.04706837 0.07780896 0.04706837 0.02101529]
[0.03783868 0.1332294  0.06179045 0.06179045 0.06179045 0.03870347
 0.06179045 0.06179045 0.06752649 0.04612461 0.06179045 0.06179045
 0.02775116 0.06179045 0.07030516 0.06179045 0.022407  ]
[0.03348011 0.104872   0.05925745 0.05925745 0.05925745 0.0317587
 0.05925745 0.05925745 0.10541434 0.07872155 0.05925745 0.05925745
 0.03101855 0.05925745 0.05966683 0.05925745 0.0217509 ]]