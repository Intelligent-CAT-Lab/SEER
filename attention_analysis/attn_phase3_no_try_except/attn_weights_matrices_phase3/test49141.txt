49141
Test: public void test8377() throws Throwable { DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.hourOfDay(); DateTimeFormatterBuilder.Fraction dateTimeFormatterBuilder_Fraction0 = new DateTimeFormatterBuilder.Fraction(dateTimeFieldType0, 2086, 2086); MockPrintWriter mockPrintWriter0 = new MockPrintWriter(">MX*"); TimeZone timeZone0 = TimeZone.getTimeZone("Mexico/G"); DateTimeZone dateTimeZone0 = DateTimeZone.forTimeZone(timeZone0); JulianChronology julianChronology0 = JulianChronology.getInstance(dateTimeZone0); Chronology chronology0 = julianChronology0.withUTC(); dateTimeFormatterBuilder_Fraction0.printTo((Appendable) mockPrintWriter0, 1996L, chronology0); int int0 = dateTimeFormatterBuilder_Fraction0.estimateParsedLength(); DateTimeFormatterBuilder.TwoDigitYear dateTimeFormatterBuilder_TwoDigitYear0 = new DateTimeFormatterBuilder.TwoDigitYear(dateTimeFieldType0, (-1472), false); MonthDay monthDay0 = MonthDay.now(chronology0); LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>(); LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>(); boolean boolean0 = linkedHashSet0.add((Locale) null); List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0); Locale locale0 = Locale.lookup(linkedList0, list0); dateTimeFormatterBuilder_TwoDigitYear0.printTo((Appendable) mockPrintWriter0, (ReadablePartial) monthDay0, (Locale) null); DateTimeFormatterBuilder dateTimeFormatterBuilder0 = new DateTimeFormatterBuilder(); DateTimeFormatterBuilder dateTimeFormatterBuilder1 = dateTimeFormatterBuilder0.appendLiteral('v'); dateTimeFormatterBuilder_Fraction0.printTo((Appendable) mockPrintWriter0, (-1236L), chronology0, 2, dateTimeZone0, (Locale) null); }
Code: public DateTimeFormatterBuilder appendLiteral(char c) { return append0(new CharacterLiteral(c)); }
[[0.09165082 0.12714598 0.12714598 0.13410863 0.12483994 0.10119063
 0.12714598 0.12714598 0.039626  ]
[0.07606315 0.12489931 0.12489931 0.15576223 0.13193569 0.09261908
 0.12489931 0.12489931 0.04402264]
[0.07606315 0.12489931 0.12489931 0.15576223 0.13193569 0.09261908
 0.12489931 0.12489931 0.04402264]
[0.08272777 0.12465143 0.12465143 0.13440008 0.15940036 0.09071907
 0.12465143 0.12465143 0.03414702]
[0.09483936 0.1213344  0.1213344  0.09749894 0.15900545 0.10829479
 0.1213344  0.1213344  0.05502386]
[0.06573138 0.12979954 0.12979954 0.15325344 0.1310373  0.09499747
 0.12979954 0.12979954 0.03578223]
[0.07606315 0.12489931 0.12489931 0.15576223 0.13193569 0.09261908
 0.12489931 0.12489931 0.04402264]
[0.07606315 0.12489931 0.12489931 0.15576223 0.13193569 0.09261908
 0.12489931 0.12489931 0.04402264]
[0.0638569  0.11655866 0.11655866 0.10695764 0.18063362 0.1442424
 0.11655866 0.11655866 0.03807494]]