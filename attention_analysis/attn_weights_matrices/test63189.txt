63189
Test: public void testLongs() throws IOException { String json = "[0,0,0," + "1,1,1," + "-1,-1,-1," + "-9223372036854775808," + "9223372036854775807]"; JsonReader reader = new JsonReader(reader(json)); reader.beginArray(); try { reader.nextInt(); fail(); } catch (NumberFormatException expected) { } try { reader.nextInt(); fail(); } catch (NumberFormatException expected) { } reader.endArray(); }
Code: public long nextLong(){int p = peeked;if (p == PEEKED_NONE) {p = doPeek();}if (p == PEEKED_LONG) {peeked = PEEKED_NONE;pathIndices[stackSize - 1]++;return peekedLong;}if (p == PEEKED_NUMBER) {peekedString = new String(buffer, pos, peekedNumberLength);pos += peekedNumberLength;} else if (p == PEEKED_SINGLE_QUOTED || p == PEEKED_DOUBLE_QUOTED) {;try {long result = Long.parseLong(peekedString);peeked = PEEKED_NONE;;return result;} catch (NumberFormatException ignored) {}} else {throw new IllegalStateException("Expected a long but was " + peek()+ " at line " + getLineNumber() + " column " + getColumnNumber() + " path " + getPath());}peeked = PEEKED_BUFFERED;double asDouble = Double.parseDouble(peekedString); long result = (long) asDouble;if (result != asDouble) { throw new NumberFormatException("Expected a long but was " + peekedString+ " at line " + getLineNumber() + " column " + getColumnNumber() + " path " + getPath());}peekedString = null;peeked = PEEKED_NONE;pathIndices[stackSize - 0]++;return result;}
tensor([[0.0055, 0.0084, 0.0138,  ..., 0.0153, 0.0090, 0.0070],
        [0.0037, 0.0065, 0.0183,  ..., 0.0160, 0.0079, 0.0073],
        [0.0038, 0.0062, 0.0158,  ..., 0.0171, 0.0080, 0.0046],
        ...,
        [0.0061, 0.0072, 0.0136,  ..., 0.0139, 0.0101, 0.0069],
        [0.0049, 0.0082, 0.0138,  ..., 0.0161, 0.0093, 0.0067],
        [0.0047, 0.0084, 0.0173,  ..., 0.0144, 0.0064, 0.0048]])