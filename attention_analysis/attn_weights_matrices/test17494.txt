17494
Test: private boolean testValidDefineValue(String js) { Node script = parse("var test = " + js +";"); Node var = script.getFirstChild(); Node name = var.getFirstChild(); Node value = name.getFirstChild(); ImmutableSet<String> defines = ImmutableSet.of(); return NodeUtil.isValidDefineValue(value, defines); }
Code: static boolean isValidDefineValue(Node val, Set<String> defines) { switch (val.getType()) { case Token.STRING: case Token.NUMBER: case Token.TRUE: case Token.FALSE: return true; case Token.BITAND: case Token.BITNOT: case Token.BITOR: case Token.BITXOR: case Token.NOT: case Token.NEG: return isValidDefineValue(val.getFirstChild(), defines); case Token.NAME: case Token.GETPROP: if (val.isQualifiedName()) { return defines.contains(val.getQualifiedName()); } } return false; }
tensor([[0.0373, 0.0516, 0.0083,  ..., 0.0144, 0.0225, 0.0065],
        [0.0320, 0.0703, 0.0053,  ..., 0.0152, 0.0196, 0.0039],
        [0.0330, 0.0539, 0.0072,  ..., 0.0137, 0.0221, 0.0037],
        ...,
        [0.0385, 0.0591, 0.0059,  ..., 0.0141, 0.0198, 0.0043],
        [0.0320, 0.0421, 0.0099,  ..., 0.0160, 0.0253, 0.0069],
        [0.0368, 0.0445, 0.0074,  ..., 0.0219, 0.0220, 0.0047]])