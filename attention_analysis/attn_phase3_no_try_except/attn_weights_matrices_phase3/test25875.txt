25875
Test: public void test17() throws Throwable { LinkedList<Vector3D> linkedList0 = new LinkedList<Vector3D>(); Vector3D.Unit vector3D_Unit0 = Vector3D.Unit.PLUS_Z; linkedList0.add((Vector3D) vector3D_Unit0); Bounds3D bounds3D0 = Bounds3D.from((Iterable<Vector3D>) linkedList0); Precision.DoubleEquivalence precision_DoubleEquivalence0 = mock(Precision.DoubleEquivalence.class, new ViolatedAssumptionAnswer()); doReturn(true, false).when(precision_DoubleEquivalence0).eq(anyDouble() , anyDouble()); boolean boolean0 = bounds3D0.eq(bounds3D0, precision_DoubleEquivalence0); }
Code: public boolean eq(final B other, final Precision.DoubleEquivalence precision) { return min.eq(other.getMin(), precision) && max.eq(other.getMax(), precision); }
[[0.05120562 0.1245043  0.07103852 0.03048012 0.07103852 0.041522
 0.07103852 0.07103852 0.07147095 0.05674827 0.07103852 0.07103852
 0.03324463 0.07103852 0.07103852 0.02251605]
[0.0355858  0.17577495 0.06735841 0.01708298 0.06735841 0.03505937
 0.06735841 0.06735841 0.09479415 0.06049037 0.06735841 0.06735841
 0.02485866 0.06735841 0.06735841 0.01748647]
[0.04209839 0.14820185 0.0687426  0.0344129  0.0687426  0.04306693
 0.0687426  0.0687426  0.07515017 0.0513177  0.0687426  0.0687426
 0.03087595 0.0687426  0.0687426  0.02493534]
[0.04094641 0.12941293 0.07008854 0.02585802 0.07008854 0.04617242
 0.07008854 0.07008854 0.08761679 0.05999932 0.07008854 0.07008854
 0.03026173 0.07008854 0.07008854 0.01902405]
[0.04209839 0.14820185 0.0687426  0.0344129  0.0687426  0.04306693
 0.0687426  0.0687426  0.07515017 0.0513177  0.0687426  0.0687426
 0.03087595 0.0687426  0.0687426  0.02493534]
[0.04812104 0.12593918 0.06945336 0.02355877 0.06945336 0.03290948
 0.06945336 0.06945336 0.08894913 0.07018277 0.06945336 0.06945336
 0.03756046 0.06945336 0.06945336 0.01715232]
[0.04209839 0.14820185 0.0687426  0.0344129  0.0687426  0.04306693
 0.0687426  0.0687426  0.07515017 0.0513177  0.0687426  0.0687426
 0.03087595 0.0687426  0.0687426  0.02493534]
[0.04209839 0.14820185 0.0687426  0.0344129  0.0687426  0.04306693
 0.0687426  0.0687426  0.07515017 0.0513177  0.0687426  0.0687426
 0.03087595 0.0687426  0.0687426  0.02493534]
[0.05274909 0.10474028 0.06484032 0.03846071 0.06484032 0.05217227
 0.06484032 0.06484032 0.09436862 0.05945787 0.06484032 0.06484032
 0.04757972 0.06484032 0.06484032 0.0317489 ]
[0.03594393 0.1719411  0.06931354 0.03135041 0.06931354 0.03365531
 0.06931354 0.06931354 0.07506278 0.05136275 0.06931354 0.06931354
 0.0258477  0.06931354 0.06931354 0.02032774]
[0.04209839 0.14820185 0.0687426  0.0344129  0.0687426  0.04306693
 0.0687426  0.0687426  0.07515017 0.0513177  0.0687426  0.0687426
 0.03087595 0.0687426  0.0687426  0.02493534]
[0.04209839 0.14820185 0.0687426  0.0344129  0.0687426  0.04306693
 0.0687426  0.0687426  0.07515017 0.0513177  0.0687426  0.0687426
 0.03087595 0.0687426  0.0687426  0.02493534]
[0.03791271 0.17307527 0.06815507 0.02759571 0.06815507 0.03271777
 0.06815507 0.06815507 0.0823993  0.0484971  0.06815507 0.06815507
 0.02655667 0.06815507 0.06815507 0.02600491]
[0.04209839 0.14820185 0.0687426  0.0344129  0.0687426  0.04306693
 0.0687426  0.0687426  0.07515017 0.0513177  0.0687426  0.0687426
 0.03087595 0.0687426  0.0687426  0.02493534]
[0.04209839 0.14820185 0.0687426  0.0344129  0.0687426  0.04306693
 0.0687426  0.0687426  0.07515017 0.0513177  0.0687426  0.0687426
 0.03087595 0.0687426  0.0687426  0.02493534]
[0.03715762 0.11700213 0.06594117 0.02180722 0.06594117 0.03516904
 0.06594117 0.06594117 0.11598381 0.08707668 0.06594117 0.06594117
 0.03430265 0.06594117 0.06594117 0.02397149]]