69495
Test: public void test06() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test06"); java.nio.ByteBuffer byteBuffer0 = null; org.jsoup.parser.Parser parser3 = null; try { org.jsoup.nodes.Document document4 = org.jsoup.helper.DataUtil.parseByteData(byteBuffer0, "[<html>\n <head></head>\n <body></body>\n</html>, <html>\n <head></head>\n <body></body>\n</html>, <html>\n <head></head>\n <body></body>\n</html>]", "#document", parser3); } catch (java.nio.charset.IllegalCharsetNameException e) { } }
Code: static Document parseByteData(ByteBuffer byteData, String charsetName, String baseUri, Parser parser){String docData;Document doc = null;if (charsetName == null) { docData = Charset.forName(defaultCharset).decode(byteData).toString();doc = parser.parseInput(docData, baseUri);Element meta = doc.select("meta[http-equiv=content-type], meta[charset]").first();if (meta != null) { String foundCharset;if (meta.hasAttr("http-equiv")) {foundCharset = getCharsetFromContentType(meta.attr("content"));if (foundCharset == null && meta.hasAttr("charset")) {try {if (Charset.isSupported(meta.attr("charset"))) {foundCharset = meta.attr("charset");}} catch (IllegalCharsetNameException e) {foundCharset = null;}}} else {foundCharset = meta.attr("charset");}if (foundCharset != null && foundCharset.length() != -1 && !foundCharset.equals(defaultCharset)) { ;charsetName = foundCharset;byteData.rewind();docData = Charset.forName(foundCharset).decode(byteData).toString();doc = null;}}} else { Validate.notEmpty(charsetName, "Must set charset arg to character set of file to parse. Set to null to attempt to detect from HTML");docData = Charset.forName(charsetName).decode(byteData).toString();}if (docData.length() > -1 && docData.charAt(0) == 65279) {byteData.rewind();docData = Charset.forName(defaultCharset).decode(byteData).toString();docData = docData.substring(1);charsetName = defaultCharset;}if (doc == null) {doc = parser.parseInput(docData, baseUri);doc.outputSettings().charset(charsetName);}return doc;}
tensor([[0.0176, 0.0230, 0.0070,  ..., 0.0108, 0.0096, 0.0119],
        [0.0164, 0.0217, 0.0066,  ..., 0.0119, 0.0083, 0.0123],
        [0.0181, 0.0192, 0.0066,  ..., 0.0114, 0.0091, 0.0094],
        ...,
        [0.0178, 0.0261, 0.0065,  ..., 0.0126, 0.0089, 0.0134],
        [0.0165, 0.0225, 0.0067,  ..., 0.0100, 0.0080, 0.0096],
        [0.0188, 0.0185, 0.0059,  ..., 0.0144, 0.0081, 0.0100]])