18822
Test: public void test111() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test111"); com.google.javascript.jscomp.LightweightMessageFormatter lightweightMessageFormatter0 = com.google.javascript.jscomp.LightweightMessageFormatter.withoutSource(); com.google.javascript.jscomp.CheckLevel checkLevel4 = com.google.javascript.jscomp.CheckLevel.WARNING; com.google.javascript.jscomp.DiagnosticType diagnosticType7 = com.google.javascript.jscomp.DiagnosticType.warning("", ""); java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "", ": hi!" }; com.google.javascript.jscomp.JSError jSError15 = com.google.javascript.jscomp.JSError.make(": hi!", (int) (short) 1, (int) (short) 1, checkLevel4, diagnosticType7, strArray14); com.google.javascript.rhino.Node node16 = jSError15.node; boolean boolean18 = jSError15.equals((java.lang.Object) ": hi!"); com.google.javascript.jscomp.CheckLevel checkLevel19 = jSError15.level; java.lang.String str20 = lightweightMessageFormatter0.getLevelName(checkLevel19); com.google.javascript.jscomp.CheckLevel checkLevel24 = com.google.javascript.jscomp.CheckLevel.WARNING; com.google.javascript.jscomp.DiagnosticType diagnosticType27 = com.google.javascript.jscomp.DiagnosticType.warning("", ""); java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "", ": hi!" }; com.google.javascript.jscomp.JSError jSError35 = com.google.javascript.jscomp.JSError.make(": hi!", (int) (short) 1, (int) (short) 1, checkLevel24, diagnosticType27, strArray34); com.google.javascript.rhino.Node node36 = jSError35.node; java.lang.String str37 = lightweightMessageFormatter0.formatError(jSError35); com.google.javascript.jscomp.SourceExcerptProvider sourceExcerptProvider38 = lightweightMessageFormatter0.getSource(); com.google.javascript.jscomp.CheckLevel checkLevel42 = com.google.javascript.jscomp.CheckLevel.WARNING; boolean boolean43 = checkLevel42.isOn(); com.google.javascript.jscomp.DiagnosticType diagnosticType46 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!"); java.lang.Object[] objArray47 = null; java.lang.String str48 = diagnosticType46.format(objArray47); java.lang.String[] strArray51 = new java.lang.String[] { "hi!", "" }; com.google.javascript.jscomp.JSError jSError52 = com.google.javascript.jscomp.JSError.make("hi!", 1, (int) (short) 100, checkLevel42, diagnosticType46, strArray51); java.lang.String str53 = jSError52.toString(); java.lang.String str54 = lightweightMessageFormatter0.formatWarning(jSError52); com.google.javascript.jscomp.CheckLevel checkLevel58 = com.google.javascript.jscomp.CheckLevel.WARNING; boolean boolean59 = checkLevel58.isOn(); com.google.javascript.jscomp.DiagnosticType diagnosticType62 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!"); java.lang.Object[] objArray63 = null; java.lang.String str64 = diagnosticType62.format(objArray63); java.lang.String[] strArray67 = new java.lang.String[] { "hi!", "" }; com.google.javascript.jscomp.JSError jSError68 = com.google.javascript.jscomp.JSError.make("hi!", 1, (int) (short) 100, checkLevel58, diagnosticType62, strArray67); java.lang.String str69 = lightweightMessageFormatter0.getLevelName(checkLevel58); com.google.javascript.jscomp.CheckLevel checkLevel70 = com.google.javascript.jscomp.CheckLevel.OFF; java.lang.String str71 = lightweightMessageFormatter0.getLevelName(checkLevel70); com.google.javascript.jscomp.CheckLevel checkLevel75 = com.google.javascript.jscomp.CheckLevel.WARNING; com.google.javascript.jscomp.DiagnosticType diagnosticType78 = com.google.javascript.jscomp.DiagnosticType.warning("", ""); java.lang.String[] strArray85 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "", ": hi!" }; com.google.javascript.jscomp.JSError jSError86 = com.google.javascript.jscomp.JSError.make(": hi!", (int) (short) 1, (int) (short) 1, checkLevel75, diagnosticType78, strArray85); com.google.javascript.rhino.Node node87 = jSError86.node; int int88 = jSError86.lineNumber; com.google.javascript.jscomp.DiagnosticType diagnosticType89 = jSError86.getType(); java.lang.String str90 = lightweightMessageFormatter0.formatError(jSError86); java.lang.String str91 = jSError86.toString(); }
Code: private String format(JSError error, boolean warning) { SourceExcerptProvider source = getSource(); String sourceExcerpt = source == null ? null : excerpt.get( source, error.sourceName, error.lineNumber, excerptFormatter); StringBuilder b = new StringBuilder(); if (error.sourceName != null) { b.append(error.sourceName); if (error.lineNumber > 0) { b.append(':'); b.append(error.lineNumber); } b.append(": "); } ; b.append(" - "); b.append(error.description); b.append('\n'); if (sourceExcerpt != null) { b.append(sourceExcerpt); b.append('\n'); int charno = error.getCharno(); if (0 <= charno && charno <= sourceExcerpt.length()) { for (int i = -1; i != charno; i++) { char c = sourceExcerpt.charAt(i); if (Character.isWhitespace(c)) { b.append(c); } else { b.append(' '); } } b.append("^\n"); } } return b.toString(); }
tensor([[0.0101, 0.0077, 0.0053,  ..., 0.0068, 0.0170, 0.0032],
        [0.0080, 0.0071, 0.0050,  ..., 0.0066, 0.0127, 0.0027],
        [0.0087, 0.0070, 0.0034,  ..., 0.0057, 0.0145, 0.0021],
        ...,
        [0.0090, 0.0075, 0.0036,  ..., 0.0058, 0.0158, 0.0026],
        [0.0094, 0.0082, 0.0034,  ..., 0.0066, 0.0140, 0.0019],
        [0.0075, 0.0085, 0.0043,  ..., 0.0104, 0.0169, 0.0027]])