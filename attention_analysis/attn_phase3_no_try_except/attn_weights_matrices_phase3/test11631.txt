11631
Test: public void test2() throws Throwable { FailableLongConsumer<Throwable> failableLongConsumer0 = FailableLongConsumer.nop(); FailableLongConsumer<Throwable> failableLongConsumer1 = failableLongConsumer0.andThen(failableLongConsumer0); FailableLongConsumer<Throwable> failableLongConsumer2 = failableLongConsumer0.andThen(failableLongConsumer1); }
Code: default FailableLongConsumer<E> andThen(final FailableLongConsumer<E> after) { Objects.requireNonNull(after); return (final long t) -> { accept(t); after.accept(t); }; }
[[0.11425674 0.05987496 0.05987496 0.05987496 0.05987496 0.082527
 0.05987496 0.05466778 0.03577992 0.0538269  0.01851013 0.07988212
 0.082527   0.05987496 0.05987496 0.04400397 0.01489373]
[0.10101158 0.06086554 0.06086554 0.06086554 0.06086554 0.06325647
 0.06086554 0.04499494 0.04430363 0.06247027 0.02169159 0.09962533
 0.06325647 0.06086554 0.06086554 0.05216714 0.02116388]
[0.10101158 0.06086554 0.06086554 0.06086554 0.06086554 0.06325647
 0.06086554 0.04499494 0.04430363 0.06247027 0.02169159 0.09962533
 0.06325647 0.06086554 0.06086554 0.05216714 0.02116388]
[0.10101158 0.06086554 0.06086554 0.06086554 0.06086554 0.06325647
 0.06086554 0.04499494 0.04430363 0.06247027 0.02169159 0.09962533
 0.06325647 0.06086554 0.06086554 0.05216714 0.02116388]
[0.10101158 0.06086554 0.06086554 0.06086554 0.06086554 0.06325647
 0.06086554 0.04499494 0.04430363 0.06247027 0.02169159 0.09962533
 0.06325647 0.06086554 0.06086554 0.05216714 0.02116388]
[0.07876012 0.05877271 0.05877271 0.05877271 0.05877271 0.07933224
 0.05877271 0.0528467  0.0475607  0.07142866 0.02382397 0.07805045
 0.07933224 0.05877271 0.05877271 0.05022626 0.02722967]
[0.10101158 0.06086554 0.06086554 0.06086554 0.06086554 0.06325647
 0.06086554 0.04499494 0.04430363 0.06247027 0.02169159 0.09962533
 0.06325647 0.06086554 0.06086554 0.05216714 0.02116388]
[0.13957581 0.06006647 0.06006647 0.06006647 0.06006647 0.06363059
 0.06006647 0.04433387 0.03396916 0.08131115 0.01658043 0.07121268
 0.06363059 0.06006647 0.06006647 0.04801464 0.01727585]
[0.09949676 0.06090222 0.06090222 0.06090222 0.06090222 0.07100388
 0.06090222 0.06131335 0.03997433 0.07229154 0.01972675 0.07599507
 0.07100388 0.06090222 0.06090222 0.04501938 0.01785948]
[0.12947373 0.0581406  0.0581406  0.0581406  0.0581406  0.08205677
 0.0581406  0.04689289 0.04025887 0.06359542 0.01667894 0.07404144
 0.08205677 0.0581406  0.0581406  0.03877719 0.0191838 ]
[0.10182802 0.05804461 0.05804461 0.05804461 0.05804461 0.09373838
 0.05804461 0.04384775 0.04021506 0.06675974 0.01546486 0.07806441
 0.09373838 0.05804461 0.05804461 0.0465911  0.01344002]
[0.09280605 0.05809574 0.05809574 0.05809574 0.05809574 0.0863964
 0.05809574 0.05194715 0.04702107 0.06797598 0.0238273  0.070467
 0.0863964  0.05809574 0.05809574 0.04876182 0.0177307 ]
[0.07876012 0.05877271 0.05877271 0.05877271 0.05877271 0.07933224
 0.05877271 0.0528467  0.0475607  0.07142866 0.02382397 0.07805045
 0.07933224 0.05877271 0.05877271 0.05022626 0.02722967]
[0.10101158 0.06086554 0.06086554 0.06086554 0.06086554 0.06325647
 0.06086554 0.04499494 0.04430363 0.06247027 0.02169159 0.09962533
 0.06325647 0.06086554 0.06086554 0.05216714 0.02116388]
[0.10101158 0.06086554 0.06086554 0.06086554 0.06086554 0.06325647
 0.06086554 0.04499494 0.04430363 0.06247027 0.02169159 0.09962533
 0.06325647 0.06086554 0.06086554 0.05216714 0.02116388]
[0.09050063 0.06058142 0.06058142 0.06058142 0.06058142 0.08088195
 0.06058142 0.05782332 0.04331198 0.06763133 0.02011537 0.0722743
 0.08088195 0.06058142 0.06058142 0.04407406 0.01843517]
[0.0926351  0.05758895 0.05758895 0.05758895 0.05758895 0.08921538
 0.05758895 0.07125434 0.04755021 0.05125078 0.02041767 0.07048686
 0.08921538 0.05758895 0.05758895 0.04604528 0.0188064 ]]