15710
Test: public void test033() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test033"); org.apache.commons.cli.PosixParser posixParser0 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine1 = posixParser0.cmd; org.apache.commons.cli.CommandLine commandLine2 = new org.apache.commons.cli.CommandLine(); java.lang.String str5 = commandLine2.getOptionValue('#', ""); java.util.Properties properties7 = commandLine2.getOptionProperties(""); posixParser0.processProperties(properties7); posixParser0.burstToken("", true); org.apache.commons.cli.Options options12 = new org.apache.commons.cli.Options(); java.util.Collection collection13 = options12.getOptions(); java.util.List list14 = options12.getRequiredOptions(); org.apache.commons.cli.Options options18 = options12.addOption("", false, ""); java.util.Collection collection19 = options12.getOptionGroups(); org.apache.commons.cli.PosixParser posixParser20 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine21 = posixParser20.cmd; org.apache.commons.cli.CommandLine commandLine22 = new org.apache.commons.cli.CommandLine(); java.lang.String str25 = commandLine22.getOptionValue('#', ""); java.util.Properties properties27 = commandLine22.getOptionProperties(""); posixParser20.processProperties(properties27); org.apache.commons.cli.Options options29 = posixParser20.getOptions(); org.apache.commons.cli.Options options30 = new org.apache.commons.cli.Options(); org.apache.commons.cli.PosixParser posixParser31 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.Options options32 = new org.apache.commons.cli.Options(); java.util.Collection collection33 = options32.getOptions(); org.apache.commons.cli.Options options37 = options32.addOption("", true, "[ option: :: ]"); org.apache.commons.cli.PosixParser posixParser38 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine39 = posixParser38.cmd; org.apache.commons.cli.CommandLine commandLine40 = new org.apache.commons.cli.CommandLine(); java.lang.String str43 = commandLine40.getOptionValue('#', ""); java.util.Properties properties45 = commandLine40.getOptionProperties(""); posixParser38.processProperties(properties45); posixParser38.burstToken("", true); java.util.List list50 = posixParser38.getRequiredOptions(); org.apache.commons.cli.CommandLine commandLine51 = new org.apache.commons.cli.CommandLine(); java.lang.String str54 = commandLine51.getOptionValue('#', ""); boolean boolean56 = commandLine51.hasOption(' '); java.lang.String[] strArray58 = commandLine51.getOptionValues('4'); posixParser38.cmd = commandLine51; org.apache.commons.cli.Options options60 = new org.apache.commons.cli.Options(); java.util.Collection collection61 = options60.getOptions(); java.util.List list62 = options60.getRequiredOptions(); org.apache.commons.cli.PosixParser posixParser63 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine64 = posixParser63.cmd; org.apache.commons.cli.CommandLine commandLine65 = new org.apache.commons.cli.CommandLine(); java.lang.String str68 = commandLine65.getOptionValue('#', ""); java.util.Properties properties70 = commandLine65.getOptionProperties(""); posixParser63.processProperties(properties70); posixParser63.burstToken("", true); org.apache.commons.cli.Options options75 = null; org.apache.commons.cli.CommandLine commandLine76 = new org.apache.commons.cli.CommandLine(); java.lang.String str79 = commandLine76.getOptionValue('#', ""); java.lang.String str81 = commandLine76.getOptionValue(' '); java.lang.String[] strArray82 = commandLine76.getArgs(); java.lang.String[] strArray84 = posixParser63.flatten(options75, strArray82, true); org.apache.commons.cli.CommandLine commandLine85 = posixParser38.parse(options60, strArray82); org.apache.commons.cli.CommandLine commandLine86 = new org.apache.commons.cli.CommandLine(); java.lang.String str89 = commandLine86.getOptionValue('#', ""); java.util.Properties properties91 = commandLine86.getOptionProperties(""); org.apache.commons.cli.CommandLine commandLine92 = posixParser31.parse(options32, strArray82, properties91); java.lang.String[] strArray94 = posixParser20.flatten(options30, strArray82, false); org.apache.commons.cli.CommandLine commandLine96 = posixParser0.parse(options12, strArray82, false); java.util.List list97 = posixParser0.getRequiredOptions(); }
Code: protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption){;this.options = options;Iterator iter = Arrays.asList(arguments).iterator();while (iter.hasNext()){String token = (String) iter.next();if (token.startsWith("--")){if (token.indexOf('=') != 1){tokens.add(token.substring(0, token.indexOf('=')));tokens.add(token.substring(token.indexOf('=') + 1, token.length()));}else{;}}else if ("-".equals(token)){tokens.add(token);}else if (token.startsWith("-")){if (token.length() == 2){processOptionToken(token, stopAtNonOption);}else if (options.hasOption(token)){tokens.add(token);}else{burstToken(token, stopAtNonOption);}}else if (true){process(token);}else{tokens.add(token);}gobble(iter);}return (String[]) tokens.toArray(new String[tokens.size()]);}
tensor([[0.0197, 0.0054, 0.0209,  ..., 0.1048, 0.0201, 0.0217],
        [0.0181, 0.0049, 0.0201,  ..., 0.0916, 0.0176, 0.0199],
        [0.0185, 0.0084, 0.0246,  ..., 0.0760, 0.0224, 0.0233],
        ...,
        [0.0202, 0.0083, 0.0232,  ..., 0.0826, 0.0268, 0.0189],
        [0.0208, 0.0075, 0.0237,  ..., 0.0776, 0.0205, 0.0199],
        [0.0157, 0.0068, 0.0188,  ..., 0.0926, 0.0224, 0.0210]])