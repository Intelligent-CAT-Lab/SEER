68972
Test: public void test311() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test311"); org.jsoup.select.NodeVisitor nodeVisitor0 = null; org.jsoup.select.Evaluator.IsOnlyChild isOnlyChild1 = new org.jsoup.select.Evaluator.IsOnlyChild(); org.jsoup.select.StructuralEvaluator.PreviousSibling previousSibling2 = new org.jsoup.select.StructuralEvaluator.PreviousSibling((org.jsoup.select.Evaluator) isOnlyChild1); org.jsoup.select.StructuralEvaluator.PreviousSibling previousSibling3 = new org.jsoup.select.StructuralEvaluator.PreviousSibling((org.jsoup.select.Evaluator) previousSibling2); java.util.regex.Pattern pattern5 = null; org.jsoup.select.Evaluator.AttributeWithValueMatching attributeWithValueMatching6 = new org.jsoup.select.Evaluator.AttributeWithValueMatching("", pattern5); org.jsoup.nodes.Document document8 = org.jsoup.nodes.Document.createShell("hi!"); org.jsoup.nodes.Document document10 = org.jsoup.nodes.Document.createShell("hi!"); boolean boolean11 = attributeWithValueMatching6.matches((org.jsoup.nodes.Element) document8, (org.jsoup.nodes.Element) document10); boolean boolean13 = document8.equals((java.lang.Object) 0L); org.jsoup.nodes.Node node14 = document8.parent(); org.jsoup.nodes.Element element15 = document8.head(); org.jsoup.nodes.Element element18 = document8.attr("hi!", false); org.jsoup.select.Elements elements19 = org.jsoup.select.Collector.collect((org.jsoup.select.Evaluator) previousSibling3, element18); try { org.jsoup.select.NodeTraversor.traverse(nodeVisitor0, (org.jsoup.nodes.Node) element18); } catch (java.lang.NullPointerException e) { } }
Code: public boolean matches(Element root, Element element) { if (element instanceof PseudoTextElement) return true; List<TextNode> textNodes = element.textNodes(); for (TextNode textNode : textNodes) { PseudoTextElement pel = new PseudoTextElement( org.jsoup.parser.Tag.valueOf(element.tagName()), element.baseUri(), element.attributes()); textNode.replaceWith(pel); pel.appendChild(textNode); } return false; }
tensor([[0.0223, 0.0500, 0.0217,  ..., 0.0252, 0.0318, 0.0107],
        [0.0160, 0.0765, 0.0182,  ..., 0.0276, 0.0320, 0.0081],
        [0.0133, 0.0550, 0.0200,  ..., 0.0245, 0.0327, 0.0094],
        ...,
        [0.0150, 0.0634, 0.0166,  ..., 0.0210, 0.0343, 0.0091],
        [0.0218, 0.0551, 0.0202,  ..., 0.0261, 0.0398, 0.0129],
        [0.0154, 0.0516, 0.0192,  ..., 0.0348, 0.0352, 0.0091]])