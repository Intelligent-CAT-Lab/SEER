15382
Test: public void test145() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test145"); org.apache.commons.cli.GnuParser gnuParser0 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.CommandLine commandLine1 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj3 = commandLine1.getParsedOptionValue(""); java.util.Properties properties5 = commandLine1.getOptionProperties("hi!"); java.lang.Object obj7 = commandLine1.getOptionObject("hi!"); java.lang.Object obj9 = commandLine1.getOptionObject("hi!"); gnuParser0.cmd = commandLine1; org.apache.commons.cli.CommandLine commandLine11 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj13 = commandLine11.getParsedOptionValue(""); java.util.Properties properties15 = commandLine11.getOptionProperties("hi!"); gnuParser0.processProperties(properties15); org.apache.commons.cli.Options options17 = new org.apache.commons.cli.Options(); org.apache.commons.cli.GnuParser gnuParser18 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.Options options19 = new org.apache.commons.cli.Options(); org.apache.commons.cli.GnuParser gnuParser20 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.CommandLine commandLine21 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj23 = commandLine21.getParsedOptionValue(""); java.util.Properties properties25 = commandLine21.getOptionProperties("hi!"); java.lang.Object obj27 = commandLine21.getOptionObject("hi!"); java.lang.Object obj29 = commandLine21.getOptionObject("hi!"); gnuParser20.cmd = commandLine21; org.apache.commons.cli.Options options31 = null; org.apache.commons.cli.CommandLine commandLine32 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj34 = commandLine32.getParsedOptionValue(""); java.util.Properties properties36 = commandLine32.getOptionProperties("hi!"); java.lang.String[] strArray37 = commandLine32.getArgs(); java.lang.String[] strArray39 = gnuParser20.flatten(options31, strArray37, true); java.lang.String[] strArray41 = gnuParser18.flatten(options19, strArray39, true); org.apache.commons.cli.CommandLine commandLine43 = gnuParser0.parse(options17, strArray39, true); java.util.List list45 = options17.getMatchingOptions("hi!"); boolean boolean47 = options17.hasLongOption("hi!"); java.util.List list48 = options17.getRequiredOptions(); org.apache.commons.cli.Option option52 = new org.apache.commons.cli.Option("", true, ""); java.lang.String str53 = option52.getLongOpt(); org.apache.commons.cli.OptionGroup optionGroup54 = options17.getOptionGroup(option52); boolean boolean55 = option52.hasLongOpt(); option52.addValueForProcessing("org.apache.commons.cli.AlreadySelectedException: "); }
Code: protected void processProperties(Properties properties) throws ParseException { if (properties == null) { return; } for (Enumeration e = properties.propertyNames(); e.hasMoreElements();) { String option = e.nextElement().toString(); if (!cmd.hasOption(option)) { Option opt = getOptions().getOption(option); String value = properties.getProperty(option); if (opt.hasArg()) { if (opt.getValues() == null || opt.getValues().length == 0) { try { opt.addValueForProcessing(value); } catch (RuntimeException exp) { } } } else if (!("yes".equalsIgnoreCase(value) || "true".equalsIgnoreCase(value) || "1".equalsIgnoreCase(value))) { continue; } cmd.addOption(opt); updateRequiredOptions(opt); } } }
tensor([[0.0175, 0.0067, 0.0304,  ..., 0.0029, 0.0029, 0.0029],
        [0.0204, 0.0063, 0.0325,  ..., 0.0036, 0.0036, 0.0036],
        [0.0168, 0.0062, 0.0272,  ..., 0.0036, 0.0036, 0.0036],
        ...,
        [0.0163, 0.0060, 0.0346,  ..., 0.0032, 0.0032, 0.0032],
        [0.0163, 0.0060, 0.0346,  ..., 0.0032, 0.0032, 0.0032],
        [0.0163, 0.0060, 0.0346,  ..., 0.0032, 0.0032, 0.0032]])