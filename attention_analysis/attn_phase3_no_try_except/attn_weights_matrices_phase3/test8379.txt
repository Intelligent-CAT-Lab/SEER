8379
Test: public void test16() throws Throwable { CharRange charRange0 = CharRange.is('+'); CharRange.is('3'); charRange0.toString(); Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer()); charRange0.forEach(consumer0); CharRange charRange1 = CharRange.isIn('X', 'X'); charRange1.contains(charRange0); charRange1.isNegated(); CharRange.is('+'); CharRange charRange2 = CharRange.is('Z'); charRange2.spliterator(); CharRange.isIn('=', '='); CharRange charRange3 = CharRange.isIn('K', 'X'); charRange0.contains(charRange2); CharRange charRange4 = CharRange.isNot('\''); charRange0.contains(charRange1); charRange1.hashCode(); charRange4.spliterator(); charRange0.equals(charRange4); charRange1.toString(); charRange1.toString(); charRange3.contains(charRange1); charRange4.contains(charRange1); charRange3.getStart(); charRange3.hashCode(); CharRange.isNotIn('=', '='); CharRange.isNot('~'); }
Code: public static CharRange isNot(final char ch) { return new CharRange(ch, ch, true); }
[[0.05760344 0.16408549 0.07990648 0.07990648 0.08022133 0.06227433
 0.07216983 0.06282204 0.02937289 0.07990648 0.04804924 0.16015357
 0.02352839]
[0.06066267 0.15549248 0.08252506 0.08252506 0.07891858 0.04286046
 0.10032883 0.05695479 0.02595415 0.08252505 0.05932222 0.14424694
 0.02768363]
[0.04719907 0.16037919 0.07944135 0.07944135 0.10223234 0.04404876
 0.07115382 0.05718965 0.03555927 0.07944135 0.0629695  0.15649858
 0.02444575]
[0.04719907 0.16037919 0.07944135 0.07944135 0.10223234 0.04404876
 0.07115382 0.05718965 0.03555927 0.07944135 0.0629695  0.15649858
 0.02444575]
[0.03977711 0.16696961 0.07447967 0.07447967 0.08226033 0.03792103
 0.08768959 0.06505579 0.02257214 0.07447967 0.05593408 0.19709119
 0.02129011]
[0.04122185 0.13954312 0.0773202  0.0773202  0.10973439 0.04436539
 0.08496585 0.05282949 0.02077262 0.0773202  0.05001839 0.20910983
 0.01547857]
[0.0598683  0.13794138 0.0802013  0.0802013  0.08330595 0.04462415
 0.09228475 0.06941925 0.03397868 0.08020131 0.06998064 0.13482028
 0.03317273]
[0.03843404 0.170423   0.07901666 0.07901666 0.07224554 0.04955053
 0.07023098 0.05664258 0.02315782 0.07901666 0.05640362 0.20636606
 0.01949582]
[0.05056113 0.14913498 0.07957508 0.07957508 0.05871557 0.06388882
 0.08672177 0.07099888 0.03342454 0.07957508 0.06415599 0.15814704
 0.02552603]
[0.04719907 0.16037919 0.07944135 0.07944135 0.10223234 0.04404876
 0.07115382 0.05718965 0.03555927 0.07944135 0.0629695  0.15649858
 0.02444575]
[0.04268213 0.14561638 0.07290059 0.07290059 0.08670349 0.0539664
 0.08107793 0.08232732 0.02475089 0.07290059 0.05653129 0.18740347
 0.02023894]
[0.0550228  0.14468211 0.08811649 0.08811649 0.10500114 0.03901481
 0.08087814 0.05891966 0.02958721 0.08811648 0.0452436  0.15379605
 0.02350508]
[0.03922333 0.15532205 0.0748414  0.0748414  0.09848341 0.05158202
 0.09220135 0.08317897 0.02193747 0.0748414  0.05102844 0.16226302
 0.02025578]]