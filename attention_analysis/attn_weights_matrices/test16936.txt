16936
Test: public void testGetCurrentNode() { Compiler compiler = new Compiler(); ScopeCreator creator = new SyntacticScopeCreator(compiler); ExpectNodeOnEnterScope callback = new ExpectNodeOnEnterScope(); NodeTraversal t = new NodeTraversal(compiler, callback, creator); String code = "" + "var a; " + "function foo() {" + " var b;" + "}"; Node tree = parse(compiler, code); Scope topScope = creator.createScope(tree, null); callback.expect(tree.getFirstChild(), tree); t.traverseWithScope(tree.getFirstChild(), topScope); callback. callback.expect(tree.getFirstChild(), tree.getFirstChild()); t.traverse(tree.getFirstChild()); callback. Node fn = tree.getFirstChild().getNext(); Scope fnScope = creator.createScope(fn, topScope); callback.expect(fn, fn); t.traverseAtScope(fnScope); callback. }
Code: private void parse(AbstractCompiler compiler) { try { ParserRunner.ParseResult result = ParserRunner.parse(sourceFile, sourceFile.getCode(), compiler.getParserConfig(), compiler.getDefaultErrorReporter(), logger_); root = result.ast; compiler.setOldParseTree(sourceFile.getName(), result.oldAst); } catch (IOException e) { compiler.report( JSError.make(AbstractCompiler.READ_ERROR, sourceFile.getName())); } if (root == null || compiler.hasHaltingErrors()) { root = IR.script(); } else { compiler.prepareAst(root); } root.setStaticSourceFile(sourceFile); }
tensor([[0.0224, 0.0119, 0.0233,  ..., 0.0069, 0.0160, 0.0069],
        [0.0166, 0.0108, 0.0172,  ..., 0.0067, 0.0139, 0.0067],
        [0.0184, 0.0112, 0.0253,  ..., 0.0060, 0.0182, 0.0060],
        ...,
        [0.0176, 0.0104, 0.0247,  ..., 0.0059, 0.0186, 0.0059],
        [0.0206, 0.0126, 0.0313,  ..., 0.0069, 0.0177, 0.0069],
        [0.0176, 0.0104, 0.0247,  ..., 0.0059, 0.0186, 0.0059]])