69351
Test: public void test55() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test55"); org.jsoup.safety.Whitelist whitelist1 = org.jsoup.safety.Whitelist.simpleText(); boolean boolean2 = org.jsoup.Jsoup.isValid("hi!", whitelist1); org.jsoup.safety.Cleaner cleaner3 = new org.jsoup.safety.Cleaner(whitelist1); org.jsoup.nodes.Document document5 = org.jsoup.Jsoup.parse("[[hi!^=hi!]]"); org.jsoup.nodes.Document document6 = cleaner3.clean(document5); org.jsoup.select.Evaluator.IndexEquals indexEquals8 = new org.jsoup.select.Evaluator.IndexEquals(0); org.jsoup.nodes.Document document10 = org.jsoup.Jsoup.parse("#document"); org.jsoup.nodes.Document.QuirksMode quirksMode11 = org.jsoup.nodes.Document.QuirksMode.noQuirks; org.jsoup.nodes.Document document12 = document10.quirksMode(quirksMode11); org.jsoup.nodes.Element element14 = document10.html("#text"); org.jsoup.nodes.Document document17 = org.jsoup.Jsoup.parse("", "hi!"); org.jsoup.nodes.Element element18 = document17.parent(); java.lang.String str19 = document17.nodeName(); org.jsoup.nodes.Element element20 = document17.clone(); org.jsoup.nodes.Document document23 = org.jsoup.Jsoup.parse("", "hi!"); org.jsoup.nodes.Element element24 = document23.parent(); java.lang.String str25 = document23.nodeName(); org.jsoup.nodes.Document document26 = document23.normalise(); org.jsoup.select.Elements elements29 = document23.getElementsByAttributeValueNot("#document", "#document"); boolean boolean30 = document17.equals((java.lang.Object) document23); java.util.List<org.jsoup.nodes.DataNode> dataNodeList31 = document23.dataNodes(); org.jsoup.nodes.Node node33 = document23.removeAttr("[hi!$=#document]"); org.jsoup.nodes.Document document34 = document23.normalise(); boolean boolean35 = indexEquals8.matches((org.jsoup.nodes.Element) document10, (org.jsoup.nodes.Element) document23); org.jsoup.nodes.Document document36 = cleaner3.clean(document10); org.jsoup.nodes.Element element37 = document10.body(); org.jsoup.nodes.Document document38 = document10.normalise(); }
Code: public Document clean(Document dirtyDocument) { Validate.notNull(dirtyDocument); Document clean = Document.createShell(dirtyDocument.baseUri()); copySafeNodes(dirtyDocument.body(), clean.body()); return clean; }
tensor([[0.0449, 0.1624, 0.0445, 0.0455, 0.0712, 0.0705, 0.1624, 0.1206, 0.0290,
         0.0876, 0.0286, 0.0245, 0.0508, 0.0357, 0.0216],
        [0.0427, 0.1744, 0.0376, 0.0485, 0.0929, 0.0688, 0.1744, 0.1196, 0.0248,
         0.0747, 0.0207, 0.0207, 0.0519, 0.0315, 0.0168],
        [0.0380, 0.1782, 0.0460, 0.0503, 0.0599, 0.0760, 0.1782, 0.1064, 0.0263,
         0.0823, 0.0244, 0.0232, 0.0563, 0.0381, 0.0165],
        [0.0432, 0.1463, 0.0484, 0.0570, 0.0822, 0.0780, 0.1463, 0.0801, 0.0409,
         0.0894, 0.0295, 0.0319, 0.0666, 0.0343, 0.0260],
        [0.0494, 0.1439, 0.0548, 0.0424, 0.0857, 0.0662, 0.1439, 0.1090, 0.0414,
         0.0754, 0.0299, 0.0318, 0.0560, 0.0408, 0.0292],
        [0.0399, 0.1607, 0.0482, 0.0535, 0.0812, 0.0785, 0.1607, 0.0959, 0.0257,
         0.0806, 0.0273, 0.0304, 0.0571, 0.0383, 0.0219],
        [0.0427, 0.1744, 0.0376, 0.0485, 0.0929, 0.0688, 0.1744, 0.1196, 0.0248,
         0.0747, 0.0207, 0.0207, 0.0519, 0.0315, 0.0168],
        [0.0461, 0.1598, 0.0471, 0.0542, 0.0811, 0.0660, 0.1598, 0.1164, 0.0290,
         0.0769, 0.0357, 0.0292, 0.0462, 0.0290, 0.0233],
        [0.0567, 0.1303, 0.0476, 0.0499, 0.0660, 0.0757, 0.1303, 0.1177, 0.0476,
         0.0716, 0.0384, 0.0394, 0.0626, 0.0382, 0.0283],
        [0.0284, 0.1808, 0.0350, 0.0575, 0.0819, 0.0687, 0.1808, 0.1057, 0.0337,
         0.0854, 0.0248, 0.0199, 0.0574, 0.0248, 0.0152],
        [0.0349, 0.1823, 0.0398, 0.0467, 0.0900, 0.0602, 0.1823, 0.1080, 0.0232,
         0.0795, 0.0237, 0.0197, 0.0571, 0.0396, 0.0130],
        [0.0426, 0.1664, 0.0545, 0.0387, 0.0871, 0.0822, 0.1664, 0.1019, 0.0287,
         0.0764, 0.0262, 0.0275, 0.0535, 0.0269, 0.0209],
        [0.0324, 0.1763, 0.0428, 0.0401, 0.0693, 0.0771, 0.1763, 0.1285, 0.0320,
         0.0870, 0.0206, 0.0265, 0.0460, 0.0265, 0.0187],
        [0.0358, 0.1689, 0.0434, 0.0385, 0.0840, 0.0815, 0.1689, 0.1058, 0.0353,
         0.0778, 0.0218, 0.0231, 0.0661, 0.0306, 0.0186],
        [0.0355, 0.1579, 0.0448, 0.0514, 0.0904, 0.0634, 0.1579, 0.1030, 0.0320,
         0.0899, 0.0235, 0.0197, 0.0772, 0.0339, 0.0195]])