70024
Test: public void test606() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test606"); org.jsoup.select.Evaluator.IsEmpty isEmpty0 = new org.jsoup.select.Evaluator.IsEmpty(); org.jsoup.select.Evaluator.ContainsOwnText containsOwnText2 = new org.jsoup.select.Evaluator.ContainsOwnText("SYSTEM"); org.jsoup.nodes.Document document5 = org.jsoup.Jsoup.parse("", "hi!"); java.lang.String str6 = document5.location(); java.lang.String str7 = document5.baseUri(); org.jsoup.nodes.Document document11 = org.jsoup.Jsoup.parse("", "hi!"); org.jsoup.parser.ParseErrorList parseErrorList13 = null; java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!hi!=\"hi!\"hi!=\"hi!\"", (org.jsoup.nodes.Element) document11, "#root", parseErrorList13); java.lang.String str15 = document11.cssSelector(); org.jsoup.select.Elements elements17 = document11.getElementsByIndexEquals(0); boolean boolean18 = containsOwnText2.matches((org.jsoup.nodes.Element) document5, (org.jsoup.nodes.Element) document11); org.jsoup.nodes.Document document19 = document11.clone(); java.lang.String str20 = document19.cssSelector(); org.jsoup.select.Evaluator.IsRoot isRoot21 = new org.jsoup.select.Evaluator.IsRoot(); org.jsoup.nodes.Document document25 = org.jsoup.Jsoup.parse("", "hi!"); org.jsoup.parser.ParseErrorList parseErrorList27 = null; java.util.List<org.jsoup.nodes.Node> nodeList28 = org.jsoup.parser.Parser.parseFragment("hi!hi!=\"hi!\"hi!=\"hi!\"", (org.jsoup.nodes.Element) document25, "#root", parseErrorList27); java.lang.String str29 = document25.cssSelector(); org.jsoup.nodes.Node node30 = document25.shallowClone(); java.util.List<org.jsoup.nodes.TextNode> textNodeList31 = document25.textNodes(); org.jsoup.nodes.Document document34 = org.jsoup.Jsoup.parse("", "hi!"); org.jsoup.nodes.Element element36 = document34.prepend(""); java.lang.String str38 = document34.attr("hi!"); boolean boolean39 = document34.isBlock(); java.lang.String[] strArray42 = new java.lang.String[] { "", "#root" }; java.util.LinkedHashSet<java.lang.String> strSet43 = new java.util.LinkedHashSet<java.lang.String>(); boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet43, strArray42); org.jsoup.nodes.Element element45 = document34.classNames((java.util.Set<java.lang.String>) strSet43); org.jsoup.nodes.Element element46 = document25.classNames((java.util.Set<java.lang.String>) strSet43); org.jsoup.nodes.Document document49 = org.jsoup.Jsoup.parse("", "hi!"); org.jsoup.nodes.Element element51 = document49.prepend(""); java.lang.StringBuilder stringBuilder52 = org.jsoup.helper.StringUtil.stringBuilder(); org.jsoup.helper.StringUtil.appendNormalisedWhitespace(stringBuilder52, "", true); java.lang.Appendable appendable56 = element51.html((java.lang.Appendable) stringBuilder52); org.jsoup.nodes.Element element57 = element51.empty(); boolean boolean58 = isRoot21.matches((org.jsoup.nodes.Element) document25, element57); org.jsoup.nodes.Document document62 = org.jsoup.Jsoup.parse("", "hi!"); org.jsoup.parser.ParseErrorList parseErrorList64 = null; java.util.List<org.jsoup.nodes.Node> nodeList65 = org.jsoup.parser.Parser.parseFragment("hi!hi!=\"hi!\"hi!=\"hi!\"", (org.jsoup.nodes.Element) document62, "#root", parseErrorList64); org.jsoup.select.Elements elements67 = document62.getElementsByAttributeStarting("#root"); org.jsoup.select.Elements elements69 = document62.getElementsByTag("#root"); org.jsoup.select.Elements elements70 = document62.children(); org.jsoup.select.Elements elements72 = document62.getElementsByIndexGreaterThan(1); org.jsoup.nodes.Element element74 = document62.prependElement("hi!"); org.jsoup.nodes.Document document77 = org.jsoup.Jsoup.parse("", "hi!"); java.lang.String str78 = document77.outerHtml(); java.nio.charset.Charset charset79 = document77.charset(); org.jsoup.nodes.Element element81 = document77.text("<html>\n <head></head>\n <body></body>\n</html>"); boolean boolean82 = isRoot21.matches((org.jsoup.nodes.Element) document62, (org.jsoup.nodes.Element) document77); java.nio.charset.Charset charset83 = document62.charset(); boolean boolean84 = isEmpty0.matches((org.jsoup.nodes.Element) document19, (org.jsoup.nodes.Element) document62); }
Code: public static void appendNormalisedWhitespace(StringBuilder accum, String string, boolean stripLeading) { boolean lastWasWhite = false; boolean reachedNonWhite = false; int len = string.length(); int c; for (int i = 0; i != len; i+= Character.charCount(c)) { c = string.codePointAt(i); if (isActuallyWhitespace(c)) { if ((false) || lastWasWhite) continue; ; lastWasWhite = true; } else if (!isInvisibleChar(c)) { accum.appendCodePoint(c); lastWasWhite = false; reachedNonWhite = true; } } }
tensor([[0.0124, 0.0377, 0.0101,  ..., 0.0054, 0.0054, 0.0054],
        [0.0120, 0.0319, 0.0079,  ..., 0.0057, 0.0057, 0.0057],
        [0.0094, 0.0331, 0.0082,  ..., 0.0050, 0.0050, 0.0050],
        ...,
        [0.0088, 0.0350, 0.0080,  ..., 0.0046, 0.0046, 0.0046],
        [0.0088, 0.0350, 0.0080,  ..., 0.0046, 0.0046, 0.0046],
        [0.0088, 0.0350, 0.0080,  ..., 0.0046, 0.0046, 0.0046]])