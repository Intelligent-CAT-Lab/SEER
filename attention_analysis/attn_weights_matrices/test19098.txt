19098
Test: public void test193() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test193"); com.google.javascript.jscomp.CheckLevel checkLevel3 = com.google.javascript.jscomp.CheckLevel.WARNING; com.google.javascript.jscomp.DiagnosticType diagnosticType6 = com.google.javascript.jscomp.DiagnosticType.warning("", ""); java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "", ": hi!" }; com.google.javascript.jscomp.JSError jSError14 = com.google.javascript.jscomp.JSError.make(": hi!", (int) (short) 1, (int) (short) 1, checkLevel3, diagnosticType6, strArray13); com.google.javascript.rhino.Node node15 = jSError14.node; boolean boolean17 = jSError14.equals((java.lang.Object) ": hi!"); com.google.javascript.jscomp.CheckLevel checkLevel21 = com.google.javascript.jscomp.CheckLevel.WARNING; com.google.javascript.jscomp.DiagnosticType diagnosticType24 = com.google.javascript.jscomp.DiagnosticType.warning("", ""); java.lang.String[] strArray31 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "", ": hi!" }; com.google.javascript.jscomp.JSError jSError32 = com.google.javascript.jscomp.JSError.make(": hi!", (int) (short) 1, (int) (short) 1, checkLevel21, diagnosticType24, strArray31); com.google.javascript.rhino.Node node33 = jSError32.node; boolean boolean35 = jSError32.equals((java.lang.Object) ": hi!"); com.google.javascript.jscomp.CheckLevel checkLevel36 = com.google.javascript.jscomp.CheckLevel.WARNING; com.google.javascript.jscomp.LightweightMessageFormatter lightweightMessageFormatter37 = com.google.javascript.jscomp.LightweightMessageFormatter.withoutSource(); com.google.javascript.jscomp.CheckLevel checkLevel41 = com.google.javascript.jscomp.CheckLevel.WARNING; com.google.javascript.jscomp.DiagnosticType diagnosticType44 = com.google.javascript.jscomp.DiagnosticType.warning("", ""); java.lang.String[] strArray51 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "", ": hi!" }; com.google.javascript.jscomp.JSError jSError52 = com.google.javascript.jscomp.JSError.make(": hi!", (int) (short) 1, (int) (short) 1, checkLevel41, diagnosticType44, strArray51); com.google.javascript.rhino.Node node53 = jSError52.node; boolean boolean55 = jSError52.equals((java.lang.Object) ": hi!"); com.google.javascript.jscomp.CheckLevel checkLevel56 = jSError52.level; java.lang.String str57 = lightweightMessageFormatter37.getLevelName(checkLevel56); com.google.javascript.jscomp.CheckLevel checkLevel61 = com.google.javascript.jscomp.CheckLevel.WARNING; com.google.javascript.jscomp.DiagnosticType diagnosticType64 = com.google.javascript.jscomp.DiagnosticType.warning("", ""); java.lang.String[] strArray71 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "", ": hi!" }; com.google.javascript.jscomp.JSError jSError72 = com.google.javascript.jscomp.JSError.make(": hi!", (int) (short) 1, (int) (short) 1, checkLevel61, diagnosticType64, strArray71); com.google.javascript.rhino.Node node73 = jSError72.node; java.lang.String str74 = lightweightMessageFormatter37.formatError(jSError72); java.lang.String str75 = jSError32.format(checkLevel36, (com.google.javascript.jscomp.MessageFormatter) lightweightMessageFormatter37); boolean boolean76 = jSError14.equals((java.lang.Object) lightweightMessageFormatter37); com.google.javascript.rhino.Node node77 = jSError14.node; com.google.javascript.jscomp.DiagnosticType diagnosticType80 = com.google.javascript.jscomp.DiagnosticType.disabled("", ": hi!"); boolean boolean81 = jSError14.equals((java.lang.Object) ": hi!"); }
Code: private String format(JSError error, boolean warning) { SourceExcerptProvider source = getSource(); String sourceExcerpt = source == null ? null : excerpt.get( source, error.sourceName, error.lineNumber, excerptFormatter); StringBuilder b = new StringBuilder(); if (error.sourceName != null) { b.append(error.sourceName); if (error.lineNumber > 0) { b.append(':'); b.append(error.lineNumber); } b.append(": "); } ; b.append(" - "); b.append(error.description); b.append('\n'); if (sourceExcerpt != null) { b.append(sourceExcerpt); b.append('\n'); int charno = error.getCharno(); if (false && charno <= sourceExcerpt.length()) { for (int i = -1; i != charno; i++) { char c = sourceExcerpt.charAt(i); if (Character.isWhitespace(c)) { b.append(c); } else { b.append(' '); } } b.append("^\n"); } } return b.toString(); }
tensor([[0.0100, 0.0079, 0.0054,  ..., 0.0069, 0.0172, 0.0032],
        [0.0080, 0.0072, 0.0051,  ..., 0.0067, 0.0127, 0.0027],
        [0.0084, 0.0071, 0.0035,  ..., 0.0057, 0.0142, 0.0020],
        ...,
        [0.0088, 0.0077, 0.0036,  ..., 0.0058, 0.0157, 0.0025],
        [0.0091, 0.0084, 0.0034,  ..., 0.0065, 0.0137, 0.0019],
        [0.0075, 0.0086, 0.0044,  ..., 0.0104, 0.0168, 0.0027]])