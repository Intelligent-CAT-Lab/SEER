70269
Test: public void test042() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test042"); org.apache.commons.jxpath.ri.QName qName0 = null; org.apache.commons.jxpath.ri.compiler.VariableReference variableReference1 = new org.apache.commons.jxpath.ri.compiler.VariableReference(qName0); org.apache.commons.jxpath.ri.compiler.Constant constant3 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant5 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant7 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.NameAttributeTest nameAttributeTest8 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest((org.apache.commons.jxpath.ri.compiler.Expression) constant5, (org.apache.commons.jxpath.ri.compiler.Expression) constant7); org.apache.commons.jxpath.ri.compiler.CoreOperationEqual coreOperationEqual9 = new org.apache.commons.jxpath.ri.compiler.CoreOperationEqual((org.apache.commons.jxpath.ri.compiler.Expression) constant3, (org.apache.commons.jxpath.ri.compiler.Expression) nameAttributeTest8); boolean boolean10 = nameAttributeTest8.isContextDependent(); org.apache.commons.jxpath.ri.compiler.Constant constant12 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant14 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.NameAttributeTest nameAttributeTest15 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest((org.apache.commons.jxpath.ri.compiler.Expression) constant12, (org.apache.commons.jxpath.ri.compiler.Expression) constant14); org.apache.commons.jxpath.ri.EvalContext evalContext16 = null; org.apache.commons.jxpath.ri.compiler.Constant constant18 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant20 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.NameAttributeTest nameAttributeTest21 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest((org.apache.commons.jxpath.ri.compiler.Expression) constant18, (org.apache.commons.jxpath.ri.compiler.Expression) constant20); org.apache.commons.jxpath.ri.compiler.Constant constant23 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant25 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.NameAttributeTest nameAttributeTest26 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest((org.apache.commons.jxpath.ri.compiler.Expression) constant23, (org.apache.commons.jxpath.ri.compiler.Expression) constant25); boolean boolean27 = nameAttributeTest15.equal(evalContext16, (org.apache.commons.jxpath.ri.compiler.Expression) constant18, (org.apache.commons.jxpath.ri.compiler.Expression) nameAttributeTest26); org.apache.commons.jxpath.ri.compiler.Constant constant29 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant31 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant33 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.NameAttributeTest nameAttributeTest34 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest((org.apache.commons.jxpath.ri.compiler.Expression) constant31, (org.apache.commons.jxpath.ri.compiler.Expression) constant33); org.apache.commons.jxpath.ri.compiler.CoreOperationEqual coreOperationEqual35 = new org.apache.commons.jxpath.ri.compiler.CoreOperationEqual((org.apache.commons.jxpath.ri.compiler.Expression) constant29, (org.apache.commons.jxpath.ri.compiler.Expression) nameAttributeTest34); org.apache.commons.jxpath.ri.compiler.Constant constant37 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant39 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant41 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.NameAttributeTest nameAttributeTest42 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest((org.apache.commons.jxpath.ri.compiler.Expression) constant39, (org.apache.commons.jxpath.ri.compiler.Expression) constant41); org.apache.commons.jxpath.ri.compiler.CoreOperationEqual coreOperationEqual43 = new org.apache.commons.jxpath.ri.compiler.CoreOperationEqual((org.apache.commons.jxpath.ri.compiler.Expression) constant37, (org.apache.commons.jxpath.ri.compiler.Expression) nameAttributeTest42); boolean boolean44 = org.apache.commons.jxpath.util.ValueUtils.isCollection((java.lang.Object) constant37); org.apache.commons.jxpath.ri.compiler.Expression[] expressionArray45 = new org.apache.commons.jxpath.ri.compiler.Expression[] { nameAttributeTest26, constant29, constant37 }; nameAttributeTest8.args = expressionArray45; org.apache.commons.jxpath.ri.EvalContext evalContext47 = null; org.apache.commons.jxpath.ri.compiler.NodeTest nodeTest48 = null; org.apache.commons.jxpath.ri.axes.SelfContext selfContext49 = new org.apache.commons.jxpath.ri.axes.SelfContext(evalContext47, nodeTest48); int int50 = selfContext49.getCurrentPosition(); org.apache.commons.jxpath.ri.compiler.Constant constant52 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant54 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.NameAttributeTest nameAttributeTest55 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest((org.apache.commons.jxpath.ri.compiler.Expression) constant52, (org.apache.commons.jxpath.ri.compiler.Expression) constant54); org.apache.commons.jxpath.ri.EvalContext evalContext56 = null; org.apache.commons.jxpath.ri.compiler.NodeTest nodeTest57 = null; org.apache.commons.jxpath.ri.axes.SelfContext selfContext58 = new org.apache.commons.jxpath.ri.axes.SelfContext(evalContext56, nodeTest57); java.lang.Object obj59 = constant52.computeValue(evalContext56); org.apache.commons.jxpath.ri.compiler.Constant constant61 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant63 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant65 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.NameAttributeTest nameAttributeTest66 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest((org.apache.commons.jxpath.ri.compiler.Expression) constant63, (org.apache.commons.jxpath.ri.compiler.Expression) constant65); org.apache.commons.jxpath.ri.compiler.CoreOperationEqual coreOperationEqual67 = new org.apache.commons.jxpath.ri.compiler.CoreOperationEqual((org.apache.commons.jxpath.ri.compiler.Expression) constant61, (org.apache.commons.jxpath.ri.compiler.Expression) nameAttributeTest66); boolean boolean68 = nameAttributeTest8.equal((org.apache.commons.jxpath.ri.EvalContext) selfContext49, (org.apache.commons.jxpath.ri.compiler.Expression) constant52, (org.apache.commons.jxpath.ri.compiler.Expression) nameAttributeTest66); try { java.lang.Object obj69 = variableReference1.compute((org.apache.commons.jxpath.ri.EvalContext) selfContext49); } catch (java.lang.NullPointerException e) { } }
Code: protected boolean equal(EvalContext context,Expression left,Expression right){Object l = left.compute(context);Object r = right.compute(context);if (l instanceof InitialContext || l instanceof SelfContext) {;}if (r instanceof InitialContext || r instanceof SelfContext) {r = ((EvalContext) r).getSingleNodePointer();}if (l instanceof Collection) {l = ((Collection) l).iterator();}if (r instanceof Collection) {;}if ((l instanceof Iterator) && !(r instanceof Iterator)) {return contains((Iterator) l, r);}if (!(l instanceof Iterator) && (r instanceof Iterator)) {return contains((Iterator) r, l);}if (l instanceof Iterator && r instanceof Iterator) {return findMatch((Iterator) l, (Iterator) r);}return equal(l, r);}
tensor([[0.0173, 0.0302, 0.0153,  ..., 0.0088, 0.0244, 0.0205],
        [0.0175, 0.0371, 0.0162,  ..., 0.0116, 0.0323, 0.0219],
        [0.0195, 0.0281, 0.0153,  ..., 0.0081, 0.0291, 0.0248],
        ...,
        [0.0153, 0.0255, 0.0170,  ..., 0.0113, 0.0271, 0.0217],
        [0.0178, 0.0250, 0.0186,  ..., 0.0119, 0.0305, 0.0200],
        [0.0153, 0.0304, 0.0158,  ..., 0.0102, 0.0279, 0.0183]])