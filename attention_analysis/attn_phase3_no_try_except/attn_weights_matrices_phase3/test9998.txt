9998
Test: public void test2() throws Throwable { Integer integer0 = new Integer((-1588)); Range<Integer> range0 = Range.between(integer0, integer0); Range<Integer> range1 = Range.between(integer0, integer0); boolean boolean0 = range0.isBeforeRange(range1); }
Code: public boolean isBeforeRange(final Range<T> otherRange) { if (otherRange == null) { return false; } return isBefore(otherRange.minimum); }
[[0.04471216 0.11108492 0.06202774 0.06202774 0.06202774 0.06002663
 0.12056114 0.06202774 0.07040872 0.02394614 0.06002663 0.04925787
 0.06229958 0.01913981 0.04925787 0.06202774 0.0191398 ]
[0.03078463 0.16839717 0.05962633 0.05962633 0.05962633 0.07170494
 0.11230516 0.05962633 0.04695497 0.01545408 0.07170494 0.0490877
 0.05908672 0.01365018 0.0490877  0.05962633 0.01365018]
[0.03725516 0.13864306 0.06197485 0.06197485 0.06197485 0.06019773
 0.09193225 0.06197485 0.07040615 0.02663886 0.06019773 0.04524739
 0.07360677 0.02037665 0.04524739 0.06197485 0.02037665]
[0.03725516 0.13864306 0.06197485 0.06197485 0.06197485 0.06019773
 0.09193225 0.06197485 0.07040615 0.02663886 0.06019773 0.04524739
 0.07360677 0.02037665 0.04524739 0.06197485 0.02037665]
[0.03725516 0.13864306 0.06197485 0.06197485 0.06197485 0.06019773
 0.09193225 0.06197485 0.07040615 0.02663886 0.06019773 0.04524739
 0.07360677 0.02037665 0.04524739 0.06197485 0.02037665]
[0.04711135 0.1008987  0.06063675 0.06063675 0.06063675 0.07816964
 0.08082071 0.06063675 0.04985057 0.02999059 0.07816964 0.05390198
 0.06965017 0.02717548 0.05390198 0.06063675 0.02717548]
[0.02778692 0.1642626  0.0616627  0.0616627  0.0616627  0.0639243
 0.15873244 0.0616627  0.05492654 0.01052892 0.0639243  0.03694358
 0.05456794 0.00957272 0.03694358 0.0616627  0.00957272]
[0.03725516 0.13864306 0.06197485 0.06197485 0.06197485 0.06019773
 0.09193225 0.06197485 0.07040615 0.02663886 0.06019773 0.04524739
 0.07360677 0.02037665 0.04524739 0.06197485 0.02037665]
[0.02695248 0.20831336 0.04187119 0.04187119 0.04187119 0.07626723
 0.14782645 0.04187119 0.06545369 0.01739936 0.07626723 0.04481881
 0.05190177 0.01531244 0.04481881 0.04187119 0.01531245]
[0.03198012 0.16337593 0.0554518  0.0554518  0.0554518  0.07725887
 0.14371744 0.0554518  0.05855274 0.01920374 0.07725887 0.03900362
 0.05016381 0.01161112 0.03900362 0.0554518  0.01161112]
[0.04711135 0.1008987  0.06063675 0.06063675 0.06063675 0.07816964
 0.08082071 0.06063675 0.04985057 0.02999059 0.07816964 0.05390198
 0.06965017 0.02717548 0.05390198 0.06063675 0.02717548]
[0.03048088 0.15668558 0.06039182 0.06039182 0.06039182 0.06035241
 0.12522213 0.06039182 0.0584287  0.01789928 0.06035241 0.04412283
 0.06737211 0.01650088 0.04412283 0.06039182 0.01650088]
[0.0438103  0.11386799 0.06249829 0.06249829 0.06249829 0.06101581
 0.09120883 0.06249829 0.0592216  0.02724015 0.06101581 0.05114826
 0.0785668  0.02463237 0.05114826 0.06249829 0.02463237]
[0.03033596 0.10483019 0.05649845 0.05649845 0.05649845 0.07930962
 0.11736934 0.05649845 0.05268515 0.01897063 0.07930962 0.06664439
 0.06740437 0.01700205 0.06664439 0.05649845 0.01700205]
[0.03048088 0.15668558 0.06039182 0.06039182 0.06039182 0.06035241
 0.12522213 0.06039182 0.0584287  0.01789928 0.06035241 0.04412283
 0.06737211 0.01650088 0.04412283 0.06039182 0.01650088]
[0.03725516 0.13864306 0.06197485 0.06197485 0.06197485 0.06019773
 0.09193225 0.06197485 0.07040615 0.02663886 0.06019773 0.04524739
 0.07360677 0.02037665 0.04524739 0.06197485 0.02037665]
[0.03033596 0.10483023 0.05649844 0.05649844 0.05649844 0.07930963
 0.11736932 0.05649844 0.05268515 0.01897063 0.07930963 0.06664439
 0.0674044  0.01700206 0.06664439 0.05649844 0.01700206]]