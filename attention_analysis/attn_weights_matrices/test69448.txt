69448
Test: public void test41() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test41"); org.jsoup.safety.Whitelist whitelist1 = org.jsoup.safety.Whitelist.basic(); java.lang.String[] strArray6 = new java.lang.String[] { "#document", "#document", "#document", "hi!" }; org.jsoup.safety.Whitelist whitelist7 = whitelist1.addTags(strArray6); org.jsoup.safety.Whitelist whitelist10 = org.jsoup.safety.Whitelist.simpleText(); boolean boolean11 = org.jsoup.Jsoup.isValid("hi!", whitelist10); org.jsoup.safety.Cleaner cleaner12 = new org.jsoup.safety.Cleaner(whitelist10); org.jsoup.nodes.Document document15 = org.jsoup.Jsoup.parse("", "hi!"); org.jsoup.nodes.Element element16 = document15.parent(); java.lang.String str17 = document15.nodeName(); org.jsoup.nodes.Element element18 = document15.clone(); org.jsoup.nodes.Document document21 = org.jsoup.Jsoup.parse("", "hi!"); org.jsoup.nodes.Element element22 = document21.parent(); java.lang.String str23 = document21.nodeName(); org.jsoup.nodes.Element element24 = document21.body(); org.jsoup.nodes.Element element25 = element18.appendChild((org.jsoup.nodes.Node) document21); org.jsoup.nodes.Node node26 = element25.clone(); org.jsoup.nodes.Document document27 = node26.ownerDocument(); org.jsoup.nodes.Document document28 = cleaner12.clean(document27); org.jsoup.select.Evaluator.Class class30 = new org.jsoup.select.Evaluator.Class("#root"); org.jsoup.nodes.Document document33 = org.jsoup.Jsoup.parse("", "hi!"); java.util.List<org.jsoup.nodes.TextNode> textNodeList34 = document33.textNodes(); org.jsoup.nodes.Document document37 = org.jsoup.Jsoup.parseBodyFragment("#document", ""); org.jsoup.nodes.Document document38 = document37.ownerDocument(); java.lang.String str39 = document38.val(); boolean boolean40 = class30.matches((org.jsoup.nodes.Element) document33, (org.jsoup.nodes.Element) document38); boolean boolean41 = cleaner12.isValid(document33); java.util.List<org.jsoup.nodes.TextNode> textNodeList42 = document33.textNodes(); org.jsoup.nodes.Attribute attribute45 = org.jsoup.nodes.Attribute.createFromEncoded("#root", ":containsOwn(hi!"); org.jsoup.nodes.Attribute attribute46 = attribute45.clone(); java.lang.String str47 = attribute45.toString(); boolean boolean48 = whitelist1.isSafeAttribute(":lt(100)", (org.jsoup.nodes.Element) document33, attribute45); java.lang.String str49 = org.jsoup.Jsoup.clean("<html>\n <head></head>\n <body>\n :containsOwn(hi!\n </body>\n</html>", whitelist1); org.jsoup.safety.Whitelist whitelist53 = whitelist1.addEnforcedAttribute("[##document]", ":contains([hi!$=#document]", "[^]"); }
Code: public Document clean(Document dirtyDocument){;Document clean = Document.createShell(dirtyDocument.baseUri());;return clean;}
tensor([[0.0717, 0.2616, 0.0721, 0.0553, 0.1921, 0.0461, 0.2210, 0.0801],
        [0.0669, 0.2763, 0.0597, 0.0479, 0.1887, 0.0389, 0.2377, 0.0838],
        [0.0578, 0.2717, 0.0716, 0.0414, 0.1623, 0.0399, 0.2808, 0.0745],
        [0.0659, 0.2931, 0.0683, 0.0527, 0.1806, 0.0571, 0.2108, 0.0714],
        [0.0747, 0.2567, 0.0755, 0.0501, 0.1885, 0.0472, 0.2265, 0.0809],
        [0.0864, 0.1985, 0.0728, 0.0792, 0.1795, 0.0724, 0.2264, 0.0850],
        [0.0496, 0.2695, 0.0765, 0.0504, 0.1979, 0.0415, 0.2308, 0.0839],
        [0.0712, 0.2452, 0.0591, 0.0609, 0.1680, 0.0544, 0.2515, 0.0896]])