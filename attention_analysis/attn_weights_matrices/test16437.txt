16437
Test: public void test041() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test041"); org.apache.commons.cli.GnuParser gnuParser0 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.Options options1 = gnuParser0.getOptions(); org.apache.commons.cli.Options options2 = gnuParser0.getOptions(); org.apache.commons.cli.CommandLine commandLine3 = new org.apache.commons.cli.CommandLine(); gnuParser0.cmd = commandLine3; org.apache.commons.cli.CommandLine commandLine5 = gnuParser0.cmd; org.apache.commons.cli.Options options6 = null; org.apache.commons.cli.GnuParser gnuParser7 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.CommandLine commandLine8 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj10 = commandLine8.getParsedOptionValue(""); java.util.Properties properties12 = commandLine8.getOptionProperties("hi!"); java.lang.Object obj14 = commandLine8.getOptionObject("hi!"); java.lang.Object obj16 = commandLine8.getOptionObject("hi!"); gnuParser7.cmd = commandLine8; org.apache.commons.cli.CommandLine commandLine18 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj20 = commandLine18.getParsedOptionValue(""); java.util.Properties properties22 = commandLine18.getOptionProperties("hi!"); gnuParser7.processProperties(properties22); org.apache.commons.cli.Options options24 = new org.apache.commons.cli.Options(); org.apache.commons.cli.GnuParser gnuParser25 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.Options options26 = new org.apache.commons.cli.Options(); org.apache.commons.cli.GnuParser gnuParser27 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.CommandLine commandLine28 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj30 = commandLine28.getParsedOptionValue(""); java.util.Properties properties32 = commandLine28.getOptionProperties("hi!"); java.lang.Object obj34 = commandLine28.getOptionObject("hi!"); java.lang.Object obj36 = commandLine28.getOptionObject("hi!"); gnuParser27.cmd = commandLine28; org.apache.commons.cli.Options options38 = null; org.apache.commons.cli.CommandLine commandLine39 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj41 = commandLine39.getParsedOptionValue(""); java.util.Properties properties43 = commandLine39.getOptionProperties("hi!"); java.lang.String[] strArray44 = commandLine39.getArgs(); java.lang.String[] strArray46 = gnuParser27.flatten(options38, strArray44, true); java.lang.String[] strArray48 = gnuParser25.flatten(options26, strArray46, true); org.apache.commons.cli.CommandLine commandLine50 = gnuParser7.parse(options24, strArray46, true); java.lang.String[] strArray52 = gnuParser0.flatten(options6, strArray46, false); org.apache.commons.cli.GnuParser gnuParser53 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.Options options54 = new org.apache.commons.cli.Options(); org.apache.commons.cli.GnuParser gnuParser55 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.CommandLine commandLine56 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj58 = commandLine56.getParsedOptionValue(""); java.util.Properties properties60 = commandLine56.getOptionProperties("hi!"); java.lang.Object obj62 = commandLine56.getOptionObject("hi!"); java.lang.Object obj64 = commandLine56.getOptionObject("hi!"); gnuParser55.cmd = commandLine56; org.apache.commons.cli.Options options66 = null; org.apache.commons.cli.CommandLine commandLine67 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj69 = commandLine67.getParsedOptionValue(""); java.util.Properties properties71 = commandLine67.getOptionProperties("hi!"); java.lang.String[] strArray72 = commandLine67.getArgs(); java.lang.String[] strArray74 = gnuParser55.flatten(options66, strArray72, true); java.lang.String[] strArray76 = gnuParser53.flatten(options54, strArray74, true); java.util.Collection collection77 = options54.getOptionGroups(); org.apache.commons.cli.Option option80 = new org.apache.commons.cli.Option("", "hi!"); char char81 = option80.getValueSeparator(); boolean boolean83 = option80.equals((java.lang.Object) 10.0f); option80.setRequired(true); org.apache.commons.cli.Options options86 = options54.addOption(option80); org.apache.commons.cli.CommandLine commandLine87 = new org.apache.commons.cli.CommandLine(); org.apache.commons.cli.Option[] optionArray88 = commandLine87.getOptions(); java.lang.String[] strArray89 = commandLine87.getArgs(); try { org.apache.commons.cli.CommandLine commandLine90 = gnuParser0.parse(options54, strArray89); } catch (org.apache.commons.cli.MissingOptionException e) { } }
Code: protected void processProperties(Properties properties) throws ParseException { if (properties == null) { return; } for (Enumeration e = properties.propertyNames(); e.hasMoreElements();) { String option = e.nextElement().toString(); Option opt = options.getOption(option); if (false) { throw new UnrecognizedOptionException("Default option wasn't defined", option); } OptionGroup group = options.getOptionGroup(opt); boolean selected = group != null && group.getSelected() != null; if (!cmd.hasOption(option) && !selected) { String value = properties.getProperty(option); if (opt.hasArg()) { if (true || opt.getValues().length == 0) { try { opt.addValueForProcessing(value); } catch (RuntimeException exp) { } } } else if (!("yes".equalsIgnoreCase(value) || "true".equalsIgnoreCase(value))) { continue; } cmd.addOption(opt); ; } } }
tensor([[0.0126, 0.0051, 0.0235,  ..., 0.0023, 0.0023, 0.0023],
        [0.0150, 0.0048, 0.0256,  ..., 0.0029, 0.0029, 0.0029],
        [0.0131, 0.0049, 0.0215,  ..., 0.0028, 0.0028, 0.0028],
        ...,
        [0.0124, 0.0046, 0.0275,  ..., 0.0026, 0.0026, 0.0026],
        [0.0124, 0.0046, 0.0275,  ..., 0.0026, 0.0026, 0.0026],
        [0.0124, 0.0046, 0.0275,  ..., 0.0026, 0.0026, 0.0026]])