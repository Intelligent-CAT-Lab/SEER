101238
Test: public void test144() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test144"); org.joda.time.JodaTimePermission jodaTimePermission1 = new org.joda.time.JodaTimePermission("DateTimeField[weekyearOfCentury]"); org.joda.time.LocalDate localDate2 = new org.joda.time.LocalDate(); boolean boolean3 = org.joda.time.DateTimeUtils.isContiguous((org.joda.time.ReadablePartial) localDate2); jodaTimePermission1.checkGuard((java.lang.Object) boolean3); java.lang.String str5 = jodaTimePermission1.getActions(); org.joda.time.chrono.ISOChronology iSOChronology6 = org.joda.time.chrono.ISOChronology.getInstance(); java.lang.String str7 = iSOChronology6.toString(); org.joda.time.Chronology chronology8 = iSOChronology6.withUTC(); org.joda.time.DateTimeField dateTimeField9 = iSOChronology6.millisOfDay(); org.joda.time.LocalDate localDate10 = new org.joda.time.LocalDate(); org.joda.time.DateTime dateTime11 = localDate10.toDateTimeAtCurrentTime(); int[] intArray12 = localDate10.getValues(); org.joda.time.LocalDate localDate14 = localDate10.minusWeeks((int) (byte) 1); int[] intArray16 = iSOChronology6.get((org.joda.time.ReadablePartial) localDate10, (long) (short) -1); org.joda.time.LocalDate localDate17 = new org.joda.time.LocalDate(); boolean boolean18 = org.joda.time.DateTimeUtils.isContiguous((org.joda.time.ReadablePartial) localDate17); org.joda.time.DateTimeZone dateTimeZone20 = org.joda.time.DateTimeZone.forOffsetMillis(0); org.joda.time.Interval interval21 = localDate17.toInterval(dateTimeZone20); org.joda.time.DurationFieldType durationFieldType22 = org.joda.time.DurationFieldType.years(); java.lang.String str23 = durationFieldType22.toString(); org.joda.time.LocalDate localDate25 = localDate17.withFieldAdded(durationFieldType22, 36); int int26 = localDate10.compareTo((org.joda.time.ReadablePartial) localDate17); int int27 = localDate10.getEra(); boolean boolean28 = jodaTimePermission1.equals((java.lang.Object) localDate10); java.lang.String str29 = jodaTimePermission1.getActions(); java.security.PermissionCollection permissionCollection30 = jodaTimePermission1.newPermissionCollection(); org.joda.time.JodaTimePermission jodaTimePermission32 = new org.joda.time.JodaTimePermission("DateTimeField[weekyearOfCentury]"); org.joda.time.LocalDate localDate33 = new org.joda.time.LocalDate(); boolean boolean34 = org.joda.time.DateTimeUtils.isContiguous((org.joda.time.ReadablePartial) localDate33); jodaTimePermission32.checkGuard((java.lang.Object) boolean34); java.lang.String str36 = jodaTimePermission32.getActions(); boolean boolean37 = jodaTimePermission1.implies((java.security.Permission) jodaTimePermission32); }
Code: public int compareTo(DurationField durationField) { return 0; }
[[0.11504672 0.07088312 0.22071868 0.09066784 0.16294885 0.12779254
 0.16083539 0.05110686]
[0.07928596 0.0558209  0.24616511 0.09625609 0.18735772 0.12893778
 0.16655207 0.03962431]
[0.11457121 0.05334648 0.23531055 0.09587287 0.18281381 0.1058514
 0.17308146 0.03915217]
[0.08398679 0.04311445 0.26733202 0.09647291 0.1708708  0.1196094
 0.17559966 0.04301397]
[0.10497404 0.04898982 0.24481355 0.10018218 0.1817163  0.11911991
 0.13819627 0.06200793]
[0.07951632 0.04447542 0.31265107 0.08226886 0.17065464 0.11283726
 0.15159996 0.04599651]
[0.10038751 0.05522908 0.22225319 0.10987818 0.1732733  0.12319817
 0.16946179 0.04631881]
[0.07304599 0.0548218  0.22016698 0.0877915  0.19865648 0.16269505
 0.16059923 0.04222292]]