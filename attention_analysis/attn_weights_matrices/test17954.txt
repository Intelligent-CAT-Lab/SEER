17954
Test: public void test34() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test34"); com.google.javascript.jscomp.AbstractCompiler abstractCompiler0 = null; com.google.javascript.jscomp.ReferenceCollectingCallback.Behavior behavior1 = null; com.google.javascript.jscomp.ReferenceCollectingCallback referenceCollectingCallback2 = new com.google.javascript.jscomp.ReferenceCollectingCallback(abstractCompiler0, behavior1); java.util.Set<com.google.javascript.jscomp.Scope.Var> varSet3 = referenceCollectingCallback2.getReferencedVariables(); com.google.javascript.jscomp.Scope.Var var4 = null; com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection referenceCollection5 = referenceCollectingCallback2.getReferenceCollection(var4); com.google.javascript.jscomp.AbstractCompiler abstractCompiler6 = null; com.google.javascript.jscomp.Compiler compiler7 = new com.google.javascript.jscomp.Compiler(); com.google.javascript.jscomp.PerformanceTracker performanceTracker8 = compiler7.tracker; com.google.javascript.jscomp.CheckGlobalThis checkGlobalThis9 = new com.google.javascript.jscomp.CheckGlobalThis((com.google.javascript.jscomp.AbstractCompiler) compiler7); com.google.javascript.jscomp.NodeTraversal nodeTraversal10 = new com.google.javascript.jscomp.NodeTraversal(abstractCompiler6, (com.google.javascript.jscomp.NodeTraversal.Callback) checkGlobalThis9); com.google.javascript.rhino.ErrorReporter errorReporter11 = null; com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry12 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter11); com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType> jSTypeStaticScope13 = null; com.google.javascript.rhino.jstype.JSType jSType18 = jSTypeRegistry12.getType(jSTypeStaticScope13, "hi!", "hi!", 0, 1); java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable20 = jSTypeRegistry12.getEachReferenceTypeWithProperty(""); com.google.javascript.rhino.jstype.FunctionParamBuilder functionParamBuilder21 = new com.google.javascript.rhino.jstype.FunctionParamBuilder(jSTypeRegistry12); com.google.javascript.rhino.Node node22 = functionParamBuilder21.build(); com.google.javascript.rhino.ScriptOrFnNode scriptOrFnNode27 = new com.google.javascript.rhino.ScriptOrFnNode(2, 10, (int) '4'); int int29 = scriptOrFnNode27.getIntProp(29); boolean boolean30 = com.google.javascript.jscomp.NodeUtil.isForIn((com.google.javascript.rhino.Node) scriptOrFnNode27); boolean boolean31 = com.google.javascript.jscomp.NodeUtil.isImmutableValue((com.google.javascript.rhino.Node) scriptOrFnNode27); com.google.javascript.rhino.ScriptOrFnNode scriptOrFnNode35 = new com.google.javascript.rhino.ScriptOrFnNode(2, 10, (int) '4'); scriptOrFnNode35.removeProp(1); com.google.javascript.rhino.Node node38 = scriptOrFnNode35.cloneTree(); boolean boolean39 = scriptOrFnNode27.isEquivalentToTyped((com.google.javascript.rhino.Node) scriptOrFnNode35); com.google.javascript.jscomp.CheckLevel checkLevel40 = null; com.google.javascript.jscomp.DiagnosticType diagnosticType41 = com.google.javascript.jscomp.ProcessDefines.UNKNOWN_DEFINE_WARNING; java.lang.String[] strArray42 = null; com.google.javascript.jscomp.JSError jSError43 = com.google.javascript.jscomp.JSError.make("com.google.javascript.rhino.EcmaError: LinkedGraph: hi! (hi!#100)", (com.google.javascript.rhino.Node) scriptOrFnNode27, checkLevel40, diagnosticType41, strArray42); int int44 = scriptOrFnNode27.getEncodedSourceEnd(); java.lang.String str45 = com.google.javascript.jscomp.NodeUtil.getSourceName((com.google.javascript.rhino.Node) scriptOrFnNode27); referenceCollectingCallback2.visit(nodeTraversal10, node22, (com.google.javascript.rhino.Node) scriptOrFnNode27); java.util.Set<com.google.javascript.jscomp.Scope.Var> varSet47 = referenceCollectingCallback2.getReferencedVariables(); com.google.javascript.jscomp.AbstractCompiler abstractCompiler48 = null; com.google.javascript.jscomp.Compiler compiler49 = new com.google.javascript.jscomp.Compiler(); com.google.javascript.jscomp.PerformanceTracker performanceTracker50 = compiler49.tracker; com.google.javascript.jscomp.CheckGlobalThis checkGlobalThis51 = new com.google.javascript.jscomp.CheckGlobalThis((com.google.javascript.jscomp.AbstractCompiler) compiler49); com.google.javascript.jscomp.NodeTraversal nodeTraversal52 = new com.google.javascript.jscomp.NodeTraversal(abstractCompiler48, (com.google.javascript.jscomp.NodeTraversal.Callback) checkGlobalThis51); com.google.javascript.jscomp.ReferenceCollectingCallback.BasicBlock basicBlock53 = null; com.google.javascript.rhino.ScriptOrFnNode scriptOrFnNode57 = new com.google.javascript.rhino.ScriptOrFnNode(2, 10, (int) '4'); int int59 = scriptOrFnNode57.getIntProp(29); boolean boolean60 = com.google.javascript.jscomp.NodeUtil.isForIn((com.google.javascript.rhino.Node) scriptOrFnNode57); boolean boolean61 = com.google.javascript.jscomp.NodeUtil.isImmutableValue((com.google.javascript.rhino.Node) scriptOrFnNode57); com.google.javascript.rhino.ScriptOrFnNode scriptOrFnNode65 = new com.google.javascript.rhino.ScriptOrFnNode(2, 10, (int) '4'); scriptOrFnNode65.removeProp(1); com.google.javascript.rhino.Node node68 = scriptOrFnNode65.cloneTree(); boolean boolean69 = scriptOrFnNode57.isEquivalentToTyped((com.google.javascript.rhino.Node) scriptOrFnNode65); scriptOrFnNode65.putBooleanProp((int) (byte) 1, true); boolean boolean73 = com.google.javascript.jscomp.NodeUtil.isCallOrNew((com.google.javascript.rhino.Node) scriptOrFnNode65); com.google.javascript.jscomp.ReferenceCollectingCallback.BasicBlock basicBlock74 = new com.google.javascript.jscomp.ReferenceCollectingCallback.BasicBlock(basicBlock53, (com.google.javascript.rhino.Node) scriptOrFnNode65); scriptOrFnNode65.removeParamOrVar(""); java.util.logging.Logger logger77 = com.google.javascript.jscomp.Tracer.logger; com.google.javascript.jscomp.LoggerErrorManager loggerErrorManager78 = new com.google.javascript.jscomp.LoggerErrorManager(logger77); loggerErrorManager78.generateReport(); com.google.javascript.jscomp.CheckLevel checkLevel80 = com.google.javascript.jscomp.CheckLevel.ERROR; com.google.javascript.jscomp.DiagnosticType diagnosticType84 = com.google.javascript.jscomp.SyntacticScopeCreator.VAR_ARGUMENTS_SHADOWED_ERROR; java.lang.String[] strArray85 = com.google.javascript.rhino.ScriptRuntime.emptyStrings; com.google.javascript.jscomp.JSError jSError86 = com.google.javascript.jscomp.JSError.make("", 100, (int) ' ', diagnosticType84, strArray85); java.lang.String str87 = jSError86.sourceName; loggerErrorManager78.println(checkLevel80, jSError86); com.google.javascript.jscomp.DiagnosticType diagnosticType89 = com.google.javascript.jscomp.CheckAccessControls.DEPRECATED_CLASS; java.lang.String[] strArray90 = com.google.javascript.rhino.ScriptRuntime.emptyStrings; com.google.javascript.jscomp.JSError jSError91 = nodeTraversal52.makeError((com.google.javascript.rhino.Node) scriptOrFnNode65, checkLevel80, diagnosticType89, strArray90); com.google.javascript.rhino.Node node92 = nodeTraversal52.getEnclosingFunction(); com.google.javascript.rhino.Node node93 = nodeTraversal52.getEnclosingFunction(); com.google.javascript.jscomp.Compiler compiler94 = nodeTraversal52.getCompiler(); try { referenceCollectingCallback2.exitScope(nodeTraversal52); } catch (java.util.NoSuchElementException e) { } }
Code: @Override public boolean equals(Object other) { if (!(other instanceof Arguments)) { return false; } Arguments otherVar = (Arguments) other; return otherVar.scope.getRootNode() == scope.getRootNode(); }
[[0.03277661 0.02107251 0.08460262 0.03703139 0.04989829 0.04811072
 0.06931746 0.03626517 0.01167475 0.02808488 0.04811072 0.03025148
 0.03289815 0.01111732 0.0220584  0.07050846 0.01750274 0.02998241
 0.02423511 0.03025148 0.07459729 0.03627638 0.1422583  0.01111732]
[0.03496188 0.02897009 0.06936255 0.05918042 0.05009978 0.04151775
 0.07838188 0.04411749 0.01371588 0.02918914 0.04151775 0.03223957
 0.04073782 0.01297549 0.03868132 0.05535172 0.01841306 0.03104513
 0.02532388 0.03223957 0.05327623 0.04487064 0.11085547 0.01297549]
[0.03121139 0.01936786 0.09976894 0.03712577 0.03873675 0.04900641
 0.07203071 0.03946939 0.01069345 0.02565706 0.04900641 0.03210851
 0.03794344 0.0091463  0.03107287 0.06314218 0.01515675 0.02345044
 0.02097727 0.03210851 0.06789545 0.02937273 0.15640505 0.0091463 ]
[0.03094771 0.02535194 0.06672576 0.04526817 0.04114089 0.04394865
 0.06995155 0.03317783 0.01286937 0.031898   0.04394865 0.03815137
 0.04572038 0.0086377  0.02652461 0.07668219 0.01771125 0.02554619
 0.02488135 0.03815137 0.05761099 0.03385191 0.15266451 0.0086377 ]
[0.03485055 0.0232422  0.092173   0.04138879 0.05179901 0.04702765
 0.06880738 0.03162212 0.01492474 0.03573232 0.04702765 0.03050629
 0.04074198 0.0101148  0.03251511 0.04972075 0.01505583 0.02642643
 0.02600536 0.03050629 0.05840006 0.03607951 0.1452173  0.0101148 ]
[0.03197324 0.03100713 0.06714664 0.03874474 0.04940535 0.05083472
 0.05327427 0.03296818 0.02301653 0.04519495 0.05083472 0.03555673
 0.04592732 0.01776748 0.0295467  0.05891439 0.02585807 0.0273057
 0.03088869 0.03555673 0.0643108  0.03295152 0.10324795 0.01776748]
[0.01972776 0.01708933 0.09923272 0.0312973  0.05069706 0.04014638
 0.09793355 0.02830007 0.01202275 0.02636956 0.04014638 0.02277278
 0.03379794 0.00598167 0.02803507 0.07303548 0.01373625 0.01850254
 0.02642113 0.02277278 0.05132154 0.03347537 0.20120284 0.00598167]
[0.03185643 0.02597112 0.08034287 0.04608792 0.06136134 0.04479154
 0.07158424 0.04694843 0.01257144 0.03666035 0.04479154 0.0300375
 0.03757985 0.01073197 0.02638439 0.05251034 0.01592846 0.02734096
 0.02698612 0.0300375  0.05620127 0.03845873 0.13410375 0.01073197]
[0.03658071 0.02068177 0.0775473  0.05220564 0.04996628 0.0394085
 0.0692596  0.04233954 0.01323544 0.03492107 0.0394085  0.02632587
 0.03561796 0.01140202 0.04567047 0.05451128 0.01624562 0.0247038
 0.02491587 0.02632587 0.0593845  0.04257127 0.14536914 0.01140202]
[0.02880514 0.02587162 0.09263565 0.04561895 0.05130552 0.03807646
 0.06963249 0.03724836 0.01506284 0.03569651 0.03807646 0.02917906
 0.03531365 0.01205784 0.02587163 0.05656182 0.01625418 0.02883413
 0.02502188 0.02917906 0.05549308 0.03901827 0.15712765 0.01205784]
[0.03197324 0.03100713 0.06714664 0.03874474 0.04940535 0.05083472
 0.05327427 0.03296818 0.02301653 0.04519495 0.05083472 0.03555673
 0.04592732 0.01776748 0.0295467  0.05891439 0.02585807 0.0273057
 0.03088869 0.03555673 0.0643108  0.03295152 0.10324795 0.01776748]
[0.02571836 0.01842936 0.08678859 0.04869497 0.04730137 0.03890243
 0.07415554 0.04062128 0.01399071 0.03643088 0.03890243 0.02626362
 0.04133778 0.01051541 0.03568992 0.05289982 0.01819271 0.02234577
 0.02526878 0.02626362 0.06715651 0.03379521 0.15981959 0.01051541]
[0.03661193 0.02700363 0.06892106 0.04761473 0.0477194  0.03943176
 0.05655324 0.03698644 0.01765259 0.04362484 0.03943176 0.03214702
 0.0490867  0.0157888  0.0341888  0.06590714 0.02430845 0.03407374
 0.02945673 0.03214702 0.05443393 0.03617393 0.11494751 0.0157888 ]
[0.03653156 0.019642   0.06860572 0.04163259 0.04632634 0.05014524
 0.0757299  0.03641224 0.01332385 0.03490013 0.05014524 0.04280235
 0.0432795  0.01080707 0.03435468 0.06242886 0.01772514 0.02731592
 0.02325517 0.04280235 0.05151245 0.0340101  0.12550457 0.01080707]
[0.03183509 0.02021295 0.0804086  0.04866054 0.03873713 0.03916967
 0.07887842 0.04051488 0.01448725 0.03359525 0.03916967 0.0362923
 0.03753225 0.01166315 0.03002065 0.06570724 0.02089122 0.03471062
 0.02782322 0.0362923  0.05455181 0.04604227 0.12114042 0.01166315]
[0.03231142 0.02529796 0.09117199 0.03605813 0.04739717 0.0459367
 0.08751869 0.03315848 0.01371155 0.03264606 0.0459367  0.03093767
 0.03654959 0.01134399 0.02731574 0.06792437 0.01828413 0.02704712
 0.03219988 0.03093767 0.05415371 0.0339117  0.1269056  0.01134399]
[0.03365814 0.03350762 0.06722749 0.04448727 0.05032435 0.03930478
 0.07445876 0.04212072 0.01965771 0.04021449 0.03930478 0.03705587
 0.04477273 0.01677445 0.0287605  0.0625984  0.02820203 0.02984323
 0.0259982  0.03705587 0.06006398 0.03744034 0.09039383 0.01677445]
[0.03173514 0.02416472 0.09462136 0.0445973  0.05472878 0.03730281
 0.08913397 0.03934209 0.01550884 0.03265027 0.03730281 0.0305975
 0.03890404 0.00918413 0.02380946 0.08060471 0.01716852 0.02627445
 0.0304378  0.0305975  0.06328975 0.03838073 0.10047917 0.00918413]
[0.03545132 0.02102949 0.07015947 0.04149791 0.05140872 0.05404675
 0.07659966 0.03584494 0.01111356 0.03615606 0.05404675 0.02965935
 0.03180581 0.01017769 0.02639929 0.05138015 0.0184456  0.02674232
 0.02212953 0.02965935 0.05521186 0.03467675 0.16618    0.01017769]
[0.02571836 0.01842936 0.08678859 0.04869497 0.04730137 0.03890243
 0.07415554 0.04062128 0.01399071 0.03643088 0.03890243 0.02626362
 0.04133778 0.01051541 0.03568992 0.05289982 0.01819271 0.02234577
 0.02526878 0.02626362 0.06715651 0.03379521 0.15981959 0.01051541]
[0.03012814 0.02497427 0.08319023 0.03806974 0.05285022 0.04839383
 0.08697553 0.03146016 0.01299735 0.04098614 0.04839383 0.03007896
 0.03400713 0.01125435 0.03191616 0.0549601  0.01673068 0.02680538
 0.03279362 0.03007896 0.05849725 0.03013151 0.13307214 0.01125435]
[0.0209837  0.01480745 0.11042316 0.03073752 0.05494556 0.04336184
 0.08105967 0.04681619 0.01177573 0.02898784 0.04336184 0.02472145
 0.02881864 0.00864382 0.02357054 0.06291973 0.01569169 0.02211371
 0.02339324 0.02472145 0.06944974 0.03568742 0.16436422 0.00864382]
[0.02737439 0.02081603 0.0803266  0.04469532 0.03977784 0.05135428
 0.07507235 0.04253929 0.01618172 0.03837037 0.05135428 0.02974895
 0.0378469  0.01109108 0.02636959 0.06954315 0.02020046 0.02786424
 0.02457582 0.02974895 0.07552447 0.03446741 0.11406545 0.01109108]
[0.03653156 0.019642   0.06860572 0.04163259 0.04632634 0.05014524
 0.0757299  0.03641224 0.01332385 0.03490013 0.05014524 0.04280235
 0.0432795  0.01080707 0.03435468 0.06242886 0.01772514 0.02731592
 0.02325517 0.04280235 0.05151245 0.0340101  0.12550457 0.01080707]]