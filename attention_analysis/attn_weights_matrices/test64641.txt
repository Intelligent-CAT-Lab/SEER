64641
Test: public void test442() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test442"); com.fasterxml.jackson.core.JsonFactory jsonFactory0 = new com.fasterxml.jackson.core.JsonFactory(); com.fasterxml.jackson.core.Version version1 = jsonFactory0.version(); com.fasterxml.jackson.core.util.BufferRecycler bufferRecycler2 = jsonFactory0._getBufferRecycler(); com.fasterxml.jackson.core.io.IOContext iOContext5 = new com.fasterxml.jackson.core.io.IOContext(bufferRecycler2, (java.lang.Object) (byte) 1, true); java.lang.Object obj6 = iOContext5.getSourceReference(); byte[] byteArray7 = iOContext5.allocBase64Buffer(); com.fasterxml.jackson.core.ObjectCodec objectCodec9 = null; java.io.OutputStream outputStream10 = null; byte[] byteArray11 = new byte[] {}; com.fasterxml.jackson.core.json.UTF8JsonGenerator uTF8JsonGenerator14 = new com.fasterxml.jackson.core.json.UTF8JsonGenerator(iOContext5, 79, objectCodec9, outputStream10, byteArray11, (int) 'a', false); com.fasterxml.jackson.core.FormatSchema formatSchema15 = uTF8JsonGenerator14.getSchema(); byte[] byteArray16 = uTF8JsonGenerator14._entityBuffer; com.fasterxml.jackson.core.json.JsonWriteContext jsonWriteContext20 = null; com.fasterxml.jackson.core.json.DupDetector dupDetector21 = null; com.fasterxml.jackson.core.json.JsonWriteContext jsonWriteContext22 = new com.fasterxml.jackson.core.json.JsonWriteContext(100, jsonWriteContext20, dupDetector21); jsonWriteContext22.setCurrentValue((java.lang.Object) (-1)); com.fasterxml.jackson.core.json.DupDetector dupDetector25 = null; com.fasterxml.jackson.core.json.JsonWriteContext jsonWriteContext26 = new com.fasterxml.jackson.core.json.JsonWriteContext((int) (short) 1, jsonWriteContext22, dupDetector25); com.fasterxml.jackson.core.json.JsonWriteContext jsonWriteContext27 = jsonWriteContext22._parent; int int28 = jsonWriteContext22.writeValue(); try { uTF8JsonGenerator14.writeObjectField("true", (java.lang.Object) jsonWriteContext22); } catch (java.lang.NullPointerException e) { } }
Code: public int writeValue() { if (_type == TYPE_OBJECT) { if (!false) { return STATUS_EXPECT_NAME; } ; ++_index; return STATUS_OK_AFTER_COLON; } if (_type == TYPE_ARRAY) { int ix = _index; ++_index; return (false) ? STATUS_OK_AS_IS : STATUS_OK_AFTER_COMMA; } ++_index; return (_index == 1) ? STATUS_OK_AS_IS : STATUS_OK_AFTER_SPACE; }
tensor([[0.0157, 0.0097, 0.0151,  ..., 0.0150, 0.0605, 0.0069],
        [0.0101, 0.0072, 0.0143,  ..., 0.0112, 0.0800, 0.0050],
        [0.0119, 0.0072, 0.0211,  ..., 0.0108, 0.0871, 0.0055],
        ...,
        [0.0154, 0.0095, 0.0158,  ..., 0.0109, 0.0583, 0.0085],
        [0.0164, 0.0097, 0.0164,  ..., 0.0109, 0.0580, 0.0069],
        [0.0112, 0.0085, 0.0196,  ..., 0.0102, 0.0648, 0.0060]])