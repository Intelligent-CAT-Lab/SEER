67176
Test: public void testBase64Text() throws Exception { final int[] LENS = { 1, 2, 3, 4, 7, 9, 32, 33, 34, 35 }; final Base64Variant[] VARIANTS = { Base64Variants.MIME, Base64Variants.MIME_NO_LINEFEEDS, Base64Variants.MODIFIED_FOR_URL, Base64Variants.PEM }; for (int len : LENS) { byte[] input = new byte[len]; for (int i = 0; i < input.length; ++i) { input[i] = (byte) i; } for (Base64Variant variant : VARIANTS) { TextNode n = new TextNode(variant.encode(input)); byte[] data = null; try { data = n.getBinaryValue(variant); } catch (Exception e) { fail("Failed (variant "+variant+", data length "+len+"): "+e.getMessage()); } JsonParser p = new TreeTraversingParser(n); try { data = p.getBinaryValue(variant); } catch (Exception e) { fail("Failed (variant "+variant+", data length "+len+"): "+e.getMessage()); } p.close(); } } }
Code: public byte[] getBinaryValue(Base64Variant b64variant) throws IOException, JsonParseException { JsonNode n = currentNode(); if (n != null) { if (n instanceof TextNode) { return ((TextNode) n).getBinaryValue(b64variant); } return n.binaryValue(); } return null; }
tensor([[0.0273, 0.0409, 0.0140,  ..., 0.0297, 0.0579, 0.0109],
        [0.0256, 0.0334, 0.0163,  ..., 0.0345, 0.0592, 0.0089],
        [0.0185, 0.0360, 0.0147,  ..., 0.0268, 0.0791, 0.0112],
        ...,
        [0.0185, 0.0354, 0.0114,  ..., 0.0279, 0.0732, 0.0085],
        [0.0272, 0.0435, 0.0110,  ..., 0.0310, 0.0507, 0.0108],
        [0.0197, 0.0246, 0.0129,  ..., 0.0398, 0.0657, 0.0090]])