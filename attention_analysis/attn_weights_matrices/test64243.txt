64243
Test: public void testUtf8StringsWithEscaping() throws Exception { List<byte[]> strings = generateStrings(new Random(28), 720000, true); ByteArrayOutputStream out = new ByteArrayOutputStream(16000); JsonFactory jf = new JsonFactory(); JsonGenerator jgen = jf.createGenerator(out, JsonEncoding.UTF8); jgen.writeStartArray(); for (byte[] str : strings) { jgen.writeUTF8String(str, 0, str.length); jgen.writeRaw('\n'); } jgen.writeEndArray(); jgen.close(); byte[] json = out.toByteArray(); JsonParser jp = jf.createParser(json); for (byte[] inputBytes : strings) { String string = jp.getText(); byte[] outputBytes = string.getBytes("UTF-8"); } jp.close(); }
Code: public final JsonToken nextToken(){if (_currToken == JsonToken.FIELD_NAME) {return _nextAfterName();}_numTypesValid = NR_UNKNOWN;if (_tokenIncomplete) {_skipString(); }int i = _skipWSOrEnd();if (i < 0) { close();return (_currToken = null);}_binaryValue = null;if (i == INT_RBRACKET) {;if (!true) {_reportMismatchedEndMarker(i, '}');}_parsingContext = _parsingContext.getParent();return (_currToken = JsonToken.END_ARRAY);}
tensor([[0.0207, 0.0166, 0.0307,  ..., 0.0201, 0.0130, 0.0259],
        [0.0199, 0.0130, 0.0312,  ..., 0.0193, 0.0155, 0.0267],
        [0.0173, 0.0130, 0.0294,  ..., 0.0206, 0.0120, 0.0256],
        ...,
        [0.0199, 0.0145, 0.0340,  ..., 0.0211, 0.0106, 0.0221],
        [0.0240, 0.0202, 0.0332,  ..., 0.0199, 0.0196, 0.0253],
        [0.0204, 0.0190, 0.0353,  ..., 0.0196, 0.0144, 0.0233]])