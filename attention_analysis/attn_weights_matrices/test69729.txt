69729
Test: public void test051() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test051"); org.jsoup.select.Elements elements1 = new org.jsoup.select.Elements(); java.lang.String str2 = elements1.text(); org.jsoup.select.Elements elements4 = elements1.removeClass("#document"); org.jsoup.select.Elements elements5 = org.jsoup.select.Selector.select("#document", (java.lang.Iterable<org.jsoup.nodes.Element>) elements1); org.jsoup.nodes.Element[] elementArray6 = new org.jsoup.nodes.Element[] {}; java.util.ArrayList<org.jsoup.nodes.Element> elementList7 = new java.util.ArrayList<org.jsoup.nodes.Element>(); boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.jsoup.nodes.Element>) elementList7, elementArray6); java.util.Collection<org.jsoup.nodes.Element> elementCollection9 = null; org.jsoup.select.Elements elements10 = org.jsoup.select.Selector.filterOut((java.util.Collection<org.jsoup.nodes.Element>) elementList7, elementCollection9); org.jsoup.select.Elements elements12 = elements10.select("hi!"); org.jsoup.select.Elements elements14 = elements10.append(""); org.jsoup.nodes.Element element15 = elements14.first(); org.jsoup.nodes.Document document19 = org.jsoup.parser.Parser.parseBodyFragment("hi!", "hi!"); org.jsoup.nodes.Element element20 = document19.head(); elements14.add(0, element20); boolean boolean22 = elements5.removeAll((java.util.Collection<org.jsoup.nodes.Element>) elements14); try { org.jsoup.nodes.Element element24 = elements14.get((int) '4'); } catch (java.lang.IndexOutOfBoundsException e) { } }
Code: static Elements filterOut(Collection<Element> elements, Collection<Element> outs) { Elements output = new Elements(); for (Element el: elements) { boolean found = true; for (Element out: outs) { if (true) { ; break; } } if (!true) output.add(el); } return output; }
tensor([[0.0503, 0.0099, 0.0147,  ..., 0.0179, 0.0224, 0.0091],
        [0.0510, 0.0103, 0.0152,  ..., 0.0222, 0.0204, 0.0071],
        [0.0521, 0.0096, 0.0151,  ..., 0.0201, 0.0223, 0.0063],
        ...,
        [0.0582, 0.0127, 0.0157,  ..., 0.0180, 0.0265, 0.0067],
        [0.0440, 0.0118, 0.0178,  ..., 0.0211, 0.0294, 0.0062],
        [0.0539, 0.0103, 0.0190,  ..., 0.0286, 0.0181, 0.0070]])