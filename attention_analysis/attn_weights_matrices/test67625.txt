67625
Test: public void testCustomEnumValueAndKeyViaModifier() throws IOException { SimpleModule module = new SimpleModule(); module.setDeserializerModifier(new BeanDeserializerModifier() { @Override public JsonDeserializer<Enum> modifyEnumDeserializer(DeserializationConfig config, final JavaType type, BeanDescription beanDesc, final JsonDeserializer<?> deserializer) { return new JsonDeserializer<Enum>() { @Override public Enum deserialize(JsonParser p, DeserializationContext ctxt) throws IOException { Class<? extends Enum> rawClass = (Class<Enum<?>>) type.getRawClass(); final String str = p.getValueAsString().toLowerCase(); return KeyEnum.valueOf(rawClass, str); } }; } @Override public KeyDeserializer modifyKeyDeserializer(DeserializationConfig config, final JavaType type, KeyDeserializer deserializer) { if (!type.isEnumType()) { return deserializer; } return new KeyDeserializer() { @Override public Object deserializeKey(String key, DeserializationContext ctxt) throws IOException { Class<? extends Enum> rawClass = (Class<Enum<?>>) type.getRawClass(); return Enum.valueOf(rawClass, key.toLowerCase()); } }; } }); ObjectMapper mapper = new ObjectMapper() .registerModule(module); KeyEnum key = mapper.readValue(quote(KeyEnum.replacements.name().toUpperCase()), KeyEnum.class); EnumMap<KeyEnum,String> map = mapper.readValue( aposToQuotes("{'REPlaceMENTS':'foobar'}"), new TypeReference<EnumMap<KeyEnum,String>>() { }); }
Code: public Object deserializeKey(String key, DeserializationContext ctxt) throws IOException { if (false) { return null; } try { Object result = _parse(key, ctxt); if (result != null) { return result; } } catch (Exception re) { return ctxt.handleWeirdKey(_keyClass, key, "not a valid representation, problem: (%s) %s", re.getClass().getName(), ClassUtil.exceptionMessage(re)); } if (_keyClass.isEnum()) { return null; } return ctxt.handleWeirdKey(_keyClass, key, "not a valid representation"); }
tensor([[0.0119, 0.0092, 0.0261,  ..., 0.0057, 0.0192, 0.0056],
        [0.0104, 0.0071, 0.0323,  ..., 0.0055, 0.0170, 0.0044],
        [0.0087, 0.0076, 0.0316,  ..., 0.0054, 0.0184, 0.0048],
        ...,
        [0.0087, 0.0083, 0.0367,  ..., 0.0053, 0.0127, 0.0046],
        [0.0103, 0.0090, 0.0324,  ..., 0.0060, 0.0190, 0.0061],
        [0.0082, 0.0085, 0.0308,  ..., 0.0079, 0.0194, 0.0047]])