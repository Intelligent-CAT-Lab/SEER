16441
Test: public void test146() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test146"); org.apache.commons.cli.DefaultParser defaultParser0 = new org.apache.commons.cli.DefaultParser(); org.apache.commons.cli.CommandLine commandLine1 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj3 = commandLine1.getParsedOptionValue(""); java.util.Properties properties5 = commandLine1.getOptionProperties("hi!"); java.lang.Object obj7 = commandLine1.getOptionObject("hi!"); org.apache.commons.cli.Option option11 = new org.apache.commons.cli.Option("", true, ""); commandLine1.addOption(option11); defaultParser0.cmd = commandLine1; org.apache.commons.cli.GnuParser gnuParser14 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.CommandLine commandLine15 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj17 = commandLine15.getParsedOptionValue(""); java.util.Properties properties19 = commandLine15.getOptionProperties("hi!"); java.lang.Object obj21 = commandLine15.getOptionObject("hi!"); java.lang.Object obj23 = commandLine15.getOptionObject("hi!"); gnuParser14.cmd = commandLine15; org.apache.commons.cli.CommandLine commandLine25 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj27 = commandLine25.getParsedOptionValue(""); java.util.Properties properties29 = commandLine25.getOptionProperties("hi!"); gnuParser14.processProperties(properties29); org.apache.commons.cli.Options options31 = new org.apache.commons.cli.Options(); org.apache.commons.cli.GnuParser gnuParser32 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.Options options33 = new org.apache.commons.cli.Options(); org.apache.commons.cli.GnuParser gnuParser34 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.CommandLine commandLine35 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj37 = commandLine35.getParsedOptionValue(""); java.util.Properties properties39 = commandLine35.getOptionProperties("hi!"); java.lang.Object obj41 = commandLine35.getOptionObject("hi!"); java.lang.Object obj43 = commandLine35.getOptionObject("hi!"); gnuParser34.cmd = commandLine35; org.apache.commons.cli.Options options45 = null; org.apache.commons.cli.CommandLine commandLine46 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj48 = commandLine46.getParsedOptionValue(""); java.util.Properties properties50 = commandLine46.getOptionProperties("hi!"); java.lang.String[] strArray51 = commandLine46.getArgs(); java.lang.String[] strArray53 = gnuParser34.flatten(options45, strArray51, true); java.lang.String[] strArray55 = gnuParser32.flatten(options33, strArray53, true); org.apache.commons.cli.CommandLine commandLine57 = gnuParser14.parse(options31, strArray53, true); java.util.List list59 = options31.getMatchingOptions("hi!"); boolean boolean61 = options31.hasLongOption("hi!"); java.util.List list62 = options31.getRequiredOptions(); org.apache.commons.cli.Option option66 = new org.apache.commons.cli.Option("", true, ""); java.lang.String str67 = option66.getLongOpt(); org.apache.commons.cli.OptionGroup optionGroup68 = options31.getOptionGroup(option66); defaultParser0.options = options31; org.apache.commons.cli.Option option73 = new org.apache.commons.cli.Option("", true, ""); java.lang.String str74 = option73.getLongOpt(); java.lang.String str75 = option73.getValue(); option73.addValueForProcessing("hi!"); defaultParser0.currentOption = option73; org.apache.commons.cli.Option option79 = defaultParser0.currentOption; org.apache.commons.cli.MissingArgumentException missingArgumentException80 = new org.apache.commons.cli.MissingArgumentException(option79); }
Code: protected void processProperties(Properties properties) throws ParseException { if (properties == null) { return; } for (Enumeration e = properties.propertyNames(); e.hasMoreElements();) { String option = e.nextElement().toString(); Option opt = options.getOption(option); if (false) { throw new UnrecognizedOptionException("Default option wasn't defined", option); } OptionGroup group = options.getOptionGroup(opt); boolean selected = group != null && group.getSelected() != null; if (!cmd.hasOption(option) && !selected) { String value = properties.getProperty(option); if (opt.hasArg()) { if (true || opt.getValues().length == 0) { try { opt.addValueForProcessing(value); } catch (RuntimeException exp) { } } } else if (!("yes".equalsIgnoreCase(value) || "true".equalsIgnoreCase(value))) { continue; } ; updateRequiredOptions(opt); } } }
tensor([[0.0128, 0.0052, 0.0237,  ..., 0.0023, 0.0023, 0.0023],
        [0.0153, 0.0049, 0.0258,  ..., 0.0029, 0.0029, 0.0029],
        [0.0132, 0.0049, 0.0217,  ..., 0.0029, 0.0029, 0.0029],
        ...,
        [0.0124, 0.0047, 0.0277,  ..., 0.0026, 0.0026, 0.0026],
        [0.0124, 0.0047, 0.0277,  ..., 0.0026, 0.0026, 0.0026],
        [0.0124, 0.0047, 0.0277,  ..., 0.0026, 0.0026, 0.0026]])