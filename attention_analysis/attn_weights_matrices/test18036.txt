18036
Test: public void test194() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test194"); com.google.javascript.jscomp.LightweightMessageFormatter lightweightMessageFormatter0 = com.google.javascript.jscomp.LightweightMessageFormatter.withoutSource(); com.google.javascript.jscomp.CheckLevel checkLevel4 = com.google.javascript.jscomp.CheckLevel.WARNING; com.google.javascript.jscomp.DiagnosticType diagnosticType7 = com.google.javascript.jscomp.DiagnosticType.warning("", ""); java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "", ": hi!" }; com.google.javascript.jscomp.JSError jSError15 = com.google.javascript.jscomp.JSError.make(": hi!", (int) (short) 1, (int) (short) 1, checkLevel4, diagnosticType7, strArray14); com.google.javascript.rhino.Node node16 = jSError15.node; boolean boolean18 = jSError15.equals((java.lang.Object) ": hi!"); com.google.javascript.jscomp.CheckLevel checkLevel19 = jSError15.level; java.lang.String str20 = lightweightMessageFormatter0.getLevelName(checkLevel19); com.google.javascript.jscomp.CheckLevel checkLevel24 = com.google.javascript.jscomp.CheckLevel.WARNING; com.google.javascript.jscomp.DiagnosticType diagnosticType27 = com.google.javascript.jscomp.DiagnosticType.warning("", ""); java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "", ": hi!" }; com.google.javascript.jscomp.JSError jSError35 = com.google.javascript.jscomp.JSError.make(": hi!", (int) (short) 1, (int) (short) 1, checkLevel24, diagnosticType27, strArray34); com.google.javascript.rhino.Node node36 = jSError35.node; java.lang.String str37 = lightweightMessageFormatter0.formatError(jSError35); com.google.javascript.jscomp.SourceExcerptProvider sourceExcerptProvider38 = lightweightMessageFormatter0.getSource(); com.google.javascript.jscomp.LightweightMessageFormatter lightweightMessageFormatter39 = com.google.javascript.jscomp.LightweightMessageFormatter.withoutSource(); com.google.javascript.jscomp.CheckLevel checkLevel43 = com.google.javascript.jscomp.CheckLevel.WARNING; com.google.javascript.jscomp.DiagnosticType diagnosticType46 = com.google.javascript.jscomp.DiagnosticType.warning("", ""); java.lang.String[] strArray53 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "", ": hi!" }; com.google.javascript.jscomp.JSError jSError54 = com.google.javascript.jscomp.JSError.make(": hi!", (int) (short) 1, (int) (short) 1, checkLevel43, diagnosticType46, strArray53); com.google.javascript.rhino.Node node55 = jSError54.node; boolean boolean57 = jSError54.equals((java.lang.Object) ": hi!"); com.google.javascript.jscomp.CheckLevel checkLevel58 = jSError54.level; java.lang.String str59 = lightweightMessageFormatter39.getLevelName(checkLevel58); com.google.javascript.jscomp.SourceExcerptProvider sourceExcerptProvider60 = lightweightMessageFormatter39.getSource(); com.google.javascript.jscomp.DiagnosticType diagnosticType63 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!"); boolean boolean65 = diagnosticType63.equals((java.lang.Object) (byte) -1); java.lang.String str66 = diagnosticType63.key; com.google.javascript.jscomp.CheckLevel checkLevel70 = com.google.javascript.jscomp.CheckLevel.WARNING; boolean boolean71 = checkLevel70.isOn(); com.google.javascript.jscomp.DiagnosticType diagnosticType74 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!"); java.lang.Object[] objArray75 = null; java.lang.String str76 = diagnosticType74.format(objArray75); java.lang.String[] strArray79 = new java.lang.String[] { "hi!", "" }; com.google.javascript.jscomp.JSError jSError80 = com.google.javascript.jscomp.JSError.make("hi!", 1, (int) (short) 100, checkLevel70, diagnosticType74, strArray79); com.google.javascript.jscomp.JSError jSError81 = com.google.javascript.jscomp.JSError.make(diagnosticType63, strArray79); java.lang.String str82 = lightweightMessageFormatter39.formatError(jSError81); java.lang.String str83 = jSError81.description; java.lang.String str84 = lightweightMessageFormatter0.formatError(jSError81); int int85 = jSError81.getCharno(); }
Code: private String format(JSError error, boolean warning) { SourceExcerptProvider source = getSource(); String sourceExcerpt = source == null ? null : excerpt.get( source, error.sourceName, error.lineNumber, excerptFormatter); StringBuilder b = new StringBuilder(); if (error.sourceName != null) { b.append(error.sourceName); if (error.lineNumber > 0) { b.append(':'); b.append(error.lineNumber); } b.append(": "); } b.append(getLevelName(warning ? CheckLevel.WARNING : CheckLevel.ERROR)); b.append(" - "); b.append(error.description); b.append('\n'); if (sourceExcerpt != null) { b.append(sourceExcerpt); b.append('\n'); int charno = error.getCharno(); if (excerpt.equals(LINE) && 0 <= charno && charno < sourceExcerpt.length()) { for (int i = 0; i < charno; i++) { char c = sourceExcerpt.charAt(i); if (Character.isWhitespace(c)) { b.append(c); } else { b.append(' '); } } b.append("^\n"); } } return b.toString(); }
tensor([[0.0096, 0.0075, 0.0052,  ..., 0.0066, 0.0164, 0.0030],
        [0.0077, 0.0069, 0.0049,  ..., 0.0064, 0.0122, 0.0026],
        [0.0083, 0.0069, 0.0034,  ..., 0.0056, 0.0140, 0.0020],
        ...,
        [0.0086, 0.0075, 0.0035,  ..., 0.0056, 0.0153, 0.0025],
        [0.0090, 0.0081, 0.0033,  ..., 0.0064, 0.0135, 0.0019],
        [0.0072, 0.0082, 0.0042,  ..., 0.0100, 0.0163, 0.0026]])