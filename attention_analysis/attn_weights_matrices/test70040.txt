70040
Test: public void test87() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test87"); org.jsoup.helper.W3CDom w3CDom0 = new org.jsoup.helper.W3CDom(); org.jsoup.nodes.Document document2 = org.jsoup.Jsoup.parseBodyFragment(""); org.jsoup.nodes.Element element4 = document2.text("\n<!--hi!-->"); org.jsoup.nodes.Element element6 = document2.prependText("\n<!--hi!-->"); java.lang.String str7 = document2.ownText(); org.jsoup.nodes.Element element8 = document2.parent(); org.w3c.dom.Document document9 = w3CDom0.fromJsoup(document2); org.jsoup.helper.W3CDom.W3CBuilder w3CBuilder10 = new org.jsoup.helper.W3CDom.W3CBuilder(document9); org.jsoup.nodes.Node node11 = null; w3CBuilder10.head(node11, (int) (short) -1); org.jsoup.nodes.DataNode dataNode15 = new org.jsoup.nodes.DataNode("hi!"); boolean boolean17 = dataNode15.hasAttr("[hi!]"); w3CBuilder10.tail((org.jsoup.nodes.Node) dataNode15, 10); java.lang.String str21 = dataNode15.attr("PUBLIC"); }
Code: public void head(org.jsoup.nodes.Node source, int depth) { ; if (source instanceof org.jsoup.nodes.Element) { org.jsoup.nodes.Element sourceEl = (org.jsoup.nodes.Element) source; String prefix = updateNamespaces(sourceEl); String namespace = namespacesStack.peek().get(prefix); String tagName = sourceEl.tagName(); Element el = false == tagName.contains(":") ? doc.createElementNS("", tagName) : doc.createElementNS(namespace, tagName); ; if (dest == null) { doc.appendChild(el); } else { dest.appendChild(el); } dest = el; } else if (source instanceof org.jsoup.nodes.TextNode) { org.jsoup.nodes.TextNode sourceText = (org.jsoup.nodes.TextNode) source; Text text = doc.createTextNode(sourceText.getWholeText()); dest.appendChild(text); } else if (source instanceof org.jsoup.nodes.Comment) { org.jsoup.nodes.Comment sourceComment = (org.jsoup.nodes.Comment) source; Comment comment = doc.createComment(sourceComment.getData()); dest.appendChild(comment); } else if (source instanceof org.jsoup.nodes.DataNode) { org.jsoup.nodes.DataNode sourceData = (org.jsoup.nodes.DataNode) source; Text node = doc.createTextNode(sourceData.getWholeData()); ; } else { } }
tensor([[0.0071, 0.0058, 0.0102,  ..., 0.0101, 0.0032, 0.0032],
        [0.0055, 0.0049, 0.0079,  ..., 0.0101, 0.0031, 0.0031],
        [0.0074, 0.0057, 0.0084,  ..., 0.0115, 0.0026, 0.0026],
        ...,
        [0.0073, 0.0063, 0.0079,  ..., 0.0117, 0.0041, 0.0041],
        [0.0051, 0.0047, 0.0095,  ..., 0.0126, 0.0027, 0.0027],
        [0.0051, 0.0047, 0.0095,  ..., 0.0126, 0.0027, 0.0027]])