64204
Test: public void test236() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test236"); com.fasterxml.jackson.core.util.BufferRecycler bufferRecycler0 = new com.fasterxml.jackson.core.util.BufferRecycler(); com.fasterxml.jackson.core.util.TextBuffer textBuffer1 = new com.fasterxml.jackson.core.util.TextBuffer(bufferRecycler0); java.lang.Object obj2 = null; com.fasterxml.jackson.core.io.IOContext iOContext4 = new com.fasterxml.jackson.core.io.IOContext(bufferRecycler0, obj2, false); char[] charArray6 = iOContext4.allocNameCopyBuffer(10); boolean boolean7 = iOContext4.isResourceManaged(); java.io.Reader reader9 = null; com.fasterxml.jackson.core.ObjectCodec objectCodec10 = null; com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer charsToNameCanonicalizer11 = com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.createRoot(); charsToNameCanonicalizer11.release(); com.fasterxml.jackson.core.util.BufferRecycler bufferRecycler13 = new com.fasterxml.jackson.core.util.BufferRecycler(); com.fasterxml.jackson.core.util.TextBuffer textBuffer14 = new com.fasterxml.jackson.core.util.TextBuffer(bufferRecycler13); char[] charArray15 = textBuffer14.getCurrentSegment(); char[] charArray16 = textBuffer14.contentsAsArray(); textBuffer14.ensureNotShared(); com.fasterxml.jackson.core.ObjectCodec objectCodec18 = null; com.fasterxml.jackson.core.JsonFactory jsonFactory19 = new com.fasterxml.jackson.core.JsonFactory(objectCodec18); java.lang.Class<? extends com.fasterxml.jackson.core.FormatFeature> wildcardClass20 = jsonFactory19.getFormatWriteFeatureType(); java.lang.String str21 = jsonFactory19.getFormatName(); java.io.Writer writer22 = null; com.fasterxml.jackson.core.JsonGenerator jsonGenerator23 = jsonFactory19.createGenerator(writer22); com.fasterxml.jackson.core.io.SerializedString serializedString25 = new com.fasterxml.jackson.core.io.SerializedString(""); com.fasterxml.jackson.core.io.SerializedString serializedString27 = new com.fasterxml.jackson.core.io.SerializedString(""); byte[] byteArray28 = serializedString27.asQuotedUTF8(); int int30 = serializedString25.appendQuotedUTF8(byteArray28, 10); char[] charArray36 = new char[] { 'a', '#', '4', 'a', 'a' }; int int38 = serializedString25.appendQuoted(charArray36, 1); com.fasterxml.jackson.core.util.BufferRecycler bufferRecycler39 = new com.fasterxml.jackson.core.util.BufferRecycler(); com.fasterxml.jackson.core.util.TextBuffer textBuffer40 = new com.fasterxml.jackson.core.util.TextBuffer(bufferRecycler39); int int41 = textBuffer40.size(); char[] charArray42 = textBuffer40.getCurrentSegment(); int int44 = serializedString25.appendQuoted(charArray42, (int) (byte) 1); jsonGenerator23.writeString(charArray42, 0, 34); textBuffer14.resetWithCopy(charArray42, 10, 0); com.fasterxml.jackson.core.json.ReaderBasedJsonParser readerBasedJsonParser54 = new com.fasterxml.jackson.core.json.ReaderBasedJsonParser(iOContext4, 116, reader9, objectCodec10, charsToNameCanonicalizer11, charArray42, 0, 34, true); char char56 = readerBasedJsonParser54.getNextChar("hi!"); com.fasterxml.jackson.core.JsonLocation jsonLocation57 = readerBasedJsonParser54.getTokenLocation(); boolean boolean58 = readerBasedJsonParser54.isExpectedStartObjectToken(); }
Code: public JsonLocation getTokenLocation(){final Object src = _ioContext.getSourceReference();return new JsonLocation(src,0L, getTokenCharacterOffset(),getTokenLineNr(),getTokenColumnNr());}
[[0.06677055 0.05628293 0.10386819 0.05234893 0.29767483 0.04446611
 0.1385391  0.03102282 0.06809056 0.14093597]
[0.05245714 0.07695004 0.10160751 0.04947209 0.28810745 0.05895288
 0.12730461 0.03495932 0.06119123 0.14899771]
[0.05405916 0.07208866 0.10576397 0.04582736 0.32174367 0.05159465
 0.10774504 0.02786902 0.05892335 0.1543851 ]
[0.06415728 0.07990112 0.07954657 0.04162209 0.32442117 0.05060813
 0.11412795 0.02671121 0.0561592  0.16274531]
[0.05947888 0.07217468 0.09125957 0.05705003 0.28505692 0.04594512
 0.12700802 0.03275623 0.05175339 0.17751724]
[0.08809693 0.06723531 0.09588099 0.05963065 0.20467448 0.07593153
 0.14936055 0.04201728 0.0826643  0.134508  ]
[0.07037684 0.08141977 0.09079686 0.05820999 0.26469183 0.04758237
 0.14191018 0.03992178 0.06602678 0.13906372]
[0.06281833 0.08276279 0.09473209 0.04796628 0.29016352 0.04743823
 0.14662874 0.03699571 0.0605339  0.12996039]
[0.05731431 0.06286473 0.10037898 0.05224936 0.2621521  0.06054629
 0.14683476 0.03169348 0.05950651 0.16645947]
[0.06244322 0.05827393 0.09384543 0.03571562 0.33258483 0.04259715
 0.1451098  0.02716532 0.05901101 0.14325367]]