62823
Test: public void test9() throws Throwable { Realm.AuthScheme.values(); Realm.Builder realm_Builder0 = new Realm.Builder(); Realm.Builder realm_Builder1 = realm_Builder0.parseWWWAuthenticateHeader((String) null); Realm.Builder realm_Builder2 = realm_Builder1.setUsePreemptiveAuth(false); Realm realm0 = realm_Builder2.build(); realm_Builder1.setNtlmHost((String) null); realm_Builder0.setLoginContextName((String) null); realm0.toString(); realm0.toString(); realm0.toString(); realm0.getUri(); realm0.getPrincipal(); Charset charset0 = Charset.defaultCharset(); realm_Builder2.setCharset(charset0); realm0.getRealmName(); realm0.getCustomLoginConfig(); realm_Builder0.setNtlmHost("{} {}"); realm_Builder0.setCustomLoginConfig((Map<String, String>) null); realm0.isUsePreemptiveAuth(); realm_Builder1.parseProxyAuthenticateHeader("Realm{principal='null', password='null', scheme=BASIC, realmName='null', nonce='null', algorithm='null', response='null', opaque='null', qop='null', nc='00000001', cnonce='null', uri=null, usePreemptiveAuth=false, charset=UTF-8, ntlmHost='localhost', ntlmDomain='null', useAbsoluteURI=false, omitQuery=false, customLoginConfig=null, servicePrincipalName='null', useCanonicalHostname=false, loginContextName='null'}"); }
Code: public boolean isUsePreemptiveAuth() { return usePreemptiveAuth; }
[[0.10934648 0.26729727 0.15169707 0.1511886  0.12100547 0.15169705
 0.04776807]
[0.06855693 0.34035894 0.12991077 0.18153623 0.11619409 0.12991078
 0.03353223]
[0.0877424  0.31477123 0.14417115 0.15167442 0.1068267  0.14417115
 0.05064295]
[0.11026365 0.23269044 0.14063604 0.18583335 0.12578093 0.14063604
 0.06415956]
[0.07348293 0.34289712 0.14042537 0.15607165 0.10455605 0.14042538
 0.04214151]
[0.0877424  0.31477123 0.14417115 0.15167442 0.1068267  0.14417115
 0.05064295]
[0.07333571 0.24605852 0.13447544 0.20389462 0.16462673 0.13447544
 0.04313356]]