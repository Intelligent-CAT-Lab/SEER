18322
Test: public void testRemoveLabelChild2() { Node actual = parse("achoo: foo: goo()"); Node labelNode = actual.getFirstChild(); Node callExpressNode = labelNode.getLastChild(); NodeUtil.removeChild(labelNode, callExpressNode); String expected = ""; String difference = parse(expected).checkTreeEquals(actual); if (difference != null) { } }
Code: private void parse(AbstractCompiler compiler){try {ParserRunner.ParseResult result = ParserRunner.parse(sourceFile, sourceFile.getCode(),compiler.getParserConfig(),compiler.getDefaultErrorReporter(),logger_);root = result.ast;;} catch (IOException e) {compiler.report(JSError.make(AbstractCompiler.READ_ERROR, sourceFile.getName()));}if (root == null || compiler.hasHaltingErrors()) {;} else {compiler.prepareAst(root);}root.setStaticSourceFile(sourceFile);}
tensor([[0.0497, 0.0255, 0.0520, 0.0399, 0.0174, 0.0195, 0.0192, 0.0379, 0.0483,
         0.0192, 0.0905, 0.0277, 0.0602, 0.0638, 0.0437, 0.0267, 0.0777, 0.0369,
         0.0226, 0.0340, 0.0654, 0.0211, 0.0415, 0.0597],
        [0.0378, 0.0244, 0.0395, 0.0424, 0.0221, 0.0230, 0.0223, 0.0503, 0.0493,
         0.0223, 0.0838, 0.0234, 0.0475, 0.0874, 0.0323, 0.0181, 0.0712, 0.0338,
         0.0273, 0.0347, 0.0636, 0.0161, 0.0406, 0.0866],
        [0.0410, 0.0247, 0.0574, 0.0489, 0.0174, 0.0179, 0.0205, 0.0437, 0.0443,
         0.0205, 0.0760, 0.0258, 0.0623, 0.0814, 0.0488, 0.0261, 0.0719, 0.0389,
         0.0275, 0.0335, 0.0508, 0.0189, 0.0392, 0.0627],
        [0.0354, 0.0221, 0.0514, 0.0331, 0.0206, 0.0211, 0.0220, 0.0404, 0.0484,
         0.0220, 0.1184, 0.0224, 0.0559, 0.0592, 0.0447, 0.0215, 0.0802, 0.0319,
         0.0217, 0.0345, 0.0698, 0.0135, 0.0410, 0.0688],
        [0.0414, 0.0229, 0.0552, 0.0363, 0.0201, 0.0249, 0.0203, 0.0467, 0.0522,
         0.0203, 0.0793, 0.0183, 0.0566, 0.0753, 0.0416, 0.0207, 0.0717, 0.0425,
         0.0264, 0.0465, 0.0583, 0.0121, 0.0416, 0.0688],
        [0.0403, 0.0298, 0.0418, 0.0487, 0.0210, 0.0262, 0.0194, 0.0411, 0.0412,
         0.0194, 0.0849, 0.0297, 0.0564, 0.0521, 0.0464, 0.0219, 0.0848, 0.0381,
         0.0316, 0.0360, 0.0630, 0.0144, 0.0537, 0.0581],
        [0.0445, 0.0291, 0.0611, 0.0457, 0.0260, 0.0215, 0.0298, 0.0349, 0.0416,
         0.0298, 0.0601, 0.0321, 0.0458, 0.0612, 0.0536, 0.0304, 0.0669, 0.0389,
         0.0288, 0.0285, 0.0670, 0.0201, 0.0416, 0.0609],
        [0.0363, 0.0221, 0.0628, 0.0441, 0.0186, 0.0206, 0.0257, 0.0371, 0.0480,
         0.0257, 0.0760, 0.0189, 0.0623, 0.0575, 0.0493, 0.0293, 0.0684, 0.0400,
         0.0289, 0.0452, 0.0690, 0.0188, 0.0460, 0.0493],
        [0.0516, 0.0201, 0.0446, 0.0386, 0.0171, 0.0218, 0.0172, 0.0449, 0.0443,
         0.0172, 0.1180, 0.0230, 0.0626, 0.0589, 0.0376, 0.0225, 0.0722, 0.0427,
         0.0269, 0.0421, 0.0598, 0.0166, 0.0379, 0.0617],
        [0.0445, 0.0291, 0.0611, 0.0457, 0.0260, 0.0215, 0.0298, 0.0349, 0.0416,
         0.0298, 0.0601, 0.0321, 0.0458, 0.0612, 0.0536, 0.0304, 0.0669, 0.0389,
         0.0288, 0.0285, 0.0670, 0.0201, 0.0416, 0.0609],
        [0.0528, 0.0267, 0.0402, 0.0469, 0.0240, 0.0200, 0.0176, 0.0572, 0.0428,
         0.0176, 0.0866, 0.0333, 0.0517, 0.0702, 0.0509, 0.0229, 0.0689, 0.0398,
         0.0231, 0.0298, 0.0506, 0.0208, 0.0434, 0.0624],
        [0.0377, 0.0204, 0.0500, 0.0494, 0.0239, 0.0187, 0.0174, 0.0422, 0.0500,
         0.0174, 0.0865, 0.0275, 0.0536, 0.0745, 0.0454, 0.0215, 0.0714, 0.0417,
         0.0235, 0.0391, 0.0699, 0.0158, 0.0435, 0.0592],
        [0.0446, 0.0257, 0.0512, 0.0414, 0.0196, 0.0205, 0.0245, 0.0342, 0.0476,
         0.0245, 0.0934, 0.0257, 0.0539, 0.0719, 0.0455, 0.0277, 0.0654, 0.0412,
         0.0262, 0.0290, 0.0561, 0.0201, 0.0451, 0.0648],
        [0.0371, 0.0212, 0.0607, 0.0382, 0.0235, 0.0207, 0.0209, 0.0456, 0.0526,
         0.0209, 0.0728, 0.0267, 0.0433, 0.0665, 0.0478, 0.0259, 0.0837, 0.0371,
         0.0270, 0.0323, 0.0748, 0.0161, 0.0387, 0.0659],
        [0.0380, 0.0258, 0.0517, 0.0474, 0.0157, 0.0203, 0.0190, 0.0417, 0.0516,
         0.0190, 0.0852, 0.0264, 0.0544, 0.0726, 0.0479, 0.0245, 0.0785, 0.0416,
         0.0240, 0.0327, 0.0504, 0.0215, 0.0411, 0.0687],
        [0.0374, 0.0213, 0.0455, 0.0486, 0.0184, 0.0219, 0.0171, 0.0540, 0.0485,
         0.0171, 0.0878, 0.0270, 0.0553, 0.0788, 0.0397, 0.0247, 0.0773, 0.0450,
         0.0287, 0.0330, 0.0482, 0.0171, 0.0375, 0.0701],
        [0.0485, 0.0202, 0.0534, 0.0468, 0.0179, 0.0196, 0.0174, 0.0448, 0.0448,
         0.0174, 0.0705, 0.0355, 0.0601, 0.0583, 0.0502, 0.0260, 0.0853, 0.0385,
         0.0235, 0.0348, 0.0615, 0.0179, 0.0442, 0.0629],
        [0.0438, 0.0224, 0.0434, 0.0423, 0.0181, 0.0211, 0.0196, 0.0455, 0.0486,
         0.0196, 0.1120, 0.0191, 0.0539, 0.0773, 0.0424, 0.0179, 0.0682, 0.0426,
         0.0197, 0.0374, 0.0747, 0.0153, 0.0387, 0.0563],
        [0.0444, 0.0219, 0.0505, 0.0357, 0.0188, 0.0220, 0.0246, 0.0430, 0.0506,
         0.0246, 0.0873, 0.0233, 0.0618, 0.0624, 0.0468, 0.0231, 0.0785, 0.0410,
         0.0236, 0.0325, 0.0575, 0.0217, 0.0364, 0.0681],
        [0.0541, 0.0208, 0.0627, 0.0456, 0.0176, 0.0210, 0.0211, 0.0501, 0.0449,
         0.0211, 0.0764, 0.0274, 0.0561, 0.0672, 0.0465, 0.0251, 0.0594, 0.0382,
         0.0270, 0.0348, 0.0658, 0.0225, 0.0363, 0.0583],
        [0.0401, 0.0201, 0.0629, 0.0492, 0.0177, 0.0210, 0.0187, 0.0296, 0.0430,
         0.0187, 0.0858, 0.0297, 0.0576, 0.0712, 0.0443, 0.0297, 0.0748, 0.0394,
         0.0221, 0.0361, 0.0723, 0.0155, 0.0435, 0.0572],
        [0.0493, 0.0259, 0.0438, 0.0449, 0.0177, 0.0205, 0.0202, 0.0405, 0.0500,
         0.0202, 0.0905, 0.0307, 0.0443, 0.0642, 0.0442, 0.0267, 0.0673, 0.0340,
         0.0333, 0.0372, 0.0588, 0.0221, 0.0474, 0.0662],
        [0.0376, 0.0200, 0.0480, 0.0440, 0.0206, 0.0267, 0.0182, 0.0448, 0.0583,
         0.0182, 0.1189, 0.0236, 0.0516, 0.0618, 0.0423, 0.0206, 0.0660, 0.0374,
         0.0267, 0.0386, 0.0572, 0.0184, 0.0427, 0.0581],
        [0.0445, 0.0203, 0.0418, 0.0378, 0.0198, 0.0223, 0.0161, 0.0418, 0.0497,
         0.0161, 0.1127, 0.0232, 0.0593, 0.0714, 0.0468, 0.0170, 0.0601, 0.0382,
         0.0208, 0.0344, 0.0678, 0.0154, 0.0489, 0.0739]])