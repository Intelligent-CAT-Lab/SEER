62988
Test: public void test232() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test232"); com.google.gson.DefaultDateTypeAdapter defaultDateTypeAdapter2 = new com.google.gson.DefaultDateTypeAdapter((int) (byte) 0, 0); java.util.Date date3 = null; com.google.gson.JsonElement jsonElement4 = defaultDateTypeAdapter2.toJsonTree(date3); com.google.gson.TypeAdapter<java.util.Date> dateTypeAdapter5 = defaultDateTypeAdapter2.nullSafe(); com.google.gson.DefaultDateTypeAdapter defaultDateTypeAdapter8 = new com.google.gson.DefaultDateTypeAdapter((int) (byte) 0, 0); com.google.gson.TypeAdapter<java.util.Date> dateTypeAdapter9 = defaultDateTypeAdapter8.nullSafe(); com.google.gson.internal.bind.JsonTreeWriter jsonTreeWriter10 = new com.google.gson.internal.bind.JsonTreeWriter(); com.google.gson.stream.JsonWriter jsonWriter12 = jsonTreeWriter10.value(false); com.google.gson.stream.JsonWriter jsonWriter13 = jsonTreeWriter10.beginArray(); com.google.gson.stream.JsonWriter jsonWriter15 = jsonTreeWriter10.value(false); com.google.gson.stream.JsonWriter jsonWriter17 = jsonTreeWriter10.value((java.lang.Number) (short) 1); com.google.gson.stream.JsonWriter jsonWriter19 = jsonWriter17.value("com.google.gson.JsonSyntaxException: com.google.gson.JsonIOException: hi!"); java.util.Date date20 = null; defaultDateTypeAdapter8.write(jsonWriter19, date20); java.util.Date date22 = null; defaultDateTypeAdapter2.write(jsonWriter19, date22); java.util.Date date24 = null; com.google.gson.JsonElement jsonElement25 = defaultDateTypeAdapter2.toJsonTree(date24); com.google.gson.TypeAdapter<java.util.Date> dateTypeAdapter26 = defaultDateTypeAdapter2.nullSafe(); com.google.gson.DefaultDateTypeAdapter defaultDateTypeAdapter29 = new com.google.gson.DefaultDateTypeAdapter((int) (byte) 0, 0); com.google.gson.internal.bind.JsonTreeWriter jsonTreeWriter30 = new com.google.gson.internal.bind.JsonTreeWriter(); com.google.gson.stream.JsonWriter jsonWriter32 = jsonTreeWriter30.value(false); com.google.gson.stream.JsonWriter jsonWriter34 = jsonWriter32.value(true); java.util.Date date35 = null; defaultDateTypeAdapter29.write(jsonWriter34, date35); com.google.gson.internal.bind.JsonTreeWriter jsonTreeWriter37 = new com.google.gson.internal.bind.JsonTreeWriter(); com.google.gson.stream.JsonWriter jsonWriter39 = jsonTreeWriter37.value(false); com.google.gson.stream.JsonWriter jsonWriter40 = jsonTreeWriter37.beginArray(); com.google.gson.stream.JsonWriter jsonWriter42 = jsonTreeWriter37.value(true); com.google.gson.stream.JsonWriter jsonWriter44 = jsonTreeWriter37.value((java.lang.Number) (-1.0f)); com.google.gson.stream.JsonWriter jsonWriter45 = jsonTreeWriter37.nullValue(); com.google.gson.stream.JsonWriter jsonWriter46 = jsonTreeWriter37.beginArray(); java.util.Date date47 = null; defaultDateTypeAdapter29.write(jsonWriter46, date47); com.google.gson.DefaultDateTypeAdapter defaultDateTypeAdapter51 = new com.google.gson.DefaultDateTypeAdapter((int) (byte) 0, 0); com.google.gson.TypeAdapter<java.util.Date> dateTypeAdapter52 = defaultDateTypeAdapter51.nullSafe(); com.google.gson.TypeAdapter<java.util.Date> dateTypeAdapter53 = dateTypeAdapter52.nullSafe(); java.util.Date date54 = null; com.google.gson.JsonElement jsonElement55 = dateTypeAdapter52.toJsonTree(date54); java.util.Date date56 = defaultDateTypeAdapter29.fromJsonTree(jsonElement55); java.lang.String str57 = defaultDateTypeAdapter29.toString(); com.google.gson.DefaultDateTypeAdapter defaultDateTypeAdapter60 = new com.google.gson.DefaultDateTypeAdapter((int) (byte) 0, 0); com.google.gson.internal.bind.JsonTreeWriter jsonTreeWriter61 = new com.google.gson.internal.bind.JsonTreeWriter(); com.google.gson.stream.JsonWriter jsonWriter63 = jsonTreeWriter61.value(false); boolean boolean64 = jsonWriter63.getSerializeNulls(); com.google.gson.stream.JsonWriter jsonWriter66 = jsonWriter63.value("$"); java.util.Date date67 = null; defaultDateTypeAdapter60.write(jsonWriter66, date67); java.util.Date date69 = null; com.google.gson.JsonElement jsonElement70 = defaultDateTypeAdapter60.toJsonTree(date69); java.util.Date date71 = null; com.google.gson.JsonElement jsonElement72 = defaultDateTypeAdapter60.toJsonTree(date71); java.util.Date date73 = defaultDateTypeAdapter29.fromJsonTree(jsonElement72); java.util.Date date74 = dateTypeAdapter26.fromJsonTree(jsonElement72); java.util.Date date75 = null; java.lang.String str76 = dateTypeAdapter26.toJson(date75); com.google.gson.internal.bind.JsonTreeWriter jsonTreeWriter77 = new com.google.gson.internal.bind.JsonTreeWriter(); com.google.gson.stream.JsonWriter jsonWriter79 = jsonTreeWriter77.value(false); com.google.gson.stream.JsonWriter jsonWriter80 = jsonTreeWriter77.nullValue(); com.google.gson.stream.JsonWriter jsonWriter82 = jsonTreeWriter77.value(false); com.google.gson.JsonElement jsonElement83 = jsonTreeWriter77.get(); com.google.gson.internal.bind.JsonTreeReader jsonTreeReader84 = new com.google.gson.internal.bind.JsonTreeReader(jsonElement83); jsonTreeReader84.setLenient(true); java.lang.String str87 = jsonTreeReader84.toString(); try { java.util.Date date88 = dateTypeAdapter26.read((com.google.gson.stream.JsonReader) jsonTreeReader84); } catch (java.lang.IllegalStateException e) { } }
Code: public Date read(JsonReader in) throws IOException { if (in.peek() != JsonToken.STRING) { throw new JsonParseException("The date should be a string value"); } Date date = deserializeToDate(in.nextString()); if (dateType == Date.class) { return date; } else if (dateType == Timestamp.class) { return new Timestamp(date.getTime()); } else if (dateType == java.sql.Date.class) { return new java.sql.Date(date.getTime()); } else { throw new AssertionError(); } }
tensor([[0.0125, 0.0063, 0.0167,  ..., 0.0147, 0.0057, 0.0057],
        [0.0106, 0.0058, 0.0163,  ..., 0.0164, 0.0040, 0.0040],
        [0.0084, 0.0045, 0.0139,  ..., 0.0158, 0.0044, 0.0044],
        ...,
        [0.0122, 0.0061, 0.0202,  ..., 0.0162, 0.0072, 0.0072],
        [0.0084, 0.0039, 0.0201,  ..., 0.0141, 0.0047, 0.0047],
        [0.0084, 0.0039, 0.0201,  ..., 0.0141, 0.0047, 0.0047]])