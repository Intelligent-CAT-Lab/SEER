64048
Test: public void test135() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test135"); com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer bytesToNameCanonicalizer0 = com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.createRoot(); boolean boolean1 = bytesToNameCanonicalizer0.maybeDirty(); com.fasterxml.jackson.core.util.BufferRecycler bufferRecycler2 = null; com.fasterxml.jackson.core.io.IOContext iOContext5 = new com.fasterxml.jackson.core.io.IOContext(bufferRecycler2, (java.lang.Object) 0.0f, true); com.fasterxml.jackson.core.JsonEncoding jsonEncoding6 = com.fasterxml.jackson.core.JsonEncoding.UTF16_BE; java.lang.String str7 = jsonEncoding6.getJavaName(); com.fasterxml.jackson.core.io.IOContext iOContext8 = iOContext5.withEncoding(jsonEncoding6); com.fasterxml.jackson.core.util.BufferRecycler bufferRecycler10 = null; com.fasterxml.jackson.core.io.IOContext iOContext13 = new com.fasterxml.jackson.core.io.IOContext(bufferRecycler10, (java.lang.Object) 0.0f, true); com.fasterxml.jackson.core.JsonEncoding jsonEncoding14 = iOContext13.getEncoding(); java.io.InputStream inputStream15 = null; byte[] byteArray16 = com.fasterxml.jackson.core.json.UTF8JsonGenerator.HEX_CHARS; com.fasterxml.jackson.core.io.MergedStream mergedStream19 = new com.fasterxml.jackson.core.io.MergedStream(iOContext13, inputStream15, byteArray16, (int) '4', (-1)); boolean boolean20 = mergedStream19.markSupported(); int int21 = mergedStream19.available(); com.fasterxml.jackson.core.ObjectCodec objectCodec22 = null; com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer byteQuadsCanonicalizer23 = com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.createRoot(); java.lang.String str24 = byteQuadsCanonicalizer23.toString(); int int25 = byteQuadsCanonicalizer23.totalCount(); int int26 = byteQuadsCanonicalizer23.bucketCount(); byte[] byteArray27 = com.fasterxml.jackson.core.io.CharTypes.copyHexBytes(); com.fasterxml.jackson.core.json.UTF8StreamJsonParser uTF8StreamJsonParser31 = new com.fasterxml.jackson.core.json.UTF8StreamJsonParser(iOContext8, (int) (byte) -17, (java.io.InputStream) mergedStream19, objectCodec22, byteQuadsCanonicalizer23, byteArray27, (-1695542384), 208279835, false); java.lang.String str33 = uTF8StreamJsonParser31.getValueAsString("UTF-8"); int[] intArray34 = com.fasterxml.jackson.core.io.CharTypes.get7BitOutputEscapes(); uTF8StreamJsonParser31._quadBuffer = intArray34; try { int int37 = bytesToNameCanonicalizer0.calcHash(intArray34, 0); } catch (java.lang.IllegalArgumentException e) { } }
Code: public String getValueAsString() throws IOException { if (_currToken == JsonToken.VALUE_STRING) { if (_tokenIncomplete) { _tokenIncomplete = false; return _finishAndReturnString(); } return _textBuffer.contentsAsString(); } if (_currToken == JsonToken.FIELD_NAME) { return getCurrentName(); } return super.getValueAsString(null); }
tensor([[0.0225, 0.0291, 0.0317,  ..., 0.0246, 0.0119, 0.0093],
        [0.0225, 0.0264, 0.0385,  ..., 0.0224, 0.0103, 0.0079],
        [0.0195, 0.0332, 0.0416,  ..., 0.0222, 0.0094, 0.0079],
        ...,
        [0.0156, 0.0378, 0.0359,  ..., 0.0232, 0.0080, 0.0078],
        [0.0176, 0.0354, 0.0330,  ..., 0.0260, 0.0081, 0.0085],
        [0.0160, 0.0294, 0.0250,  ..., 0.0327, 0.0104, 0.0075]])