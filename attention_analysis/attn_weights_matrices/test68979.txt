68979
Test: public void test162() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test162"); org.jsoup.select.CombiningEvaluator.Or or0 = new org.jsoup.select.CombiningEvaluator.Or(); java.util.regex.Pattern pattern2 = null; org.jsoup.select.Evaluator.AttributeWithValueMatching attributeWithValueMatching3 = new org.jsoup.select.Evaluator.AttributeWithValueMatching("", pattern2); org.jsoup.nodes.Document document5 = org.jsoup.nodes.Document.createShell("hi!"); org.jsoup.nodes.Document document7 = org.jsoup.nodes.Document.createShell("hi!"); boolean boolean8 = attributeWithValueMatching3.matches((org.jsoup.nodes.Element) document5, (org.jsoup.nodes.Element) document7); boolean boolean10 = document5.equals((java.lang.Object) 0L); org.jsoup.nodes.Element element11 = document5.empty(); org.jsoup.nodes.Element element13 = document5.addClass("hi!"); org.jsoup.select.Elements elements15 = document5.getElementsMatchingOwnText(""); org.jsoup.nodes.Element element18 = document5.attr("SYSTEM", ":last-of-type"); org.jsoup.select.Elements elements19 = org.jsoup.select.Collector.collect((org.jsoup.select.Evaluator) or0, (org.jsoup.nodes.Element) document5); org.jsoup.select.Evaluator.IndexGreaterThan indexGreaterThan21 = new org.jsoup.select.Evaluator.IndexGreaterThan((int) '4'); org.jsoup.nodes.Document document23 = org.jsoup.nodes.Document.createShell("hi!"); java.util.List<org.jsoup.nodes.TextNode> textNodeList24 = document23.textNodes(); org.jsoup.nodes.Document document26 = org.jsoup.nodes.Document.createShell("hi!"); boolean boolean27 = indexGreaterThan21.matches((org.jsoup.nodes.Element) document23, (org.jsoup.nodes.Element) document26); or0.add((org.jsoup.select.Evaluator) indexGreaterThan21); org.jsoup.select.Evaluator.IsOnlyChild isOnlyChild29 = new org.jsoup.select.Evaluator.IsOnlyChild(); or0.replaceRightMostEvaluator((org.jsoup.select.Evaluator) isOnlyChild29); }
Code: public boolean matches(Element root, Element element) { if (element instanceof PseudoTextElement) return true; List<TextNode> textNodes = element.textNodes(); for (TextNode textNode : textNodes) { PseudoTextElement pel = new PseudoTextElement( org.jsoup.parser.Tag.valueOf(element.tagName()), element.baseUri(), element.attributes()); textNode.replaceWith(pel); pel.appendChild(textNode); } return false; }
tensor([[0.0223, 0.0500, 0.0217,  ..., 0.0252, 0.0318, 0.0107],
        [0.0160, 0.0765, 0.0182,  ..., 0.0276, 0.0320, 0.0081],
        [0.0133, 0.0550, 0.0200,  ..., 0.0245, 0.0327, 0.0094],
        ...,
        [0.0150, 0.0634, 0.0166,  ..., 0.0210, 0.0343, 0.0091],
        [0.0218, 0.0551, 0.0202,  ..., 0.0261, 0.0398, 0.0129],
        [0.0154, 0.0516, 0.0192,  ..., 0.0348, 0.0352, 0.0091]])