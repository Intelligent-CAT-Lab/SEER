15208
Test: public void testProcessValues_SpareValues() throws OptionException { final Argument option = buildUsernameArgument(); final List args = list("rob", "secret"); final WriteableCommandLine commandLine = commandLine(option, args); final ListIterator iterator = args.listIterator(); option.processValues(commandLine, iterator, option); }
Code: public void processValues(final WriteableCommandLine commandLine, final ListIterator arguments, final Option option) throws OptionException { int argumentCount = commandLine.getUndefaultedValues(option).size(); while (arguments.hasNext() && (argumentCount < maximum)) { final String allValuesQuoted = (String) arguments.next(); final String allValues = stripBoundaryQuotes(allValuesQuoted); if (allValuesQuoted.equals(consumeRemaining)) { while (arguments.hasNext() && (argumentCount < maximum)) { ++argumentCount; commandLine.addValue(option, arguments.next()); } } else if (commandLine.looksLikeOption(allValuesQuoted)) { arguments.previous(); break; } else if (subsequentSplit) { final StringTokenizer values = new StringTokenizer(allValues, String.valueOf(subsequentSeparator)); arguments.remove(); while (values.hasMoreTokens() && (argumentCount < maximum)) { ++argumentCount; final String token = values.nextToken(); commandLine.addValue(option, token); arguments.add(token); } if (values.hasMoreTokens()) { throw new OptionException(option, ResourceConstants.ARGUMENT_UNEXPECTED_VALUE, values.nextToken()); } } else { ++argumentCount; commandLine.addValue(option, allValues); } } }
tensor([[0.0067, 0.0056, 0.0072,  ..., 0.0032, 0.0032, 0.0032],
        [0.0049, 0.0047, 0.0045,  ..., 0.0031, 0.0031, 0.0031],
        [0.0051, 0.0050, 0.0063,  ..., 0.0028, 0.0028, 0.0028],
        ...,
        [0.0047, 0.0045, 0.0055,  ..., 0.0028, 0.0028, 0.0028],
        [0.0047, 0.0045, 0.0055,  ..., 0.0028, 0.0028, 0.0028],
        [0.0047, 0.0045, 0.0055,  ..., 0.0028, 0.0028, 0.0028]])