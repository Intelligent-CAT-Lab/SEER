19294
Test: public void test186() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test186"); com.google.javascript.jscomp.LightweightMessageFormatter lightweightMessageFormatter1 = com.google.javascript.jscomp.LightweightMessageFormatter.withoutSource(); com.google.javascript.jscomp.CheckLevel checkLevel5 = com.google.javascript.jscomp.CheckLevel.WARNING; com.google.javascript.jscomp.DiagnosticType diagnosticType8 = com.google.javascript.jscomp.DiagnosticType.warning("", ""); java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "", ": hi!" }; com.google.javascript.jscomp.JSError jSError16 = com.google.javascript.jscomp.JSError.make(": hi!", (int) (short) 1, (int) (short) 1, checkLevel5, diagnosticType8, strArray15); com.google.javascript.rhino.Node node17 = jSError16.node; boolean boolean19 = jSError16.equals((java.lang.Object) ": hi!"); com.google.javascript.jscomp.CheckLevel checkLevel20 = jSError16.level; java.lang.String str21 = lightweightMessageFormatter1.getLevelName(checkLevel20); com.google.javascript.jscomp.CheckLevel checkLevel25 = com.google.javascript.jscomp.CheckLevel.WARNING; com.google.javascript.jscomp.DiagnosticType diagnosticType28 = com.google.javascript.jscomp.DiagnosticType.warning("", ""); java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "", ": hi!" }; com.google.javascript.jscomp.JSError jSError36 = com.google.javascript.jscomp.JSError.make(": hi!", (int) (short) 1, (int) (short) 1, checkLevel25, diagnosticType28, strArray35); com.google.javascript.rhino.Node node37 = jSError36.node; java.lang.String str38 = lightweightMessageFormatter1.formatError(jSError36); lightweightMessageFormatter1.setColorize(true); com.google.javascript.jscomp.CheckLevel checkLevel44 = com.google.javascript.jscomp.CheckLevel.WARNING; com.google.javascript.jscomp.DiagnosticType diagnosticType47 = com.google.javascript.jscomp.DiagnosticType.warning("", ""); java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "", ": hi!" }; com.google.javascript.jscomp.JSError jSError55 = com.google.javascript.jscomp.JSError.make(": hi!", (int) (short) 1, (int) (short) 1, checkLevel44, diagnosticType47, strArray54); com.google.javascript.rhino.Node node56 = jSError55.node; boolean boolean58 = jSError55.equals((java.lang.Object) ": hi!"); com.google.javascript.jscomp.CheckLevel checkLevel59 = jSError55.level; java.lang.String str60 = jSError55.description; int int61 = jSError55.lineNumber; com.google.javascript.jscomp.LightweightMessageFormatter lightweightMessageFormatter62 = com.google.javascript.jscomp.LightweightMessageFormatter.withoutSource(); com.google.javascript.jscomp.CheckLevel checkLevel66 = com.google.javascript.jscomp.CheckLevel.WARNING; com.google.javascript.jscomp.DiagnosticType diagnosticType69 = com.google.javascript.jscomp.DiagnosticType.warning("", ""); java.lang.String[] strArray76 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "", ": hi!" }; com.google.javascript.jscomp.JSError jSError77 = com.google.javascript.jscomp.JSError.make(": hi!", (int) (short) 1, (int) (short) 1, checkLevel66, diagnosticType69, strArray76); com.google.javascript.rhino.Node node78 = jSError77.node; boolean boolean80 = jSError77.equals((java.lang.Object) ": hi!"); com.google.javascript.jscomp.CheckLevel checkLevel81 = jSError77.level; java.lang.String str82 = lightweightMessageFormatter62.getLevelName(checkLevel81); com.google.javascript.jscomp.SourceExcerptProvider sourceExcerptProvider83 = lightweightMessageFormatter62.getSource(); com.google.javascript.jscomp.SourceExcerptProvider sourceExcerptProvider84 = lightweightMessageFormatter62.getSource(); com.google.javascript.jscomp.DiagnosticType diagnosticType87 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!"); boolean boolean89 = diagnosticType87.equals((java.lang.Object) (byte) -1); java.lang.String str90 = diagnosticType87.key; com.google.javascript.jscomp.CheckLevel checkLevel91 = diagnosticType87.defaultLevel; java.lang.String str92 = lightweightMessageFormatter62.getLevelName(checkLevel91); com.google.javascript.jscomp.LightweightMessageFormatter lightweightMessageFormatter93 = com.google.javascript.jscomp.LightweightMessageFormatter.withoutSource(); com.google.javascript.jscomp.SourceExcerptProvider sourceExcerptProvider94 = lightweightMessageFormatter93.getSource(); java.lang.String str95 = jSError55.format(checkLevel91, (com.google.javascript.jscomp.MessageFormatter) lightweightMessageFormatter93); java.lang.String str96 = lightweightMessageFormatter1.getLevelName(checkLevel91); com.google.javascript.jscomp.DiagnosticType diagnosticType98 = com.google.javascript.jscomp.DiagnosticType.make("hi!:1: WARNING - hi!\n", checkLevel91, "ERROR - hi!\n: : hi!:1: WARNING - \n"); }
Code: private String format(JSError error, boolean warning) { SourceExcerptProvider source = getSource(); String sourceExcerpt = source == null ? null : excerpt.get( source, error.sourceName, error.lineNumber, excerptFormatter); StringBuilder b = new StringBuilder(); if (error.sourceName != null) { b.append(error.sourceName); if (error.lineNumber > 0) { b.append(':'); b.append(error.lineNumber); } b.append(": "); } ; b.append(" - "); b.append(error.description); b.append('\n'); if (sourceExcerpt != null) { b.append(sourceExcerpt); b.append('\n'); int charno = error.getCharno(); if (excerpt.equals(LINE) && 0 <= charno && charno <= sourceExcerpt.length()) { for (int i = -1; i != charno; i++) { char c = sourceExcerpt.charAt(i); if (false) { b.append(c); } else { b.append(' '); } } b.append("^\n"); } } return b.toString(); }
tensor([[0.0100, 0.0077, 0.0053,  ..., 0.0068, 0.0170, 0.0032],
        [0.0079, 0.0071, 0.0050,  ..., 0.0066, 0.0126, 0.0027],
        [0.0086, 0.0071, 0.0035,  ..., 0.0057, 0.0145, 0.0020],
        ...,
        [0.0090, 0.0076, 0.0036,  ..., 0.0058, 0.0158, 0.0026],
        [0.0093, 0.0082, 0.0034,  ..., 0.0066, 0.0140, 0.0019],
        [0.0075, 0.0084, 0.0043,  ..., 0.0104, 0.0168, 0.0027]])