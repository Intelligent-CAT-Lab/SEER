101473
Test: public void testUnsupportedMethods() { DateTimeField fieldOne = UnsupportedDateTimeField.getInstance( dateTimeFieldTypeOne, UnsupportedDurationField .getInstance(weeks)); try { fieldOne.add(localTime, 0, new int[] { 0, 100 }, 100); } catch (UnsupportedOperationException e) { } try { fieldOne.addWrapField(100000L, 250); } catch (UnsupportedOperationException e) { } try { fieldOne.addWrapField(localTime, 0, new int[] { 0, 100 }, 100); } catch (UnsupportedOperationException e) { } try { fieldOne.addWrapPartial(localTime, 0, new int[] { 0, 100 }, 100); } catch (UnsupportedOperationException e) { } try { fieldOne.get(1000L); } catch (UnsupportedOperationException e) { } try { fieldOne.getAsShortText(0, Locale.getDefault()); } catch (UnsupportedOperationException e) { } try { fieldOne.getAsShortText(100000L); } catch (UnsupportedOperationException e) { } try { fieldOne.getAsShortText(100000L, Locale.getDefault()); } catch (UnsupportedOperationException e) { } try { fieldOne.getAsShortText(localTime, 0, Locale.getDefault()); } catch (UnsupportedOperationException e) { } try { fieldOne.getAsShortText(localTime, Locale.getDefault()); } catch (UnsupportedOperationException e) { } try { fieldOne.getAsText(0, Locale.getDefault()); } catch (UnsupportedOperationException e) { } try { fieldOne.getAsText(1000L); } catch (UnsupportedOperationException e) { } try { fieldOne.getAsText(1000L, Locale.getDefault()); } catch (UnsupportedOperationException e) { } try { fieldOne.getAsText(localTime, 0, Locale.getDefault()); } catch (UnsupportedOperationException e) { } try { fieldOne.getAsText(localTime, Locale.getDefault()); } catch (UnsupportedOperationException e) { } try { fieldOne.getLeapAmount(System.currentTimeMillis()); } catch (UnsupportedOperationException e) { } try { fieldOne.getMaximumShortTextLength(Locale.getDefault()); } catch (UnsupportedOperationException e) { } try { fieldOne.getMaximumTextLength(Locale.getDefault()); } catch (UnsupportedOperationException e) { } try { fieldOne.getMaximumValue(); } catch (UnsupportedOperationException e) { } try { fieldOne.getMaximumValue(1000000L); } catch (UnsupportedOperationException e) { } try { fieldOne.getMaximumValue(localTime); } catch (UnsupportedOperationException e) { } try { fieldOne.getMaximumValue(localTime, new int[] { 0 }); } catch (UnsupportedOperationException e) { } try { fieldOne.getMinimumValue(); } catch (UnsupportedOperationException e) { } try { fieldOne.getMinimumValue(10000000L); } catch (UnsupportedOperationException e) { } try { fieldOne.getMinimumValue(localTime); } catch (UnsupportedOperationException e) { } try { fieldOne.getMinimumValue(localTime, new int[] { 0 }); } catch (UnsupportedOperationException e) { } try { fieldOne.isLeap(System.currentTimeMillis()); } catch (UnsupportedOperationException e) { } try { fieldOne.remainder(1000000L); } catch (UnsupportedOperationException e) { } try { fieldOne.roundCeiling(1000000L); } catch (UnsupportedOperationException e) { } try { fieldOne.roundFloor(1000000L); } catch (UnsupportedOperationException e) { } try { fieldOne.roundHalfCeiling(1000000L); } catch (UnsupportedOperationException e) { } try { fieldOne.roundHalfEven(1000000L); } catch (UnsupportedOperationException e) { } try { fieldOne.roundHalfFloor(1000000L); } catch (UnsupportedOperationException e) { } try { fieldOne.set(1000000L, 1000); } catch (UnsupportedOperationException e) { } try { fieldOne.set(1000000L, "Unsupported Operation"); } catch (UnsupportedOperationException e) { } try { fieldOne .set(1000000L, "Unsupported Operation", Locale.getDefault()); } catch (UnsupportedOperationException e) { } try { fieldOne.set(localTime, 0, new int[] { 0 }, 10000); } catch (UnsupportedOperationException e) { } try { fieldOne.set(localTime, 0, new int[] { 0 }, "Unsupported Operation", Locale.getDefault()); } catch (UnsupportedOperationException e) { } }
Code: public long roundFloor(long instant){if (false) {int offset = getOffsetToAdd(instant);;return instant - offset;} else {long localInstant = iZone.convertUTCToLocal(instant);localInstant = iField.roundFloor(localInstant);return iZone.convertLocalToUTC(localInstant, false);}}
[[0.03223908 0.05102786 0.05190377 0.04013763 0.02075323 0.07278527
 0.04835154 0.02075722 0.05453843 0.03404736 0.09521323 0.03240245
 0.0420326  0.07275693 0.01820102 0.02075722 0.14890444 0.02075722
 0.04487068 0.04202924 0.03553353]
[0.02406156 0.04502501 0.04460414 0.0426131  0.01650858 0.08984587
 0.04245258 0.01873396 0.04859614 0.03147928 0.10964726 0.02456352
 0.04210328 0.07791598 0.01044306 0.01873396 0.175682   0.01873396
 0.03956461 0.05810922 0.02058293]
[0.03467674 0.04959904 0.0445588  0.03212797 0.01694874 0.08490743
 0.04941646 0.02212965 0.05581736 0.03172717 0.12015231 0.02465079
 0.05270647 0.05190119 0.01538575 0.02212965 0.15520692 0.02212965
 0.03516741 0.05161141 0.02704903]
[0.02895106 0.0466195  0.04638575 0.04994513 0.02498093 0.06542526
 0.05798173 0.02201826 0.04678304 0.02818163 0.10800807 0.02706549
 0.05514223 0.06192355 0.01728289 0.02201826 0.13599445 0.02201825
 0.04065035 0.06694078 0.02568332]
[0.02648247 0.03548528 0.04360141 0.04252245 0.01741574 0.09283176
 0.06156215 0.0206637  0.05920757 0.02667708 0.11556326 0.02150839
 0.04467874 0.06111228 0.01496733 0.0206637  0.14945136 0.0206637
 0.0405231  0.05927199 0.02514658]
[0.02334182 0.03556902 0.03660194 0.02992696 0.01351533 0.09014738
 0.05140992 0.0178958  0.04669542 0.02455324 0.11923561 0.02231048
 0.04386054 0.05509688 0.01476984 0.0178958  0.22889653 0.0178958
 0.03943596 0.05200196 0.01894373]
[0.02462596 0.03714273 0.04345238 0.04341435 0.01915498 0.06997801
 0.05260795 0.02482948 0.05337657 0.03280311 0.10675745 0.01881485
 0.04101983 0.05988332 0.01418001 0.02482948 0.17982717 0.02482948
 0.04981118 0.05534459 0.02331725]
[0.03831044 0.04729395 0.05059364 0.03655452 0.03057556 0.06694166
 0.05211356 0.0317351  0.05654367 0.0284609  0.08221386 0.03430204
 0.04730938 0.05149951 0.02118371 0.0317351  0.12577085 0.0317351
 0.0461293  0.05380667 0.0351915 ]
[0.03476627 0.0490462  0.04095788 0.04818641 0.02563228 0.08009933
 0.05628533 0.0241067  0.04905638 0.0311735  0.09871815 0.0259322
 0.05916541 0.05649282 0.01925449 0.0241067  0.13947262 0.02410671
 0.04250177 0.04369139 0.02724748]
[0.03142259 0.04764024 0.04563159 0.0382041  0.02432946 0.08738284
 0.04462427 0.02158039 0.05620124 0.03186868 0.10159487 0.02314818
 0.0515384  0.06413575 0.01474506 0.02158039 0.14640602 0.0215804
 0.0433784  0.052807   0.03020008]
[0.03689938 0.04362738 0.04373222 0.04394357 0.02697326 0.08452021
 0.05110191 0.02697519 0.05759673 0.02930928 0.08441468 0.02550768
 0.03384957 0.07984866 0.01941886 0.02697519 0.12895828 0.02697519
 0.04423785 0.05080458 0.03433033]
[0.03867278 0.05003279 0.04121256 0.03474322 0.02543039 0.08018097
 0.04969376 0.02705546 0.05185719 0.03728496 0.12004028 0.02555519
 0.03909726 0.0513827  0.01463845 0.02705546 0.14841157 0.02705546
 0.03752038 0.04830487 0.02477427]
[0.02676558 0.04800037 0.03702458 0.0392331  0.01840501 0.08489265
 0.05151831 0.01932481 0.06161569 0.02636436 0.10856352 0.02364514
 0.04891052 0.0603884  0.01478652 0.01932481 0.16839924 0.01932482
 0.04191743 0.05465694 0.02693828]
[0.03257623 0.044704   0.04224948 0.04167638 0.01782213 0.08576751
 0.04065505 0.0209324  0.04813385 0.02742725 0.09299617 0.02780461
 0.05028031 0.05835558 0.01296712 0.0209324  0.18459046 0.02093241
 0.04002216 0.05897382 0.03020069]
[0.03297788 0.0552493  0.05101508 0.03670125 0.02331659 0.08652653
 0.05571473 0.0224451  0.05243046 0.03078463 0.08419793 0.02846631
 0.04634676 0.06037547 0.01523747 0.0224451  0.14748311 0.02244511
 0.04181067 0.05543779 0.02859271]
[0.03831044 0.04729395 0.05059364 0.03655452 0.03057556 0.06694166
 0.05211356 0.0317351  0.05654367 0.0284609  0.08221386 0.03430204
 0.04730938 0.05149951 0.02118371 0.0317351  0.12577085 0.0317351
 0.0461293  0.05380667 0.0351915 ]
[0.02763256 0.03885965 0.04960695 0.04125161 0.0203623  0.10828172
 0.05272693 0.02353442 0.04488048 0.03192875 0.09698798 0.028812
 0.04825883 0.06604345 0.01673176 0.02353442 0.14203674 0.02353442
 0.04284588 0.04751315 0.02463602]
[0.03831044 0.04729395 0.05059364 0.03655452 0.03057556 0.06694166
 0.05211356 0.0317351  0.05654367 0.0284609  0.08221386 0.03430204
 0.04730938 0.05149951 0.02118371 0.0317351  0.12577085 0.0317351
 0.0461293  0.05380667 0.0351915 ]
[0.03716989 0.04808146 0.0542575  0.04023167 0.02485203 0.07645812
 0.05186197 0.02094772 0.04772114 0.0312214  0.10233667 0.02445924
 0.05097128 0.06961195 0.01587879 0.02094772 0.13607346 0.02094771
 0.0423351  0.0530978  0.0305374 ]
[0.02644775 0.05591027 0.03412177 0.03561813 0.02460295 0.07068273
 0.04983384 0.02285061 0.05399659 0.02524271 0.11076443 0.02208701
 0.05460369 0.05737972 0.01226407 0.02285061 0.18649311 0.02285061
 0.03704499 0.05065958 0.0236948 ]
[0.02926061 0.04831854 0.04032684 0.0479149  0.02301557 0.08422668
 0.04454345 0.02657592 0.04809485 0.02694201 0.09917906 0.0241746
 0.04454485 0.06217702 0.01673938 0.02657592 0.16330083 0.02657592
 0.040161   0.04501876 0.03233335]]