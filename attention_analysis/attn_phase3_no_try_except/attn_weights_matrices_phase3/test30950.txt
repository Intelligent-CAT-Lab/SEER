30950
Test: public void test35() throws Throwable { TreeMultimap[] treeMultimapArray0 = (TreeMultimap[]) Array.newInstance(TreeMultimap.class, 0); Locale.FilteringMode[] locale_FilteringModeArray0 = new Locale.FilteringMode[6]; Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES; locale_FilteringModeArray0[0] = locale_FilteringMode0; Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.REJECT_EXTENDED_RANGES; locale_FilteringModeArray0[1] = locale_FilteringMode1; Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.EXTENDED_FILTERING; locale_FilteringModeArray0[2] = locale_FilteringMode2; Locale.FilteringMode locale_FilteringMode3 = Locale.FilteringMode.REJECT_EXTENDED_RANGES; locale_FilteringModeArray0[3] = locale_FilteringMode3; Locale.FilteringMode locale_FilteringMode4 = Locale.FilteringMode.AUTOSELECT_FILTERING; locale_FilteringModeArray0[4] = locale_FilteringMode4; Locale.FilteringMode locale_FilteringMode5 = Locale.FilteringMode.MAP_EXTENDED_RANGES; locale_FilteringModeArray0[5] = locale_FilteringMode5; // Undeclared exception!  MapUtil.newHashMap((TreeMultimap<Class<Object>, MutableLong>[]) treeMultimapArray0, locale_FilteringModeArray0);   }
Code: public static <K, V> HashMap<K, V> newHashMap() { return new HashMap<K, V>(); }
[[0.06006238 0.16515128 0.08331423 0.08331423 0.08331423 0.08331423
 0.08331423 0.07185212 0.06508403 0.03086142 0.08331423 0.08331423
 0.0237892 ]
[0.05976554 0.15924288 0.0805509  0.0805509  0.0805509  0.0805509
 0.0805509  0.10595625 0.05659974 0.0258362  0.08055089 0.08055089
 0.02874313]
[0.04937284 0.17149076 0.08245258 0.08245258 0.08245258 0.08245258
 0.08245258 0.07801047 0.05991801 0.03750911 0.08245258 0.08245258
 0.02653082]
[0.04937284 0.17149076 0.08245258 0.08245258 0.08245258 0.08245258
 0.08245258 0.07801047 0.05991801 0.03750911 0.08245258 0.08245258
 0.02653082]
[0.04937284 0.17149076 0.08245258 0.08245258 0.08245258 0.08245258
 0.08245258 0.07801047 0.05991801 0.03750911 0.08245258 0.08245258
 0.02653082]
[0.04937284 0.17149076 0.08245258 0.08245258 0.08245258 0.08245258
 0.08245258 0.07801047 0.05991801 0.03750911 0.08245258 0.08245258
 0.02653082]
[0.04937284 0.17149076 0.08245258 0.08245258 0.08245258 0.08245258
 0.08245258 0.07801047 0.05991801 0.03750911 0.08245258 0.08245258
 0.02653082]
[0.06118599 0.14603469 0.07895637 0.07895637 0.07895637 0.07895637
 0.07895637 0.10106509 0.07006517 0.03374863 0.07895637 0.07895637
 0.03520582]
[0.04119669 0.17990704 0.08556607 0.08556607 0.08556607 0.08556607
 0.08556607 0.07349913 0.06101955 0.02491533 0.08556607 0.08556607
 0.0204997 ]
[0.05196894 0.15348338 0.08163001 0.08163001 0.08163001 0.08163001
 0.08163001 0.08951917 0.07298645 0.03431122 0.08163001 0.08163001
 0.02632072]
[0.04937284 0.17149076 0.08245258 0.08245258 0.08245258 0.08245258
 0.08245258 0.07801047 0.05991801 0.03750911 0.08245258 0.08245258
 0.02653082]
[0.04937284 0.17149076 0.08245258 0.08245258 0.08245258 0.08245258
 0.08245258 0.07801047 0.05991801 0.03750911 0.08245258 0.08245258
 0.02653082]
[0.04121399 0.17677857 0.07661681 0.07661681 0.07661681 0.07661681
 0.07661681 0.10856394 0.09077768 0.02311328 0.07661681 0.07661681
 0.02323485]]