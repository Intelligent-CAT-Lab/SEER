18981
Test: public void test064() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test064"); com.google.javascript.jscomp.LightweightMessageFormatter lightweightMessageFormatter0 = com.google.javascript.jscomp.LightweightMessageFormatter.withoutSource(); com.google.javascript.jscomp.CheckLevel checkLevel4 = com.google.javascript.jscomp.CheckLevel.WARNING; com.google.javascript.jscomp.DiagnosticType diagnosticType7 = com.google.javascript.jscomp.DiagnosticType.warning("", ""); java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "", ": hi!" }; com.google.javascript.jscomp.JSError jSError15 = com.google.javascript.jscomp.JSError.make(": hi!", (int) (short) 1, (int) (short) 1, checkLevel4, diagnosticType7, strArray14); com.google.javascript.rhino.Node node16 = jSError15.node; boolean boolean18 = jSError15.equals((java.lang.Object) ": hi!"); com.google.javascript.jscomp.CheckLevel checkLevel19 = jSError15.level; java.lang.String str20 = lightweightMessageFormatter0.getLevelName(checkLevel19); com.google.javascript.jscomp.SourceExcerptProvider sourceExcerptProvider21 = lightweightMessageFormatter0.getSource(); com.google.javascript.jscomp.SourceExcerptProvider sourceExcerptProvider22 = lightweightMessageFormatter0.getSource(); com.google.javascript.jscomp.CheckLevel checkLevel29 = com.google.javascript.jscomp.CheckLevel.WARNING; boolean boolean30 = checkLevel29.isOn(); com.google.javascript.jscomp.DiagnosticType diagnosticType33 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!"); java.lang.Object[] objArray34 = null; java.lang.String str35 = diagnosticType33.format(objArray34); java.lang.String[] strArray38 = new java.lang.String[] { "hi!", "" }; com.google.javascript.jscomp.JSError jSError39 = com.google.javascript.jscomp.JSError.make("hi!", 1, (int) (short) 100, checkLevel29, diagnosticType33, strArray38); com.google.javascript.jscomp.DiagnosticType diagnosticType45 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!"); boolean boolean47 = diagnosticType45.equals((java.lang.Object) (byte) -1); java.lang.String str48 = diagnosticType45.key; com.google.javascript.jscomp.CheckLevel checkLevel52 = com.google.javascript.jscomp.CheckLevel.WARNING; boolean boolean53 = checkLevel52.isOn(); com.google.javascript.jscomp.DiagnosticType diagnosticType56 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!"); java.lang.Object[] objArray57 = null; java.lang.String str58 = diagnosticType56.format(objArray57); java.lang.String[] strArray61 = new java.lang.String[] { "hi!", "" }; com.google.javascript.jscomp.JSError jSError62 = com.google.javascript.jscomp.JSError.make("hi!", 1, (int) (short) 100, checkLevel52, diagnosticType56, strArray61); com.google.javascript.jscomp.JSError jSError63 = com.google.javascript.jscomp.JSError.make(diagnosticType45, strArray61); java.lang.String[] strArray64 = null; com.google.javascript.jscomp.JSError jSError65 = com.google.javascript.jscomp.JSError.make("", (int) '4', 1, diagnosticType45, strArray64); com.google.javascript.jscomp.DiagnosticType diagnosticType68 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!"); boolean boolean70 = diagnosticType68.equals((java.lang.Object) (byte) -1); com.google.javascript.jscomp.DiagnosticType diagnosticType73 = com.google.javascript.jscomp.DiagnosticType.error(": hi!", "WARNING"); com.google.javascript.jscomp.DiagnosticType diagnosticType76 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!"); boolean boolean78 = diagnosticType76.equals((java.lang.Object) (byte) -1); java.lang.String str79 = diagnosticType76.key; com.google.javascript.jscomp.CheckLevel checkLevel83 = com.google.javascript.jscomp.CheckLevel.WARNING; boolean boolean84 = checkLevel83.isOn(); com.google.javascript.jscomp.DiagnosticType diagnosticType87 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!"); java.lang.Object[] objArray88 = null; java.lang.String str89 = diagnosticType87.format(objArray88); java.lang.String[] strArray92 = new java.lang.String[] { "hi!", "" }; com.google.javascript.jscomp.JSError jSError93 = com.google.javascript.jscomp.JSError.make("hi!", 1, (int) (short) 100, checkLevel83, diagnosticType87, strArray92); com.google.javascript.jscomp.JSError jSError94 = com.google.javascript.jscomp.JSError.make(diagnosticType76, strArray92); java.lang.String str95 = diagnosticType73.format((java.lang.Object[]) strArray92); java.lang.String str96 = diagnosticType68.format((java.lang.Object[]) strArray92); com.google.javascript.jscomp.JSError jSError97 = com.google.javascript.jscomp.JSError.make("WARNING", (int) (short) 100, (int) 'a', checkLevel29, diagnosticType45, strArray92); java.lang.String str98 = lightweightMessageFormatter0.formatError(jSError97); com.google.javascript.jscomp.SourceExcerptProvider sourceExcerptProvider99 = lightweightMessageFormatter0.getSource(); }
Code: private String format(JSError error, boolean warning) { SourceExcerptProvider source = getSource(); String sourceExcerpt = source == null ? null : excerpt.get( source, error.sourceName, error.lineNumber, excerptFormatter); StringBuilder b = new StringBuilder(); if (error.sourceName != null) { b.append(error.sourceName); if (error.lineNumber > 0) { b.append(':'); b.append(error.lineNumber); } b.append(": "); } ; b.append(" - "); b.append(error.description); b.append('\n'); if (sourceExcerpt != null) { b.append(sourceExcerpt); b.append('\n'); int charno = error.getCharno(); if (false && charno <= sourceExcerpt.length()) { for (int i = -1; i != charno; i++) { char c = sourceExcerpt.charAt(i); if (Character.isWhitespace(c)) { b.append(c); } else { b.append(' '); } } b.append("^\n"); } } return b.toString(); }
tensor([[0.0100, 0.0079, 0.0054,  ..., 0.0069, 0.0172, 0.0032],
        [0.0080, 0.0072, 0.0051,  ..., 0.0067, 0.0127, 0.0027],
        [0.0084, 0.0071, 0.0035,  ..., 0.0057, 0.0142, 0.0020],
        ...,
        [0.0088, 0.0077, 0.0036,  ..., 0.0058, 0.0157, 0.0025],
        [0.0091, 0.0084, 0.0034,  ..., 0.0065, 0.0137, 0.0019],
        [0.0075, 0.0086, 0.0044,  ..., 0.0104, 0.0168, 0.0027]])