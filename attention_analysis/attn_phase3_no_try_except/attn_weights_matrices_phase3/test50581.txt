50581
Test: public void test9831() throws Throwable { DateTimeFormatterBuilder.TimeZoneId[] dateTimeFormatterBuilder_TimeZoneIdArray0 = DateTimeFormatterBuilder.TimeZoneId.values(); DateTimeFormatterBuilder dateTimeFormatterBuilder0 = new DateTimeFormatterBuilder(); DateTimeFormatterBuilder dateTimeFormatterBuilder1 = dateTimeFormatterBuilder0.appendFractionOfSecond(1456, 1456); DateTimeFormatterBuilder dateTimeFormatterBuilder2 = dateTimeFormatterBuilder1.appendDayOfWeekText(); DateTimeFormatterBuilder dateTimeFormatterBuilder3 = dateTimeFormatterBuilder2.appendTwoDigitWeekyear(90, true); DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.centuryOfEra(); DateTimeFormatterBuilder.UnpaddedNumber dateTimeFormatterBuilder_UnpaddedNumber0 = new DateTimeFormatterBuilder.UnpaddedNumber(dateTimeFieldType0, 65, true); BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance(); BuddhistChronology buddhistChronology1 = (BuddhistChronology)buddhistChronology0.withUTC(); DateTimeParserBucket dateTimeParserBucket0 = new DateTimeParserBucket(1094L, buddhistChronology1, (Locale) null, (Integer) 1, 1456); StringBuilder stringBuilder0 = new StringBuilder(90); int int0 = dateTimeFormatterBuilder_UnpaddedNumber0.parseInto(dateTimeParserBucket0, stringBuilder0, 90); InternalPrinterDateTimePrinter internalPrinterDateTimePrinter0 = (InternalPrinterDateTimePrinter)InternalPrinterDateTimePrinter.of(dateTimeFormatterBuilder_UnpaddedNumber0); InternalParserDateTimeParser internalParserDateTimeParser0 = (InternalParserDateTimeParser)InternalParserDateTimeParser.of(dateTimeFormatterBuilder_UnpaddedNumber0); DateTimeFormatterBuilder dateTimeFormatterBuilder4 = dateTimeFormatterBuilder0.appendHourOfDay(1456); }
Code: public DateTimeFormatterBuilder appendHourOfDay(int minDigits) { return appendDecimal(DateTimeFieldType.hourOfDay(), minDigits, 2); }
[[0.08205512 0.11382069 0.11382069 0.11382069 0.09785184 0.08887724
 0.11382069 0.11382069 0.12968028 0.03243214]
[0.06842582 0.11517966 0.11517966 0.11517966 0.10309129 0.08290781
 0.11517966 0.11517966 0.1342538  0.03542297]
[0.06842582 0.11517966 0.11517966 0.11517966 0.10309129 0.08290781
 0.11517966 0.11517966 0.1342538  0.03542297]
[0.06842582 0.11517966 0.11517966 0.11517966 0.10309129 0.08290781
 0.11517966 0.11517966 0.1342538  0.03542297]
[0.08026189 0.10609328 0.10609328 0.10609328 0.12692222 0.09264792
 0.10609328 0.10609328 0.12461083 0.04509079]
[0.05550785 0.11613241 0.11613241 0.11613241 0.09730859 0.08251259
 0.11613241 0.11613241 0.15677267 0.02723623]
[0.06842582 0.11517966 0.11517966 0.11517966 0.10309129 0.08290781
 0.11517966 0.11517966 0.1342538  0.03542297]
[0.06842582 0.11517966 0.11517966 0.11517966 0.10309129 0.08290781
 0.11517966 0.11517966 0.1342538  0.03542297]
[0.06725104 0.10889164 0.10889164 0.10889164 0.15426037 0.09336461
 0.10889164 0.10889164 0.11452725 0.02613861]
[0.05639288 0.10541715 0.10541715 0.10541715 0.1451817  0.12323768
 0.10541715 0.10541715 0.11687201 0.03123005]]