16880
Test: private void testGetTypesUnderInequality( JSType t1, JSType t2, JSType t1Eq, JSType t2Eq) { TypePair p12 = t1.getTypesUnderInequality(t2); TypePair p21 = t2.getTypesUnderInequality(t1); }
Code: public TypePair getTypesUnderInequality(JSType that) { if (that instanceof UnionType) { TypePair p = that.getTypesUnderInequality(this); return new TypePair(p.typeB, p.typeA); } switch (this.testForEquality(that)) { case TRUE: JSType noType = getNativeType(JSTypeNative.NO_TYPE); return new TypePair(noType, noType); case FALSE: case UNKNOWN: return new TypePair(this, that); } throw new IllegalStateException(); }
tensor([[0.0190, 0.0316, 0.0150,  ..., 0.0097, 0.0157, 0.0078],
        [0.0223, 0.0295, 0.0206,  ..., 0.0080, 0.0136, 0.0080],
        [0.0137, 0.0286, 0.0166,  ..., 0.0084, 0.0175, 0.0068],
        ...,
        [0.0162, 0.0313, 0.0161,  ..., 0.0107, 0.0163, 0.0082],
        [0.0140, 0.0309, 0.0161,  ..., 0.0086, 0.0144, 0.0073],
        [0.0139, 0.0270, 0.0167,  ..., 0.0078, 0.0126, 0.0067]])