19277
Test: public void test167() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test167"); com.google.javascript.jscomp.CheckLevel checkLevel3 = com.google.javascript.jscomp.CheckLevel.WARNING; com.google.javascript.jscomp.DiagnosticType diagnosticType6 = com.google.javascript.jscomp.DiagnosticType.warning("", ""); java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "", ": hi!" }; com.google.javascript.jscomp.JSError jSError14 = com.google.javascript.jscomp.JSError.make(": hi!", (int) (short) 1, (int) (short) 1, checkLevel3, diagnosticType6, strArray13); com.google.javascript.rhino.Node node15 = jSError14.node; int int16 = jSError14.lineNumber; com.google.javascript.jscomp.DiagnosticType diagnosticType17 = jSError14.getType(); com.google.javascript.jscomp.LightweightMessageFormatter lightweightMessageFormatter18 = com.google.javascript.jscomp.LightweightMessageFormatter.withoutSource(); com.google.javascript.jscomp.CheckLevel checkLevel22 = com.google.javascript.jscomp.CheckLevel.WARNING; com.google.javascript.jscomp.DiagnosticType diagnosticType25 = com.google.javascript.jscomp.DiagnosticType.warning("", ""); java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "", ": hi!" }; com.google.javascript.jscomp.JSError jSError33 = com.google.javascript.jscomp.JSError.make(": hi!", (int) (short) 1, (int) (short) 1, checkLevel22, diagnosticType25, strArray32); com.google.javascript.rhino.Node node34 = jSError33.node; boolean boolean36 = jSError33.equals((java.lang.Object) ": hi!"); com.google.javascript.jscomp.CheckLevel checkLevel37 = jSError33.level; java.lang.String str38 = lightweightMessageFormatter18.getLevelName(checkLevel37); com.google.javascript.jscomp.CheckLevel checkLevel42 = com.google.javascript.jscomp.CheckLevel.WARNING; com.google.javascript.jscomp.DiagnosticType diagnosticType45 = com.google.javascript.jscomp.DiagnosticType.warning("", ""); java.lang.String[] strArray52 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "", ": hi!" }; com.google.javascript.jscomp.JSError jSError53 = com.google.javascript.jscomp.JSError.make(": hi!", (int) (short) 1, (int) (short) 1, checkLevel42, diagnosticType45, strArray52); com.google.javascript.rhino.Node node54 = jSError53.node; java.lang.String str55 = lightweightMessageFormatter18.formatError(jSError53); lightweightMessageFormatter18.setColorize(true); lightweightMessageFormatter18.setColorize(false); com.google.javascript.jscomp.SourceExcerptProvider sourceExcerptProvider60 = lightweightMessageFormatter18.getSource(); boolean boolean61 = jSError14.equals((java.lang.Object) lightweightMessageFormatter18); java.lang.String str62 = jSError14.description; com.google.javascript.jscomp.CheckLevel checkLevel63 = jSError14.level; }
Code: private String format(JSError error, boolean warning) { SourceExcerptProvider source = getSource(); String sourceExcerpt = source == null ? null : excerpt.get( source, error.sourceName, error.lineNumber, excerptFormatter); StringBuilder b = new StringBuilder(); if (error.sourceName != null) { b.append(error.sourceName); if (error.lineNumber > 0) { b.append(':'); b.append(error.lineNumber); } b.append(": "); } ; b.append(" - "); b.append(error.description); b.append('\n'); if (sourceExcerpt != null) { b.append(sourceExcerpt); b.append('\n'); int charno = error.getCharno(); if (excerpt.equals(LINE) && 0 <= charno && charno <= sourceExcerpt.length()) { for (int i = -1; i != charno; i++) { char c = sourceExcerpt.charAt(i); if (false) { b.append(c); } else { b.append(' '); } } b.append("^\n"); } } return b.toString(); }
tensor([[0.0100, 0.0077, 0.0053,  ..., 0.0068, 0.0170, 0.0032],
        [0.0079, 0.0071, 0.0050,  ..., 0.0066, 0.0126, 0.0027],
        [0.0086, 0.0071, 0.0035,  ..., 0.0057, 0.0145, 0.0020],
        ...,
        [0.0090, 0.0076, 0.0036,  ..., 0.0058, 0.0158, 0.0026],
        [0.0093, 0.0082, 0.0034,  ..., 0.0066, 0.0140, 0.0019],
        [0.0075, 0.0084, 0.0043,  ..., 0.0104, 0.0168, 0.0027]])