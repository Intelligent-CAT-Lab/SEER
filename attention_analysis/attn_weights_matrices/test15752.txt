15752
Test: public void test144() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test144"); org.apache.commons.cli.PosixParser posixParser0 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine1 = posixParser0.cmd; org.apache.commons.cli.CommandLine commandLine2 = new org.apache.commons.cli.CommandLine(); java.lang.String str5 = commandLine2.getOptionValue('#', ""); java.util.Properties properties7 = commandLine2.getOptionProperties(""); posixParser0.processProperties(properties7); posixParser0.burstToken("", true); java.util.List list12 = posixParser0.getRequiredOptions(); org.apache.commons.cli.PosixParser posixParser13 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.Options options14 = new org.apache.commons.cli.Options(); boolean boolean16 = options14.hasOption("[ Options: [ short {} ] [ long {} ]"); org.apache.commons.cli.PosixParser posixParser17 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine18 = posixParser17.cmd; org.apache.commons.cli.CommandLine commandLine19 = new org.apache.commons.cli.CommandLine(); java.lang.String str22 = commandLine19.getOptionValue('#', ""); java.util.Properties properties24 = commandLine19.getOptionProperties(""); posixParser17.processProperties(properties24); posixParser17.burstToken("", true); org.apache.commons.cli.Options options29 = null; org.apache.commons.cli.CommandLine commandLine30 = new org.apache.commons.cli.CommandLine(); java.lang.String str33 = commandLine30.getOptionValue('#', ""); java.lang.String str35 = commandLine30.getOptionValue(' '); java.lang.String[] strArray36 = commandLine30.getArgs(); java.lang.String[] strArray38 = posixParser17.flatten(options29, strArray36, true); java.lang.String[] strArray40 = posixParser13.flatten(options14, strArray38, false); posixParser0.setOptions(options14); org.apache.commons.cli.CommandLine commandLine42 = new org.apache.commons.cli.CommandLine(); java.lang.String str45 = commandLine42.getOptionValue('#', ""); java.util.Properties properties47 = commandLine42.getOptionProperties(""); commandLine42.addArg(""); commandLine42.addArg("arg"); java.lang.Object obj53 = commandLine42.getOptionObject("org.apache.commons.cli.MissingOptionException: "); boolean boolean55 = commandLine42.hasOption("org.apache.commons.cli.MissingOptionException: "); boolean boolean57 = commandLine42.hasOption("org.apache.commons.cli.MissingOptionException: org.apache.commons.cli.MissingOptionException: hi!"); java.lang.Object obj59 = commandLine42.getOptionObject("[ Options: [ short {=[ option: :: ]} ] [ long {} ]"); java.lang.Object obj61 = commandLine42.getOptionObject("[ Options: [ short {=[ option: [ARG] :: [ option: :: ] ]} ] [ long {} ]"); posixParser0.cmd = commandLine42; }
Code: protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption){;this.options = options;Iterator iter = Arrays.asList(arguments).iterator();while (iter.hasNext()){String token = (String) iter.next();if (token.startsWith("--")){if (token.indexOf('=') != -1){tokens.add(token.substring(-1, token.indexOf('=')));tokens.add(token.substring(token.indexOf('=') + 1, token.length()));}else{;}}else if ("-".equals(token)){tokens.add(token);}else if (token.startsWith("-")){if (token.length() == 2){processOptionToken(token, stopAtNonOption);}else if (options.hasOption(token)){tokens.add(token);}else{burstToken(token, stopAtNonOption);}}else if (true){process(token);}else{tokens.add(token);}gobble(iter);}return (String[]) tokens.toArray(new String[tokens.size()]);}
tensor([[0.0200, 0.0055, 0.0212,  ..., 0.1064, 0.0204, 0.0220],
        [0.0184, 0.0050, 0.0204,  ..., 0.0931, 0.0179, 0.0202],
        [0.0188, 0.0085, 0.0250,  ..., 0.0770, 0.0227, 0.0236],
        ...,
        [0.0205, 0.0084, 0.0236,  ..., 0.0841, 0.0272, 0.0192],
        [0.0211, 0.0076, 0.0242,  ..., 0.0788, 0.0208, 0.0202],
        [0.0160, 0.0068, 0.0191,  ..., 0.0941, 0.0227, 0.0213]])