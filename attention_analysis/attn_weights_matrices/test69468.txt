69468
Test: public void test69() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test69"); org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basic(); java.lang.String[] strArray5 = new java.lang.String[] { "#document", "#document", "#document", "hi!" }; org.jsoup.safety.Whitelist whitelist6 = whitelist0.addTags(strArray5); org.jsoup.safety.Whitelist whitelist9 = org.jsoup.safety.Whitelist.simpleText(); boolean boolean10 = org.jsoup.Jsoup.isValid("hi!", whitelist9); org.jsoup.safety.Cleaner cleaner11 = new org.jsoup.safety.Cleaner(whitelist9); org.jsoup.nodes.Document document14 = org.jsoup.Jsoup.parse("", "hi!"); org.jsoup.nodes.Element element15 = document14.parent(); java.lang.String str16 = document14.nodeName(); org.jsoup.nodes.Element element17 = document14.clone(); org.jsoup.nodes.Document document20 = org.jsoup.Jsoup.parse("", "hi!"); org.jsoup.nodes.Element element21 = document20.parent(); java.lang.String str22 = document20.nodeName(); org.jsoup.nodes.Element element23 = document20.body(); org.jsoup.nodes.Element element24 = element17.appendChild((org.jsoup.nodes.Node) document20); org.jsoup.nodes.Node node25 = element24.clone(); org.jsoup.nodes.Document document26 = node25.ownerDocument(); org.jsoup.nodes.Document document27 = cleaner11.clean(document26); org.jsoup.select.Evaluator.Class class29 = new org.jsoup.select.Evaluator.Class("#root"); org.jsoup.nodes.Document document32 = org.jsoup.Jsoup.parse("", "hi!"); java.util.List<org.jsoup.nodes.TextNode> textNodeList33 = document32.textNodes(); org.jsoup.nodes.Document document36 = org.jsoup.Jsoup.parseBodyFragment("#document", ""); org.jsoup.nodes.Document document37 = document36.ownerDocument(); java.lang.String str38 = document37.val(); boolean boolean39 = class29.matches((org.jsoup.nodes.Element) document32, (org.jsoup.nodes.Element) document37); boolean boolean40 = cleaner11.isValid(document32); java.util.List<org.jsoup.nodes.TextNode> textNodeList41 = document32.textNodes(); org.jsoup.nodes.Attribute attribute44 = org.jsoup.nodes.Attribute.createFromEncoded("#root", ":containsOwn(hi!"); org.jsoup.nodes.Attribute attribute45 = attribute44.clone(); java.lang.String str46 = attribute44.toString(); boolean boolean47 = whitelist0.isSafeAttribute(":lt(100)", (org.jsoup.nodes.Element) document32, attribute44); boolean boolean49 = whitelist0.isSafeTag("[]=\"\""); }
Code: public Document clean(Document dirtyDocument){;Document clean = Document.createShell(dirtyDocument.baseUri());;return clean;}
[[0.07166708 0.26161504 0.07213589 0.05526156 0.19211084 0.0461171
 0.22101474 0.08007774]
[0.06692339 0.2763254  0.05971137 0.04789264 0.1886994  0.0389004
 0.23773459 0.08381283]
[0.05782536 0.27173156 0.07155922 0.04138974 0.16226786 0.03994612
 0.28076068 0.0745195 ]
[0.06587343 0.29311126 0.06831126 0.05274617 0.18060315 0.05714565
 0.210825   0.07138412]
[0.07468183 0.2566928  0.07545564 0.05010776 0.18846196 0.04721083
 0.22650276 0.08088638]
[0.08635265 0.19845608 0.07280102 0.07918102 0.17946044 0.07235785
 0.22644076 0.08495016]
[0.04958168 0.2694707  0.07649092 0.05038562 0.19791044 0.04146368
 0.23083337 0.08386354]
[0.07118735 0.24524024 0.05913416 0.06090122 0.16800943 0.05437893
 0.2515179  0.08963078]]