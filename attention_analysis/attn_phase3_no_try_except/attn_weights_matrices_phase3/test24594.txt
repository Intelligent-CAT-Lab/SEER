24594
Test: public void test63() throws Throwable { Precision.DoubleEquivalence precision_DoubleEquivalence0 = mock(Precision.DoubleEquivalence.class, new ViolatedAssumptionAnswer()); doReturn(false, false, false, false, true).when(precision_DoubleEquivalence0).eqZero(anyDouble()); AngularInterval angularInterval0 = AngularInterval.of(6.283185307179586, 6.283185307179586, precision_DoubleEquivalence0); Transform1S transform1S0 = Transform1S.createNegation(); AngularInterval angularInterval1 = angularInterval0.transform(transform1S0); CutAngle cutAngle0 = angularInterval1.getMaxBoundary(); CutAngle cutAngle1 = cutAngle0.reverse(); Precision.DoubleEquivalence precision_DoubleEquivalence1 = mock(Precision.DoubleEquivalence.class, new ViolatedAssumptionAnswer()); doReturn(52, (-1), (-1868), 52).when(precision_DoubleEquivalence1).compare(anyDouble() , anyDouble()); doReturn(false, false, false).when(precision_DoubleEquivalence1).eqZero(anyDouble()); doReturn(true, true).when(precision_DoubleEquivalence1).lte(anyDouble() , anyDouble()); AngularInterval.Convex angularInterval_Convex0 = AngularInterval.Convex.of(34.0, 6.283185307179586, precision_DoubleEquivalence1); angularInterval_Convex0.splitDiameter(cutAngle0); Split<AngularInterval.Convex> split0 = angularInterval_Convex0.splitDiameter(cutAngle1); }
Code: public double getSize() { return getMax() - getMin(); }
[[0.07364887 0.12571193 0.16910686 0.11051345 0.08257394 0.10218184
 0.22211409 0.0800758  0.03407319]
[0.05924236 0.12548167 0.1808291  0.11414187 0.09317587 0.10432987
 0.24681702 0.0467249  0.02925735]
[0.06907023 0.10626072 0.18042307 0.13367583 0.06852521 0.0945616
 0.25537616 0.06243499 0.02967219]
[0.07847011 0.10504311 0.15757252 0.131653   0.08959112 0.10035114
 0.2214418  0.07033267 0.04554448]
[0.05136965 0.10520066 0.2151489  0.110103   0.07292064 0.09767942
 0.24790806 0.06998695 0.02968271]
[0.06315985 0.11608826 0.18009642 0.11651207 0.07709086 0.10245293
 0.23775929 0.06842121 0.03841913]
[0.08278316 0.11971796 0.14368911 0.13695526 0.08598132 0.11729776
 0.19123541 0.08209371 0.04024623]
[0.05679053 0.10894277 0.14113748 0.11824709 0.0828836  0.10184619
 0.30089286 0.05597637 0.03328304]
[0.05510629 0.12548986 0.12390608 0.14226158 0.1205394  0.10294418
 0.2399396  0.05923001 0.03058304]]