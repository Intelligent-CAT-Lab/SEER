17965
Test: public void test040() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test040"); com.google.javascript.jscomp.DefaultCodingConvention defaultCodingConvention0 = new com.google.javascript.jscomp.DefaultCodingConvention(); boolean boolean3 = defaultCodingConvention0.isExported("%", true); java.io.PrintStream printStream4 = null; com.google.javascript.jscomp.Compiler compiler5 = new com.google.javascript.jscomp.Compiler(printStream4); com.google.javascript.jscomp.Compiler.IntermediateState intermediateState6 = compiler5.getState(); com.google.javascript.rhino.Node node9 = compiler5.parseSyntheticCode("<No stack trace available>", "(Proxy)"); com.google.javascript.rhino.Node[] nodeArray12 = new com.google.javascript.rhino.Node[] {}; com.google.javascript.rhino.Node node13 = new com.google.javascript.rhino.Node((int) (short) 1, nodeArray12); com.google.javascript.rhino.Node node16 = new com.google.javascript.rhino.Node(29, nodeArray12, 0, (int) 'a'); com.google.javascript.jscomp.NodeUtil.MayBeStringResultPredicate mayBeStringResultPredicate17 = new com.google.javascript.jscomp.NodeUtil.MayBeStringResultPredicate(); com.google.javascript.rhino.Node[] nodeArray19 = new com.google.javascript.rhino.Node[] {}; com.google.javascript.rhino.Node node20 = new com.google.javascript.rhino.Node((int) (short) 1, nodeArray19); boolean boolean21 = com.google.javascript.jscomp.NodeUtil.isWithinLoop(node20); com.google.javascript.jscomp.AbstractCompiler abstractCompiler22 = null; boolean boolean23 = com.google.javascript.jscomp.NodeUtil.mayEffectMutableState(node20, abstractCompiler22); java.lang.Double double24 = com.google.javascript.jscomp.NodeUtil.getNumberValue(node20); boolean boolean25 = com.google.javascript.jscomp.NodeUtil.isBooleanResultHelper(node20); boolean boolean26 = mayBeStringResultPredicate17.apply(node20); boolean boolean27 = node20.isSyntheticBlock(); boolean boolean28 = compiler5.areNodesEqualForInlining(node16, node20); try { boolean boolean29 = defaultCodingConvention0.isVarArgsParameter(node20); } catch (java.lang.NullPointerException e) { } }
Code: static boolean isBooleanResultHelper(Node n) { switch (n.getType()) { case Token.TRUE: case Token.FALSE: case Token.EQ: case Token.NE: case Token.SHEQ: case Token.SHNE: case Token.LT: case Token.GT: case Token.LE: case Token.GE: case Token.IN: case Token.INSTANCEOF: case Token.NOT: case Token.DELPROP: return true; default: return false; } }
tensor([[0.0406, 0.0600, 0.0272,  ..., 0.0249, 0.0069, 0.0069],
        [0.0337, 0.0835, 0.0161,  ..., 0.0217, 0.0040, 0.0040],
        [0.0390, 0.0705, 0.0207,  ..., 0.0204, 0.0059, 0.0059],
        ...,
        [0.0358, 0.0490, 0.0228,  ..., 0.0284, 0.0075, 0.0075],
        [0.0403, 0.0540, 0.0189,  ..., 0.0252, 0.0051, 0.0051],
        [0.0403, 0.0540, 0.0189,  ..., 0.0252, 0.0051, 0.0051]])