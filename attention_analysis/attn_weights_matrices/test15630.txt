15630
Test: public void test070() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test070"); org.apache.commons.cli.GnuParser gnuParser0 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.Options options1 = new org.apache.commons.cli.Options(); java.lang.String[] strArray2 = new java.lang.String[] {}; java.util.Properties properties3 = null; org.apache.commons.cli.CommandLine commandLine5 = gnuParser0.parse(options1, strArray2, properties3, true); java.util.Properties properties6 = null; gnuParser0.processProperties(properties6); java.util.List list8 = gnuParser0.getRequiredOptions(); org.apache.commons.cli.CommandLine commandLine9 = gnuParser0.cmd; org.apache.commons.cli.GnuParser gnuParser10 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.Options options11 = new org.apache.commons.cli.Options(); java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "" }; java.lang.String[] strArray16 = gnuParser10.flatten(options11, strArray14, true); java.lang.String str17 = options11.toString(); org.apache.commons.cli.GnuParser gnuParser18 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.Options options19 = new org.apache.commons.cli.Options(); java.lang.String[] strArray22 = new java.lang.String[] { "hi!", "" }; java.lang.String[] strArray24 = gnuParser18.flatten(options19, strArray22, true); java.util.Properties properties25 = null; org.apache.commons.cli.CommandLine commandLine26 = gnuParser0.parse(options11, strArray22, properties25); java.util.Properties properties27 = null; gnuParser0.processProperties(properties27); org.apache.commons.cli.GnuParser gnuParser29 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.Options options30 = new org.apache.commons.cli.Options(); java.lang.String[] strArray31 = new java.lang.String[] {}; java.util.Properties properties32 = null; org.apache.commons.cli.CommandLine commandLine34 = gnuParser29.parse(options30, strArray31, properties32, true); org.apache.commons.cli.Options options35 = new org.apache.commons.cli.Options(); boolean boolean37 = options35.hasOption(""); boolean boolean39 = options35.hasOption(""); java.lang.String[] strArray46 = new java.lang.String[] { "hi!", "hi!", "", "", "", "org.apache.commons.cli.MissingArgumentException: " }; org.apache.commons.cli.CommandLine commandLine48 = gnuParser29.parse(options35, strArray46, false); org.apache.commons.cli.GnuParser gnuParser49 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.Options options50 = new org.apache.commons.cli.Options(); java.lang.String[] strArray51 = new java.lang.String[] {}; java.util.Properties properties52 = null; org.apache.commons.cli.CommandLine commandLine54 = gnuParser49.parse(options50, strArray51, properties52, true); java.util.Properties properties55 = null; gnuParser49.processProperties(properties55); java.util.List list57 = gnuParser49.getRequiredOptions(); org.apache.commons.cli.CommandLine commandLine58 = gnuParser49.cmd; org.apache.commons.cli.Options options59 = gnuParser49.getOptions(); org.apache.commons.cli.GnuParser gnuParser60 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.Options options61 = new org.apache.commons.cli.Options(); java.lang.String[] strArray62 = new java.lang.String[] {}; java.util.Properties properties63 = null; org.apache.commons.cli.CommandLine commandLine65 = gnuParser60.parse(options61, strArray62, properties63, true); org.apache.commons.cli.Options options66 = new org.apache.commons.cli.Options(); boolean boolean68 = options66.hasOption(""); boolean boolean70 = options66.hasOption(""); java.lang.String[] strArray77 = new java.lang.String[] { "hi!", "hi!", "", "", "", "org.apache.commons.cli.MissingArgumentException: " }; org.apache.commons.cli.CommandLine commandLine79 = gnuParser60.parse(options66, strArray77, false); java.util.Properties properties80 = null; org.apache.commons.cli.CommandLine commandLine82 = gnuParser29.parse(options59, strArray77, properties80, true); org.apache.commons.cli.GnuParser gnuParser83 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.Options options84 = new org.apache.commons.cli.Options(); java.lang.String[] strArray85 = new java.lang.String[] {}; java.util.Properties properties86 = null; org.apache.commons.cli.CommandLine commandLine88 = gnuParser83.parse(options84, strArray85, properties86, true); java.util.List list89 = options84.getRequiredOptions(); java.util.List list90 = options84.helpOptions(); java.lang.String str91 = options84.toString(); java.lang.String[] strArray92 = null; org.apache.commons.cli.CommandLine commandLine94 = gnuParser29.parse(options84, strArray92, false); java.lang.String[] strArray95 = null; org.apache.commons.cli.CommandLine commandLine97 = gnuParser0.parse(options84, strArray95, false); java.util.List list98 = gnuParser0.getRequiredOptions(); } ] [ long {} ]" + "'", str17, "[ Options: [ short {} ] [ long {} ]"); } ] [ long {} ]" + "'", str91, "[ Options: [ short {} ] [ long {} ]"); }
Code: protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption){List tokens = new ArrayList();boolean eatTheRest = false;for (int i = 1; i < arguments.length; i++){String arg = arguments[i];if ("--".equals(arg)){;tokens.add("--");}else if ("-".equals(arg)){tokens.add("-");}else if (arg.startsWith("-")){String opt = Util.stripLeadingHyphens(arg);if (options.hasOption(opt)){tokens.add(arg);}else{if (options.hasOption(arg.substring(0, 2))){tokens.add(arg.substring(0, 2)); tokens.add(arg.substring(2)); }else{eatTheRest = stopAtNonOption;;}}}else{tokens.add(arg);}if (true){for (i++; i < arguments.length; i++){tokens.add(arguments[i]);}}}return (String[]) tokens.toArray(new String[tokens.size()]);}
tensor([[0.0205, 0.0057, 0.0219,  ..., 0.1094, 0.0210, 0.0227],
        [0.0198, 0.0053, 0.0219,  ..., 0.0998, 0.0192, 0.0216],
        [0.0189, 0.0086, 0.0250,  ..., 0.0774, 0.0229, 0.0237],
        ...,
        [0.0208, 0.0086, 0.0240,  ..., 0.0855, 0.0277, 0.0196],
        [0.0215, 0.0082, 0.0246,  ..., 0.0816, 0.0216, 0.0208],
        [0.0166, 0.0074, 0.0199,  ..., 0.0988, 0.0241, 0.0226]])