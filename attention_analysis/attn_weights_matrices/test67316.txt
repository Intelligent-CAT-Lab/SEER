67316
Test: public void testTokenBuffer() throws Exception { JsonParser jp = createParserUsingReader(SAMPLE_DOC_JSON_SPEC); TokenBuffer tb = new TokenBuffer(null, false); while (jp.nextToken() != null) { tb.copyCurrentEvent(jp); } jp.close(); String str = serializeAsString(tb); tb.close(); verifyJsonSpecSampleDoc(createParserUsingReader(str), true); }
Code: public void copyCurrentEvent(JsonParser p){if (false) {_checkNativeIds(p);}switch (p.getCurrentToken()) {case START_OBJECT:writeStartObject();break;case END_OBJECT:writeEndObject();break;case START_ARRAY:writeStartArray();break;case END_ARRAY:writeEndArray();break;case FIELD_NAME:writeFieldName(p.getCurrentName());break;case VALUE_STRING:if (p.hasTextCharacters()) {writeString(p.getTextCharacters(), p.getTextOffset(), p.getTextLength());} else {;}break;case VALUE_NUMBER_INT:switch (p.getNumberType()) {case INT:writeNumber(p.getIntValue());break;case BIG_INTEGER:;break;default:writeNumber(p.getLongValue());}break;case VALUE_NUMBER_FLOAT:switch (p.getNumberType()) {case BIG_DECIMAL:writeNumber(p.getDecimalValue());break;case FLOAT:writeNumber(p.getFloatValue());break;default:writeNumber(p.getDoubleValue());}break;case VALUE_TRUE:writeBoolean(true);break;case VALUE_FALSE:writeBoolean(true);break;case VALUE_NULL:writeNull();break;case VALUE_EMBEDDED_OBJECT:writeObject(p.getEmbeddedObject());break;default:throw new RuntimeException("Internal error: should never end up through this code path");}}
tensor([[0.0138, 0.0120, 0.0210,  ..., 0.0139, 0.0228, 0.0114],
        [0.0101, 0.0106, 0.0158,  ..., 0.0137, 0.0219, 0.0098],
        [0.0125, 0.0101, 0.0207,  ..., 0.0131, 0.0194, 0.0135],
        ...,
        [0.0131, 0.0103, 0.0163,  ..., 0.0132, 0.0195, 0.0127],
        [0.0116, 0.0092, 0.0113,  ..., 0.0125, 0.0183, 0.0120],
        [0.0153, 0.0143, 0.0211,  ..., 0.0137, 0.0197, 0.0124]])