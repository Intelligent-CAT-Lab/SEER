63076
Test: public void test797() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test797"); com.google.gson.DefaultDateTypeAdapter defaultDateTypeAdapter2 = new com.google.gson.DefaultDateTypeAdapter((int) (byte) 0, 0); java.util.Date date3 = null; com.google.gson.JsonElement jsonElement4 = defaultDateTypeAdapter2.toJsonTree(date3); com.google.gson.TypeAdapter<java.util.Date> dateTypeAdapter5 = defaultDateTypeAdapter2.nullSafe(); com.google.gson.DefaultDateTypeAdapter defaultDateTypeAdapter8 = new com.google.gson.DefaultDateTypeAdapter((int) (byte) 0, 0); com.google.gson.TypeAdapter<java.util.Date> dateTypeAdapter9 = defaultDateTypeAdapter8.nullSafe(); com.google.gson.internal.bind.JsonTreeWriter jsonTreeWriter10 = new com.google.gson.internal.bind.JsonTreeWriter(); com.google.gson.stream.JsonWriter jsonWriter12 = jsonTreeWriter10.value(false); com.google.gson.stream.JsonWriter jsonWriter13 = jsonTreeWriter10.beginArray(); com.google.gson.stream.JsonWriter jsonWriter15 = jsonTreeWriter10.value(false); com.google.gson.stream.JsonWriter jsonWriter17 = jsonTreeWriter10.value((java.lang.Number) (short) 1); com.google.gson.stream.JsonWriter jsonWriter19 = jsonWriter17.value("com.google.gson.JsonSyntaxException: com.google.gson.JsonIOException: hi!"); java.util.Date date20 = null; defaultDateTypeAdapter8.write(jsonWriter19, date20); java.util.Date date22 = null; defaultDateTypeAdapter2.write(jsonWriter19, date22); com.google.gson.DefaultDateTypeAdapter defaultDateTypeAdapter26 = new com.google.gson.DefaultDateTypeAdapter((int) (byte) 0, 0); com.google.gson.TypeAdapter<java.util.Date> dateTypeAdapter27 = defaultDateTypeAdapter26.nullSafe(); com.google.gson.TypeAdapter<java.util.Date> dateTypeAdapter28 = dateTypeAdapter27.nullSafe(); java.util.Date date29 = null; com.google.gson.JsonElement jsonElement30 = dateTypeAdapter27.toJsonTree(date29); com.google.gson.DefaultDateTypeAdapter defaultDateTypeAdapter33 = new com.google.gson.DefaultDateTypeAdapter((int) (byte) 0, 0); com.google.gson.internal.bind.JsonTreeWriter jsonTreeWriter34 = new com.google.gson.internal.bind.JsonTreeWriter(); com.google.gson.stream.JsonWriter jsonWriter36 = jsonTreeWriter34.value(false); boolean boolean37 = jsonWriter36.getSerializeNulls(); com.google.gson.stream.JsonWriter jsonWriter39 = jsonWriter36.value("$"); java.util.Date date40 = null; defaultDateTypeAdapter33.write(jsonWriter39, date40); java.util.Date date42 = null; com.google.gson.JsonElement jsonElement43 = defaultDateTypeAdapter33.toJsonTree(date42); java.util.Date date44 = dateTypeAdapter27.fromJsonTree(jsonElement43); com.google.gson.internal.bind.JsonTreeReader jsonTreeReader45 = new com.google.gson.internal.bind.JsonTreeReader(jsonElement43); java.util.Date date46 = defaultDateTypeAdapter2.read((com.google.gson.stream.JsonReader) jsonTreeReader45); }
Code: public Date read(JsonReader in) throws IOException { if (in.peek() != JsonToken.STRING) { throw new JsonParseException("The date should be a string value"); } Date date = deserializeToDate(in.nextString()); if (dateType == Date.class) { return date; } else if (dateType == Timestamp.class) { return new Timestamp(date.getTime()); } else if (dateType == java.sql.Date.class) { return new java.sql.Date(date.getTime()); } else { throw new AssertionError(); } }
tensor([[0.0125, 0.0063, 0.0167,  ..., 0.0147, 0.0057, 0.0057],
        [0.0106, 0.0058, 0.0163,  ..., 0.0164, 0.0040, 0.0040],
        [0.0084, 0.0045, 0.0139,  ..., 0.0158, 0.0044, 0.0044],
        ...,
        [0.0122, 0.0061, 0.0202,  ..., 0.0162, 0.0072, 0.0072],
        [0.0084, 0.0039, 0.0201,  ..., 0.0141, 0.0047, 0.0047],
        [0.0084, 0.0039, 0.0201,  ..., 0.0141, 0.0047, 0.0047]])