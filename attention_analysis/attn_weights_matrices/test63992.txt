63992
Test: public void test011() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test011"); com.fasterxml.jackson.core.JsonFactory jsonFactory0 = new com.fasterxml.jackson.core.JsonFactory(); com.fasterxml.jackson.core.JsonParser jsonParser1 = null; com.fasterxml.jackson.core.util.JsonParserDelegate jsonParserDelegate2 = new com.fasterxml.jackson.core.util.JsonParserDelegate(jsonParser1); boolean boolean3 = jsonParserDelegate2.canParseAsync(); com.fasterxml.jackson.core.io.SerializedString serializedString4 = com.fasterxml.jackson.core.PrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR; char[] charArray6 = new char[] { '4' }; int int8 = serializedString4.appendQuoted(charArray6, (int) (byte) 0); byte[] byteArray10 = new byte[] { (byte) 0 }; int int12 = serializedString4.appendUnquotedUTF8(byteArray10, (int) (short) 1); jsonParserDelegate2.setRequestPayloadOnError(byteArray10, "-1.0"); com.fasterxml.jackson.core.JsonParser jsonParser15 = jsonFactory0.createJsonParser(byteArray10); java.lang.Object obj16 = jsonParser15.getInputSource(); com.fasterxml.jackson.core.filter.TokenFilterContext tokenFilterContext18 = null; com.fasterxml.jackson.core.filter.TokenFilter tokenFilter19 = new com.fasterxml.jackson.core.filter.TokenFilter(); com.fasterxml.jackson.core.filter.TokenFilterContext tokenFilterContext21 = new com.fasterxml.jackson.core.filter.TokenFilterContext(55296, tokenFilterContext18, tokenFilter19, true); com.fasterxml.jackson.core.filter.TokenFilter tokenFilter22 = new com.fasterxml.jackson.core.filter.TokenFilter(); boolean boolean23 = tokenFilter22.includeNull(); com.fasterxml.jackson.core.filter.TokenFilter tokenFilter24 = tokenFilterContext21.checkValue(tokenFilter22); com.fasterxml.jackson.core.filter.TokenFilter tokenFilter25 = tokenFilter22.filterStartArray(); com.fasterxml.jackson.core.filter.FilteringParserDelegate filteringParserDelegate28 = new com.fasterxml.jackson.core.filter.FilteringParserDelegate(jsonParser15, tokenFilter22, false, true); int int29 = filteringParserDelegate28.getValueAsInt(); com.fasterxml.jackson.core.JsonToken jsonToken30 = filteringParserDelegate28._currToken; com.fasterxml.jackson.core.JsonFactory jsonFactory31 = new com.fasterxml.jackson.core.JsonFactory(); com.fasterxml.jackson.core.JsonParser jsonParser32 = null; com.fasterxml.jackson.core.util.JsonParserDelegate jsonParserDelegate33 = new com.fasterxml.jackson.core.util.JsonParserDelegate(jsonParser32); boolean boolean34 = jsonParserDelegate33.canParseAsync(); com.fasterxml.jackson.core.io.SerializedString serializedString35 = com.fasterxml.jackson.core.PrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR; char[] charArray37 = new char[] { '4' }; int int39 = serializedString35.appendQuoted(charArray37, (int) (byte) 0); byte[] byteArray41 = new byte[] { (byte) 0 }; int int43 = serializedString35.appendUnquotedUTF8(byteArray41, (int) (short) 1); jsonParserDelegate33.setRequestPayloadOnError(byteArray41, "-1.0"); com.fasterxml.jackson.core.JsonParser jsonParser46 = jsonFactory31.createJsonParser(byteArray41); java.lang.Object obj47 = jsonParser46.getInputSource(); com.fasterxml.jackson.core.filter.TokenFilterContext tokenFilterContext49 = null; com.fasterxml.jackson.core.filter.TokenFilter tokenFilter50 = new com.fasterxml.jackson.core.filter.TokenFilter(); com.fasterxml.jackson.core.filter.TokenFilterContext tokenFilterContext52 = new com.fasterxml.jackson.core.filter.TokenFilterContext(55296, tokenFilterContext49, tokenFilter50, true); com.fasterxml.jackson.core.filter.TokenFilter tokenFilter53 = new com.fasterxml.jackson.core.filter.TokenFilter(); boolean boolean54 = tokenFilter53.includeNull(); com.fasterxml.jackson.core.filter.TokenFilter tokenFilter55 = tokenFilterContext52.checkValue(tokenFilter53); com.fasterxml.jackson.core.filter.TokenFilter tokenFilter56 = tokenFilter53.filterStartArray(); com.fasterxml.jackson.core.filter.FilteringParserDelegate filteringParserDelegate59 = new com.fasterxml.jackson.core.filter.FilteringParserDelegate(jsonParser46, tokenFilter53, false, true); com.fasterxml.jackson.core.filter.TokenFilterContext tokenFilterContext61 = null; com.fasterxml.jackson.core.filter.TokenFilter tokenFilter62 = new com.fasterxml.jackson.core.filter.TokenFilter(); com.fasterxml.jackson.core.filter.TokenFilterContext tokenFilterContext64 = new com.fasterxml.jackson.core.filter.TokenFilterContext(55296, tokenFilterContext61, tokenFilter62, true); com.fasterxml.jackson.core.filter.TokenFilter tokenFilter65 = new com.fasterxml.jackson.core.filter.TokenFilter(); boolean boolean66 = tokenFilter65.includeNull(); com.fasterxml.jackson.core.filter.TokenFilter tokenFilter67 = tokenFilterContext64.checkValue(tokenFilter65); com.fasterxml.jackson.core.filter.TokenFilterContext tokenFilterContext69 = null; com.fasterxml.jackson.core.filter.TokenFilter tokenFilter70 = new com.fasterxml.jackson.core.filter.TokenFilter(); com.fasterxml.jackson.core.filter.TokenFilterContext tokenFilterContext72 = new com.fasterxml.jackson.core.filter.TokenFilterContext(55296, tokenFilterContext69, tokenFilter70, true); com.fasterxml.jackson.core.filter.TokenFilter tokenFilter73 = new com.fasterxml.jackson.core.filter.TokenFilter(); boolean boolean74 = tokenFilter73.includeNull(); com.fasterxml.jackson.core.filter.TokenFilter tokenFilter75 = tokenFilterContext72.checkValue(tokenFilter73); com.fasterxml.jackson.core.filter.TokenFilter tokenFilter76 = tokenFilter73.filterStartArray(); com.fasterxml.jackson.core.filter.TokenFilterContext tokenFilterContext78 = tokenFilterContext64.createChildArrayContext(tokenFilter76, false); filteringParserDelegate59._headContext = tokenFilterContext78; try { com.fasterxml.jackson.core.JsonToken jsonToken80 = filteringParserDelegate28._nextTokenWithBuffering(tokenFilterContext78); } catch (com.fasterxml.jackson.core.JsonParseException e) { } }
Code: protected final JsonToken _nextTokenWithBuffering(final TokenFilterContext buffRoot) throws IOException { main_loop: while (true) { JsonToken t = delegate.nextToken(); if (t == null) { return t; } TokenFilter f; switch (t.id()) { case ID_START_ARRAY: f = _headContext.checkValue(_itemFilter); if (f == null) { delegate.skipChildren(); continue main_loop; } if (f != TokenFilter.INCLUDE_ALL) { f = f.filterStartArray(); } _itemFilter = f; if (f == TokenFilter.INCLUDE_ALL) { _headContext = _headContext.createChildArrayContext(f, true); return _nextBuffered(buffRoot); } _headContext = _headContext.createChildArrayContext(f, false); continue main_loop; case ID_START_OBJECT: f = _itemFilter; if (f == TokenFilter.INCLUDE_ALL) { _headContext = _headContext.createChildObjectContext(f, true); return t; } if (f == null) { delegate.skipChildren(); continue main_loop; } f = _headContext.checkValue(f); if (f == null) { delegate.skipChildren(); continue main_loop; } if (f != TokenFilter.INCLUDE_ALL) { f = f.filterStartObject(); } _itemFilter = f; if (f == TokenFilter.INCLUDE_ALL) { _headContext = _headContext.createChildObjectContext(f, true); return _nextBuffered(buffRoot); } _headContext = _headContext.createChildObjectContext(f, false); continue main_loop; case ID_END_ARRAY: case ID_END_OBJECT: { f = _headContext.getFilter(); if ((f != null) && (f != TokenFilter.INCLUDE_ALL)) { f.filterFinishArray(); } boolean gotEnd = (_headContext == buffRoot); boolean returnEnd = gotEnd && _headContext.isStartHandled(); _headContext = _headContext.getParent(); _itemFilter = _headContext.getFilter(); if (returnEnd) { return t; } if (gotEnd || (_headContext == buffRoot)) { return null; } } continue main_loop; case ID_FIELD_NAME: { final String name = delegate.getCurrentName(); f = _headContext.setFieldName(name); if (f == TokenFilter.INCLUDE_ALL) { _itemFilter = f; return _nextBuffered(buffRoot); } if (f == null) { delegate.nextToken(); delegate.skipChildren(); continue main_loop; } f = f.includeProperty(name); if (f == null) { delegate.nextToken(); delegate.skipChildren(); continue main_loop; } _itemFilter = f; if (f == TokenFilter.INCLUDE_ALL) { return _nextBuffered(buffRoot); } } continue main_loop; default: f = _itemFilter; if (f == TokenFilter.INCLUDE_ALL) { return _nextBuffered(buffRoot); } if (f != null) { f = _headContext.checkValue(f); if ((f == TokenFilter.INCLUDE_ALL) || ((f != null) && f.includeValue(delegate))) { return _nextBuffered(buffRoot); } } continue main_loop; } } }
tensor([[0.0035, 0.0016, 0.0035,  ..., 0.0007, 0.0007, 0.0007],
        [0.0026, 0.0013, 0.0031,  ..., 0.0007, 0.0007, 0.0007],
        [0.0029, 0.0013, 0.0029,  ..., 0.0008, 0.0008, 0.0008],
        ...,
        [0.0036, 0.0014, 0.0029,  ..., 0.0008, 0.0008, 0.0008],
        [0.0036, 0.0014, 0.0029,  ..., 0.0008, 0.0008, 0.0008],
        [0.0036, 0.0014, 0.0029,  ..., 0.0008, 0.0008, 0.0008]])