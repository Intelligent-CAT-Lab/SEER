67643
Test: public void testNullFromEOFWithParserAndMapper() throws Exception { try (JsonParser p = MAPPER.getFactory().createParser(EMPTY0)) { _ } try (JsonParser p = MAPPER.getFactory().createParser(EMPTY1)) { _ } try (JsonParser p = MAPPER.getFactory().createParser(new StringReader(EMPTY0))) { _ } try (JsonParser p = MAPPER.getFactory().createParser(new StringReader(EMPTY1))) { _ } try (JsonParser p = MAPPER.getFactory().createParser(EMPTY0_BYTES)) { _ } try (JsonParser p = MAPPER.getFactory().createParser(EMPTY1_BYTES)) { _ } try (JsonParser p = MAPPER.getFactory().createParser(EMPTY1_BYTES, 0, EMPTY1_BYTES.length)) { _ } try (JsonParser p = MAPPER.getFactory().createParser(new ByteArrayInputStream(EMPTY0_BYTES))) { _ } try (JsonParser p = MAPPER.getFactory().createParser(new ByteArrayInputStream(EMPTY1_BYTES))) { _ } }
Code: public <T extends TreeNode> T readTree(JsonParser p) throws IOException { return (T) _bindAsTreeOrNull(p); }
tensor([[0.0606, 0.0549, 0.0456, 0.1164, 0.0390, 0.0630, 0.0801, 0.1379, 0.0333,
         0.0885, 0.0677, 0.0633, 0.1221, 0.0275],
        [0.0447, 0.0636, 0.0481, 0.1371, 0.0258, 0.0633, 0.0617, 0.1559, 0.0233,
         0.0798, 0.0640, 0.0534, 0.1614, 0.0179],
        [0.0588, 0.0476, 0.0451, 0.1102, 0.0381, 0.0611, 0.0733, 0.1268, 0.0326,
         0.1060, 0.0757, 0.0623, 0.1323, 0.0301],
        [0.0508, 0.0595, 0.0506, 0.1222, 0.0308, 0.0643, 0.0650, 0.1576, 0.0328,
         0.1026, 0.0658, 0.0559, 0.1095, 0.0325],
        [0.0516, 0.0549, 0.0450, 0.1194, 0.0297, 0.0723, 0.0709, 0.1616, 0.0405,
         0.0854, 0.0603, 0.0598, 0.1252, 0.0234],
        [0.0657, 0.0450, 0.0449, 0.1157, 0.0376, 0.0658, 0.0736, 0.1277, 0.0352,
         0.0791, 0.0779, 0.0598, 0.1460, 0.0260],
        [0.0457, 0.0493, 0.0494, 0.1344, 0.0228, 0.0543, 0.0657, 0.1879, 0.0336,
         0.0940, 0.0733, 0.0533, 0.1117, 0.0246],
        [0.0416, 0.0474, 0.0412, 0.1156, 0.0199, 0.0568, 0.0677, 0.2012, 0.0269,
         0.1022, 0.0684, 0.0550, 0.1361, 0.0199],
        [0.0480, 0.0467, 0.0493, 0.1365, 0.0289, 0.0707, 0.0643, 0.1850, 0.0272,
         0.0859, 0.0694, 0.0599, 0.1098, 0.0183],
        [0.0639, 0.0568, 0.0541, 0.1007, 0.0343, 0.0670, 0.0731, 0.1134, 0.0427,
         0.1010, 0.0738, 0.0822, 0.1011, 0.0359],
        [0.0423, 0.0627, 0.0592, 0.1148, 0.0236, 0.0576, 0.0785, 0.1561, 0.0334,
         0.0846, 0.0612, 0.0547, 0.1482, 0.0231],
        [0.0614, 0.0529, 0.0526, 0.1093, 0.0318, 0.0582, 0.0723, 0.1451, 0.0358,
         0.0957, 0.0634, 0.0589, 0.1358, 0.0268],
        [0.0556, 0.0529, 0.0468, 0.1132, 0.0312, 0.0725, 0.0649, 0.1246, 0.0322,
         0.0811, 0.0825, 0.0632, 0.1547, 0.0246],
        [0.0403, 0.0553, 0.0486, 0.1228, 0.0285, 0.0694, 0.0598, 0.1698, 0.0326,
         0.1048, 0.0884, 0.0632, 0.0939, 0.0225]])