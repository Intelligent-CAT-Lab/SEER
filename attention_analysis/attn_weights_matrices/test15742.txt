15742
Test: public void test200() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test200"); org.apache.commons.cli.PosixParser posixParser0 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.Options options1 = new org.apache.commons.cli.Options(); java.util.Collection collection2 = options1.getOptions(); org.apache.commons.cli.Options options6 = options1.addOption("", true, "[ option: :: ]"); org.apache.commons.cli.PosixParser posixParser7 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine8 = posixParser7.cmd; org.apache.commons.cli.CommandLine commandLine9 = new org.apache.commons.cli.CommandLine(); java.lang.String str12 = commandLine9.getOptionValue('#', ""); java.util.Properties properties14 = commandLine9.getOptionProperties(""); posixParser7.processProperties(properties14); posixParser7.burstToken("", true); java.util.List list19 = posixParser7.getRequiredOptions(); org.apache.commons.cli.CommandLine commandLine20 = new org.apache.commons.cli.CommandLine(); java.lang.String str23 = commandLine20.getOptionValue('#', ""); boolean boolean25 = commandLine20.hasOption(' '); java.lang.String[] strArray27 = commandLine20.getOptionValues('4'); posixParser7.cmd = commandLine20; org.apache.commons.cli.Options options29 = new org.apache.commons.cli.Options(); java.util.Collection collection30 = options29.getOptions(); java.util.List list31 = options29.getRequiredOptions(); org.apache.commons.cli.PosixParser posixParser32 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine33 = posixParser32.cmd; org.apache.commons.cli.CommandLine commandLine34 = new org.apache.commons.cli.CommandLine(); java.lang.String str37 = commandLine34.getOptionValue('#', ""); java.util.Properties properties39 = commandLine34.getOptionProperties(""); posixParser32.processProperties(properties39); posixParser32.burstToken("", true); org.apache.commons.cli.Options options44 = null; org.apache.commons.cli.CommandLine commandLine45 = new org.apache.commons.cli.CommandLine(); java.lang.String str48 = commandLine45.getOptionValue('#', ""); java.lang.String str50 = commandLine45.getOptionValue(' '); java.lang.String[] strArray51 = commandLine45.getArgs(); java.lang.String[] strArray53 = posixParser32.flatten(options44, strArray51, true); org.apache.commons.cli.CommandLine commandLine54 = posixParser7.parse(options29, strArray51); org.apache.commons.cli.CommandLine commandLine55 = new org.apache.commons.cli.CommandLine(); java.lang.String str58 = commandLine55.getOptionValue('#', ""); java.util.Properties properties60 = commandLine55.getOptionProperties(""); org.apache.commons.cli.CommandLine commandLine61 = posixParser0.parse(options1, strArray51, properties60); org.apache.commons.cli.Options options62 = posixParser0.getOptions(); java.util.Collection collection63 = options62.getOptionGroups(); }
Code: protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption){;this.options = options;Iterator iter = Arrays.asList(arguments).iterator();while (iter.hasNext()){String token = (String) iter.next();if (token.startsWith("--")){if (token.indexOf('=') != -1){tokens.add(token.substring(0, token.indexOf('=')));tokens.add(token.substring(token.indexOf('=') + 1, token.length()));}else{;}}else if ("-".equals(token)){tokens.add(token);}else if (token.startsWith("-")){if (token.length() == 2){processOptionToken(token, stopAtNonOption);}else if (options.hasOption(token)){tokens.add(token);}else{burstToken(token, stopAtNonOption);}}else if (false){process(token);}else{tokens.add(token);}gobble(iter);}return (String[]) tokens.toArray(new String[tokens.size()]);}
tensor([[0.0196, 0.0052, 0.0208,  ..., 0.1040, 0.0197, 0.0213],
        [0.0182, 0.0047, 0.0202,  ..., 0.0917, 0.0173, 0.0195],
        [0.0185, 0.0081, 0.0246,  ..., 0.0753, 0.0221, 0.0230],
        ...,
        [0.0202, 0.0082, 0.0232,  ..., 0.0826, 0.0266, 0.0188],
        [0.0207, 0.0072, 0.0237,  ..., 0.0768, 0.0202, 0.0196],
        [0.0159, 0.0066, 0.0189,  ..., 0.0928, 0.0222, 0.0209]])