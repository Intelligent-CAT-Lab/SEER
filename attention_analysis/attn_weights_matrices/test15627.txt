15627
Test: public void test182() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test182"); org.apache.commons.cli.GnuParser gnuParser0 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.Options options1 = new org.apache.commons.cli.Options(); java.lang.String[] strArray4 = new java.lang.String[] { "hi!", "" }; java.lang.String[] strArray6 = gnuParser0.flatten(options1, strArray4, true); org.apache.commons.cli.Options options7 = null; org.apache.commons.cli.GnuParser gnuParser8 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.Options options9 = new org.apache.commons.cli.Options(); java.lang.String[] strArray10 = new java.lang.String[] {}; java.util.Properties properties11 = null; org.apache.commons.cli.CommandLine commandLine13 = gnuParser8.parse(options9, strArray10, properties11, true); org.apache.commons.cli.Options options14 = new org.apache.commons.cli.Options(); boolean boolean16 = options14.hasOption(""); boolean boolean18 = options14.hasOption(""); java.lang.String[] strArray25 = new java.lang.String[] { "hi!", "hi!", "", "", "", "org.apache.commons.cli.MissingArgumentException: " }; org.apache.commons.cli.CommandLine commandLine27 = gnuParser8.parse(options14, strArray25, false); org.apache.commons.cli.GnuParser gnuParser28 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.Options options29 = new org.apache.commons.cli.Options(); java.lang.String[] strArray30 = new java.lang.String[] {}; java.util.Properties properties31 = null; org.apache.commons.cli.CommandLine commandLine33 = gnuParser28.parse(options29, strArray30, properties31, true); java.util.Properties properties34 = null; gnuParser28.processProperties(properties34); java.util.List list36 = gnuParser28.getRequiredOptions(); org.apache.commons.cli.CommandLine commandLine37 = gnuParser28.cmd; org.apache.commons.cli.Options options38 = gnuParser28.getOptions(); org.apache.commons.cli.GnuParser gnuParser39 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.Options options40 = new org.apache.commons.cli.Options(); java.lang.String[] strArray41 = new java.lang.String[] {}; java.util.Properties properties42 = null; org.apache.commons.cli.CommandLine commandLine44 = gnuParser39.parse(options40, strArray41, properties42, true); org.apache.commons.cli.Options options45 = new org.apache.commons.cli.Options(); boolean boolean47 = options45.hasOption(""); boolean boolean49 = options45.hasOption(""); java.lang.String[] strArray56 = new java.lang.String[] { "hi!", "hi!", "", "", "", "org.apache.commons.cli.MissingArgumentException: " }; org.apache.commons.cli.CommandLine commandLine58 = gnuParser39.parse(options45, strArray56, false); java.util.Properties properties59 = null; org.apache.commons.cli.CommandLine commandLine61 = gnuParser8.parse(options38, strArray56, properties59, true); java.lang.String[] strArray63 = gnuParser0.flatten(options7, strArray56, true); java.util.List list64 = gnuParser0.getRequiredOptions(); org.apache.commons.cli.GnuParser gnuParser65 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.Options options66 = new org.apache.commons.cli.Options(); java.lang.String[] strArray67 = new java.lang.String[] {}; java.util.Properties properties68 = null; org.apache.commons.cli.CommandLine commandLine70 = gnuParser65.parse(options66, strArray67, properties68, true); java.util.Properties properties71 = null; gnuParser65.processProperties(properties71); java.util.List list73 = gnuParser65.getRequiredOptions(); org.apache.commons.cli.CommandLine commandLine74 = gnuParser65.cmd; org.apache.commons.cli.Options options75 = gnuParser65.getOptions(); org.apache.commons.cli.GnuParser gnuParser76 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.Options options77 = new org.apache.commons.cli.Options(); java.lang.String[] strArray78 = new java.lang.String[] {}; java.util.Properties properties79 = null; org.apache.commons.cli.CommandLine commandLine81 = gnuParser76.parse(options77, strArray78, properties79, true); org.apache.commons.cli.Options options82 = new org.apache.commons.cli.Options(); boolean boolean84 = options82.hasOption(""); boolean boolean86 = options82.hasOption(""); java.lang.String[] strArray93 = new java.lang.String[] { "hi!", "hi!", "", "", "", "org.apache.commons.cli.MissingArgumentException: " }; org.apache.commons.cli.CommandLine commandLine95 = gnuParser76.parse(options82, strArray93, false); java.util.Properties properties96 = null; org.apache.commons.cli.CommandLine commandLine97 = gnuParser0.parse(options75, strArray93, properties96); gnuParser0.checkRequiredOptions(); }
Code: protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption){List tokens = new ArrayList();boolean eatTheRest = false;for (int i = 1; i < arguments.length; i++){String arg = arguments[i];if ("--".equals(arg)){eatTheRest = true;tokens.add("--");}else if ("-".equals(arg)){tokens.add("-");}else if (arg.startsWith("-")){String opt = Util.stripLeadingHyphens(arg);if (options.hasOption(opt)){tokens.add(arg);}else{if (options.hasOption(arg.substring(0, 2))){tokens.add(arg.substring(0, 2)); ; }else{eatTheRest = stopAtNonOption;;}}}else{tokens.add(arg);}if (true){for (i++; i < arguments.length; i++){tokens.add(arguments[i]);}}}return (String[]) tokens.toArray(new String[tokens.size()]);}
tensor([[0.0200, 0.0054, 0.0212,  ..., 0.1062, 0.0202, 0.0218],
        [0.0193, 0.0050, 0.0214,  ..., 0.0973, 0.0184, 0.0208],
        [0.0183, 0.0083, 0.0243,  ..., 0.0750, 0.0221, 0.0230],
        ...,
        [0.0203, 0.0082, 0.0233,  ..., 0.0829, 0.0268, 0.0189],
        [0.0210, 0.0078, 0.0240,  ..., 0.0791, 0.0209, 0.0202],
        [0.0162, 0.0069, 0.0194,  ..., 0.0955, 0.0230, 0.0216]])