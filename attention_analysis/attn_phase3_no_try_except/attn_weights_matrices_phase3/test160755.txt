160755
Test: public void test15() throws Throwable { KeyedPooledObjectFactory<Object, Object> keyedPooledObjectFactory0 = (KeyedPooledObjectFactory<Object, Object>) mock(KeyedPooledObjectFactory.class, new ViolatedAssumptionAnswer()); GenericKeyedObjectPoolConfig<Object> genericKeyedObjectPoolConfig0 = new GenericKeyedObjectPoolConfig<Object>(); GenericKeyedObjectPoolConfig<Object> genericKeyedObjectPoolConfig1 = genericKeyedObjectPoolConfig0.clone(); AbandonedConfig abandonedConfig0 = new AbandonedConfig(); AbandonedConfig abandonedConfig1 = AbandonedConfig.copy(abandonedConfig0); GenericKeyedObjectPool<Object, Object> genericKeyedObjectPool0 = new GenericKeyedObjectPool<Object, Object>(keyedPooledObjectFactory0, genericKeyedObjectPoolConfig1, abandonedConfig1); GenericKeyedObjectPoolConfig<Object> genericKeyedObjectPoolConfig2 = genericKeyedObjectPoolConfig1.clone(); genericKeyedObjectPoolConfig2.getEvictionPolicy(); genericKeyedObjectPool0.setEvictionPolicy((EvictionPolicy<Object>) null); genericKeyedObjectPool0.getFactory(); genericKeyedObjectPoolConfig1.setJmxEnabled(true); genericKeyedObjectPool0.isAbandonedConfig(); genericKeyedObjectPool0.getBlockWhenExhausted(); KeyedPooledObjectFactory<LinkedList<Integer>, DefaultPooledObjectInfo> keyedPooledObjectFactory1 = (KeyedPooledObjectFactory<LinkedList<Integer>, DefaultPooledObjectInfo>) mock(KeyedPooledObjectFactory.class, new ViolatedAssumptionAnswer()); GenericKeyedObjectPoolConfig<DefaultPooledObjectInfo> genericKeyedObjectPoolConfig3 = new GenericKeyedObjectPoolConfig<DefaultPooledObjectInfo>(); GenericKeyedObjectPool<LinkedList<Integer>, DefaultPooledObjectInfo> genericKeyedObjectPool1 = new GenericKeyedObjectPool<LinkedList<Integer>, DefaultPooledObjectInfo>(keyedPooledObjectFactory1, genericKeyedObjectPoolConfig3, abandonedConfig1); genericKeyedObjectPool1.close(); KeyedPooledObjectFactory<String, Integer> keyedPooledObjectFactory2 = (KeyedPooledObjectFactory<String, Integer>) mock(KeyedPooledObjectFactory.class, new ViolatedAssumptionAnswer()); GenericKeyedObjectPoolConfig<Integer> genericKeyedObjectPoolConfig4 = new GenericKeyedObjectPoolConfig<Integer>(); GenericKeyedObjectPool<String, Integer> genericKeyedObjectPool2 = new GenericKeyedObjectPool<String, Integer>(keyedPooledObjectFactory2, genericKeyedObjectPoolConfig4); genericKeyedObjectPool2.setMaxTotalPerKey(0); KeyedPooledObjectFactory<String, String> keyedPooledObjectFactory3 = (KeyedPooledObjectFactory<String, String>) mock(KeyedPooledObjectFactory.class, new ViolatedAssumptionAnswer()); GenericKeyedObjectPool<String, String> genericKeyedObjectPool3 = new GenericKeyedObjectPool<String, String>(keyedPooledObjectFactory3); genericKeyedObjectPool3.setMinIdlePerKey(24); KeyedPooledObjectFactory<DefaultPooledObjectInfo, String> keyedPooledObjectFactory4 = (KeyedPooledObjectFactory<DefaultPooledObjectInfo, String>) mock(KeyedPooledObjectFactory.class, new ViolatedAssumptionAnswer()); GenericKeyedObjectPool<DefaultPooledObjectInfo, String> genericKeyedObjectPool4 = new GenericKeyedObjectPool<DefaultPooledObjectInfo, String>(keyedPooledObjectFactory4); long long0 = genericKeyedObjectPool4.getMaxBorrowWaitTimeMillis(); }
Code: long getMaxBorrowWaitTimeMillis(); /** * See {@link GenericKeyedObjectPool#getMaxIdlePerKey()}
[[0.13640465 0.12781873 0.12781873 0.05659391 0.2957265  0.12781873
 0.12781873]
[0.12082127 0.12167798 0.12167798 0.07936922 0.31309757 0.12167799
 0.12167799]
[0.12082127 0.12167798 0.12167798 0.07936922 0.31309757 0.12167799
 0.12167799]
[0.13888034 0.11938646 0.11938646 0.12537442 0.25819942 0.11938646
 0.11938646]
[0.12385447 0.11702807 0.11702807 0.07462848 0.33340472 0.11702807
 0.11702807]
[0.12082127 0.12167798 0.12167798 0.07936922 0.31309757 0.12167799
 0.12167799]
[0.12082127 0.12167798 0.12167798 0.07936922 0.31309757 0.12167799
 0.12167799]]