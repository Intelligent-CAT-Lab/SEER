69474
Test: public void test33() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test33"); org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining2 = new org.jsoup.select.Evaluator.AttributeWithValueContaining("##document##document##document##document##document", "#comment"); org.jsoup.safety.Whitelist whitelist4 = org.jsoup.safety.Whitelist.simpleText(); boolean boolean5 = org.jsoup.Jsoup.isValid("hi!", whitelist4); org.jsoup.safety.Cleaner cleaner6 = new org.jsoup.safety.Cleaner(whitelist4); org.jsoup.nodes.Document document9 = org.jsoup.Jsoup.parse("", "hi!"); org.jsoup.nodes.Element element10 = document9.parent(); java.lang.String str11 = document9.nodeName(); org.jsoup.nodes.Element element12 = document9.clone(); org.jsoup.nodes.Document document15 = org.jsoup.Jsoup.parse("", "hi!"); org.jsoup.nodes.Element element16 = document15.parent(); java.lang.String str17 = document15.nodeName(); org.jsoup.nodes.Element element18 = document15.body(); org.jsoup.nodes.Element element19 = element12.appendChild((org.jsoup.nodes.Node) document15); org.jsoup.nodes.Node node20 = element19.clone(); org.jsoup.nodes.Document document21 = node20.ownerDocument(); org.jsoup.nodes.Document document22 = cleaner6.clean(document21); org.jsoup.nodes.Document document25 = org.jsoup.Jsoup.parse("", "hi!"); org.jsoup.nodes.Element element26 = document25.parent(); java.lang.String str27 = document25.nodeName(); org.jsoup.nodes.Element element28 = document25.clone(); org.jsoup.nodes.Document document31 = org.jsoup.Jsoup.parse("", "hi!"); org.jsoup.nodes.Element element32 = document31.parent(); java.lang.String str33 = document31.nodeName(); org.jsoup.nodes.Element element34 = document31.body(); org.jsoup.nodes.Element element35 = element28.appendChild((org.jsoup.nodes.Node) document31); boolean boolean36 = cleaner6.isValid(document31); org.jsoup.nodes.Element element38 = document31.wrap("#root"); org.jsoup.select.Evaluator.AllElements allElements39 = new org.jsoup.select.Evaluator.AllElements(); org.jsoup.nodes.Document document42 = org.jsoup.Jsoup.parse("", "hi!"); org.jsoup.nodes.Element element43 = document42.parent(); java.lang.String str44 = document42.nodeName(); org.jsoup.nodes.Element element45 = document42.clone(); org.jsoup.nodes.Document document48 = org.jsoup.Jsoup.parse("", "hi!"); org.jsoup.nodes.Element element49 = document48.parent(); java.lang.String str50 = document48.nodeName(); org.jsoup.nodes.Element element51 = document48.body(); org.jsoup.nodes.Element element52 = element45.appendChild((org.jsoup.nodes.Node) document48); org.jsoup.parser.Parser parser53 = org.jsoup.parser.Parser.xmlParser(); org.jsoup.nodes.Document document56 = parser53.parseInput("", ""); org.jsoup.nodes.Document document59 = parser53.parseInput("#document", ""); boolean boolean60 = allElements39.matches(element45, (org.jsoup.nodes.Element) document59); org.jsoup.helper.Validate.notNull((java.lang.Object) element45); org.jsoup.select.Elements elements62 = element45.children(); boolean boolean63 = attributeWithValueContaining2.matches(element38, element45); try { boolean boolean65 = element38.hasClass("<html>\n <head></head>\n <body>\n #document\n </body>\n</html>"); } catch (java.lang.NullPointerException e) { } }
Code: public Document clean(Document dirtyDocument){;Document clean = Document.createShell(dirtyDocument.baseUri());;return clean;}
tensor([[0.0717, 0.2616, 0.0721, 0.0553, 0.1921, 0.0461, 0.2210, 0.0801],
        [0.0669, 0.2763, 0.0597, 0.0479, 0.1887, 0.0389, 0.2377, 0.0838],
        [0.0578, 0.2717, 0.0716, 0.0414, 0.1623, 0.0399, 0.2808, 0.0745],
        [0.0659, 0.2931, 0.0683, 0.0527, 0.1806, 0.0571, 0.2108, 0.0714],
        [0.0747, 0.2567, 0.0755, 0.0501, 0.1885, 0.0472, 0.2265, 0.0809],
        [0.0864, 0.1985, 0.0728, 0.0792, 0.1795, 0.0724, 0.2264, 0.0850],
        [0.0496, 0.2695, 0.0765, 0.0504, 0.1979, 0.0415, 0.2308, 0.0839],
        [0.0712, 0.2452, 0.0591, 0.0609, 0.1680, 0.0544, 0.2515, 0.0896]])