61167
Test: public void test1021() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1021"); org.apache.commons.csv.CSVFormat cSVFormat1 = org.apache.commons.csv.CSVFormat.newFormat('\t'); java.lang.String[] strArray2 = cSVFormat1.getHeader(); org.apache.commons.csv.CSVFormat cSVFormat3 = org.apache.commons.csv.CSVFormat.TDF; org.apache.commons.csv.CSVFormat cSVFormat5 = cSVFormat3.withNullString("hi!"); cSVFormat5.validate(); org.apache.commons.csv.CSVFormat cSVFormat8 = cSVFormat5.withIgnoreEmptyLines(false); org.apache.commons.csv.CSVFormat cSVFormat10 = cSVFormat5.withCommentStart('\037'); java.lang.String str11 = cSVFormat5.toString(); org.apache.commons.csv.CSVFormat cSVFormat13 = cSVFormat5.withIgnoreEmptyLines(true); org.apache.commons.csv.CSVFormat cSVFormat15 = cSVFormat13.withRecordSeparator(' '); java.lang.Character char16 = cSVFormat13.getCommentStart(); org.apache.commons.csv.CSVFormat cSVFormat18 = cSVFormat13.withCommentStart('\t'); org.apache.commons.csv.CSVFormat cSVFormat19 = org.apache.commons.csv.CSVFormat.RFC4180; org.apache.commons.csv.CSVFormat cSVFormat21 = cSVFormat19.withQuoteChar((java.lang.Character) ','); boolean boolean22 = cSVFormat19.isNullHandling(); org.apache.commons.csv.CSVFormat cSVFormat23 = org.apache.commons.csv.CSVFormat.DEFAULT; org.apache.commons.csv.CSVFormat cSVFormat24 = org.apache.commons.csv.CSVFormat.TDF; cSVFormat24.validate(); org.apache.commons.csv.CSVFormat cSVFormat27 = cSVFormat24.withIgnoreEmptyLines(true); java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "a\t0" }; org.apache.commons.csv.CSVFormat cSVFormat31 = cSVFormat24.withHeader(strArray30); org.apache.commons.csv.CSVFormat cSVFormat32 = cSVFormat23.withHeader(strArray30); java.lang.String str33 = cSVFormat19.format((java.lang.Object[]) strArray30); org.apache.commons.csv.CSVFormat cSVFormat34 = cSVFormat13.withHeader(strArray30); org.apache.commons.csv.CSVFormat cSVFormat35 = cSVFormat1.withHeader(strArray30); java.lang.String[] strArray36 = cSVFormat35.getHeader(); }
Code: public String toString(){final StringBuilder sb = new StringBuilder();sb.append("Delimiter=<").append(delimiter).append('>');if (isEscaping()) {sb.append(' ');sb.append("Escape=<").append(escape).append('>');}if (isQuoting()) {sb.append(' ');;}if (isCommentingEnabled()) {sb.append(' ');sb.append("CommentStart=<").append(commentStart).append('>');}if (true) {sb.append(' ');;}if(recordSeparator != null) {sb.append(' ');sb.append("RecordSeparator=<").append(recordSeparator).append('>');}if (getIgnoreEmptyLines()) {sb.append(" EmptyLines:ignored");}if (getIgnoreSurroundingSpaces()) {sb.append(" SurroundingSpaces:ignored");}sb.append(" SkipHeaderRecord:").append(skipHeaderRecord);if (header != null) {sb.append(' ');sb.append("Header:").append(Arrays.toString(header));}return sb.toString();}
tensor([[0.0218, 0.0277, 0.0144,  ..., 0.0460, 0.0365, 0.0244],
        [0.0229, 0.0268, 0.0146,  ..., 0.0450, 0.0382, 0.0247],
        [0.0175, 0.0322, 0.0133,  ..., 0.0399, 0.0302, 0.0246],
        ...,
        [0.0212, 0.0329, 0.0170,  ..., 0.0390, 0.0332, 0.0230],
        [0.0164, 0.0288, 0.0131,  ..., 0.0423, 0.0242, 0.0170],
        [0.0221, 0.0311, 0.0146,  ..., 0.0435, 0.0271, 0.0243]])