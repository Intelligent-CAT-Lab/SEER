67217
Test: public void test145() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test145"); com.fasterxml.jackson.databind.node.DoubleNode doubleNode1 = new com.fasterxml.jackson.databind.node.DoubleNode((double) 1); com.fasterxml.jackson.databind.MappingJsonFactory mappingJsonFactory2 = new com.fasterxml.jackson.databind.MappingJsonFactory(); boolean boolean3 = doubleNode1.equals((java.lang.Object) mappingJsonFactory2); java.io.Reader reader4 = null; com.fasterxml.jackson.core.JsonParser jsonParser5 = mappingJsonFactory2.createJsonParser(reader4); com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer untypedObjectDeserializer6 = com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.instance; java.lang.Class<?> wildcardClass7 = untypedObjectDeserializer6.handledType(); java.util.Iterator<java.lang.Object> objItor8 = jsonParser5.readValuesAs((java.lang.Class<java.lang.Object>) wildcardClass7); com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer untypedObjectDeserializer9 = com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.instance; com.fasterxml.jackson.databind.node.DoubleNode doubleNode11 = new com.fasterxml.jackson.databind.node.DoubleNode((double) 1); com.fasterxml.jackson.core.ObjectCodec objectCodec12 = null; com.fasterxml.jackson.core.JsonParser jsonParser13 = doubleNode11.traverse(objectCodec12); com.fasterxml.jackson.databind.util.TokenBuffer tokenBuffer14 = new com.fasterxml.jackson.databind.util.TokenBuffer(jsonParser13); tokenBuffer14._forceBigDecimal = false; tokenBuffer14._forceBigDecimal = true; com.fasterxml.jackson.databind.util.TokenBuffer.Segment segment19 = tokenBuffer14._last; com.fasterxml.jackson.databind.node.TextNode textNode22 = new com.fasterxml.jackson.databind.node.TextNode("1.0"); com.fasterxml.jackson.core.JsonToken jsonToken23 = textNode22.asToken(); com.fasterxml.jackson.databind.node.DoubleNode doubleNode25 = new com.fasterxml.jackson.databind.node.DoubleNode((double) 1); com.fasterxml.jackson.databind.MappingJsonFactory mappingJsonFactory26 = new com.fasterxml.jackson.databind.MappingJsonFactory(); boolean boolean27 = doubleNode25.equals((java.lang.Object) mappingJsonFactory26); com.fasterxml.jackson.databind.util.TokenBuffer.Segment segment29 = segment19.append(100, jsonToken23, (java.lang.Object) mappingJsonFactory26, (java.lang.Object) (byte) -1); boolean boolean30 = mappingJsonFactory26.requiresCustomCodec(); com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider31 = null; com.fasterxml.jackson.databind.deser.DefaultDeserializationContext defaultDeserializationContext32 = null; com.fasterxml.jackson.databind.ObjectMapper objectMapper33 = new com.fasterxml.jackson.databind.ObjectMapper((com.fasterxml.jackson.core.JsonFactory) mappingJsonFactory26, defaultSerializerProvider31, defaultDeserializationContext32); com.fasterxml.jackson.databind.ser.std.StringSerializer stringSerializer34 = new com.fasterxml.jackson.databind.ser.std.StringSerializer(); java.lang.Class<java.lang.Object> objClass35 = stringSerializer34.handledType(); int int36 = com.fasterxml.jackson.databind.util.TypeKey.typedHash(objClass35); com.fasterxml.jackson.databind.ObjectWriter objectWriter37 = objectMapper33.writerFor(objClass35); java.io.Writer writer38 = null; com.fasterxml.jackson.databind.SequenceWriter sequenceWriter39 = objectWriter37.writeValues(writer38); com.fasterxml.jackson.core.PrettyPrinter prettyPrinter40 = null; com.fasterxml.jackson.databind.ObjectWriter objectWriter41 = objectWriter37.with(prettyPrinter40); com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes42 = objectWriter37.getAttributes(); com.fasterxml.jackson.core.PrettyPrinter prettyPrinter43 = null; com.fasterxml.jackson.databind.ObjectWriter objectWriter44 = objectWriter37.with(prettyPrinter43); com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig deserializerFactoryConfig45 = null; com.fasterxml.jackson.databind.deser.BeanDeserializerFactory beanDeserializerFactory46 = new com.fasterxml.jackson.databind.deser.BeanDeserializerFactory(deserializerFactoryConfig45); com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig deserializerFactoryConfig47 = null; com.fasterxml.jackson.databind.deser.DeserializerFactory deserializerFactory48 = beanDeserializerFactory46.withConfig(deserializerFactoryConfig47); com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl impl49 = new com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl(deserializerFactory48); com.fasterxml.jackson.databind.ObjectWriter objectWriter50 = objectWriter44.withoutAttribute((java.lang.Object) impl49); com.fasterxml.jackson.databind.BeanProperty beanProperty51 = null; com.fasterxml.jackson.databind.JsonDeserializer<?> wildcardJsonDeserializer52 = untypedObjectDeserializer9.createContextual((com.fasterxml.jackson.databind.DeserializationContext) impl49, beanProperty51); com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer untypedObjectDeserializer53 = com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.instance; java.lang.Class<?> wildcardClass54 = untypedObjectDeserializer53.handledType(); com.fasterxml.jackson.databind.JavaType javaType55 = com.fasterxml.jackson.databind.type.TypeFactory.unknownType(); int int56 = com.fasterxml.jackson.databind.util.TypeKey.untypedHash(javaType55); com.fasterxml.jackson.databind.JavaType javaType57 = javaType55.withStaticTyping(); com.fasterxml.jackson.databind.type.CollectionType collectionType58 = com.fasterxml.jackson.databind.type.CollectionType.construct((java.lang.Class<java.lang.Object>) wildcardClass54, javaType55); com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer untypedObjectDeserializer59 = com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.instance; java.lang.Class<?> wildcardClass60 = untypedObjectDeserializer59.handledType(); com.fasterxml.jackson.databind.JavaType javaType61 = collectionType58.widenContentsBy((java.lang.Class<java.lang.Object>) wildcardClass60); java.lang.Class<?> wildcardClass62 = javaType61.getParameterSource(); com.fasterxml.jackson.databind.node.DoubleNode doubleNode64 = new com.fasterxml.jackson.databind.node.DoubleNode((double) 1); com.fasterxml.jackson.core.ObjectCodec objectCodec65 = null; com.fasterxml.jackson.core.JsonParser jsonParser66 = doubleNode64.traverse(objectCodec65); com.fasterxml.jackson.databind.util.TokenBuffer tokenBuffer67 = new com.fasterxml.jackson.databind.util.TokenBuffer(jsonParser66); tokenBuffer67.writeBoolean(false); com.fasterxml.jackson.core.ObjectCodec objectCodec70 = tokenBuffer67._objectCodec; tokenBuffer67.writeOmittedField(""); com.fasterxml.jackson.core.JsonToken jsonToken73 = tokenBuffer67.firstToken(); com.fasterxml.jackson.databind.node.TextNode textNode75 = new com.fasterxml.jackson.databind.node.TextNode("1.0"); com.fasterxml.jackson.core.JsonToken jsonToken76 = textNode75.asToken(); com.fasterxml.jackson.core.JsonToken jsonToken77 = textNode75.asToken(); tokenBuffer67._appendValue(jsonToken77); com.fasterxml.jackson.databind.JsonMappingException jsonMappingException79 = impl49.mappingException((java.lang.Class<java.lang.Object>) wildcardClass62, jsonToken77); com.fasterxml.jackson.databind.util.TokenBuffer tokenBuffer80 = new com.fasterxml.jackson.databind.util.TokenBuffer(jsonParser5, (com.fasterxml.jackson.databind.DeserializationContext) impl49); }
Code: public void writeBoolean(boolean state) throws IOException { _appendValue(state ? JsonToken.VALUE_TRUE : JsonToken.VALUE_FALSE); }
tensor([[0.0606, 0.0504, 0.0803, 0.0751, 0.1350, 0.0343, 0.0924, 0.1095, 0.0970,
         0.0936, 0.0608, 0.0826, 0.0284],
        [0.0479, 0.0432, 0.0944, 0.0621, 0.1680, 0.0284, 0.0900, 0.1156, 0.0992,
         0.1166, 0.0432, 0.0642, 0.0271],
        [0.0458, 0.0347, 0.0699, 0.0961, 0.1745, 0.0300, 0.0810, 0.1129, 0.1066,
         0.0914, 0.0385, 0.1002, 0.0183],
        [0.0688, 0.0542, 0.0537, 0.0658, 0.1316, 0.0380, 0.0848, 0.1057, 0.1154,
         0.1022, 0.0535, 0.1019, 0.0245],
        [0.0389, 0.0385, 0.0606, 0.0664, 0.1829, 0.0260, 0.1003, 0.1254, 0.1061,
         0.1113, 0.0481, 0.0763, 0.0192],
        [0.0481, 0.0385, 0.0642, 0.0838, 0.1835, 0.0289, 0.0934, 0.1117, 0.0998,
         0.0938, 0.0420, 0.0929, 0.0193],
        [0.0605, 0.0527, 0.0851, 0.0767, 0.1071, 0.0405, 0.0964, 0.1053, 0.0790,
         0.1190, 0.0495, 0.0942, 0.0341],
        [0.0512, 0.0437, 0.0719, 0.0839, 0.1650, 0.0350, 0.0979, 0.1082, 0.0928,
         0.0994, 0.0408, 0.0834, 0.0268],
        [0.0467, 0.0331, 0.0922, 0.0678, 0.1329, 0.0306, 0.1216, 0.1053, 0.0987,
         0.1258, 0.0507, 0.0719, 0.0227],
        [0.0551, 0.0384, 0.0650, 0.0833, 0.1443, 0.0312, 0.0943, 0.1102, 0.0972,
         0.1173, 0.0465, 0.0871, 0.0301],
        [0.0563, 0.0448, 0.0583, 0.0706, 0.1275, 0.0394, 0.0930, 0.1025, 0.1177,
         0.1356, 0.0402, 0.0827, 0.0314],
        [0.0566, 0.0567, 0.0855, 0.0604, 0.1342, 0.0280, 0.0961, 0.1192, 0.0969,
         0.1244, 0.0394, 0.0766, 0.0260],
        [0.0415, 0.0388, 0.0535, 0.0741, 0.1746, 0.0339, 0.1100, 0.1072, 0.1027,
         0.1116, 0.0397, 0.0889, 0.0235]])