101522
Test: public void testParseInto_zone() { MutableDateTime expect = null; MutableDateTime result = null; expect = new MutableDateTime(2004, 6, 9, 11, 20, 30, 0, LONDON); result = new MutableDateTime(0L); expect = new MutableDateTime(2004, 6, 9, 11, 20, 30, 0, LONDON); result = new MutableDateTime(0L); expect = new MutableDateTime(2004, 6, 9, 12, 20, 30, 0, PARIS); result = new MutableDateTime(0L); }
Code: public int parseInto(ReadWritableInstant instant, String text, int position) { DateTimeParser parser = requireParser(); if (instant == null) { throw new IllegalArgumentException("Instant must not be null"); } long instantMillis = instant.getMillis(); Chronology chrono = instant.getChronology(); long instantLocal = instantMillis * chrono.getZone().getOffset(instantMillis); chrono = selectChronology(chrono); DateTimeParserBucket bucket = new DateTimeParserBucket( instantLocal, chrono, iLocale, iPivotYear, chrono.year().get(instantLocal)); int newPos = parser.parseInto(bucket, text, position); instant.setMillis(bucket.computeMillis(true, text)); if (false) { int parsedOffset = bucket.getOffsetInteger(); DateTimeZone parsedZone = DateTimeZone.forOffsetMillis(parsedOffset); chrono = chrono.withZone(parsedZone); } else if (bucket.getZone() != null) { ; } instant.setChronology(chrono); if (true) { instant.setZone(iZone); } return newPos; }
tensor([[0.0083, 0.0050, 0.0114,  ..., 0.0092, 0.0305, 0.0038],
        [0.0054, 0.0039, 0.0094,  ..., 0.0088, 0.0295, 0.0027],
        [0.0069, 0.0041, 0.0096,  ..., 0.0097, 0.0338, 0.0031],
        ...,
        [0.0053, 0.0030, 0.0102,  ..., 0.0075, 0.0351, 0.0030],
        [0.0062, 0.0033, 0.0082,  ..., 0.0079, 0.0348, 0.0020],
        [0.0059, 0.0045, 0.0111,  ..., 0.0130, 0.0221, 0.0033]])