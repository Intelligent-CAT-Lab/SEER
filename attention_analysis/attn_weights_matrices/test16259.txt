16259
Test: public void test040() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test040"); org.apache.commons.cli.OptionGroup optionGroup0 = new org.apache.commons.cli.OptionGroup(); optionGroup0.setRequired(false); boolean boolean3 = optionGroup0.isRequired(); org.apache.commons.cli.Option option5 = org.apache.commons.cli.OptionBuilder.create('4'); char char6 = option5.getValueSeparator(); java.lang.String str7 = option5.toString(); org.apache.commons.cli.OptionGroup optionGroup8 = new org.apache.commons.cli.OptionGroup(); option5.setType((java.lang.Object) optionGroup8); org.apache.commons.cli.AlreadySelectedException alreadySelectedException10 = new org.apache.commons.cli.AlreadySelectedException(optionGroup0, option5); org.apache.commons.cli.OptionGroup optionGroup11 = new org.apache.commons.cli.OptionGroup(); optionGroup11.setRequired(false); boolean boolean14 = optionGroup11.isRequired(); org.apache.commons.cli.Option option16 = org.apache.commons.cli.OptionBuilder.create('4'); char char17 = option16.getValueSeparator(); java.lang.String str18 = option16.toString(); org.apache.commons.cli.OptionGroup optionGroup19 = new org.apache.commons.cli.OptionGroup(); option16.setType((java.lang.Object) optionGroup19); org.apache.commons.cli.AlreadySelectedException alreadySelectedException21 = new org.apache.commons.cli.AlreadySelectedException(optionGroup11, option16); org.apache.commons.cli.Option option22 = alreadySelectedException21.getOption(); org.apache.commons.cli.OptionGroup optionGroup23 = alreadySelectedException21.getOptionGroup(); org.apache.commons.cli.Option option24 = alreadySelectedException21.getOption(); optionGroup0.setSelected(option24); java.lang.String str26 = option24.toString(); }
Code: public void setSelected(Option option){if (option == null){;return;}if (selected == null || selected.equals(option.getOpt())){;}else{throw new AlreadySelectedException(this, option);}}
tensor([[0.0525, 0.0441, 0.0369, 0.0380, 0.0747, 0.0791, 0.0470, 0.0279, 0.0791,
         0.0565, 0.0569, 0.2141, 0.0256, 0.0640, 0.1035],
        [0.0422, 0.0417, 0.0275, 0.0180, 0.1166, 0.0577, 0.0356, 0.0302, 0.0577,
         0.0465, 0.0594, 0.2119, 0.0202, 0.0695, 0.1652],
        [0.0445, 0.0342, 0.0348, 0.0353, 0.0972, 0.0757, 0.0489, 0.0249, 0.0757,
         0.0467, 0.0557, 0.2203, 0.0246, 0.0613, 0.1202],
        [0.0469, 0.0405, 0.0419, 0.0247, 0.0861, 0.0761, 0.0471, 0.0296, 0.0761,
         0.0513, 0.0549, 0.2370, 0.0211, 0.0538, 0.1128],
        [0.0329, 0.0356, 0.0309, 0.0258, 0.1156, 0.0568, 0.0402, 0.0266, 0.0568,
         0.0412, 0.0641, 0.2708, 0.0220, 0.0497, 0.1312],
        [0.0297, 0.0356, 0.0245, 0.0219, 0.1002, 0.0705, 0.0358, 0.0195, 0.0705,
         0.0333, 0.0587, 0.2907, 0.0204, 0.0520, 0.1367],
        [0.0499, 0.0360, 0.0335, 0.0337, 0.1175, 0.0808, 0.0463, 0.0378, 0.0808,
         0.0464, 0.0504, 0.1654, 0.0305, 0.0830, 0.1081],
        [0.0424, 0.0371, 0.0313, 0.0288, 0.0968, 0.0706, 0.0427, 0.0325, 0.0706,
         0.0442, 0.0499, 0.2411, 0.0238, 0.0634, 0.1249],
        [0.0297, 0.0356, 0.0245, 0.0219, 0.1002, 0.0705, 0.0358, 0.0195, 0.0705,
         0.0333, 0.0587, 0.2907, 0.0204, 0.0520, 0.1367],
        [0.0483, 0.0392, 0.0418, 0.0306, 0.0932, 0.0748, 0.0490, 0.0350, 0.0748,
         0.0432, 0.0570, 0.2084, 0.0350, 0.0712, 0.0984],
        [0.0446, 0.0364, 0.0312, 0.0235, 0.1118, 0.0657, 0.0437, 0.0281, 0.0657,
         0.0465, 0.0609, 0.2254, 0.0233, 0.0644, 0.1289],
        [0.0455, 0.0424, 0.0289, 0.0339, 0.0998, 0.0788, 0.0438, 0.0295, 0.0788,
         0.0554, 0.0647, 0.1837, 0.0326, 0.0663, 0.1160],
        [0.0490, 0.0471, 0.0277, 0.0298, 0.1205, 0.0804, 0.0418, 0.0299, 0.0804,
         0.0537, 0.0469, 0.1773, 0.0305, 0.0719, 0.1132],
        [0.0437, 0.0418, 0.0302, 0.0335, 0.1140, 0.0690, 0.0420, 0.0253, 0.0690,
         0.0464, 0.0629, 0.2189, 0.0273, 0.0637, 0.1124],
        [0.0360, 0.0366, 0.0330, 0.0294, 0.0969, 0.0632, 0.0452, 0.0238, 0.0632,
         0.0447, 0.0621, 0.2701, 0.0223, 0.0508, 0.1228]])