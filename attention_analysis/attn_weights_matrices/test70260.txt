70260
Test: public void test137() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test137"); org.apache.commons.jxpath.ri.compiler.Step[] stepArray1 = new org.apache.commons.jxpath.ri.compiler.Step[] {}; org.apache.commons.jxpath.ri.compiler.LocationPath locationPath2 = new org.apache.commons.jxpath.ri.compiler.LocationPath(false, stepArray1); boolean boolean3 = locationPath2.computeContextDependent(); org.apache.commons.jxpath.ri.compiler.Constant constant5 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant7 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant9 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.NameAttributeTest nameAttributeTest10 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest((org.apache.commons.jxpath.ri.compiler.Expression) constant7, (org.apache.commons.jxpath.ri.compiler.Expression) constant9); org.apache.commons.jxpath.ri.compiler.CoreOperationEqual coreOperationEqual11 = new org.apache.commons.jxpath.ri.compiler.CoreOperationEqual((org.apache.commons.jxpath.ri.compiler.Expression) constant5, (org.apache.commons.jxpath.ri.compiler.Expression) nameAttributeTest10); boolean boolean12 = nameAttributeTest10.isContextDependent(); org.apache.commons.jxpath.ri.compiler.Constant constant14 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant16 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.NameAttributeTest nameAttributeTest17 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest((org.apache.commons.jxpath.ri.compiler.Expression) constant14, (org.apache.commons.jxpath.ri.compiler.Expression) constant16); org.apache.commons.jxpath.ri.EvalContext evalContext18 = null; org.apache.commons.jxpath.ri.compiler.Constant constant20 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant22 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.NameAttributeTest nameAttributeTest23 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest((org.apache.commons.jxpath.ri.compiler.Expression) constant20, (org.apache.commons.jxpath.ri.compiler.Expression) constant22); org.apache.commons.jxpath.ri.compiler.Constant constant25 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant27 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.NameAttributeTest nameAttributeTest28 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest((org.apache.commons.jxpath.ri.compiler.Expression) constant25, (org.apache.commons.jxpath.ri.compiler.Expression) constant27); boolean boolean29 = nameAttributeTest17.equal(evalContext18, (org.apache.commons.jxpath.ri.compiler.Expression) constant20, (org.apache.commons.jxpath.ri.compiler.Expression) nameAttributeTest28); org.apache.commons.jxpath.ri.compiler.Constant constant31 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant33 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant35 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.NameAttributeTest nameAttributeTest36 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest((org.apache.commons.jxpath.ri.compiler.Expression) constant33, (org.apache.commons.jxpath.ri.compiler.Expression) constant35); org.apache.commons.jxpath.ri.compiler.CoreOperationEqual coreOperationEqual37 = new org.apache.commons.jxpath.ri.compiler.CoreOperationEqual((org.apache.commons.jxpath.ri.compiler.Expression) constant31, (org.apache.commons.jxpath.ri.compiler.Expression) nameAttributeTest36); org.apache.commons.jxpath.ri.compiler.Constant constant39 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant41 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant43 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.NameAttributeTest nameAttributeTest44 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest((org.apache.commons.jxpath.ri.compiler.Expression) constant41, (org.apache.commons.jxpath.ri.compiler.Expression) constant43); org.apache.commons.jxpath.ri.compiler.CoreOperationEqual coreOperationEqual45 = new org.apache.commons.jxpath.ri.compiler.CoreOperationEqual((org.apache.commons.jxpath.ri.compiler.Expression) constant39, (org.apache.commons.jxpath.ri.compiler.Expression) nameAttributeTest44); boolean boolean46 = org.apache.commons.jxpath.util.ValueUtils.isCollection((java.lang.Object) constant39); org.apache.commons.jxpath.ri.compiler.Expression[] expressionArray47 = new org.apache.commons.jxpath.ri.compiler.Expression[] { nameAttributeTest28, constant31, constant39 }; nameAttributeTest10.args = expressionArray47; boolean boolean49 = locationPath2.areBasicPredicates(expressionArray47); boolean boolean50 = locationPath2.computeContextDependent(); }
Code: protected boolean equal(EvalContext context,Expression left,Expression right){Object l = left.compute(context);Object r = right.compute(context);if (l instanceof InitialContext || l instanceof SelfContext) {;}if (r instanceof InitialContext || r instanceof SelfContext) {;}if (l instanceof Collection) {l = ((Collection) l).iterator();}if (r instanceof Collection) {r = ((Collection) r).iterator();}if ((l instanceof Iterator) && !(r instanceof Iterator)) {return contains((Iterator) l, r);}if (!(l instanceof Iterator) && (r instanceof Iterator)) {return contains((Iterator) r, l);}if (l instanceof Iterator && r instanceof Iterator) {return findMatch((Iterator) l, (Iterator) r);}return equal(l, r);}
tensor([[0.0168, 0.0294, 0.0148,  ..., 0.0086, 0.0238, 0.0201],
        [0.0169, 0.0357, 0.0155,  ..., 0.0114, 0.0312, 0.0214],
        [0.0189, 0.0272, 0.0148,  ..., 0.0079, 0.0283, 0.0241],
        ...,
        [0.0150, 0.0250, 0.0166,  ..., 0.0111, 0.0266, 0.0214],
        [0.0173, 0.0244, 0.0181,  ..., 0.0116, 0.0297, 0.0194],
        [0.0150, 0.0298, 0.0155,  ..., 0.0101, 0.0274, 0.0181]])