64029
Test: public void test470() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test470"); com.fasterxml.jackson.core.JsonFactory jsonFactory0 = new com.fasterxml.jackson.core.JsonFactory(); byte[] byteArray4 = new byte[] { (byte) 1, (byte) 10, (byte) 0 }; com.fasterxml.jackson.core.JsonParser jsonParser5 = jsonFactory0.createJsonParser(byteArray4); java.io.OutputStream outputStream6 = null; com.fasterxml.jackson.core.JsonGenerator jsonGenerator7 = jsonFactory0.createJsonGenerator(outputStream6); com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes8 = null; com.fasterxml.jackson.core.JsonFactory jsonFactory9 = jsonFactory0.setCharacterEscapes(characterEscapes8); com.fasterxml.jackson.core.Version version10 = jsonFactory9.version(); com.fasterxml.jackson.core.io.InputDecorator inputDecorator11 = null; com.fasterxml.jackson.core.JsonFactory jsonFactory12 = jsonFactory9.setInputDecorator(inputDecorator11); com.fasterxml.jackson.core.JsonFactory jsonFactory13 = new com.fasterxml.jackson.core.JsonFactory(); java.lang.String str14 = jsonFactory13.getFormatName(); com.fasterxml.jackson.core.JsonFactory.Feature feature15 = com.fasterxml.jackson.core.JsonFactory.Feature.INTERN_FIELD_NAMES; int int16 = feature15.getMask(); boolean boolean17 = jsonFactory13.isEnabled(feature15); boolean boolean19 = feature15.enabledIn((int) (byte) 100); com.fasterxml.jackson.core.JsonFactory jsonFactory20 = jsonFactory12.enable(feature15); com.fasterxml.jackson.core.util.BufferRecycler bufferRecycler21 = null; com.fasterxml.jackson.core.util.TextBuffer textBuffer22 = new com.fasterxml.jackson.core.util.TextBuffer(bufferRecycler21); int int23 = textBuffer22.getCurrentSegmentSize(); com.fasterxml.jackson.core.JsonFactory jsonFactory24 = new com.fasterxml.jackson.core.JsonFactory(); byte[] byteArray28 = new byte[] { (byte) 1, (byte) 10, (byte) 0 }; com.fasterxml.jackson.core.JsonParser jsonParser29 = jsonFactory24.createJsonParser(byteArray28); java.io.OutputStream outputStream30 = null; com.fasterxml.jackson.core.JsonGenerator jsonGenerator31 = jsonFactory24.createJsonGenerator(outputStream30); com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes32 = null; com.fasterxml.jackson.core.JsonFactory jsonFactory33 = jsonFactory24.setCharacterEscapes(characterEscapes32); com.fasterxml.jackson.core.util.BufferRecycler bufferRecycler34 = null; com.fasterxml.jackson.core.util.TextBuffer textBuffer35 = new com.fasterxml.jackson.core.util.TextBuffer(bufferRecycler34); textBuffer35.append('a'); char[] charArray38 = textBuffer35.finishCurrentSegment(); com.fasterxml.jackson.core.JsonParser jsonParser39 = jsonFactory33.createParser(charArray38); textBuffer22.append(charArray38, 0, (int) (byte) 0); char[] charArray43 = textBuffer22.expandCurrentSegment(); com.fasterxml.jackson.core.JsonParser jsonParser46 = jsonFactory12.createParser(charArray43, 2, 4000); com.fasterxml.jackson.core.io.OutputDecorator outputDecorator47 = null; com.fasterxml.jackson.core.JsonFactory jsonFactory48 = jsonFactory12.setOutputDecorator(outputDecorator47); java.lang.Class<?> wildcardClass49 = jsonFactory48.getClass(); }
Code: public char[] expandCurrentSegment() { final char[] curr = _currentSegment; final int len = curr.length; int newLen = len + (len >> 1); if (newLen > MAX_SEGMENT_LEN) { newLen = len + (len >> 2); } return (_currentSegment = Arrays.copyOf(curr, newLen)); }
tensor([[0.0186, 0.0063, 0.0167,  ..., 0.0729, 0.0363, 0.0086],
        [0.0134, 0.0055, 0.0128,  ..., 0.0859, 0.0456, 0.0055],
        [0.0175, 0.0064, 0.0136,  ..., 0.0863, 0.0402, 0.0062],
        ...,
        [0.0185, 0.0045, 0.0176,  ..., 0.0809, 0.0476, 0.0063],
        [0.0194, 0.0059, 0.0189,  ..., 0.0643, 0.0467, 0.0087],
        [0.0135, 0.0062, 0.0150,  ..., 0.0868, 0.0374, 0.0078]])