64034
Test: public void test141() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test141"); com.fasterxml.jackson.core.util.BufferRecycler bufferRecycler0 = null; com.fasterxml.jackson.core.io.IOContext iOContext3 = new com.fasterxml.jackson.core.io.IOContext(bufferRecycler0, (java.lang.Object) 0.0f, true); com.fasterxml.jackson.core.JsonEncoding jsonEncoding4 = com.fasterxml.jackson.core.JsonEncoding.UTF16_BE; java.lang.String str5 = jsonEncoding4.getJavaName(); com.fasterxml.jackson.core.io.IOContext iOContext6 = iOContext3.withEncoding(jsonEncoding4); com.fasterxml.jackson.core.util.BufferRecycler bufferRecycler8 = null; com.fasterxml.jackson.core.io.IOContext iOContext11 = new com.fasterxml.jackson.core.io.IOContext(bufferRecycler8, (java.lang.Object) 0.0f, true); com.fasterxml.jackson.core.JsonEncoding jsonEncoding12 = iOContext11.getEncoding(); java.io.InputStream inputStream13 = null; byte[] byteArray14 = com.fasterxml.jackson.core.json.UTF8JsonGenerator.HEX_CHARS; com.fasterxml.jackson.core.io.MergedStream mergedStream17 = new com.fasterxml.jackson.core.io.MergedStream(iOContext11, inputStream13, byteArray14, (int) '4', (-1)); boolean boolean18 = mergedStream17.markSupported(); int int19 = mergedStream17.available(); com.fasterxml.jackson.core.ObjectCodec objectCodec20 = null; com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer byteQuadsCanonicalizer21 = com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.createRoot(); java.lang.String str22 = byteQuadsCanonicalizer21.toString(); int int23 = byteQuadsCanonicalizer21.totalCount(); int int24 = byteQuadsCanonicalizer21.bucketCount(); byte[] byteArray25 = com.fasterxml.jackson.core.io.CharTypes.copyHexBytes(); com.fasterxml.jackson.core.json.UTF8StreamJsonParser uTF8StreamJsonParser29 = new com.fasterxml.jackson.core.json.UTF8StreamJsonParser(iOContext6, (int) (byte) -17, (java.io.InputStream) mergedStream17, objectCodec20, byteQuadsCanonicalizer21, byteArray25, (-1695542384), 208279835, false); java.lang.String str31 = uTF8StreamJsonParser29.getValueAsString("UTF-8"); int[] intArray32 = com.fasterxml.jackson.core.io.CharTypes.get7BitOutputEscapes(); uTF8StreamJsonParser29._quadBuffer = intArray32; try { java.lang.Boolean boolean34 = uTF8StreamJsonParser29.nextBooleanValue(); } catch (java.lang.ArrayIndexOutOfBoundsException e) { } }
Code: public String getValueAsString() throws IOException { if (_currToken == JsonToken.VALUE_STRING) { return getText(); } if (_currToken == JsonToken.FIELD_NAME) { return getCurrentName(); } return getValueAsString(null); }
tensor([[0.0309, 0.0395, 0.0419, 0.0725, 0.0162, 0.0420, 0.0833, 0.0303, 0.0484,
         0.0190, 0.0420, 0.0341, 0.0601, 0.0133, 0.0833, 0.0303, 0.0484, 0.0473,
         0.0420, 0.0341, 0.0596, 0.0133, 0.0341, 0.0207, 0.0133],
        [0.0307, 0.0359, 0.0520, 0.0829, 0.0168, 0.0429, 0.0893, 0.0318, 0.0397,
         0.0156, 0.0429, 0.0307, 0.0504, 0.0110, 0.0893, 0.0318, 0.0397, 0.0527,
         0.0429, 0.0307, 0.0692, 0.0110, 0.0307, 0.0183, 0.0110],
        [0.0259, 0.0440, 0.0544, 0.0716, 0.0182, 0.0439, 0.0736, 0.0295, 0.0451,
         0.0149, 0.0439, 0.0299, 0.0580, 0.0110, 0.0736, 0.0295, 0.0451, 0.0550,
         0.0439, 0.0299, 0.0897, 0.0110, 0.0299, 0.0173, 0.0110],
        [0.0212, 0.0440, 0.0438, 0.1090, 0.0124, 0.0455, 0.0945, 0.0259, 0.0341,
         0.0109, 0.0455, 0.0336, 0.0646, 0.0092, 0.0945, 0.0259, 0.0341, 0.0437,
         0.0455, 0.0336, 0.0630, 0.0092, 0.0336, 0.0135, 0.0092],
        [0.0242, 0.0427, 0.0320, 0.0944, 0.0128, 0.0393, 0.0980, 0.0266, 0.0478,
         0.0130, 0.0393, 0.0341, 0.0575, 0.0087, 0.0980, 0.0266, 0.0478, 0.0422,
         0.0393, 0.0341, 0.0745, 0.0087, 0.0341, 0.0155, 0.0087],
        [0.0337, 0.0517, 0.0529, 0.0605, 0.0220, 0.0501, 0.0586, 0.0296, 0.0370,
         0.0209, 0.0501, 0.0393, 0.0626, 0.0183, 0.0586, 0.0296, 0.0370, 0.0464,
         0.0501, 0.0393, 0.0531, 0.0183, 0.0393, 0.0227, 0.0183],
        [0.0195, 0.0460, 0.0391, 0.1153, 0.0116, 0.0380, 0.1088, 0.0245, 0.0411,
         0.0074, 0.0380, 0.0255, 0.0754, 0.0059, 0.1088, 0.0245, 0.0411, 0.0492,
         0.0380, 0.0255, 0.0663, 0.0059, 0.0255, 0.0134, 0.0059],
        [0.0286, 0.0369, 0.0437, 0.0904, 0.0147, 0.0414, 0.0960, 0.0300, 0.0378,
         0.0147, 0.0414, 0.0362, 0.0632, 0.0092, 0.0960, 0.0300, 0.0378, 0.0506,
         0.0414, 0.0362, 0.0564, 0.0092, 0.0362, 0.0129, 0.0092],
        [0.0178, 0.0507, 0.0423, 0.0847, 0.0126, 0.0412, 0.0984, 0.0303, 0.0449,
         0.0092, 0.0412, 0.0289, 0.0727, 0.0087, 0.0984, 0.0303, 0.0449, 0.0392,
         0.0412, 0.0289, 0.0694, 0.0087, 0.0289, 0.0179, 0.0087],
        [0.0228, 0.0452, 0.0387, 0.0832, 0.0142, 0.0402, 0.0885, 0.0309, 0.0412,
         0.0184, 0.0402, 0.0352, 0.0630, 0.0111, 0.0885, 0.0309, 0.0412, 0.0459,
         0.0402, 0.0352, 0.0634, 0.0111, 0.0352, 0.0244, 0.0111],
        [0.0337, 0.0517, 0.0529, 0.0605, 0.0220, 0.0501, 0.0586, 0.0296, 0.0370,
         0.0209, 0.0501, 0.0393, 0.0626, 0.0183, 0.0586, 0.0296, 0.0370, 0.0464,
         0.0501, 0.0393, 0.0531, 0.0183, 0.0393, 0.0227, 0.0183],
        [0.0216, 0.0493, 0.0473, 0.0823, 0.0164, 0.0412, 0.0898, 0.0281, 0.0424,
         0.0135, 0.0412, 0.0316, 0.0745, 0.0113, 0.0898, 0.0281, 0.0424, 0.0428,
         0.0412, 0.0316, 0.0605, 0.0113, 0.0316, 0.0188, 0.0113],
        [0.0253, 0.0556, 0.0435, 0.0938, 0.0101, 0.0458, 0.0917, 0.0277, 0.0401,
         0.0113, 0.0458, 0.0326, 0.0655, 0.0051, 0.0917, 0.0277, 0.0401, 0.0405,
         0.0458, 0.0326, 0.0682, 0.0051, 0.0326, 0.0169, 0.0051],
        [0.0213, 0.0390, 0.0323, 0.0901, 0.0157, 0.0478, 0.0806, 0.0241, 0.0363,
         0.0184, 0.0478, 0.0445, 0.0744, 0.0106, 0.0806, 0.0241, 0.0363, 0.0415,
         0.0478, 0.0445, 0.0606, 0.0106, 0.0445, 0.0163, 0.0106],
        [0.0195, 0.0460, 0.0391, 0.1153, 0.0116, 0.0380, 0.1088, 0.0245, 0.0411,
         0.0074, 0.0380, 0.0255, 0.0754, 0.0059, 0.1088, 0.0245, 0.0411, 0.0492,
         0.0380, 0.0255, 0.0663, 0.0059, 0.0255, 0.0134, 0.0059],
        [0.0286, 0.0369, 0.0437, 0.0904, 0.0147, 0.0414, 0.0960, 0.0300, 0.0378,
         0.0147, 0.0414, 0.0362, 0.0632, 0.0092, 0.0960, 0.0300, 0.0378, 0.0506,
         0.0414, 0.0362, 0.0564, 0.0092, 0.0362, 0.0129, 0.0092],
        [0.0178, 0.0507, 0.0423, 0.0847, 0.0126, 0.0412, 0.0984, 0.0303, 0.0449,
         0.0092, 0.0412, 0.0289, 0.0727, 0.0087, 0.0984, 0.0303, 0.0449, 0.0392,
         0.0412, 0.0289, 0.0694, 0.0087, 0.0289, 0.0179, 0.0087],
        [0.0324, 0.0383, 0.0375, 0.0634, 0.0197, 0.0473, 0.0699, 0.0324, 0.0467,
         0.0233, 0.0473, 0.0400, 0.0618, 0.0127, 0.0699, 0.0324, 0.0467, 0.0454,
         0.0473, 0.0400, 0.0649, 0.0127, 0.0400, 0.0152, 0.0127],
        [0.0337, 0.0517, 0.0529, 0.0605, 0.0220, 0.0501, 0.0586, 0.0296, 0.0370,
         0.0209, 0.0501, 0.0393, 0.0626, 0.0183, 0.0586, 0.0296, 0.0370, 0.0464,
         0.0501, 0.0393, 0.0531, 0.0183, 0.0393, 0.0227, 0.0183],
        [0.0216, 0.0493, 0.0473, 0.0823, 0.0164, 0.0412, 0.0898, 0.0281, 0.0424,
         0.0135, 0.0412, 0.0316, 0.0745, 0.0113, 0.0898, 0.0281, 0.0424, 0.0428,
         0.0412, 0.0316, 0.0605, 0.0113, 0.0316, 0.0188, 0.0113],
        [0.0244, 0.0525, 0.0494, 0.0929, 0.0159, 0.0445, 0.0724, 0.0285, 0.0408,
         0.0156, 0.0445, 0.0321, 0.0565, 0.0122, 0.0724, 0.0285, 0.0408, 0.0544,
         0.0445, 0.0321, 0.0703, 0.0122, 0.0321, 0.0182, 0.0122],
        [0.0213, 0.0390, 0.0323, 0.0901, 0.0157, 0.0478, 0.0806, 0.0241, 0.0363,
         0.0184, 0.0478, 0.0445, 0.0744, 0.0106, 0.0806, 0.0241, 0.0363, 0.0415,
         0.0478, 0.0445, 0.0606, 0.0106, 0.0445, 0.0163, 0.0106],
        [0.0216, 0.0493, 0.0473, 0.0823, 0.0164, 0.0412, 0.0898, 0.0281, 0.0424,
         0.0135, 0.0412, 0.0316, 0.0745, 0.0113, 0.0898, 0.0281, 0.0424, 0.0428,
         0.0412, 0.0316, 0.0605, 0.0113, 0.0316, 0.0188, 0.0113],
        [0.0254, 0.0397, 0.0458, 0.0750, 0.0135, 0.0463, 0.1097, 0.0269, 0.0439,
         0.0117, 0.0463, 0.0306, 0.0583, 0.0080, 0.1097, 0.0269, 0.0439, 0.0409,
         0.0463, 0.0306, 0.0513, 0.0080, 0.0306, 0.0226, 0.0080],
        [0.0213, 0.0390, 0.0323, 0.0901, 0.0157, 0.0478, 0.0806, 0.0241, 0.0363,
         0.0184, 0.0478, 0.0445, 0.0744, 0.0106, 0.0806, 0.0241, 0.0363, 0.0415,
         0.0478, 0.0445, 0.0606, 0.0106, 0.0445, 0.0163, 0.0106]])