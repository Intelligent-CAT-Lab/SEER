62980
Test: public void test896() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test896"); com.google.gson.DefaultDateTypeAdapter defaultDateTypeAdapter2 = new com.google.gson.DefaultDateTypeAdapter((int) (byte) 0, 0); com.google.gson.internal.bind.JsonTreeWriter jsonTreeWriter3 = new com.google.gson.internal.bind.JsonTreeWriter(); com.google.gson.stream.JsonWriter jsonWriter5 = jsonTreeWriter3.value(false); com.google.gson.stream.JsonWriter jsonWriter7 = jsonWriter5.value(true); java.util.Date date8 = null; defaultDateTypeAdapter2.write(jsonWriter7, date8); com.google.gson.internal.bind.JsonTreeWriter jsonTreeWriter10 = new com.google.gson.internal.bind.JsonTreeWriter(); com.google.gson.stream.JsonWriter jsonWriter12 = jsonTreeWriter10.value(false); com.google.gson.stream.JsonWriter jsonWriter13 = jsonTreeWriter10.beginArray(); com.google.gson.stream.JsonWriter jsonWriter15 = jsonTreeWriter10.value(true); com.google.gson.stream.JsonWriter jsonWriter17 = jsonTreeWriter10.value((java.lang.Number) (-1.0f)); com.google.gson.stream.JsonWriter jsonWriter18 = jsonTreeWriter10.nullValue(); com.google.gson.stream.JsonWriter jsonWriter19 = jsonTreeWriter10.beginArray(); java.util.Date date20 = null; defaultDateTypeAdapter2.write(jsonWriter19, date20); com.google.gson.DefaultDateTypeAdapter defaultDateTypeAdapter24 = new com.google.gson.DefaultDateTypeAdapter((int) (byte) 0, 0); com.google.gson.TypeAdapter<java.util.Date> dateTypeAdapter25 = defaultDateTypeAdapter24.nullSafe(); com.google.gson.TypeAdapter<java.util.Date> dateTypeAdapter26 = dateTypeAdapter25.nullSafe(); java.util.Date date27 = null; com.google.gson.JsonElement jsonElement28 = dateTypeAdapter25.toJsonTree(date27); java.util.Date date29 = defaultDateTypeAdapter2.fromJsonTree(jsonElement28); java.lang.String str30 = defaultDateTypeAdapter2.toString(); java.util.Date date31 = null; java.lang.String str32 = defaultDateTypeAdapter2.toJson(date31); com.google.gson.TypeAdapter<java.util.Date> dateTypeAdapter33 = defaultDateTypeAdapter2.nullSafe(); com.google.gson.TypeAdapter<java.util.Date> dateTypeAdapter34 = defaultDateTypeAdapter2.nullSafe(); com.google.gson.DefaultDateTypeAdapter defaultDateTypeAdapter37 = new com.google.gson.DefaultDateTypeAdapter((int) (byte) 0, 0); com.google.gson.TypeAdapter<java.util.Date> dateTypeAdapter38 = defaultDateTypeAdapter37.nullSafe(); com.google.gson.TypeAdapter<java.util.Date> dateTypeAdapter39 = dateTypeAdapter38.nullSafe(); java.util.Date date40 = null; com.google.gson.JsonElement jsonElement41 = dateTypeAdapter38.toJsonTree(date40); com.google.gson.internal.bind.JsonTreeReader jsonTreeReader42 = new com.google.gson.internal.bind.JsonTreeReader(jsonElement41); boolean boolean43 = jsonTreeReader42.hasNext(); java.lang.String str44 = jsonTreeReader42.getPath(); java.lang.String str45 = jsonTreeReader42.toString(); java.util.Date date46 = defaultDateTypeAdapter2.read((com.google.gson.stream.JsonReader) jsonTreeReader42); java.lang.String str47 = jsonTreeReader42.toString(); java.lang.String str48 = jsonTreeReader42.getPath(); try { jsonTreeReader42.beginArray(); } catch (java.lang.IllegalStateException e) { } }
Code: public Date read(JsonReader in) throws IOException { if (in.peek() != JsonToken.STRING) { throw new JsonParseException("The date should be a string value"); } Date date = deserializeToDate(in.nextString()); if (dateType == Date.class) { return date; } else if (dateType == Timestamp.class) { return new Timestamp(date.getTime()); } else if (dateType == java.sql.Date.class) { return new java.sql.Date(date.getTime()); } else { throw new AssertionError(); } }
tensor([[0.0125, 0.0063, 0.0167,  ..., 0.0147, 0.0057, 0.0057],
        [0.0106, 0.0058, 0.0163,  ..., 0.0164, 0.0040, 0.0040],
        [0.0084, 0.0045, 0.0139,  ..., 0.0158, 0.0044, 0.0044],
        ...,
        [0.0122, 0.0061, 0.0202,  ..., 0.0162, 0.0072, 0.0072],
        [0.0084, 0.0039, 0.0201,  ..., 0.0141, 0.0047, 0.0047],
        [0.0084, 0.0039, 0.0201,  ..., 0.0141, 0.0047, 0.0047]])