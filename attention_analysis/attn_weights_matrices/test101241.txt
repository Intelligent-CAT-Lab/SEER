101241
Test: public void test075() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test075"); org.joda.time.chrono.GJChronology gJChronology0 = org.joda.time.chrono.GJChronology.getInstance(); org.joda.time.DurationField durationField1 = gJChronology0.halfdays(); org.joda.time.DateTimeField dateTimeField2 = gJChronology0.secondOfDay(); org.joda.time.chrono.GJChronology gJChronology3 = org.joda.time.chrono.GJChronology.getInstance(); org.joda.time.DateTimeField dateTimeField4 = gJChronology3.minuteOfHour(); org.joda.time.DateTimeField dateTimeField5 = gJChronology3.hourOfDay(); org.joda.time.field.SkipDateTimeField skipDateTimeField6 = new org.joda.time.field.SkipDateTimeField((org.joda.time.Chronology) gJChronology0, dateTimeField5); int int8 = skipDateTimeField6.getMinimumValue((long) 'a'); org.joda.time.chrono.ISOChronology iSOChronology9 = org.joda.time.chrono.ISOChronology.getInstance(); java.lang.String str10 = iSOChronology9.toString(); org.joda.time.Chronology chronology11 = iSOChronology9.withUTC(); org.joda.time.DateTimeField dateTimeField12 = iSOChronology9.millisOfDay(); org.joda.time.LocalDate localDate13 = new org.joda.time.LocalDate(); org.joda.time.DateTime dateTime14 = localDate13.toDateTimeAtCurrentTime(); int[] intArray15 = localDate13.getValues(); org.joda.time.LocalDate localDate17 = localDate13.minusWeeks((int) (byte) 1); int[] intArray19 = iSOChronology9.get((org.joda.time.ReadablePartial) localDate13, (long) (short) -1); org.joda.time.LocalDate localDate20 = new org.joda.time.LocalDate(); boolean boolean21 = org.joda.time.DateTimeUtils.isContiguous((org.joda.time.ReadablePartial) localDate20); org.joda.time.DateTimeZone dateTimeZone23 = org.joda.time.DateTimeZone.forOffsetMillis(0); org.joda.time.Interval interval24 = localDate20.toInterval(dateTimeZone23); org.joda.time.DurationFieldType durationFieldType25 = org.joda.time.DurationFieldType.years(); java.lang.String str26 = durationFieldType25.toString(); org.joda.time.LocalDate localDate28 = localDate20.withFieldAdded(durationFieldType25, 36); int int29 = localDate13.compareTo((org.joda.time.ReadablePartial) localDate20); org.joda.time.DateTimeFieldType dateTimeFieldType30 = org.joda.time.DateTimeFieldType.dayOfWeek(); boolean boolean31 = localDate13.isSupported(dateTimeFieldType30); org.joda.time.LocalDate localDate33 = new org.joda.time.LocalDate(); boolean boolean34 = org.joda.time.DateTimeUtils.isContiguous((org.joda.time.ReadablePartial) localDate33); org.joda.time.DateTimeZone dateTimeZone36 = org.joda.time.DateTimeZone.forOffsetMillis(0); org.joda.time.Interval interval37 = localDate33.toInterval(dateTimeZone36); org.joda.time.Chronology chronology38 = org.joda.time.DateTimeUtils.getIntervalChronology((org.joda.time.ReadableInterval) interval37); org.joda.time.chrono.GJChronology gJChronology39 = org.joda.time.chrono.GJChronology.getInstance(); org.joda.time.DateTimeField dateTimeField40 = gJChronology39.yearOfEra(); int int42 = dateTimeField40.getMinimumValue(0L); org.joda.time.DateTimeFieldType dateTimeFieldType43 = org.joda.time.DateTimeFieldType.weekyearOfCentury(); org.joda.time.field.OffsetDateTimeField offsetDateTimeField45 = new org.joda.time.field.OffsetDateTimeField(dateTimeField40, dateTimeFieldType43, (int) (short) 10); org.joda.time.DurationField durationField46 = offsetDateTimeField45.getRangeDurationField(); java.lang.String str47 = offsetDateTimeField45.toString(); long long50 = offsetDateTimeField45.addWrapField((long) (byte) 10, (-1)); org.joda.time.LocalDate localDate51 = new org.joda.time.LocalDate(); org.joda.time.DateTime dateTime52 = localDate51.toDateTimeAtCurrentTime(); int[] intArray53 = localDate51.getValues(); org.joda.time.LocalDate localDate55 = localDate51.minusWeeks((int) (byte) 1); java.util.Locale locale57 = null; java.lang.String str58 = offsetDateTimeField45.getAsText((org.joda.time.ReadablePartial) localDate51, (int) (short) -1, locale57); int[] intArray60 = chronology38.get((org.joda.time.ReadablePartial) localDate51, (long) 10); java.util.Locale locale62 = null; try { int[] intArray63 = skipDateTimeField6.set((org.joda.time.ReadablePartial) localDate13, 36, intArray60, "", locale62); } catch (org.joda.time.IllegalFieldValueException e) { } }
Code: public int compareTo(DurationField durationField) { if (durationField.isSupported()) { return 1; } return 0; }
[[0.06167593 0.03994898 0.13220449 0.05042913 0.07752995 0.16576506
 0.09733218 0.07752995 0.06729533 0.03188536 0.02524823 0.06729533
 0.08061182 0.02524823]
[0.03882735 0.0289926  0.13694914 0.05006213 0.08210522 0.22366104
 0.10018589 0.08210522 0.06197564 0.01949497 0.01831662 0.06197564
 0.07703191 0.01831662]
[0.06449582 0.0323723  0.14929277 0.05795477 0.09143411 0.1544168
 0.08170652 0.09143411 0.05915611 0.0248173  0.02032476 0.05915611
 0.09311379 0.02032476]
[0.04255374 0.02299254 0.1578201  0.05359172 0.07537117 0.2071226
 0.10901078 0.07537117 0.05840988 0.01800282 0.01963883 0.05840988
 0.08206597 0.01963883]
[0.05988155 0.02885015 0.1584052  0.06063802 0.0945718  0.10335797
 0.08237367 0.0945718  0.06913842 0.03364146 0.03361766 0.06913842
 0.07819617 0.03361766]
[0.03626288 0.01796444 0.24925812 0.04660256 0.07739697 0.20489925
 0.07751662 0.07739697 0.04783617 0.01171371 0.01180959 0.04783617
 0.08169696 0.01180959]
[0.05256673 0.03903257 0.16045016 0.05955971 0.08187889 0.13011101
 0.08750512 0.08187889 0.06487052 0.03363083 0.02700168 0.06487052
 0.08964167 0.02700168]
[0.05988155 0.02885015 0.1584052  0.06063802 0.0945718  0.10335797
 0.08237367 0.0945718  0.06913842 0.03364146 0.03361766 0.06913842
 0.07819617 0.03361766]
[0.04154988 0.02497879 0.19945058 0.0477278  0.07997324 0.17217728
 0.08944856 0.07997324 0.06053982 0.02416294 0.02198042 0.06053982
 0.07551724 0.02198042]
[0.05156963 0.03447371 0.14770497 0.05565502 0.07877306 0.16841197
 0.0915464  0.07877306 0.07426031 0.02249819 0.02149414 0.07426031
 0.07908504 0.02149414]
[0.04018923 0.03085935 0.1352114  0.05078845 0.09356385 0.15296715
 0.08518068 0.09356385 0.08496483 0.02237101 0.02060296 0.08496483
 0.08416947 0.02060296]
[0.04154988 0.02497879 0.19945058 0.0477278  0.07997324 0.17217728
 0.08944856 0.07997324 0.06053982 0.02416294 0.02198042 0.06053982
 0.07551724 0.02198042]
[0.05364469 0.03047195 0.13093928 0.06082258 0.0852024  0.1796133
 0.07635283 0.0852024  0.06611156 0.02985384 0.02344634 0.06611156
 0.08878088 0.02344634]
[0.04018922 0.03085934 0.13521144 0.05078844 0.09356386 0.15296713
 0.08518067 0.09356386 0.08496482 0.02237101 0.02060296 0.08496482
 0.08416947 0.02060296]]