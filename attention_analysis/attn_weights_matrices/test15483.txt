15483
Test: public void test159() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test159"); org.apache.commons.cli2.validation.Validator validator6 = null; java.util.List list8 = null; org.apache.commons.cli2.option.ArgumentImpl argumentImpl10 = new org.apache.commons.cli2.option.ArgumentImpl(" ", "", 0, (int) (byte) 0, '\000', ' ', validator6, "DISPLAY_GROUP_ARGUMENT", list8, (int) '\000'); java.lang.String str11 = argumentImpl10.getDescription(); org.apache.commons.cli2.Option option13 = argumentImpl10.findOption("DISPLAY_GROUP_ARGUMENT"); char char14 = argumentImpl10.getInitialSeparator(); int int15 = argumentImpl10.getId(); boolean boolean16 = argumentImpl10.isRequired(); char char17 = argumentImpl10.getInitialSeparator(); org.apache.commons.cli2.builder.ArgumentBuilder argumentBuilder18 = new org.apache.commons.cli2.builder.ArgumentBuilder(); org.apache.commons.cli2.Argument argument19 = argumentBuilder18.create(); int int20 = argument19.getId(); int int21 = argument19.getMinimum(); java.lang.String str22 = argument19.getDescription(); org.apache.commons.cli2.validation.Validator validator29 = null; java.util.List list31 = null; org.apache.commons.cli2.option.ArgumentImpl argumentImpl33 = new org.apache.commons.cli2.option.ArgumentImpl(" ", "", 0, (int) (byte) 0, '\000', ' ', validator29, "DISPLAY_GROUP_ARGUMENT", list31, (int) '\000'); java.util.Set set35 = org.apache.commons.cli2.util.HelpFormatter.DEFAULT_FULL_USAGE_SETTINGS; java.util.Comparator comparator36 = null; java.util.List list37 = argumentImpl33.helpLines((-1), set35, comparator36); org.apache.commons.cli2.commandline.WriteableCommandLineImpl writeableCommandLineImpl38 = new org.apache.commons.cli2.commandline.WriteableCommandLineImpl((org.apache.commons.cli2.Option) argument19, list37); java.util.List list39 = writeableCommandLineImpl38.getOptions(); org.apache.commons.cli2.validation.Validator validator46 = null; java.util.List list48 = null; org.apache.commons.cli2.option.ArgumentImpl argumentImpl50 = new org.apache.commons.cli2.option.ArgumentImpl(" ", "", 0, (int) (byte) 0, '\000', ' ', validator46, "DISPLAY_GROUP_ARGUMENT", list48, (int) '\000'); java.lang.String str51 = argumentImpl50.getDescription(); java.util.List list52 = argumentImpl50.getDefaultValues(); java.lang.Boolean boolean53 = writeableCommandLineImpl38.getSwitch((org.apache.commons.cli2.Option) argumentImpl50); java.lang.String str56 = writeableCommandLineImpl38.getProperty("DISPLAY_PARENT_CHILDREN", " "); org.apache.commons.cli2.validation.Validator validator63 = null; java.util.List list65 = null; org.apache.commons.cli2.option.ArgumentImpl argumentImpl67 = new org.apache.commons.cli2.option.ArgumentImpl(" ", "", 0, (int) (byte) 0, '\000', ' ', validator63, "DISPLAY_GROUP_ARGUMENT", list65, (int) '\000'); char char68 = argumentImpl67.getInitialSeparator(); java.util.List list69 = writeableCommandLineImpl38.getUndefaultedValues((org.apache.commons.cli2.Option) argumentImpl67); org.apache.commons.cli2.Option option71 = writeableCommandLineImpl38.getOption("DISPLAY_GROUP_ARGUMENT"); java.util.ListIterator listIterator72 = null; try { boolean boolean73 = argumentImpl10.canProcess((org.apache.commons.cli2.WriteableCommandLine) writeableCommandLineImpl38, listIterator72); } catch (java.lang.NullPointerException e) { } }
Code: public List getUndefaultedValues(Option option) { List valueList = (List) values.get(option); if (valueList == null) { valueList = Collections.EMPTY_LIST; } return valueList; }
tensor([[0.0369, 0.0471, 0.0308, 0.0346, 0.0583, 0.0471, 0.0667, 0.0238, 0.0386,
         0.0672, 0.1005, 0.0636, 0.0557, 0.0186, 0.0583, 0.0667, 0.0238, 0.0263,
         0.0177, 0.0418, 0.0581, 0.0177],
        [0.0289, 0.0443, 0.0259, 0.0252, 0.0737, 0.0443, 0.0576, 0.0210, 0.0282,
         0.1030, 0.1138, 0.0736, 0.0523, 0.0133, 0.0737, 0.0576, 0.0210, 0.0223,
         0.0142, 0.0393, 0.0527, 0.0142],
        [0.0292, 0.0534, 0.0370, 0.0238, 0.0705, 0.0534, 0.0500, 0.0193, 0.0355,
         0.0954, 0.1058, 0.0754, 0.0427, 0.0136, 0.0705, 0.0500, 0.0193, 0.0331,
         0.0138, 0.0426, 0.0519, 0.0138],
        [0.0377, 0.0582, 0.0313, 0.0396, 0.0592, 0.0582, 0.0581, 0.0298, 0.0336,
         0.0639, 0.0739, 0.0745, 0.0525, 0.0191, 0.0592, 0.0581, 0.0298, 0.0309,
         0.0190, 0.0409, 0.0534, 0.0190],
        [0.0401, 0.0500, 0.0379, 0.0337, 0.0697, 0.0500, 0.0444, 0.0336, 0.0361,
         0.0885, 0.0683, 0.0622, 0.0416, 0.0249, 0.0697, 0.0444, 0.0336, 0.0300,
         0.0237, 0.0454, 0.0486, 0.0237],
        [0.0289, 0.0443, 0.0259, 0.0252, 0.0737, 0.0443, 0.0576, 0.0210, 0.0282,
         0.1030, 0.1138, 0.0736, 0.0523, 0.0133, 0.0737, 0.0576, 0.0210, 0.0223,
         0.0142, 0.0393, 0.0527, 0.0142],
        [0.0275, 0.0437, 0.0316, 0.0297, 0.0687, 0.0437, 0.0667, 0.0243, 0.0373,
         0.0973, 0.1109, 0.0622, 0.0401, 0.0170, 0.0687, 0.0667, 0.0243, 0.0242,
         0.0158, 0.0383, 0.0455, 0.0158],
        [0.0410, 0.0559, 0.0417, 0.0424, 0.0514, 0.0559, 0.0496, 0.0355, 0.0397,
         0.0758, 0.0917, 0.0568, 0.0449, 0.0251, 0.0514, 0.0496, 0.0355, 0.0285,
         0.0213, 0.0459, 0.0393, 0.0213],
        [0.0334, 0.0583, 0.0343, 0.0270, 0.0549, 0.0583, 0.0523, 0.0273, 0.0407,
         0.0783, 0.0908, 0.0790, 0.0523, 0.0158, 0.0549, 0.0523, 0.0273, 0.0308,
         0.0134, 0.0431, 0.0622, 0.0134],
        [0.0384, 0.0470, 0.0402, 0.0352, 0.0551, 0.0470, 0.0542, 0.0370, 0.0316,
         0.0789, 0.0901, 0.0482, 0.0493, 0.0231, 0.0551, 0.0542, 0.0370, 0.0333,
         0.0202, 0.0447, 0.0602, 0.0202],
        [0.0250, 0.0434, 0.0317, 0.0208, 0.0630, 0.0434, 0.0706, 0.0204, 0.0242,
         0.1150, 0.1447, 0.0653, 0.0473, 0.0094, 0.0630, 0.0706, 0.0204, 0.0280,
         0.0092, 0.0335, 0.0420, 0.0092],
        [0.0233, 0.0544, 0.0293, 0.0264, 0.0727, 0.0544, 0.0531, 0.0242, 0.0269,
         0.1058, 0.1206, 0.0569, 0.0487, 0.0112, 0.0727, 0.0531, 0.0242, 0.0289,
         0.0124, 0.0390, 0.0494, 0.0124],
        [0.0215, 0.0524, 0.0270, 0.0234, 0.0666, 0.0524, 0.0645, 0.0231, 0.0258,
         0.1127, 0.1175, 0.0608, 0.0512, 0.0138, 0.0666, 0.0645, 0.0231, 0.0250,
         0.0131, 0.0362, 0.0455, 0.0131],
        [0.0281, 0.0505, 0.0278, 0.0296, 0.0728, 0.0505, 0.0546, 0.0188, 0.0283,
         0.1040, 0.1249, 0.0649, 0.0502, 0.0163, 0.0728, 0.0546, 0.0188, 0.0264,
         0.0107, 0.0344, 0.0503, 0.0107],
        [0.0401, 0.0500, 0.0379, 0.0337, 0.0697, 0.0500, 0.0444, 0.0336, 0.0361,
         0.0885, 0.0683, 0.0622, 0.0416, 0.0249, 0.0697, 0.0444, 0.0336, 0.0300,
         0.0237, 0.0454, 0.0486, 0.0237],
        [0.0275, 0.0437, 0.0316, 0.0297, 0.0687, 0.0437, 0.0667, 0.0243, 0.0373,
         0.0973, 0.1109, 0.0622, 0.0401, 0.0170, 0.0687, 0.0667, 0.0243, 0.0242,
         0.0158, 0.0383, 0.0455, 0.0158],
        [0.0410, 0.0559, 0.0417, 0.0424, 0.0514, 0.0559, 0.0496, 0.0355, 0.0397,
         0.0758, 0.0917, 0.0568, 0.0449, 0.0251, 0.0514, 0.0496, 0.0355, 0.0285,
         0.0213, 0.0459, 0.0393, 0.0213],
        [0.0278, 0.0497, 0.0247, 0.0243, 0.0756, 0.0497, 0.0604, 0.0213, 0.0341,
         0.1106, 0.1018, 0.0624, 0.0394, 0.0168, 0.0756, 0.0604, 0.0213, 0.0290,
         0.0142, 0.0502, 0.0367, 0.0142],
        [0.0252, 0.0414, 0.0251, 0.0243, 0.0757, 0.0414, 0.0579, 0.0239, 0.0354,
         0.0971, 0.0995, 0.0699, 0.0445, 0.0154, 0.0757, 0.0579, 0.0239, 0.0301,
         0.0158, 0.0581, 0.0460, 0.0158],
        [0.0259, 0.0503, 0.0292, 0.0266, 0.0573, 0.0503, 0.0598, 0.0257, 0.0333,
         0.1129, 0.1025, 0.0784, 0.0458, 0.0147, 0.0573, 0.0598, 0.0257, 0.0318,
         0.0154, 0.0365, 0.0454, 0.0154],
        [0.0287, 0.0465, 0.0319, 0.0262, 0.0685, 0.0465, 0.0660, 0.0217, 0.0248,
         0.0837, 0.1004, 0.0875, 0.0471, 0.0137, 0.0685, 0.0660, 0.0217, 0.0295,
         0.0144, 0.0371, 0.0552, 0.0144],
        [0.0252, 0.0414, 0.0251, 0.0243, 0.0757, 0.0414, 0.0579, 0.0239, 0.0354,
         0.0971, 0.0995, 0.0699, 0.0445, 0.0154, 0.0757, 0.0579, 0.0239, 0.0301,
         0.0158, 0.0581, 0.0460, 0.0158]])