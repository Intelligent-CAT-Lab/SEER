17978
Test: public void test9() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test9"); com.google.javascript.rhino.Node node1 = com.google.javascript.rhino.IR.name("[singleton]"); node1.setVarArgs(false); com.google.javascript.jscomp.Compiler compiler4 = new com.google.javascript.jscomp.Compiler(); com.google.javascript.rhino.Node node6 = compiler4.parseTestCode("NUMBER 2.0"); boolean boolean7 = compiler4.isTypeCheckingEnabled(); boolean boolean8 = com.google.javascript.jscomp.NodeUtil.mayHaveSideEffects(node1, (com.google.javascript.jscomp.AbstractCompiler) compiler4); com.google.javascript.jscomp.FlowSensitiveInlineVariables flowSensitiveInlineVariables9 = new com.google.javascript.jscomp.FlowSensitiveInlineVariables((com.google.javascript.jscomp.AbstractCompiler) compiler4); com.google.javascript.jscomp.PassFactory passFactory11 = com.google.javascript.jscomp.DefaultPassConfig.createEmptyPass(""); com.google.javascript.jscomp.Compiler compiler12 = new com.google.javascript.jscomp.Compiler(); com.google.javascript.jscomp.CompilerPass compilerPass13 = passFactory11.create((com.google.javascript.jscomp.AbstractCompiler) compiler12); com.google.javascript.rhino.Node node15 = new com.google.javascript.rhino.Node(15); compiler12.externAndJsRoot = node15; com.google.javascript.jscomp.PassFactory passFactory18 = com.google.javascript.jscomp.DefaultPassConfig.createEmptyPass(""); com.google.javascript.jscomp.Compiler compiler19 = new com.google.javascript.jscomp.Compiler(); com.google.javascript.jscomp.CompilerPass compilerPass20 = passFactory18.create((com.google.javascript.jscomp.AbstractCompiler) compiler19); com.google.javascript.rhino.Node node22 = new com.google.javascript.rhino.Node(15); compiler19.externAndJsRoot = node22; com.google.javascript.jscomp.CheckRegExp checkRegExp24 = new com.google.javascript.jscomp.CheckRegExp((com.google.javascript.jscomp.AbstractCompiler) compiler19); com.google.javascript.jscomp.NodeTraversal nodeTraversal25 = new com.google.javascript.jscomp.NodeTraversal((com.google.javascript.jscomp.AbstractCompiler) compiler12, (com.google.javascript.jscomp.NodeTraversal.Callback) checkRegExp24); boolean boolean26 = nodeTraversal25.inGlobalScope(); com.google.javascript.rhino.InputId inputId27 = nodeTraversal25.getInputId(); flowSensitiveInlineVariables9.exitScope(nodeTraversal25); com.google.javascript.jscomp.PassFactory passFactory30 = com.google.javascript.jscomp.DefaultPassConfig.createEmptyPass(""); com.google.javascript.jscomp.Compiler compiler31 = new com.google.javascript.jscomp.Compiler(); com.google.javascript.jscomp.CompilerPass compilerPass32 = passFactory30.create((com.google.javascript.jscomp.AbstractCompiler) compiler31); com.google.javascript.rhino.Node node34 = new com.google.javascript.rhino.Node(15); compiler31.externAndJsRoot = node34; compiler31.addToDebugLog("overriding prototype with non-object"); com.google.javascript.rhino.Node node39 = com.google.javascript.rhino.IR.number((double) 2); com.google.javascript.rhino.Node node40 = com.google.javascript.rhino.IR.pos(node39); compiler31.jsRoot = node40; com.google.javascript.rhino.Node node43 = com.google.javascript.rhino.IR.number((double) 2); java.lang.String str44 = node43.toString(); boolean boolean45 = node43.hasOneChild(); com.google.javascript.rhino.Node node46 = com.google.javascript.rhino.IR.getelem(node40, node43); com.google.javascript.rhino.Node node49 = com.google.javascript.rhino.Node.newString(113, "[singleton]"); boolean boolean50 = com.google.javascript.jscomp.ControlFlowAnalysis.mayThrowException(node49); boolean boolean51 = node49.isContinue(); boolean boolean52 = com.google.javascript.jscomp.NodeUtil.isFunctionExpression(node49); boolean boolean53 = node49.isWhile(); boolean boolean54 = node49.isVar(); com.google.javascript.jscomp.NodeUtil.MayBeStringResultPredicate mayBeStringResultPredicate55 = new com.google.javascript.jscomp.NodeUtil.MayBeStringResultPredicate(); com.google.javascript.rhino.ErrorReporter errorReporter56 = null; com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry58 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter56, true); com.google.javascript.rhino.jstype.JSType[] jSTypeArray59 = new com.google.javascript.rhino.jstype.JSType[] {}; com.google.javascript.rhino.Node node60 = jSTypeRegistry58.createOptionalParameters(jSTypeArray59); int int61 = node60.getChildCount(); boolean boolean62 = mayBeStringResultPredicate55.apply(node60); boolean boolean64 = com.google.javascript.jscomp.ControlFlowAnalysis.isBreakTarget(node60, "goog.exportSymbol"); com.google.javascript.rhino.Node node65 = node49.useSourceInfoIfMissingFromForTree(node60); boolean boolean66 = node60.isParamList(); try { flowSensitiveInlineVariables9.process(node43, node60); } catch (java.lang.RuntimeException e) { } }
Code: public void process(Node externs, Node root) { (new NodeTraversal(compiler, this)).traverse(root); }
tensor([[0.0905, 0.0714, 0.0815, 0.0341, 0.1562, 0.1836, 0.1060, 0.0730, 0.0553,
         0.1130, 0.0354],
        [0.0834, 0.0640, 0.0814, 0.0262, 0.1825, 0.1880, 0.1051, 0.0631, 0.0543,
         0.1185, 0.0336],
        [0.0781, 0.0680, 0.0898, 0.0344, 0.1650, 0.2062, 0.0983, 0.0643, 0.0439,
         0.1280, 0.0241],
        [0.0831, 0.0813, 0.1045, 0.0367, 0.1606, 0.1536, 0.1112, 0.0742, 0.0616,
         0.0931, 0.0400],
        [0.0781, 0.0668, 0.0911, 0.0319, 0.1900, 0.1618, 0.1210, 0.0683, 0.0558,
         0.1091, 0.0262],
        [0.0856, 0.0580, 0.0871, 0.0425, 0.1782, 0.1645, 0.1275, 0.0566, 0.0625,
         0.0941, 0.0433],
        [0.0918, 0.0778, 0.0946, 0.0511, 0.1431, 0.1273, 0.1212, 0.0798, 0.0548,
         0.1116, 0.0469],
        [0.0742, 0.0604, 0.1052, 0.0313, 0.1551, 0.1666, 0.1185, 0.0733, 0.0519,
         0.1325, 0.0309],
        [0.0775, 0.0764, 0.0827, 0.0356, 0.1872, 0.1615, 0.1233, 0.0609, 0.0482,
         0.1180, 0.0287],
        [0.0804, 0.0627, 0.0877, 0.0364, 0.1582, 0.1911, 0.1309, 0.0582, 0.0577,
         0.0991, 0.0377],
        [0.0661, 0.0568, 0.1006, 0.0348, 0.2140, 0.1326, 0.1239, 0.0622, 0.0590,
         0.1213, 0.0289]])