64020
Test: public void test578() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test578"); com.fasterxml.jackson.core.JsonFactory jsonFactory0 = new com.fasterxml.jackson.core.JsonFactory(); char[] charArray6 = new char[] { ' ', 'a', '4', ' ', '#' }; com.fasterxml.jackson.core.JsonParser jsonParser9 = jsonFactory0.createParser(charArray6, (int) (short) 1, (int) '#'); boolean boolean10 = jsonFactory0.requiresCustomCodec(); char[] charArray13 = new char[] { 'a', ' ' }; com.fasterxml.jackson.core.JsonParser jsonParser16 = jsonFactory0.createParser(charArray13, 0, (int) (short) -1); com.fasterxml.jackson.core.ObjectCodec objectCodec17 = null; com.fasterxml.jackson.core.JsonFactory jsonFactory18 = jsonFactory0.setCodec(objectCodec17); com.fasterxml.jackson.core.JsonParser jsonParser20 = jsonFactory0.createJsonParser(""); com.fasterxml.jackson.core.util.BufferRecycler bufferRecycler21 = null; com.fasterxml.jackson.core.util.TextBuffer textBuffer22 = new com.fasterxml.jackson.core.util.TextBuffer(bufferRecycler21); textBuffer22.append('a'); char[] charArray25 = textBuffer22.getTextBuffer(); com.fasterxml.jackson.core.util.BufferRecycler bufferRecycler26 = null; com.fasterxml.jackson.core.util.TextBuffer textBuffer27 = new com.fasterxml.jackson.core.util.TextBuffer(bufferRecycler26); textBuffer27.append('a'); char[] charArray30 = textBuffer27.emptyAndGetCurrentSegment(); textBuffer22.append(charArray30, (int) (short) 100, 0); textBuffer22.resetWithEmpty(); boolean boolean35 = textBuffer22.hasTextAsCharacters(); char[] charArray36 = textBuffer22.getCurrentSegment(); com.fasterxml.jackson.core.JsonParser jsonParser37 = jsonFactory0.createParser(charArray36); com.fasterxml.jackson.core.JsonGenerator.Feature feature38 = null; try { com.fasterxml.jackson.core.JsonFactory jsonFactory40 = jsonFactory0.configure(feature38, false); } catch (java.lang.NullPointerException e) { } }
Code: public char[] getTextBuffer() { if (_inputStart >= 0) return _inputBuffer; if (_resultArray != null) return _resultArray; if (_resultString != null) { return (_resultArray = _resultString.toCharArray()); } if (!_hasSegments) return _currentSegment; return contentsAsArray(); }
tensor([[0.0236, 0.0077, 0.0746,  ..., 0.0262, 0.0379, 0.0104],
        [0.0176, 0.0066, 0.0817,  ..., 0.0281, 0.0274, 0.0067],
        [0.0232, 0.0070, 0.0641,  ..., 0.0274, 0.0302, 0.0128],
        ...,
        [0.0169, 0.0087, 0.0695,  ..., 0.0243, 0.0336, 0.0093],
        [0.0205, 0.0085, 0.0789,  ..., 0.0273, 0.0286, 0.0100],
        [0.0165, 0.0071, 0.0740,  ..., 0.0356, 0.0313, 0.0088]])