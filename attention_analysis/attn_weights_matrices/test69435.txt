69435
Test: public void test343() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test343"); org.jsoup.nodes.Document document1 = org.jsoup.nodes.Document.createShell("hi!"); org.jsoup.nodes.Document document3 = org.jsoup.nodes.Document.createShell("hi!"); document1.setParentNode((org.jsoup.nodes.Node) document3); java.util.Set<java.lang.String> strSet5 = document3.classNames(); org.jsoup.nodes.Document document7 = org.jsoup.nodes.Document.createShell("hi!"); org.jsoup.nodes.Document document9 = org.jsoup.nodes.Document.createShell("hi!"); document7.setParentNode((org.jsoup.nodes.Node) document9); org.jsoup.nodes.Document document12 = org.jsoup.nodes.Document.createShell("hi!"); org.jsoup.nodes.Document document14 = org.jsoup.nodes.Document.createShell("hi!"); document12.setParentNode((org.jsoup.nodes.Node) document14); org.jsoup.nodes.Document document17 = org.jsoup.nodes.Document.createShell("hi!"); org.jsoup.nodes.Document document19 = org.jsoup.nodes.Document.createShell("hi!"); document17.setParentNode((org.jsoup.nodes.Node) document19); org.jsoup.nodes.Document document22 = org.jsoup.nodes.Document.createShell("hi!"); org.jsoup.nodes.Document document24 = org.jsoup.nodes.Document.createShell("hi!"); document22.setParentNode((org.jsoup.nodes.Node) document24); document19.setParentNode((org.jsoup.nodes.Node) document24); org.jsoup.nodes.Document document28 = org.jsoup.nodes.Document.createShell("hi!"); org.jsoup.nodes.Document document30 = org.jsoup.nodes.Document.createShell("hi!"); document28.setParentNode((org.jsoup.nodes.Node) document30); org.jsoup.select.Elements elements33 = document30.getElementsMatchingText(""); org.jsoup.nodes.Document document35 = org.jsoup.nodes.Document.createShell("hi!"); org.jsoup.nodes.Document document37 = org.jsoup.nodes.Document.createShell("hi!"); document35.setParentNode((org.jsoup.nodes.Node) document37); org.jsoup.select.Elements elements40 = document37.getElementsMatchingText(""); document37.baseUri = "hi!"; org.jsoup.nodes.Document document44 = org.jsoup.nodes.Document.createShell("hi!"); org.jsoup.nodes.Document document46 = org.jsoup.nodes.Document.createShell("hi!"); org.jsoup.nodes.Document document48 = org.jsoup.nodes.Document.createShell("hi!"); org.jsoup.nodes.Document document50 = org.jsoup.nodes.Document.createShell("hi!"); document48.setParentNode((org.jsoup.nodes.Node) document50); org.jsoup.nodes.Document document53 = org.jsoup.nodes.Document.createShell("hi!"); org.jsoup.nodes.Document document55 = org.jsoup.nodes.Document.createShell("hi!"); document53.setParentNode((org.jsoup.nodes.Node) document55); document50.setParentNode((org.jsoup.nodes.Node) document55); org.jsoup.nodes.Document document59 = org.jsoup.nodes.Document.createShell("hi!"); org.jsoup.nodes.Document document61 = org.jsoup.nodes.Document.createShell("hi!"); document59.setParentNode((org.jsoup.nodes.Node) document61); org.jsoup.select.Elements elements64 = document61.getElementsMatchingText(""); document61.baseUri = "hi!"; org.jsoup.nodes.Document document68 = org.jsoup.nodes.Document.createShell("hi!"); org.jsoup.nodes.Document document70 = org.jsoup.nodes.Document.createShell("hi!"); document68.setParentNode((org.jsoup.nodes.Node) document70); org.jsoup.nodes.Document document73 = org.jsoup.nodes.Document.createShell("hi!"); org.jsoup.nodes.Document document75 = org.jsoup.nodes.Document.createShell("hi!"); document73.setParentNode((org.jsoup.nodes.Node) document75); document70.setParentNode((org.jsoup.nodes.Node) document75); org.jsoup.nodes.Document document79 = org.jsoup.nodes.Document.createShell("hi!"); org.jsoup.nodes.Element element81 = document79.getElementById("hi!"); org.jsoup.nodes.Node[] nodeArray82 = new org.jsoup.nodes.Node[] { document7, document14, document19, document30, document37, document44, document46, document55, document61, document70, document79 }; java.util.ArrayList<org.jsoup.nodes.Node> nodeList83 = new java.util.ArrayList<org.jsoup.nodes.Node>(); boolean boolean84 = java.util.Collections.addAll((java.util.Collection<org.jsoup.nodes.Node>) nodeList83, nodeArray82); document3.childNodes = nodeList83; org.jsoup.nodes.Document document87 = org.jsoup.nodes.Document.createShell("hi!"); org.jsoup.nodes.Element element89 = document87.html("hi!"); org.jsoup.nodes.Element element90 = document3.prependChild((org.jsoup.nodes.Node) document87); org.jsoup.nodes.Node node91 = document87.unwrap(); org.jsoup.nodes.Element element92 = document87.clone(); java.util.List<org.jsoup.nodes.Node> nodeList93 = document87.siblingNodes(); org.jsoup.nodes.Element element94 = document87.previousElementSibling(); }
Code: public Element previousElementSibling(){List<Element> siblings = parent().children();Integer index = indexInList(this, siblings);;if (index > 1)return siblings.get(index-1);elsereturn null;}
tensor([[0.0679, 0.0313, 0.0665, 0.1128, 0.0433, 0.0581, 0.0520, 0.0433, 0.0736,
         0.0675, 0.0688, 0.1115, 0.0763, 0.0627, 0.0645],
        [0.0737, 0.0317, 0.0655, 0.1002, 0.0448, 0.0568, 0.0459, 0.0448, 0.0615,
         0.0685, 0.0792, 0.1423, 0.0756, 0.0578, 0.0518],
        [0.0530, 0.0255, 0.0533, 0.0933, 0.0575, 0.0646, 0.0456, 0.0575, 0.0569,
         0.0773, 0.0788, 0.1150, 0.0912, 0.0690, 0.0614],
        [0.0562, 0.0311, 0.0544, 0.1094, 0.0514, 0.0468, 0.0410, 0.0514, 0.0612,
         0.0832, 0.0853, 0.1195, 0.0884, 0.0669, 0.0538],
        [0.0717, 0.0432, 0.0752, 0.0779, 0.0601, 0.0672, 0.0437, 0.0601, 0.0655,
         0.0655, 0.0743, 0.0966, 0.0813, 0.0678, 0.0497],
        [0.0657, 0.0232, 0.0725, 0.1034, 0.0419, 0.0468, 0.0391, 0.0419, 0.0831,
         0.0797, 0.0757, 0.1181, 0.0872, 0.0691, 0.0527],
        [0.0489, 0.0234, 0.0772, 0.0928, 0.0523, 0.0555, 0.0428, 0.0523, 0.0577,
         0.0698, 0.0821, 0.1132, 0.1111, 0.0660, 0.0548],
        [0.0717, 0.0432, 0.0752, 0.0779, 0.0601, 0.0672, 0.0437, 0.0601, 0.0655,
         0.0655, 0.0743, 0.0966, 0.0813, 0.0678, 0.0497],
        [0.0485, 0.0200, 0.0641, 0.1327, 0.0437, 0.0552, 0.0402, 0.0437, 0.0652,
         0.0634, 0.0657, 0.1397, 0.0889, 0.0752, 0.0539],
        [0.0686, 0.0259, 0.0647, 0.1038, 0.0395, 0.0465, 0.0402, 0.0395, 0.0753,
         0.0740, 0.0687, 0.1809, 0.0618, 0.0614, 0.0492],
        [0.0629, 0.0368, 0.0693, 0.1068, 0.0437, 0.0525, 0.0397, 0.0437, 0.0781,
         0.0734, 0.0801, 0.1201, 0.0799, 0.0565, 0.0566],
        [0.0772, 0.0280, 0.0592, 0.1287, 0.0420, 0.0597, 0.0390, 0.0420, 0.0601,
         0.0717, 0.0657, 0.1418, 0.0746, 0.0610, 0.0492],
        [0.0645, 0.0285, 0.0629, 0.0971, 0.0646, 0.0519, 0.0437, 0.0646, 0.0538,
         0.0759, 0.0785, 0.0979, 0.1019, 0.0609, 0.0533],
        [0.0531, 0.0250, 0.0756, 0.1316, 0.0515, 0.0585, 0.0381, 0.0515, 0.0648,
         0.0626, 0.0681, 0.0862, 0.0993, 0.0720, 0.0620],
        [0.0631, 0.0260, 0.0660, 0.1043, 0.0413, 0.0494, 0.0353, 0.0413, 0.0559,
         0.0813, 0.0743, 0.1454, 0.0953, 0.0686, 0.0525]])