70271
Test: public void test100() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test100"); org.apache.commons.jxpath.ri.compiler.TreeCompiler treeCompiler0 = new org.apache.commons.jxpath.ri.compiler.TreeCompiler(); java.lang.Object obj3 = treeCompiler0.qname("/", "http: java.lang.Object obj6 = treeCompiler0.qname("org.apache.commons.jxpath.JXPathAbstractFactoryException: <<unknown namespace>>", ""); java.lang.Object obj7 = null; java.lang.Object obj8 = treeCompiler0.nodeNameTest(obj7); org.apache.commons.jxpath.ri.compiler.Constant constant10 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant12 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant14 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.NameAttributeTest nameAttributeTest15 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest((org.apache.commons.jxpath.ri.compiler.Expression) constant12, (org.apache.commons.jxpath.ri.compiler.Expression) constant14); org.apache.commons.jxpath.ri.compiler.CoreOperationEqual coreOperationEqual16 = new org.apache.commons.jxpath.ri.compiler.CoreOperationEqual((org.apache.commons.jxpath.ri.compiler.Expression) constant10, (org.apache.commons.jxpath.ri.compiler.Expression) nameAttributeTest15); boolean boolean17 = nameAttributeTest15.isContextDependent(); org.apache.commons.jxpath.ri.compiler.Constant constant19 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant21 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.NameAttributeTest nameAttributeTest22 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest((org.apache.commons.jxpath.ri.compiler.Expression) constant19, (org.apache.commons.jxpath.ri.compiler.Expression) constant21); org.apache.commons.jxpath.ri.EvalContext evalContext23 = null; org.apache.commons.jxpath.ri.compiler.Constant constant25 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant27 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.NameAttributeTest nameAttributeTest28 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest((org.apache.commons.jxpath.ri.compiler.Expression) constant25, (org.apache.commons.jxpath.ri.compiler.Expression) constant27); org.apache.commons.jxpath.ri.compiler.Constant constant30 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant32 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.NameAttributeTest nameAttributeTest33 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest((org.apache.commons.jxpath.ri.compiler.Expression) constant30, (org.apache.commons.jxpath.ri.compiler.Expression) constant32); boolean boolean34 = nameAttributeTest22.equal(evalContext23, (org.apache.commons.jxpath.ri.compiler.Expression) constant25, (org.apache.commons.jxpath.ri.compiler.Expression) nameAttributeTest33); org.apache.commons.jxpath.ri.compiler.Constant constant36 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant38 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant40 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.NameAttributeTest nameAttributeTest41 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest((org.apache.commons.jxpath.ri.compiler.Expression) constant38, (org.apache.commons.jxpath.ri.compiler.Expression) constant40); org.apache.commons.jxpath.ri.compiler.CoreOperationEqual coreOperationEqual42 = new org.apache.commons.jxpath.ri.compiler.CoreOperationEqual((org.apache.commons.jxpath.ri.compiler.Expression) constant36, (org.apache.commons.jxpath.ri.compiler.Expression) nameAttributeTest41); org.apache.commons.jxpath.ri.compiler.Constant constant44 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant46 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant48 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.NameAttributeTest nameAttributeTest49 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest((org.apache.commons.jxpath.ri.compiler.Expression) constant46, (org.apache.commons.jxpath.ri.compiler.Expression) constant48); org.apache.commons.jxpath.ri.compiler.CoreOperationEqual coreOperationEqual50 = new org.apache.commons.jxpath.ri.compiler.CoreOperationEqual((org.apache.commons.jxpath.ri.compiler.Expression) constant44, (org.apache.commons.jxpath.ri.compiler.Expression) nameAttributeTest49); boolean boolean51 = org.apache.commons.jxpath.util.ValueUtils.isCollection((java.lang.Object) constant44); org.apache.commons.jxpath.ri.compiler.Expression[] expressionArray52 = new org.apache.commons.jxpath.ri.compiler.Expression[] { nameAttributeTest33, constant36, constant44 }; nameAttributeTest15.args = expressionArray52; java.lang.Object obj54 = treeCompiler0.union((java.lang.Object[]) expressionArray52); }
Code: protected boolean equal(EvalContext context,Expression left,Expression right){Object l = left.compute(context);Object r = right.compute(context);if (l instanceof InitialContext || l instanceof SelfContext) {;}if (r instanceof InitialContext || r instanceof SelfContext) {r = ((EvalContext) r).getSingleNodePointer();}if (l instanceof Collection) {l = ((Collection) l).iterator();}if (r instanceof Collection) {;}if ((l instanceof Iterator) && !(r instanceof Iterator)) {return contains((Iterator) l, r);}if (!(l instanceof Iterator) && (r instanceof Iterator)) {return contains((Iterator) r, l);}if (l instanceof Iterator && r instanceof Iterator) {return findMatch((Iterator) l, (Iterator) r);}return equal(l, r);}
tensor([[0.0173, 0.0302, 0.0153,  ..., 0.0088, 0.0244, 0.0205],
        [0.0175, 0.0371, 0.0162,  ..., 0.0116, 0.0323, 0.0219],
        [0.0195, 0.0281, 0.0153,  ..., 0.0081, 0.0291, 0.0248],
        ...,
        [0.0153, 0.0255, 0.0170,  ..., 0.0113, 0.0271, 0.0217],
        [0.0178, 0.0250, 0.0186,  ..., 0.0119, 0.0305, 0.0200],
        [0.0153, 0.0304, 0.0158,  ..., 0.0102, 0.0279, 0.0183]])