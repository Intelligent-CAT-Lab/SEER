24464
Test: public void test0() throws Throwable { Vector2D vector2D0 = Vector2D.of((-1766.3328104022414), (-1766.3328104022414)); Point1S point1S0 = Point1S.from(vector2D0); Precision.DoubleEquivalence precision_DoubleEquivalence0 = mock(Precision.DoubleEquivalence.class, new ViolatedAssumptionAnswer()); doReturn(false, false, true).when(precision_DoubleEquivalence0).eqZero(anyDouble()); doReturn((-1766.3328104022414), (double)(-864), Double.NaN).when(precision_DoubleEquivalence0).signum(anyDouble()); CutAngle cutAngle0 = new CutAngle(point1S0, false, precision_DoubleEquivalence0); cutAngle0.contains(point1S0); boolean boolean0 = cutAngle0.contains(point1S0); boolean boolean1 = cutAngle0.contains(point1S0); }
Code: public boolean isPositiveFacing() { return positiveFacing; }
[[0.10934648 0.26729727 0.15169707 0.1511886  0.12100547 0.15169705
 0.04776807]
[0.06855693 0.34035894 0.12991077 0.18153623 0.11619409 0.12991078
 0.03353223]
[0.0877424  0.31477123 0.14417115 0.15167442 0.1068267  0.14417115
 0.05064295]
[0.11026365 0.23269044 0.14063604 0.18583335 0.12578093 0.14063604
 0.06415956]
[0.07348293 0.34289712 0.14042537 0.15607165 0.10455605 0.14042538
 0.04214151]
[0.0877424  0.31477123 0.14417115 0.15167442 0.1068267  0.14417115
 0.05064295]
[0.07333571 0.24605852 0.13447544 0.20389462 0.16462673 0.13447544
 0.04313356]]