67889
Test: public void test354() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test354"); com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null; com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0); com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory2 = null; com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper3 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory2); com.fasterxml.jackson.databind.ser.FilterProvider filterProvider4 = null; com.fasterxml.jackson.databind.ObjectMapper objectMapper5 = xmlMapper3.setFilterProvider(filterProvider4); java.util.Locale locale6 = null; com.fasterxml.jackson.databind.ObjectMapper objectMapper7 = objectMapper5.setLocale(locale6); com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory8 = null; com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper9 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory8); com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector jacksonXmlAnnotationIntrospector11 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector(true); com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper9.setAnnotationIntrospector((com.fasterxml.jackson.databind.AnnotationIntrospector) jacksonXmlAnnotationIntrospector11); com.fasterxml.jackson.databind.InjectableValues injectableValues13 = objectMapper12.getInjectableValues(); com.fasterxml.jackson.core.Base64Variant base64Variant14 = null; com.fasterxml.jackson.databind.ObjectMapper objectMapper15 = objectMapper12.setBase64Variant(base64Variant14); com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = null; com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper17 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory16); com.fasterxml.jackson.databind.JavaType javaType18 = null; com.fasterxml.jackson.databind.ObjectWriter objectWriter19 = xmlMapper17.writerFor(javaType18); javax.xml.stream.XMLInputFactory xMLInputFactory20 = null; javax.xml.stream.XMLOutputFactory xMLOutputFactory21 = null; com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory22 = new com.fasterxml.jackson.dataformat.xml.XmlFactory((com.fasterxml.jackson.core.ObjectCodec) xmlMapper17, xMLInputFactory20, xMLOutputFactory21); boolean boolean23 = xmlFactory22.requiresCustomCodec(); java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass24 = xmlFactory22.getFormatReadFeatureType(); com.fasterxml.jackson.databind.ObjectWriter objectWriter25 = objectMapper12.writerWithView(featureClass24); com.fasterxml.jackson.databind.ObjectReader objectReader26 = objectMapper5.reader(featureClass24); com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup27 = null; com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider28 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup27); com.fasterxml.jackson.databind.ObjectMapper objectMapper29 = objectMapper5.setSerializerProvider((com.fasterxml.jackson.databind.ser.DefaultSerializerProvider) xmlSerializerProvider28); com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer30 = com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER; xmlSerializerProvider28.setDefaultKeySerializer(objJsonSerializer30); xmlSerializerProvider1.setNullKeySerializer(objJsonSerializer30); com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory33 = null; com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper34 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory33); com.fasterxml.jackson.databind.JavaType javaType35 = null; com.fasterxml.jackson.databind.ObjectWriter objectWriter36 = xmlMapper34.writerFor(javaType35); javax.xml.stream.XMLInputFactory xMLInputFactory37 = null; javax.xml.stream.XMLOutputFactory xMLOutputFactory38 = null; com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory39 = new com.fasterxml.jackson.dataformat.xml.XmlFactory((com.fasterxml.jackson.core.ObjectCodec) xmlMapper34, xMLInputFactory37, xMLOutputFactory38); boolean boolean40 = xmlFactory39.requiresCustomCodec(); java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass41 = xmlFactory39.getFormatReadFeatureType(); xmlFactory39.setXMLTextElementName("<null/>"); com.fasterxml.jackson.core.io.OutputDecorator outputDecorator44 = xmlFactory39.getOutputDecorator(); java.io.DataOutput dataOutput45 = null; com.fasterxml.jackson.core.JsonGenerator jsonGenerator46 = xmlFactory39.createGenerator(dataOutput45); try { xmlSerializerProvider1._serializeXmlNull(jsonGenerator46); } catch (java.lang.NullPointerException e) { } }
Code: protected void _serializeXmlNull(JsonGenerator jgen) throws IOException { if (jgen instanceof ToXmlGenerator) { _initWithRootName((ToXmlGenerator) jgen, ROOT_NAME_FOR_NULL); } super.serializeValue(jgen, null); }
tensor([[0.0789, 0.0318, 0.0654, 0.0700, 0.1112, 0.0236, 0.0691, 0.1249, 0.0291,
         0.0237, 0.0306, 0.0691, 0.0592, 0.0224, 0.0525, 0.0143, 0.0494, 0.0603,
         0.0143],
        [0.0900, 0.0296, 0.0742, 0.0680, 0.1232, 0.0189, 0.0581, 0.1143, 0.0218,
         0.0219, 0.0372, 0.0581, 0.0520, 0.0212, 0.0534, 0.0178, 0.0544, 0.0682,
         0.0178],
        [0.0679, 0.0303, 0.0683, 0.0843, 0.1002, 0.0246, 0.0625, 0.1074, 0.0313,
         0.0230, 0.0323, 0.0625, 0.0675, 0.0319, 0.0610, 0.0164, 0.0484, 0.0637,
         0.0164],
        [0.0738, 0.0272, 0.0640, 0.0705, 0.1220, 0.0196, 0.0618, 0.1285, 0.0252,
         0.0179, 0.0317, 0.0618, 0.0669, 0.0266, 0.0449, 0.0131, 0.0569, 0.0746,
         0.0131],
        [0.0829, 0.0269, 0.0603, 0.0879, 0.1371, 0.0176, 0.0664, 0.1246, 0.0218,
         0.0169, 0.0317, 0.0664, 0.0502, 0.0190, 0.0542, 0.0130, 0.0519, 0.0582,
         0.0130],
        [0.0834, 0.0269, 0.0585, 0.0663, 0.1323, 0.0187, 0.0585, 0.1395, 0.0240,
         0.0242, 0.0362, 0.0585, 0.0503, 0.0227, 0.0542, 0.0126, 0.0560, 0.0645,
         0.0126],
        [0.0971, 0.0400, 0.0656, 0.0609, 0.0820, 0.0305, 0.0714, 0.0796, 0.0368,
         0.0337, 0.0446, 0.0714, 0.0477, 0.0376, 0.0449, 0.0256, 0.0573, 0.0477,
         0.0256],
        [0.0824, 0.0202, 0.0575, 0.0779, 0.1619, 0.0163, 0.0538, 0.1531, 0.0162,
         0.0178, 0.0225, 0.0538, 0.0522, 0.0203, 0.0566, 0.0084, 0.0504, 0.0705,
         0.0084],
        [0.0705, 0.0253, 0.0694, 0.0774, 0.1050, 0.0217, 0.0744, 0.1156, 0.0261,
         0.0239, 0.0334, 0.0744, 0.0629, 0.0254, 0.0481, 0.0137, 0.0581, 0.0611,
         0.0137],
        [0.0696, 0.0273, 0.0733, 0.0859, 0.1129, 0.0210, 0.0547, 0.1068, 0.0292,
         0.0195, 0.0408, 0.0547, 0.0542, 0.0336, 0.0825, 0.0161, 0.0448, 0.0570,
         0.0161],
        [0.0678, 0.0245, 0.0698, 0.0775, 0.1363, 0.0181, 0.0561, 0.1180, 0.0235,
         0.0210, 0.0275, 0.0561, 0.0556, 0.0240, 0.0646, 0.0121, 0.0719, 0.0634,
         0.0121],
        [0.0971, 0.0400, 0.0656, 0.0609, 0.0820, 0.0305, 0.0714, 0.0796, 0.0368,
         0.0337, 0.0446, 0.0714, 0.0477, 0.0376, 0.0449, 0.0256, 0.0573, 0.0477,
         0.0256],
        [0.0944, 0.0260, 0.0584, 0.0745, 0.0962, 0.0216, 0.0693, 0.1219, 0.0309,
         0.0245, 0.0407, 0.0693, 0.0477, 0.0276, 0.0540, 0.0152, 0.0545, 0.0582,
         0.0152],
        [0.0729, 0.0291, 0.0728, 0.0703, 0.1079, 0.0199, 0.0570, 0.1199, 0.0276,
         0.0234, 0.0302, 0.0570, 0.0553, 0.0263, 0.0559, 0.0153, 0.0749, 0.0690,
         0.0153],
        [0.0767, 0.0292, 0.0548, 0.0582, 0.1308, 0.0242, 0.0654, 0.1269, 0.0300,
         0.0192, 0.0300, 0.0654, 0.0597, 0.0273, 0.0615, 0.0139, 0.0541, 0.0587,
         0.0139],
        [0.0718, 0.0282, 0.0594, 0.0602, 0.1315, 0.0236, 0.0733, 0.1186, 0.0217,
         0.0204, 0.0352, 0.0733, 0.0604, 0.0220, 0.0425, 0.0161, 0.0753, 0.0505,
         0.0161],
        [0.0859, 0.0271, 0.0700, 0.0675, 0.1040, 0.0226, 0.0650, 0.1311, 0.0255,
         0.0233, 0.0328, 0.0650, 0.0594, 0.0228, 0.0580, 0.0135, 0.0523, 0.0605,
         0.0135],
        [0.0720, 0.0298, 0.0688, 0.0630, 0.1335, 0.0190, 0.0655, 0.1333, 0.0246,
         0.0187, 0.0301, 0.0655, 0.0547, 0.0227, 0.0615, 0.0110, 0.0632, 0.0519,
         0.0110],
        [0.0718, 0.0282, 0.0594, 0.0602, 0.1315, 0.0236, 0.0733, 0.1186, 0.0217,
         0.0204, 0.0352, 0.0733, 0.0604, 0.0220, 0.0425, 0.0161, 0.0753, 0.0505,
         0.0161]])