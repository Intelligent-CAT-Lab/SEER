67244
Test: public void test201() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test201"); com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer0 = null; com.fasterxml.jackson.databind.ser.std.NumberSerializer numberSerializer1 = new com.fasterxml.jackson.databind.ser.std.NumberSerializer(); com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer typeWrappedSerializer2 = new com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer(typeSerializer0, (com.fasterxml.jackson.databind.JsonSerializer<java.lang.Number>) numberSerializer1); com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer indexedStringListSerializer3 = new com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Number>) numberSerializer1); com.fasterxml.jackson.databind.ser.std.NumberSerializer numberSerializer4 = new com.fasterxml.jackson.databind.ser.std.NumberSerializer(); com.fasterxml.jackson.databind.node.ObjectNode objectNode7 = numberSerializer4.createSchemaNode("hi!", false); com.fasterxml.jackson.databind.node.ObjectNode objectNode9 = objectNode7.with("hi!"); com.fasterxml.jackson.databind.ser.std.NumberSerializer numberSerializer11 = new com.fasterxml.jackson.databind.ser.std.NumberSerializer(); com.fasterxml.jackson.databind.node.ObjectNode objectNode14 = numberSerializer11.createSchemaNode("hi!", false); com.fasterxml.jackson.databind.node.ObjectNode objectNode16 = objectNode14.with("hi!"); com.fasterxml.jackson.databind.ser.std.NumberSerializer numberSerializer17 = new com.fasterxml.jackson.databind.ser.std.NumberSerializer(); com.fasterxml.jackson.databind.node.ObjectNode objectNode20 = numberSerializer17.createSchemaNode("hi!", false); com.fasterxml.jackson.databind.node.ObjectNode objectNode22 = objectNode20.with("hi!"); com.fasterxml.jackson.databind.JsonNode[] jsonNodeArray23 = new com.fasterxml.jackson.databind.JsonNode[] { objectNode16, objectNode20 }; java.util.ArrayList<com.fasterxml.jackson.databind.JsonNode> jsonNodeList24 = new java.util.ArrayList<com.fasterxml.jackson.databind.JsonNode>(); boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.fasterxml.jackson.databind.JsonNode>) jsonNodeList24, jsonNodeArray23); java.util.List<com.fasterxml.jackson.databind.JsonNode> jsonNodeList26 = objectNode7.findValues("", (java.util.List<com.fasterxml.jackson.databind.JsonNode>) jsonNodeList24); com.fasterxml.jackson.databind.node.NumericNode numericNode28 = objectNode7.numberNode((float) (byte) 100); com.fasterxml.jackson.databind.node.NumericNode numericNode30 = objectNode7.numberNode((byte) 1); com.fasterxml.jackson.databind.ser.std.NumberSerializer numberSerializer31 = new com.fasterxml.jackson.databind.ser.std.NumberSerializer(); com.fasterxml.jackson.databind.node.ObjectNode objectNode34 = numberSerializer31.createSchemaNode("hi!", false); com.fasterxml.jackson.databind.node.ObjectNode objectNode36 = objectNode34.with("hi!"); com.fasterxml.jackson.databind.node.ObjectNode objectNode39 = objectNode36.put("", (int) (byte) 10); com.fasterxml.jackson.databind.node.NumericNode numericNode41 = objectNode36.numberNode(5); java.math.BigInteger bigInteger42 = numericNode41.bigIntegerValue(); com.fasterxml.jackson.databind.node.NumericNode numericNode43 = objectNode7.numberNode(bigInteger42); com.fasterxml.jackson.databind.node.BigIntegerNode bigIntegerNode44 = com.fasterxml.jackson.databind.node.BigIntegerNode.valueOf(bigInteger42); com.fasterxml.jackson.core.JsonFactory jsonFactory45 = null; com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider46 = null; com.fasterxml.jackson.databind.deser.DefaultDeserializationContext defaultDeserializationContext47 = null; com.fasterxml.jackson.databind.ObjectMapper objectMapper48 = new com.fasterxml.jackson.databind.ObjectMapper(jsonFactory45, defaultSerializerProvider46, defaultDeserializationContext47); com.fasterxml.jackson.databind.MappingJsonFactory mappingJsonFactory49 = new com.fasterxml.jackson.databind.MappingJsonFactory(objectMapper48); com.fasterxml.jackson.core.JsonFactory jsonFactory50 = objectMapper48.getFactory(); java.io.Writer writer51 = null; com.fasterxml.jackson.core.JsonGenerator jsonGenerator52 = jsonFactory50.createGenerator(writer51); com.fasterxml.jackson.core.FormatSchema formatSchema53 = null; boolean boolean54 = jsonGenerator52.canUseSchema(formatSchema53); com.fasterxml.jackson.core.SerializableString serializableString55 = null; com.fasterxml.jackson.core.JsonGenerator jsonGenerator56 = jsonGenerator52.setRootValueSeparator(serializableString55); com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.Impl impl57 = new com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.Impl(); bigIntegerNode44.serialize(jsonGenerator52, (com.fasterxml.jackson.databind.SerializerProvider) impl57); java.lang.Number number59 = null; boolean boolean60 = numberSerializer1.isEmpty((com.fasterxml.jackson.databind.SerializerProvider) impl57, number59); }
Code: public boolean isEmpty(Object value) { Object delegateValue = convertValue(value); return _delegateSerializer.isEmpty(delegateValue); }
[[0.0583116  0.1267671  0.08976895 0.05909849 0.09647902 0.04540411
 0.1450194  0.03788633 0.07365707 0.0664871  0.17217863 0.02894224]
[0.03836764 0.16076867 0.06875819 0.04106084 0.1203277  0.03051271
 0.18048924 0.03045635 0.05205515 0.07092261 0.18482849 0.02145242]
[0.05334407 0.14673837 0.06622481 0.04792983 0.14415553 0.04989307
 0.14934069 0.0414202  0.06417016 0.06788744 0.14369407 0.02520179]
[0.04878674 0.11818229 0.07777687 0.04677825 0.10438763 0.03231039
 0.17570242 0.03367708 0.06368314 0.06388467 0.21110117 0.02372942]
[0.05683042 0.10946959 0.09246336 0.05459199 0.10447582 0.03384713
 0.13698311 0.04790487 0.08260864 0.06369164 0.1823864  0.03474704]
[0.04782937 0.13853228 0.06169602 0.03801544 0.12597136 0.03187158
 0.20058116 0.03642456 0.0615842  0.058241   0.17721194 0.02204102]
[0.04517619 0.14203982 0.06861031 0.04651817 0.1219323  0.03374878
 0.1860478  0.03633595 0.07359421 0.05942716 0.1492591  0.03731029]
[0.06720253 0.12668653 0.10041742 0.06861495 0.08453871 0.04567874
 0.13054717 0.05820543 0.07596429 0.07540207 0.13172291 0.03501926]
[0.04577556 0.15212011 0.08232877 0.0437269  0.10572008 0.03320648
 0.15579545 0.03636067 0.06921698 0.06292003 0.19135225 0.02147671]
[0.03704633 0.14303425 0.09366775 0.04400882 0.08774006 0.03539601
 0.17217332 0.03715239 0.05547186 0.05115763 0.2198836  0.02326799]
[0.04383399 0.16207278 0.08758835 0.04071359 0.09258845 0.02789751
 0.21908376 0.03009837 0.05338455 0.04977373 0.16970286 0.02326205]
[0.0373346  0.11670057 0.06813506 0.04149507 0.11795542 0.04052143
 0.17250651 0.03615043 0.07202572 0.08790166 0.18495096 0.02432266]]