101466
Test: public void test31() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test31"); org.joda.time.DateTimeFieldType dateTimeFieldType0 = org.joda.time.DateTimeFieldType.dayOfMonth(); org.joda.time.format.DateTimeFormatterBuilder.FixedNumber fixedNumber3 = new org.joda.time.format.DateTimeFormatterBuilder.FixedNumber(dateTimeFieldType0, 642, true); org.joda.time.format.DateTimeParser[] dateTimeParserArray4 = new org.joda.time.format.DateTimeParser[] {}; org.joda.time.format.DateTimeFormatterBuilder.MatchingParser matchingParser5 = new org.joda.time.format.DateTimeFormatterBuilder.MatchingParser(dateTimeParserArray4); org.joda.time.chrono.ISOChronology iSOChronology7 = org.joda.time.chrono.ISOChronology.getInstanceUTC(); org.joda.time.DateTime dateTime8 = new org.joda.time.DateTime((org.joda.time.Chronology) iSOChronology7); org.joda.time.DateTimeZone dateTimeZone9 = null; org.joda.time.Chronology chronology10 = iSOChronology7.withZone(dateTimeZone9); org.joda.time.DateTimeField dateTimeField11 = iSOChronology7.weekyear(); java.util.Locale locale12 = null; org.joda.time.format.DateTimeParserBucket dateTimeParserBucket13 = new org.joda.time.format.DateTimeParserBucket((long) 100, (org.joda.time.Chronology) iSOChronology7, locale12); int int16 = matchingParser5.parseInto(dateTimeParserBucket13, "713", 1439); int int19 = fixedNumber3.parseInto(dateTimeParserBucket13, "secondOfMinute", 0); int int20 = fixedNumber3.estimatePrintedLength(); java.io.Writer writer21 = null; org.joda.time.chrono.ISOChronology iSOChronology23 = org.joda.time.chrono.ISOChronology.getInstanceUTC(); org.joda.time.DateTime dateTime24 = new org.joda.time.DateTime((org.joda.time.Chronology) iSOChronology23); org.joda.time.DateTimeField dateTimeField25 = iSOChronology23.secondOfDay(); org.joda.time.DurationField durationField26 = iSOChronology23.years(); java.lang.String str27 = iSOChronology23.toString(); long long31 = iSOChronology23.add((long) (byte) 10, (long) 0, 687); org.joda.time.DateTimeField dateTimeField32 = iSOChronology23.clockhourOfHalfday(); org.joda.time.DurationField durationField33 = iSOChronology23.years(); java.lang.String str34 = iSOChronology23.toString(); org.joda.time.tz.FixedDateTimeZone fixedDateTimeZone40 = new org.joda.time.tz.FixedDateTimeZone("minuteOfDay", "35", 100, (int) (short) 10); int int42 = fixedDateTimeZone40.getOffset(100L); org.joda.time.chrono.ISOChronology iSOChronology44 = org.joda.time.chrono.ISOChronology.getInstanceUTC(); org.joda.time.DateTime dateTime45 = new org.joda.time.DateTime((org.joda.time.Chronology) iSOChronology44); org.joda.time.DateTimeField dateTimeField46 = iSOChronology44.secondOfDay(); org.joda.time.DateTimeField dateTimeField47 = iSOChronology44.secondOfMinute(); java.util.Locale locale48 = null; org.joda.time.format.DateTimeParserBucket dateTimeParserBucket50 = new org.joda.time.format.DateTimeParserBucket((long) 837, (org.joda.time.Chronology) iSOChronology44, locale48, (java.lang.Integer) 77); org.joda.time.DurationField durationField51 = iSOChronology44.hours(); org.joda.time.DateTimeField dateTimeField52 = iSOChronology44.millisOfDay(); long long55 = dateTimeField52.getDifferenceAsLong((-32039998L), (long) 892); org.joda.time.format.DateTimeParser[] dateTimeParserArray56 = new org.joda.time.format.DateTimeParser[] {}; org.joda.time.format.DateTimeFormatterBuilder.MatchingParser matchingParser57 = new org.joda.time.format.DateTimeFormatterBuilder.MatchingParser(dateTimeParserArray56); org.joda.time.chrono.ISOChronology iSOChronology59 = org.joda.time.chrono.ISOChronology.getInstanceUTC(); org.joda.time.DateTime dateTime60 = new org.joda.time.DateTime((org.joda.time.Chronology) iSOChronology59); org.joda.time.DateTimeZone dateTimeZone61 = null; org.joda.time.Chronology chronology62 = iSOChronology59.withZone(dateTimeZone61); org.joda.time.DateTimeField dateTimeField63 = iSOChronology59.weekyear(); java.util.Locale locale64 = null; org.joda.time.format.DateTimeParserBucket dateTimeParserBucket65 = new org.joda.time.format.DateTimeParserBucket((long) 100, (org.joda.time.Chronology) iSOChronology59, locale64); int int68 = matchingParser57.parseInto(dateTimeParserBucket65, "713", 1439); org.joda.time.format.DateTimeParserBucket.SavedState savedState69 = dateTimeParserBucket65.new SavedState(); org.joda.time.chrono.ISOChronology iSOChronology71 = org.joda.time.chrono.ISOChronology.getInstanceUTC(); org.joda.time.DateTime dateTime72 = new org.joda.time.DateTime((org.joda.time.Chronology) iSOChronology71); org.joda.time.DateTimeZone dateTimeZone73 = null; org.joda.time.Chronology chronology74 = iSOChronology71.withZone(dateTimeZone73); org.joda.time.DateTimeField dateTimeField75 = iSOChronology71.weekyear(); java.util.Locale locale76 = null; org.joda.time.format.DateTimeParserBucket dateTimeParserBucket77 = new org.joda.time.format.DateTimeParserBucket((long) 100, (org.joda.time.Chronology) iSOChronology71, locale76); java.lang.Integer int78 = dateTimeParserBucket77.getPivotYear(); boolean boolean79 = savedState69.restoreState(dateTimeParserBucket77); org.joda.time.Chronology chronology80 = dateTimeParserBucket77.getChronology(); org.joda.time.chrono.ISOChronology iSOChronology81 = org.joda.time.chrono.ISOChronology.getInstanceUTC(); org.joda.time.DateTimeField dateTimeField82 = iSOChronology81.millisOfSecond(); org.joda.time.DurationField durationField83 = iSOChronology81.hours(); boolean boolean84 = dateTimeParserBucket77.restoreState((java.lang.Object) iSOChronology81); java.util.Locale locale85 = dateTimeParserBucket77.getLocale(); int int86 = dateTimeField52.getMaximumTextLength(locale85); try { fixedNumber3.printTo(writer21, (long) 187, (org.joda.time.Chronology) iSOChronology23, 660, (org.joda.time.DateTimeZone) fixedDateTimeZone40, locale85); } catch (java.lang.NullPointerException e) { } }
Code: public int parseInto(DateTimeParserBucket bucket, String text, int position){if (position >= text.length()) {return ~position;}char a = text.charAt(position);char b = iValue;if (a != b) {a = Character.toUpperCase(a);b = Character.toUpperCase(b);if (a != b) {a = Character.toLowerCase(a);b = Character.toLowerCase(b);if (a != b) {return ~position;}}}return position + 1;}
tensor([[0.0176, 0.0108, 0.0276,  ..., 0.0165, 0.0143, 0.0465],
        [0.0107, 0.0077, 0.0274,  ..., 0.0093, 0.0127, 0.0473],
        [0.0135, 0.0076, 0.0310,  ..., 0.0094, 0.0166, 0.0505],
        ...,
        [0.0124, 0.0077, 0.0315,  ..., 0.0131, 0.0132, 0.0537],
        [0.0168, 0.0091, 0.0368,  ..., 0.0125, 0.0141, 0.0420],
        [0.0147, 0.0101, 0.0300,  ..., 0.0127, 0.0140, 0.0567]])