64023
Test: public void test298() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test298"); com.fasterxml.jackson.core.JsonFactory jsonFactory0 = new com.fasterxml.jackson.core.JsonFactory(); com.fasterxml.jackson.core.Version version1 = jsonFactory0.version(); com.fasterxml.jackson.core.JsonGenerator.Feature feature2 = com.fasterxml.jackson.core.JsonGenerator.Feature.IGNORE_UNKNOWN; com.fasterxml.jackson.core.JsonFactory jsonFactory4 = jsonFactory0.configure(feature2, true); com.fasterxml.jackson.core.JsonParser.Feature feature5 = com.fasterxml.jackson.core.JsonParser.Feature.ALLOW_SINGLE_QUOTES; int int6 = feature5.getMask(); com.fasterxml.jackson.core.JsonFactory jsonFactory7 = jsonFactory4.enable(feature5); com.fasterxml.jackson.core.util.BufferRecycler bufferRecycler8 = jsonFactory7._getBufferRecycler(); com.fasterxml.jackson.core.JsonFactory jsonFactory10 = new com.fasterxml.jackson.core.JsonFactory(); com.fasterxml.jackson.core.Version version11 = jsonFactory10.version(); com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes12 = jsonFactory10.getCharacterEscapes(); com.fasterxml.jackson.core.JsonFactory jsonFactory13 = new com.fasterxml.jackson.core.JsonFactory(); boolean boolean14 = jsonFactory13.requiresCustomCodec(); com.fasterxml.jackson.core.JsonFactory jsonFactory16 = jsonFactory13.setRootValueSeparator("3.0"); com.fasterxml.jackson.core.JsonFactory.Feature feature17 = com.fasterxml.jackson.core.JsonFactory.Feature.CANONICALIZE_FIELD_NAMES; com.fasterxml.jackson.core.JsonFactory jsonFactory18 = jsonFactory13.disable(feature17); char[] charArray19 = com.fasterxml.jackson.core.io.CharTypes.copyHexChars(); com.fasterxml.jackson.core.JsonParser jsonParser22 = jsonFactory13.createParser(charArray19, (-1), 0); char[] charArray24 = new char[] { '4' }; com.fasterxml.jackson.core.JsonParser jsonParser25 = jsonFactory13.createParser(charArray24); com.fasterxml.jackson.core.JsonParser jsonParser28 = jsonFactory10.createParser(charArray24, (-648352352), (int) (byte) 10); bufferRecycler8.releaseCharBuffer(0, charArray24); com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer charsToNameCanonicalizer30 = com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.createRoot(); int int31 = charsToNameCanonicalizer30.bucketCount(); int int32 = charsToNameCanonicalizer30.maxCollisionLength(); com.fasterxml.jackson.core.io.IOContext iOContext34 = new com.fasterxml.jackson.core.io.IOContext(bufferRecycler8, (java.lang.Object) charsToNameCanonicalizer30, true); com.fasterxml.jackson.core.ObjectCodec objectCodec36 = null; java.io.Writer writer37 = null; com.fasterxml.jackson.core.json.WriterBasedJsonGenerator writerBasedJsonGenerator38 = new com.fasterxml.jackson.core.json.WriterBasedJsonGenerator(iOContext34, (-1973091261), objectCodec36, writer37); java.io.Writer writer39 = writerBasedJsonGenerator38._writer; com.fasterxml.jackson.core.JsonGenerator jsonGenerator42 = writerBasedJsonGenerator38.overrideStdFeatures((-648257699), 0); com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes43 = null; writerBasedJsonGenerator38._characterEscapes = characterEscapes43; java.lang.Object obj45 = writerBasedJsonGenerator38.getCurrentValue(); com.fasterxml.jackson.core.util.BufferRecycler bufferRecycler46 = null; com.fasterxml.jackson.core.io.IOContext iOContext49 = new com.fasterxml.jackson.core.io.IOContext(bufferRecycler46, (java.lang.Object) (-1), true); com.fasterxml.jackson.core.JsonEncoding jsonEncoding50 = null; com.fasterxml.jackson.core.io.IOContext iOContext51 = iOContext49.withEncoding(jsonEncoding50); com.fasterxml.jackson.core.JsonEncoding jsonEncoding52 = com.fasterxml.jackson.core.JsonEncoding.UTF32_LE; boolean boolean53 = jsonEncoding52.isBigEndian(); int int54 = jsonEncoding52.bits(); iOContext49.setEncoding(jsonEncoding52); java.io.Reader reader57 = null; com.fasterxml.jackson.core.ObjectCodec objectCodec58 = null; com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer charsToNameCanonicalizer59 = com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.createRoot(); int int61 = charsToNameCanonicalizer59.calcHash("hi!"); com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer charsToNameCanonicalizer63 = charsToNameCanonicalizer59.makeChild((-1)); com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer charsToNameCanonicalizer64 = com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.createRoot(); com.fasterxml.jackson.core.JsonToken jsonToken65 = com.fasterxml.jackson.core.JsonToken.START_ARRAY; char[] charArray66 = jsonToken65.asCharArray(); int int69 = charsToNameCanonicalizer64.calcHash(charArray66, 0, (int) (short) -1); com.fasterxml.jackson.core.json.ReaderBasedJsonParser readerBasedJsonParser73 = new com.fasterxml.jackson.core.json.ReaderBasedJsonParser(iOContext49, 1, reader57, objectCodec58, charsToNameCanonicalizer63, charArray66, 33, (-648315929), false); com.fasterxml.jackson.core.JsonToken jsonToken74 = readerBasedJsonParser73.getLastClearedToken(); readerBasedJsonParser73.overrideCurrentName("-6.4836766E8"); int int77 = readerBasedJsonParser73._hashSeed; char[] charArray78 = readerBasedJsonParser73._inputBuffer; try { writerBasedJsonGenerator38.writeRawValue(charArray78, 0, (-1089803349)); } catch (java.lang.ArrayIndexOutOfBoundsException e) { } }
Code: public JsonGenerator disable(Feature f) { super.disable(f); if (f == Feature.QUOTE_FIELD_NAMES) { _cfgUnqNames = true; } return this; }
tensor([[0.0406, 0.0541, 0.0626, 0.1424, 0.0533, 0.0180, 0.1093, 0.0900, 0.0642,
         0.0398, 0.0533, 0.1053, 0.0255, 0.0279, 0.0171, 0.0446, 0.0349, 0.0171],
        [0.0372, 0.0457, 0.0639, 0.1762, 0.0504, 0.0138, 0.1070, 0.0995, 0.0598,
         0.0364, 0.0504, 0.0994, 0.0272, 0.0259, 0.0147, 0.0445, 0.0334, 0.0147],
        [0.0336, 0.0486, 0.0662, 0.1670, 0.0640, 0.0129, 0.0979, 0.1175, 0.0531,
         0.0242, 0.0640, 0.1022, 0.0237, 0.0255, 0.0130, 0.0499, 0.0238, 0.0130],
        [0.0263, 0.0371, 0.0528, 0.2079, 0.0640, 0.0133, 0.1005, 0.1212, 0.0472,
         0.0258, 0.0640, 0.0942, 0.0241, 0.0268, 0.0137, 0.0462, 0.0214, 0.0137],
        [0.0448, 0.0683, 0.0602, 0.1218, 0.0664, 0.0226, 0.0778, 0.0893, 0.0492,
         0.0330, 0.0664, 0.0935, 0.0370, 0.0322, 0.0243, 0.0522, 0.0367, 0.0243],
        [0.0307, 0.0454, 0.0560, 0.1683, 0.0610, 0.0120, 0.0958, 0.1088, 0.0599,
         0.0295, 0.0610, 0.1090, 0.0289, 0.0295, 0.0134, 0.0453, 0.0321, 0.0134],
        [0.0249, 0.0331, 0.0478, 0.2079, 0.0549, 0.0075, 0.1414, 0.1413, 0.0501,
         0.0262, 0.0549, 0.0971, 0.0197, 0.0231, 0.0083, 0.0330, 0.0205, 0.0083],
        [0.0305, 0.0461, 0.0675, 0.1603, 0.0602, 0.0163, 0.1097, 0.1021, 0.0527,
         0.0302, 0.0602, 0.1067, 0.0228, 0.0271, 0.0168, 0.0438, 0.0302, 0.0168],
        [0.0215, 0.0367, 0.0430, 0.2112, 0.0566, 0.0107, 0.1182, 0.1550, 0.0529,
         0.0271, 0.0566, 0.0828, 0.0223, 0.0224, 0.0115, 0.0354, 0.0244, 0.0115],
        [0.0315, 0.0518, 0.0605, 0.1576, 0.0541, 0.0183, 0.1437, 0.1013, 0.0641,
         0.0341, 0.0541, 0.0821, 0.0236, 0.0275, 0.0138, 0.0416, 0.0264, 0.0138],
        [0.0448, 0.0683, 0.0602, 0.1218, 0.0664, 0.0226, 0.0778, 0.0893, 0.0492,
         0.0330, 0.0664, 0.0935, 0.0370, 0.0322, 0.0243, 0.0522, 0.0367, 0.0243],
        [0.0310, 0.0531, 0.0647, 0.1584, 0.0641, 0.0165, 0.1057, 0.0911, 0.0503,
         0.0313, 0.0641, 0.0988, 0.0247, 0.0304, 0.0162, 0.0497, 0.0338, 0.0162],
        [0.0485, 0.0579, 0.0609, 0.1024, 0.0522, 0.0299, 0.1069, 0.0776, 0.0555,
         0.0415, 0.0522, 0.0944, 0.0395, 0.0341, 0.0232, 0.0528, 0.0474, 0.0232],
        [0.0342, 0.0501, 0.0632, 0.1547, 0.0606, 0.0191, 0.1128, 0.1187, 0.0546,
         0.0333, 0.0606, 0.0823, 0.0250, 0.0319, 0.0131, 0.0440, 0.0286, 0.0131],
        [0.0290, 0.0375, 0.0724, 0.1319, 0.0679, 0.0173, 0.1103, 0.1121, 0.0496,
         0.0316, 0.0679, 0.0908, 0.0255, 0.0385, 0.0149, 0.0614, 0.0265, 0.0149],
        [0.0279, 0.0531, 0.0522, 0.2012, 0.0532, 0.0136, 0.1158, 0.1057, 0.0547,
         0.0303, 0.0532, 0.0946, 0.0272, 0.0222, 0.0147, 0.0407, 0.0251, 0.0147],
        [0.0437, 0.0492, 0.0630, 0.1429, 0.0656, 0.0194, 0.1060, 0.0769, 0.0569,
         0.0287, 0.0656, 0.1045, 0.0258, 0.0356, 0.0181, 0.0532, 0.0268, 0.0181],
        [0.0290, 0.0375, 0.0724, 0.1319, 0.0679, 0.0173, 0.1103, 0.1121, 0.0496,
         0.0316, 0.0679, 0.0908, 0.0255, 0.0385, 0.0149, 0.0614, 0.0265, 0.0149]])