101375
Test: public void test092() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test092"); org.joda.time.Instant instant1 = new org.joda.time.Instant(0L); org.joda.time.DateTimeFieldType dateTimeFieldType2 = null; boolean boolean3 = instant1.isSupported(dateTimeFieldType2); org.joda.time.DateTimeZone dateTimeZone4 = instant1.getZone(); org.joda.time.Instant instant6 = new org.joda.time.Instant(0L); org.joda.time.DateTimeFieldType dateTimeFieldType7 = null; boolean boolean8 = instant6.isSupported(dateTimeFieldType7); org.joda.time.DateTimeZone dateTimeZone9 = instant6.getZone(); long long11 = dateTimeZone4.getMillisKeepLocal(dateTimeZone9, (long) (short) -1); java.lang.String str12 = dateTimeZone9.toString(); boolean boolean14 = dateTimeZone9.isStandardOffset((long) 69); org.joda.time.chrono.JulianChronology julianChronology15 = org.joda.time.chrono.JulianChronology.getInstance(dateTimeZone9); org.joda.time.chrono.GJChronology gJChronology16 = org.joda.time.chrono.GJChronology.getInstanceUTC(); org.joda.time.DateTimeField dateTimeField17 = gJChronology16.weekOfWeekyear(); org.joda.time.DateTimeFieldType dateTimeFieldType18 = dateTimeField17.getType(); org.joda.time.field.SkipDateTimeField skipDateTimeField20 = new org.joda.time.field.SkipDateTimeField((org.joda.time.Chronology) julianChronology15, dateTimeField17, (int) (short) 1); org.joda.time.DateTimeField dateTimeField21 = julianChronology15.dayOfYear(); try { long long29 = julianChronology15.getDateTimeMillis((int) '#', 1969, (int) (short) 100, 100, (int) '#', 0, (int) (byte) 10); } catch (org.joda.time.IllegalFieldValueException e) { } }
Code: public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth, int hourOfDay, int minuteOfHour, int secondOfMinute, int millisOfSecond) throws IllegalArgumentException { Chronology base; if ((base = getBase()) != null) { return base.getDateTimeMillis (year, monthOfYear, dayOfMonth, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond); } long instant; instant = iGregorianChronology.getDateTimeMillis (year, monthOfYear, dayOfMonth, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond); if (instant < iCutoverMillis) { instant = iJulianChronology.getDateTimeMillis (year, monthOfYear, dayOfMonth, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond); if (instant >= iCutoverMillis) { throw new IllegalArgumentException("Specified date does not exist"); } } return instant; }
tensor([[0.0103, 0.0167, 0.0310,  ..., 0.0114, 0.0105, 0.0046],
        [0.0073, 0.0147, 0.0373,  ..., 0.0107, 0.0106, 0.0043],
        [0.0083, 0.0151, 0.0282,  ..., 0.0138, 0.0107, 0.0039],
        ...,
        [0.0072, 0.0197, 0.0354,  ..., 0.0104, 0.0123, 0.0039],
        [0.0088, 0.0151, 0.0294,  ..., 0.0128, 0.0117, 0.0031],
        [0.0077, 0.0124, 0.0263,  ..., 0.0166, 0.0119, 0.0041]])