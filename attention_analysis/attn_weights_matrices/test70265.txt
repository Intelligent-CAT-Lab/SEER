70265
Test: public void test080() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test080"); org.apache.commons.jxpath.ri.compiler.Constant constant1 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant3 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.NameAttributeTest nameAttributeTest4 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest((org.apache.commons.jxpath.ri.compiler.Expression) constant1, (org.apache.commons.jxpath.ri.compiler.Expression) constant3); org.apache.commons.jxpath.ri.EvalContext evalContext5 = null; org.apache.commons.jxpath.ri.compiler.Constant constant7 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant9 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.NameAttributeTest nameAttributeTest10 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest((org.apache.commons.jxpath.ri.compiler.Expression) constant7, (org.apache.commons.jxpath.ri.compiler.Expression) constant9); org.apache.commons.jxpath.ri.compiler.Constant constant12 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant14 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.NameAttributeTest nameAttributeTest15 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest((org.apache.commons.jxpath.ri.compiler.Expression) constant12, (org.apache.commons.jxpath.ri.compiler.Expression) constant14); boolean boolean16 = nameAttributeTest4.equal(evalContext5, (org.apache.commons.jxpath.ri.compiler.Expression) constant7, (org.apache.commons.jxpath.ri.compiler.Expression) nameAttributeTest15); int int17 = nameAttributeTest15.getPrecedence(); int int18 = nameAttributeTest15.getPrecedence(); boolean boolean19 = nameAttributeTest15.computeContextDependent(); }
Code: protected boolean equal(EvalContext context,Expression left,Expression right){Object l = left.compute(context);Object r = right.compute(context);if (l instanceof InitialContext || l instanceof SelfContext) {;}if (r instanceof InitialContext || r instanceof SelfContext) {r = ((EvalContext) r).getSingleNodePointer();}if (l instanceof Collection) {l = ((Collection) l).iterator();}if (r instanceof Collection) {;}if ((l instanceof Iterator) && !(r instanceof Iterator)) {return contains((Iterator) l, r);}if (!(l instanceof Iterator) && (r instanceof Iterator)) {return contains((Iterator) r, l);}if (l instanceof Iterator && r instanceof Iterator) {return findMatch((Iterator) l, (Iterator) r);}return equal(l, r);}
tensor([[0.0173, 0.0302, 0.0153,  ..., 0.0088, 0.0244, 0.0205],
        [0.0175, 0.0371, 0.0162,  ..., 0.0116, 0.0323, 0.0219],
        [0.0195, 0.0281, 0.0153,  ..., 0.0081, 0.0291, 0.0248],
        ...,
        [0.0153, 0.0255, 0.0170,  ..., 0.0113, 0.0271, 0.0217],
        [0.0178, 0.0250, 0.0186,  ..., 0.0119, 0.0305, 0.0200],
        [0.0153, 0.0304, 0.0158,  ..., 0.0102, 0.0279, 0.0183]])