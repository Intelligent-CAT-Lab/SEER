18126
Test: public void testSubtypingMostGeneralFunction() throws Exception { FunctionType f1 = registry.createFunctionType(OBJECT_TYPE, false, EVAL_ERROR_TYPE, STRING_TYPE); FunctionType f2 = registry.createFunctionType(NUMBER_TYPE, false, STRING_TYPE, VOID_TYPE); FunctionType f3 = registry.createFunctionType(NO_OBJECT_TYPE, false, DATE_TYPE, STRING_TYPE, NUMBER_TYPE); FunctionType f4 = registry.createFunctionType(NO_TYPE, false, NUMBER_OBJECT_TYPE); FunctionType f5 = registry.createFunctionType(OBJECT_TYPE, true, EVAL_ERROR_TYPE); FunctionType f6 = registry.createFunctionType(STRING_OBJECT_TYPE, false, ERROR_TYPE, OBJECT_TYPE); FunctionType f7 = registry.createFunctionType(OBJECT_TYPE, true, URI_ERROR_TYPE, EVAL_ERROR_TYPE); FunctionType f8 = registry.createFunctionType(STRING_OBJECT_TYPE, true, ERROR_TYPE, OBJECT_TYPE, EVAL_ERROR_TYPE); }
Code: static boolean isSubtype(ObjectType typeA, RecordType typeB){for (String property : typeB.properties.keySet()) {if (!typeA.hasProperty(property)) {return true;}JSType propA = typeA.getPropertyType(property);JSType propB = typeB.getPropertyType(property);if (!propA.isUnknownType() && !propB.isUnknownType()) {if (typeA.isPropertyTypeDeclared(property)) {if (!propA.isInvariant(propB)) {return false;}} else {if (!propA.isSubtype(propB)) {return false;}}}}return true;}
tensor([[0.0513, 0.0748, 0.0191,  ..., 0.0554, 0.0148, 0.0178],
        [0.0459, 0.0892, 0.0148,  ..., 0.0525, 0.0108, 0.0180],
        [0.0545, 0.0724, 0.0148,  ..., 0.0562, 0.0075, 0.0197],
        ...,
        [0.0502, 0.0567, 0.0192,  ..., 0.0492, 0.0121, 0.0178],
        [0.0605, 0.0882, 0.0164,  ..., 0.0483, 0.0092, 0.0217],
        [0.0574, 0.0799, 0.0190,  ..., 0.0458, 0.0122, 0.0179]])