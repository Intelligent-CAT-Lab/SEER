18022
Test: public void test151() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test151"); com.google.javascript.jscomp.LightweightMessageFormatter lightweightMessageFormatter0 = com.google.javascript.jscomp.LightweightMessageFormatter.withoutSource(); com.google.javascript.jscomp.CheckLevel checkLevel4 = com.google.javascript.jscomp.CheckLevel.WARNING; com.google.javascript.jscomp.DiagnosticType diagnosticType7 = com.google.javascript.jscomp.DiagnosticType.warning("", ""); java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "", ": hi!" }; com.google.javascript.jscomp.JSError jSError15 = com.google.javascript.jscomp.JSError.make(": hi!", (int) (short) 1, (int) (short) 1, checkLevel4, diagnosticType7, strArray14); com.google.javascript.rhino.Node node16 = jSError15.node; boolean boolean18 = jSError15.equals((java.lang.Object) ": hi!"); com.google.javascript.jscomp.CheckLevel checkLevel19 = jSError15.level; java.lang.String str20 = lightweightMessageFormatter0.getLevelName(checkLevel19); com.google.javascript.jscomp.CheckLevel checkLevel24 = com.google.javascript.jscomp.CheckLevel.WARNING; com.google.javascript.jscomp.DiagnosticType diagnosticType27 = com.google.javascript.jscomp.DiagnosticType.warning("", ""); java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "", ": hi!" }; com.google.javascript.jscomp.JSError jSError35 = com.google.javascript.jscomp.JSError.make(": hi!", (int) (short) 1, (int) (short) 1, checkLevel24, diagnosticType27, strArray34); com.google.javascript.rhino.Node node36 = jSError35.node; java.lang.String str37 = lightweightMessageFormatter0.formatError(jSError35); com.google.javascript.jscomp.SourceExcerptProvider sourceExcerptProvider38 = lightweightMessageFormatter0.getSource(); com.google.javascript.jscomp.JSError jSError39 = null; try { java.lang.String str40 = lightweightMessageFormatter0.formatError(jSError39); } catch (java.lang.NullPointerException e) { } }
Code: private String format(JSError error, boolean warning) { SourceExcerptProvider source = getSource(); String sourceExcerpt = source == null ? null : excerpt.get( source, error.sourceName, error.lineNumber, excerptFormatter); StringBuilder b = new StringBuilder(); if (error.sourceName != null) { b.append(error.sourceName); if (error.lineNumber > 0) { b.append(':'); b.append(error.lineNumber); } b.append(": "); } b.append(getLevelName(warning ? CheckLevel.WARNING : CheckLevel.ERROR)); b.append(" - "); b.append(error.description); b.append('\n'); if (sourceExcerpt != null) { b.append(sourceExcerpt); b.append('\n'); int charno = error.getCharno(); if (excerpt.equals(LINE) && 0 <= charno && charno < sourceExcerpt.length()) { for (int i = 0; i < charno; i++) { char c = sourceExcerpt.charAt(i); if (Character.isWhitespace(c)) { b.append(c); } else { b.append(' '); } } b.append("^\n"); } } return b.toString(); }
tensor([[0.0096, 0.0075, 0.0052,  ..., 0.0066, 0.0164, 0.0030],
        [0.0077, 0.0069, 0.0049,  ..., 0.0064, 0.0122, 0.0026],
        [0.0083, 0.0069, 0.0034,  ..., 0.0056, 0.0140, 0.0020],
        ...,
        [0.0086, 0.0075, 0.0035,  ..., 0.0056, 0.0153, 0.0025],
        [0.0090, 0.0081, 0.0033,  ..., 0.0064, 0.0135, 0.0019],
        [0.0072, 0.0082, 0.0042,  ..., 0.0100, 0.0163, 0.0026]])