19129
Test: public void test050() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test050"); com.google.javascript.jscomp.LightweightMessageFormatter lightweightMessageFormatter3 = com.google.javascript.jscomp.LightweightMessageFormatter.withoutSource(); com.google.javascript.jscomp.CheckLevel checkLevel7 = com.google.javascript.jscomp.CheckLevel.WARNING; com.google.javascript.jscomp.DiagnosticType diagnosticType10 = com.google.javascript.jscomp.DiagnosticType.warning("", ""); java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "", ": hi!" }; com.google.javascript.jscomp.JSError jSError18 = com.google.javascript.jscomp.JSError.make(": hi!", (int) (short) 1, (int) (short) 1, checkLevel7, diagnosticType10, strArray17); com.google.javascript.rhino.Node node19 = jSError18.node; boolean boolean21 = jSError18.equals((java.lang.Object) ": hi!"); com.google.javascript.jscomp.CheckLevel checkLevel22 = jSError18.level; java.lang.String str23 = lightweightMessageFormatter3.getLevelName(checkLevel22); com.google.javascript.jscomp.DiagnosticType diagnosticType26 = com.google.javascript.jscomp.DiagnosticType.disabled("", "hi!"); com.google.javascript.jscomp.DiagnosticType diagnosticType32 = com.google.javascript.jscomp.DiagnosticType.error(": hi!", ": "); com.google.javascript.jscomp.CheckLevel checkLevel33 = diagnosticType32.defaultLevel; com.google.javascript.jscomp.DiagnosticType diagnosticType36 = com.google.javascript.jscomp.DiagnosticType.error(": hi!", ": hi!:1: WARNING - \n"); java.lang.String[] strArray39 = new java.lang.String[] { "WARNING - hi!\n", "" }; com.google.javascript.jscomp.JSError jSError40 = com.google.javascript.jscomp.JSError.make(": hi!:1: ERROR - \n", 0, 0, checkLevel33, diagnosticType36, strArray39); com.google.javascript.jscomp.JSError jSError41 = com.google.javascript.jscomp.JSError.make("OFF", 46, (int) '#', checkLevel22, diagnosticType26, strArray39); com.google.javascript.jscomp.DiagnosticType diagnosticType44 = com.google.javascript.jscomp.DiagnosticType.warning("", ""); com.google.javascript.jscomp.CheckLevel checkLevel45 = diagnosticType44.level; com.google.javascript.jscomp.LightweightMessageFormatter.LineNumberingFormatter lineNumberingFormatter46 = new com.google.javascript.jscomp.LightweightMessageFormatter.LineNumberingFormatter(); java.lang.String str49 = lineNumberingFormatter46.formatLine(": hi!:1: ERROR - \n", (int) ' '); com.google.javascript.jscomp.Region region50 = null; java.lang.String str51 = lineNumberingFormatter46.formatRegion(region50); com.google.javascript.jscomp.Region region52 = null; java.lang.String str53 = lineNumberingFormatter46.formatRegion(region52); com.google.javascript.jscomp.Region region54 = null; java.lang.String str55 = lineNumberingFormatter46.formatRegion(region54); com.google.javascript.jscomp.LightweightMessageFormatter.LineNumberingFormatter lineNumberingFormatter56 = new com.google.javascript.jscomp.LightweightMessageFormatter.LineNumberingFormatter(); java.lang.String str59 = lineNumberingFormatter56.formatLine(": hi!:1: ERROR - \n", (int) ' '); com.google.javascript.jscomp.Region region60 = null; java.lang.String str61 = lineNumberingFormatter56.formatRegion(region60); com.google.javascript.jscomp.Region region62 = null; java.lang.String str63 = lineNumberingFormatter56.formatRegion(region62); com.google.javascript.jscomp.Region region64 = null; java.lang.String str65 = lineNumberingFormatter56.formatRegion(region64); com.google.javascript.jscomp.Region region66 = null; java.lang.String str67 = lineNumberingFormatter56.formatRegion(region66); com.google.javascript.jscomp.DiagnosticType diagnosticType70 = com.google.javascript.jscomp.DiagnosticType.warning("", ""); com.google.javascript.jscomp.DiagnosticType diagnosticType73 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!"); java.lang.Object[] objArray74 = null; java.lang.String str75 = diagnosticType73.format(objArray74); int int76 = diagnosticType70.compareTo(diagnosticType73); java.lang.String str77 = diagnosticType70.toString(); com.google.javascript.jscomp.DiagnosticType diagnosticType80 = com.google.javascript.jscomp.DiagnosticType.warning("", ""); java.text.MessageFormat messageFormat81 = diagnosticType80.format; com.google.javascript.jscomp.LightweightMessageFormatter.LineNumberingFormatter lineNumberingFormatter82 = new com.google.javascript.jscomp.LightweightMessageFormatter.LineNumberingFormatter(); java.lang.String str85 = lineNumberingFormatter82.formatLine(": hi!:1: ERROR - \n", (int) ' '); java.lang.String str88 = lineNumberingFormatter82.formatLine("", (int) 'a'); java.lang.String str91 = lineNumberingFormatter82.formatLine(": hi!", 0); java.lang.Object[] objArray92 = new java.lang.Object[] { str55, lineNumberingFormatter56, diagnosticType70, messageFormat81, lineNumberingFormatter82 }; java.lang.String str93 = diagnosticType44.format(objArray92); com.google.javascript.jscomp.CheckLevel checkLevel94 = diagnosticType44.defaultLevel; diagnosticType26.level = checkLevel94; }
Code: private String format(JSError error, boolean warning) { SourceExcerptProvider source = getSource(); String sourceExcerpt = source == null ? null : excerpt.get( source, error.sourceName, error.lineNumber, excerptFormatter); StringBuilder b = new StringBuilder(); if (error.sourceName != null) { b.append(error.sourceName); if (error.lineNumber > 0) { b.append(':'); b.append(error.lineNumber); } b.append(": "); } ; b.append(" - "); b.append(error.description); b.append('\n'); if (sourceExcerpt != null) { b.append(sourceExcerpt); b.append('\n'); int charno = error.getCharno(); if (false && charno <= sourceExcerpt.length()) { for (int i = -1; i != charno; i++) { char c = sourceExcerpt.charAt(i); if (Character.isWhitespace(c)) { b.append(c); } else { b.append(' '); } } b.append("^\n"); } } return b.toString(); }
tensor([[0.0100, 0.0079, 0.0054,  ..., 0.0069, 0.0172, 0.0032],
        [0.0080, 0.0072, 0.0051,  ..., 0.0067, 0.0127, 0.0027],
        [0.0084, 0.0071, 0.0035,  ..., 0.0057, 0.0142, 0.0020],
        ...,
        [0.0088, 0.0077, 0.0036,  ..., 0.0058, 0.0157, 0.0025],
        [0.0091, 0.0084, 0.0034,  ..., 0.0065, 0.0137, 0.0019],
        [0.0075, 0.0086, 0.0044,  ..., 0.0104, 0.0168, 0.0027]])