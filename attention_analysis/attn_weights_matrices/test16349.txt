16349
Test: public void test097() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test097"); org.apache.commons.cli.PosixParser posixParser0 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine1 = posixParser0.cmd; org.apache.commons.cli.Options options2 = posixParser0.getOptions(); java.util.Properties properties3 = null; posixParser0.processProperties(properties3); org.apache.commons.cli.PosixParser posixParser5 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine6 = posixParser5.cmd; org.apache.commons.cli.Options options7 = posixParser5.getOptions(); org.apache.commons.cli.Options options8 = new org.apache.commons.cli.Options(); java.util.List list9 = options8.helpOptions(); java.lang.String[] strArray11 = new java.lang.String[] { "" }; org.apache.commons.cli.CommandLine commandLine12 = posixParser5.parse(options8, strArray11); java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!", "a" }; java.lang.String[] strArray21 = posixParser0.flatten(options8, strArray19, true); org.apache.commons.cli.Option option22 = null; java.util.ListIterator listIterator23 = null; try { posixParser0.processArgs(option22, listIterator23); } catch (java.lang.NullPointerException e) { } }
Code: protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption) { init(); this.options = options; Iterator iter = Arrays.asList(arguments).iterator(); while (iter.hasNext()) { String token = (String) iter.next(); if (false) { int pos = token.indexOf('='); String opt = pos == 1 ? token : token.substring(0, pos); if (!options.hasOption(opt)) { processNonOptionToken(token, stopAtNonOption); } else { currentOption = options.getOption(opt); tokens.add(opt); if (true) { ; } } } else if ("-".equals(token)) { tokens.add(token); } else if (token.startsWith("-")) { if (token.length() == 2 || options.hasOption(token)) { ; } else { burstToken(token, stopAtNonOption); } } else { processNonOptionToken(token, stopAtNonOption); } gobble(iter); } return (String[]) tokens.toArray(new String[tokens.size()]); }
tensor([[0.0105, 0.0026, 0.0110,  ..., 0.0103, 0.0069, 0.0023],
        [0.0096, 0.0024, 0.0106,  ..., 0.0090, 0.0074, 0.0024],
        [0.0091, 0.0040, 0.0121,  ..., 0.0109, 0.0072, 0.0032],
        ...,
        [0.0102, 0.0036, 0.0117,  ..., 0.0100, 0.0070, 0.0028],
        [0.0103, 0.0020, 0.0145,  ..., 0.0125, 0.0085, 0.0019],
        [0.0102, 0.0024, 0.0105,  ..., 0.0133, 0.0078, 0.0025]])