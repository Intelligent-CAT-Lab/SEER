64555
Test: public void test091() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test091"); com.fasterxml.jackson.core.JsonParser jsonParser0 = null; com.fasterxml.jackson.core.filter.TokenFilter tokenFilter1 = com.fasterxml.jackson.core.filter.TokenFilter.INCLUDE_ALL; com.fasterxml.jackson.core.filter.FilteringParserDelegate filteringParserDelegate4 = new com.fasterxml.jackson.core.filter.FilteringParserDelegate(jsonParser0, tokenFilter1, true, false); com.fasterxml.jackson.core.JsonFactory jsonFactory5 = new com.fasterxml.jackson.core.JsonFactory(); com.fasterxml.jackson.core.Version version6 = jsonFactory5.version(); com.fasterxml.jackson.core.JsonParser jsonParser7 = jsonFactory5.createNonBlockingByteArrayParser(); com.fasterxml.jackson.core.util.JsonParserDelegate jsonParserDelegate8 = new com.fasterxml.jackson.core.util.JsonParserDelegate(jsonParser7); com.fasterxml.jackson.core.JsonToken jsonToken9 = jsonParserDelegate8.nextToken(); boolean boolean10 = filteringParserDelegate4.hasToken(jsonToken9); int int11 = filteringParserDelegate4.getMatchCount(); boolean boolean12 = filteringParserDelegate4._includeImmediateParent; com.fasterxml.jackson.core.JsonStreamContext jsonStreamContext13 = filteringParserDelegate4._filterContext(); com.fasterxml.jackson.core.JsonToken jsonToken14 = filteringParserDelegate4.getCurrentToken(); com.fasterxml.jackson.core.JsonFactory jsonFactory15 = new com.fasterxml.jackson.core.JsonFactory(); com.fasterxml.jackson.core.Version version16 = jsonFactory15.version(); com.fasterxml.jackson.core.JsonParser jsonParser17 = jsonFactory15.createNonBlockingByteArrayParser(); com.fasterxml.jackson.core.util.JsonParserDelegate jsonParserDelegate18 = new com.fasterxml.jackson.core.util.JsonParserDelegate(jsonParser17); com.fasterxml.jackson.core.JsonStreamContext jsonStreamContext19 = jsonParserDelegate18.getParsingContext(); boolean boolean20 = jsonParserDelegate18.isClosed(); boolean boolean21 = jsonParserDelegate18.hasTextCharacters(); com.fasterxml.jackson.core.JsonFactory jsonFactory22 = new com.fasterxml.jackson.core.JsonFactory(); com.fasterxml.jackson.core.Version version23 = jsonFactory22.version(); com.fasterxml.jackson.core.JsonParser jsonParser24 = jsonFactory22.createNonBlockingByteArrayParser(); com.fasterxml.jackson.core.util.JsonParserDelegate jsonParserDelegate25 = new com.fasterxml.jackson.core.util.JsonParserDelegate(jsonParser24); com.fasterxml.jackson.core.JsonToken jsonToken26 = jsonParserDelegate25.nextToken(); com.fasterxml.jackson.core.JsonFactory jsonFactory27 = new com.fasterxml.jackson.core.JsonFactory(); com.fasterxml.jackson.core.Version version28 = jsonFactory27.version(); com.fasterxml.jackson.core.JsonParser jsonParser29 = jsonFactory27.createNonBlockingByteArrayParser(); com.fasterxml.jackson.core.util.JsonParserDelegate jsonParserDelegate30 = new com.fasterxml.jackson.core.util.JsonParserDelegate(jsonParser29); com.fasterxml.jackson.core.JsonParser.Feature feature31 = com.fasterxml.jackson.core.JsonParser.Feature.ALLOW_BACKSLASH_ESCAPING_ANY_CHARACTER; com.fasterxml.jackson.core.JsonParser jsonParser32 = jsonParserDelegate30.enable(feature31); java.lang.Object obj33 = jsonParserDelegate30.getObjectId(); com.fasterxml.jackson.core.JsonToken jsonToken34 = jsonParserDelegate30.nextToken(); com.fasterxml.jackson.core.io.JsonEOFException jsonEOFException36 = new com.fasterxml.jackson.core.io.JsonEOFException((com.fasterxml.jackson.core.JsonParser) jsonParserDelegate25, jsonToken34, "hi!"); com.fasterxml.jackson.core.JsonToken jsonToken37 = com.fasterxml.jackson.core.JsonToken.END_ARRAY; boolean boolean38 = jsonParserDelegate25.hasToken(jsonToken37); boolean boolean39 = jsonParserDelegate18.hasToken(jsonToken37); boolean boolean40 = jsonToken37.isScalarValue(); boolean boolean41 = jsonToken37.isNumeric(); boolean boolean42 = filteringParserDelegate4.hasToken(jsonToken37); }
Code: public JsonToken nextToken(){if (!_allowMultipleMatches && (_currToken != null) && (_exposedContext == null)) {if (_currToken.isStructEnd()) {if (_headContext.isStartHandled()) {return (_currToken = null);}} else if (_currToken.isScalarValue()) {if (!_headContext.isStartHandled() && (_itemFilter == TokenFilter.INCLUDE_ALL)) {return (_currToken = null);}}}TokenFilterContext ctxt = _exposedContext;if (ctxt != null) {while (true) {JsonToken t = ctxt.nextTokenToRead();if (t != null) {;return t;}if (ctxt == _headContext) {_exposedContext = null;if (ctxt.inArray()) {t = delegate.getCurrentToken();_currToken = t;return t;}break;}ctxt = _headContext.findChildOf(ctxt);_exposedContext = ctxt;if (ctxt == null) { throw _constructError("Unexpected problem: chain of filtered context broken");}}}JsonToken t = delegate.nextToken();if (t == null) {_currToken = t;return t;}TokenFilter f;switch (t.id()) {case ID_START_ARRAY:f = _itemFilter;if (f == TokenFilter.INCLUDE_ALL) {_headContext = _headContext.createChildArrayContext(f, true);return (_currToken = t);}if (f == null) { delegate.skipChildren();break;}f = _headContext.checkValue(f);if (f == null) {delegate.skipChildren();break;}if (f != TokenFilter.INCLUDE_ALL) {f = f.filterStartArray();}_itemFilter = f;if (f == TokenFilter.INCLUDE_ALL) {_headContext = _headContext.createChildArrayContext(f, true);return (_currToken = t);}_headContext = _headContext.createChildArrayContext(f, false);if (_includePath) {t = _nextTokenWithBuffering(_headContext);if (t != null) {_currToken = t;return t;}}break;case ID_START_OBJECT:f = _itemFilter;if (f == TokenFilter.INCLUDE_ALL) {_headContext = _headContext.createChildObjectContext(f, true);return (_currToken = t);}if (f == null) { delegate.skipChildren();break;}f = _headContext.checkValue(f);if (f == null) {delegate.skipChildren();break;}if (f != TokenFilter.INCLUDE_ALL) {;}_itemFilter = f;if (f == TokenFilter.INCLUDE_ALL) {_headContext = _headContext.createChildObjectContext(f, true);return (_currToken = t);}_headContext = _headContext.createChildObjectContext(f, true);if (_includePath) {t = _nextTokenWithBuffering(_headContext);if (t != null) {_currToken = t;return t;}}break;case ID_END_ARRAY:case ID_END_OBJECT:{boolean returnEnd = _headContext.isStartHandled();f = _headContext.getFilter();if ((f != null) && (f != TokenFilter.INCLUDE_ALL)) {f.filterFinishArray();}_headContext = _headContext.getParent();_itemFilter = _headContext.getFilter();if (returnEnd) {return (_currToken = t);}}break;case ID_FIELD_NAME:{final String name = delegate.getCurrentName();f = _headContext.setFieldName(name);if (f == TokenFilter.INCLUDE_ALL) {_itemFilter = f;if (!_includePath) {if (_includeImmediateParent && !_headContext.isStartHandled()) {t = _headContext.nextTokenToRead(); _exposedContext = _headContext;}}return (_currToken = t);}if (f == null) {delegate.nextToken();delegate.skipChildren();break;}f = f.includeProperty(name);if (f == null) {delegate.nextToken();delegate.skipChildren();break;}_itemFilter = f;if (f == TokenFilter.INCLUDE_ALL) {if (_includePath) {return (_currToken = t);}}if (true) {t = _nextTokenWithBuffering(_headContext);if (t != null) {_currToken = t;return t;}}break;}default: f = _itemFilter;if (f == TokenFilter.INCLUDE_ALL) {return (_currToken = t);}if (f != null) {f = _headContext.checkValue(f);if ((f == TokenFilter.INCLUDE_ALL)|| ((f != null) && f.includeValue(delegate))) {return (_currToken = t);}}break;}return _nextToken2();}
tensor([[0.0022, 0.0034, 0.0039,  ..., 0.0014, 0.0039, 0.0013],
        [0.0016, 0.0029, 0.0033,  ..., 0.0011, 0.0028, 0.0008],
        [0.0021, 0.0034, 0.0040,  ..., 0.0016, 0.0033, 0.0013],
        ...,
        [0.0026, 0.0036, 0.0038,  ..., 0.0022, 0.0036, 0.0016],
        [0.0017, 0.0036, 0.0031,  ..., 0.0014, 0.0029, 0.0010],
        [0.0018, 0.0030, 0.0035,  ..., 0.0014, 0.0025, 0.0010]])