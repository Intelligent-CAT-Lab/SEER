99182
Test: public void shouldFailInRuntimeWhenCallingRealMethodOnInterface() throws Exception { List list = mock(List.class); when(list.get(0)).thenAnswer( new Answer() { public Object answer(InvocationOnMock invocation) throws Throwable { return invocation.callRealMethod(); } } ); try { list.get(0); fail(); } catch (MockitoException e) {} }
Code: public Object callRealMethod() throws Throwable { if (this.getMethod().getDeclaringClass().isInterface()) { new Reporter().cannotCallRealMethodOnInterface(); } return realMethod.invoke(mock, rawArguments); }
[[0.04669856 0.03596614 0.07278068 0.1133792  0.11355756 0.05852205
 0.12549232 0.02340924 0.05852205 0.02381131 0.03176513 0.01907745
 0.05093104 0.13373029 0.07327951 0.01907745]
[0.04116425 0.02937894 0.0574886  0.14580852 0.10449088 0.07439008
 0.13140616 0.01554835 0.07439008 0.01935723 0.0262634  0.01439544
 0.05050522 0.13343346 0.06758405 0.01439544]
[0.04744691 0.04130826 0.06772085 0.10097562 0.10101072 0.06685264
 0.12658735 0.02101631 0.06685264 0.02408221 0.03152281 0.02028928
 0.053818   0.12455694 0.08567015 0.02028928]
[0.02859212 0.02633235 0.05766971 0.14532565 0.09510072 0.06317132
 0.12759861 0.0124663  0.06317132 0.014769   0.02519319 0.01271917
 0.04566175 0.1630032  0.10650647 0.01271917]
[0.03776031 0.03955366 0.06905598 0.11579794 0.08731446 0.0737186
 0.09523579 0.02374095 0.0737186  0.02716819 0.03949961 0.0334566
 0.04934217 0.12260774 0.07857276 0.0334566 ]
[0.05272973 0.03139843 0.07723395 0.0957228  0.09241726 0.07338104
 0.09231534 0.02622945 0.07338104 0.03107178 0.03969566 0.02769217
 0.06217421 0.11478401 0.08208096 0.02769217]
[0.02901416 0.02263435 0.07104062 0.17326692 0.10524441 0.05083945
 0.15979823 0.00875442 0.05083945 0.01080978 0.02259458 0.00819221
 0.03758144 0.14768271 0.09351505 0.00819221]
[0.0377519  0.02939671 0.05551801 0.14257643 0.11249141 0.06217765
 0.1201163  0.017473   0.06217765 0.01818828 0.02915128 0.01917986
 0.05418482 0.15717903 0.06325788 0.01917986]
[0.05272973 0.03139843 0.07723395 0.0957228  0.09241726 0.07338104
 0.09231534 0.02622945 0.07338104 0.03107178 0.03969566 0.02769217
 0.06217421 0.11478401 0.08208096 0.02769217]
[0.03615281 0.02772684 0.08138283 0.13045833 0.1041578  0.06050437
 0.12582031 0.01663765 0.06050437 0.02407251 0.02742999 0.01792193
 0.05072444 0.13399118 0.0845927  0.01792193]
[0.03541207 0.03125335 0.06179747 0.12314627 0.12442849 0.06144451
 0.13267682 0.02052172 0.06144451 0.02209288 0.02844064 0.01851709
 0.055028   0.1295338  0.07574533 0.01851709]
[0.03132716 0.0302425  0.05820508 0.13304713 0.10991706 0.06578843
 0.1176693  0.01326059 0.06578843 0.01747921 0.03780649 0.01486684
 0.06416433 0.14512749 0.08044314 0.01486684]
[0.03137002 0.02940636 0.06752681 0.12362878 0.12153712 0.05678106
 0.13231502 0.01353228 0.05678106 0.01892979 0.02623421 0.0157916
 0.04632488 0.14813152 0.09591793 0.0157916 ]
[0.03889908 0.03194406 0.06035287 0.12232044 0.0962833  0.07101472
 0.12432688 0.01807578 0.07101472 0.01957162 0.02916731 0.01554787
 0.05639275 0.15452555 0.07501517 0.01554787]
[0.03502143 0.03460591 0.07043851 0.14330195 0.11083416 0.04768068
 0.11081286 0.01568049 0.04768068 0.02207433 0.04115735 0.01529253
 0.04721694 0.1580447  0.08486491 0.01529253]
[0.03132716 0.0302425  0.05820508 0.13304713 0.10991706 0.06578843
 0.1176693  0.01326059 0.06578843 0.01747921 0.03780649 0.01486684
 0.06416433 0.14512749 0.08044314 0.01486684]]