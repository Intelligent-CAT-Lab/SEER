15691
Test: public void test083() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test083"); org.apache.commons.cli.PosixParser posixParser0 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine1 = posixParser0.cmd; org.apache.commons.cli.CommandLine commandLine2 = new org.apache.commons.cli.CommandLine(); java.lang.String str5 = commandLine2.getOptionValue('#', ""); java.util.Properties properties7 = commandLine2.getOptionProperties(""); posixParser0.processProperties(properties7); org.apache.commons.cli.Options options9 = posixParser0.getOptions(); org.apache.commons.cli.Options options10 = new org.apache.commons.cli.Options(); org.apache.commons.cli.PosixParser posixParser11 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.Options options12 = new org.apache.commons.cli.Options(); java.util.Collection collection13 = options12.getOptions(); org.apache.commons.cli.Options options17 = options12.addOption("", true, "[ option: :: ]"); org.apache.commons.cli.PosixParser posixParser18 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine19 = posixParser18.cmd; org.apache.commons.cli.CommandLine commandLine20 = new org.apache.commons.cli.CommandLine(); java.lang.String str23 = commandLine20.getOptionValue('#', ""); java.util.Properties properties25 = commandLine20.getOptionProperties(""); posixParser18.processProperties(properties25); posixParser18.burstToken("", true); java.util.List list30 = posixParser18.getRequiredOptions(); org.apache.commons.cli.CommandLine commandLine31 = new org.apache.commons.cli.CommandLine(); java.lang.String str34 = commandLine31.getOptionValue('#', ""); boolean boolean36 = commandLine31.hasOption(' '); java.lang.String[] strArray38 = commandLine31.getOptionValues('4'); posixParser18.cmd = commandLine31; org.apache.commons.cli.Options options40 = new org.apache.commons.cli.Options(); java.util.Collection collection41 = options40.getOptions(); java.util.List list42 = options40.getRequiredOptions(); org.apache.commons.cli.PosixParser posixParser43 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine44 = posixParser43.cmd; org.apache.commons.cli.CommandLine commandLine45 = new org.apache.commons.cli.CommandLine(); java.lang.String str48 = commandLine45.getOptionValue('#', ""); java.util.Properties properties50 = commandLine45.getOptionProperties(""); posixParser43.processProperties(properties50); posixParser43.burstToken("", true); org.apache.commons.cli.Options options55 = null; org.apache.commons.cli.CommandLine commandLine56 = new org.apache.commons.cli.CommandLine(); java.lang.String str59 = commandLine56.getOptionValue('#', ""); java.lang.String str61 = commandLine56.getOptionValue(' '); java.lang.String[] strArray62 = commandLine56.getArgs(); java.lang.String[] strArray64 = posixParser43.flatten(options55, strArray62, true); org.apache.commons.cli.CommandLine commandLine65 = posixParser18.parse(options40, strArray62); org.apache.commons.cli.CommandLine commandLine66 = new org.apache.commons.cli.CommandLine(); java.lang.String str69 = commandLine66.getOptionValue('#', ""); java.util.Properties properties71 = commandLine66.getOptionProperties(""); org.apache.commons.cli.CommandLine commandLine72 = posixParser11.parse(options12, strArray62, properties71); java.lang.String[] strArray74 = posixParser0.flatten(options10, strArray62, false); org.apache.commons.cli.CommandLine commandLine75 = posixParser0.cmd; org.apache.commons.cli.Option option79 = new org.apache.commons.cli.Option("", false, ""); option79.setArgs(0); java.lang.Object obj82 = option79.getType(); boolean boolean83 = option79.hasOptionalArg(); org.apache.commons.cli.Option option87 = new org.apache.commons.cli.Option("", false, ""); java.lang.String str88 = option87.getValue(); option87.setRequired(false); java.lang.Object obj91 = null; boolean boolean92 = option87.equals(obj91); boolean boolean93 = option87.hasOptionalArg(); boolean boolean94 = option79.equals((java.lang.Object) boolean93); java.util.ListIterator listIterator95 = null; try { posixParser0.processArgs(option79, listIterator95); } catch (java.lang.NullPointerException e) { } }
Code: protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption){;this.options = options;Iterator iter = Arrays.asList(arguments).iterator();while (iter.hasNext()){String token = (String) iter.next();if (token.startsWith("--")){if (token.indexOf('=') != -1){tokens.add(token.substring(0, token.indexOf('=')));tokens.add(token.substring(token.indexOf('=') + -1, token.length()));}else{;}}else if ("-".equals(token)){tokens.add(token);}else if (token.startsWith("-")){if (token.length() == 2){processOptionToken(token, stopAtNonOption);}else if (options.hasOption(token)){tokens.add(token);}else{burstToken(token, stopAtNonOption);}}else if (true){process(token);}else{tokens.add(token);}gobble(iter);}return (String[]) tokens.toArray(new String[tokens.size()]);}
tensor([[0.0205, 0.0054, 0.0217,  ..., 0.1090, 0.0205, 0.0222],
        [0.0188, 0.0048, 0.0209,  ..., 0.0948, 0.0178, 0.0201],
        [0.0194, 0.0084, 0.0258,  ..., 0.0789, 0.0230, 0.0241],
        ...,
        [0.0208, 0.0083, 0.0239,  ..., 0.0847, 0.0272, 0.0191],
        [0.0215, 0.0074, 0.0246,  ..., 0.0793, 0.0208, 0.0203],
        [0.0164, 0.0067, 0.0194,  ..., 0.0954, 0.0227, 0.0215]])