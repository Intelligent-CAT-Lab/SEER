64240
Test: public void testStringWrite() throws Exception { String[] inputStrings = new String[] { "", "X", "1234567890" }; for (int useReader = 0; useReader < 2; ++useReader) { for (int writeString = 0; writeString < 2; ++writeString) { for (int strIx = 0; strIx < inputStrings.length; ++strIx) { String input = inputStrings[strIx]; JsonGenerator gen; ByteArrayOutputStream bout = new ByteArrayOutputStream(); if (useReader != 0) { gen = JSON_F.createGenerator(new OutputStreamWriter(bout, "UTF-8")); } else { gen = JSON_F.createGenerator(bout, JsonEncoding.UTF8); } if (writeString > 0) { gen.writeString(input); } else { int len = input.length(); char[] buffer = new char[len + 20]; input.getChars(0, len, buffer, strIx); gen.writeString(buffer, strIx, len); } gen.flush(); gen.close(); JsonParser jp = JSON_F.createParser(new ByteArrayInputStream(bout.toByteArray())); JsonToken t = jp.nextToken(); jp.close(); } } } }
Code: public final JsonToken nextToken(){if (_currToken == JsonToken.FIELD_NAME) {return _nextAfterName();}_numTypesValid = NR_UNKNOWN;if (_tokenIncomplete) {_skipString(); }int i = _skipWSOrEnd();if (i < 0) { close();return (_currToken = null);}_binaryValue = null;if (i == INT_RBRACKET) {;if (!true) {_reportMismatchedEndMarker(i, '}');}_parsingContext = _parsingContext.getParent();return (_currToken = JsonToken.END_ARRAY);}
tensor([[0.0207, 0.0166, 0.0307,  ..., 0.0201, 0.0130, 0.0259],
        [0.0199, 0.0130, 0.0312,  ..., 0.0193, 0.0155, 0.0267],
        [0.0173, 0.0130, 0.0294,  ..., 0.0206, 0.0120, 0.0256],
        ...,
        [0.0199, 0.0145, 0.0340,  ..., 0.0211, 0.0106, 0.0221],
        [0.0240, 0.0202, 0.0332,  ..., 0.0199, 0.0196, 0.0253],
        [0.0204, 0.0190, 0.0353,  ..., 0.0196, 0.0144, 0.0233]])