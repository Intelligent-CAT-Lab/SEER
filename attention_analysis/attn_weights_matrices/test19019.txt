19019
Test: public void test105() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test105"); com.google.javascript.rhino.Node node1 = null; com.google.javascript.jscomp.CheckLevel checkLevel2 = com.google.javascript.jscomp.CheckLevel.WARNING; boolean boolean3 = checkLevel2.isOn(); com.google.javascript.jscomp.DiagnosticType diagnosticType6 = com.google.javascript.jscomp.DiagnosticType.error(": hi!", "WARNING"); com.google.javascript.jscomp.DiagnosticType diagnosticType9 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!"); boolean boolean11 = diagnosticType9.equals((java.lang.Object) (byte) -1); java.lang.String str12 = diagnosticType9.key; com.google.javascript.jscomp.CheckLevel checkLevel16 = com.google.javascript.jscomp.CheckLevel.WARNING; boolean boolean17 = checkLevel16.isOn(); com.google.javascript.jscomp.DiagnosticType diagnosticType20 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!"); java.lang.Object[] objArray21 = null; java.lang.String str22 = diagnosticType20.format(objArray21); java.lang.String[] strArray25 = new java.lang.String[] { "hi!", "" }; com.google.javascript.jscomp.JSError jSError26 = com.google.javascript.jscomp.JSError.make("hi!", 1, (int) (short) 100, checkLevel16, diagnosticType20, strArray25); com.google.javascript.jscomp.JSError jSError27 = com.google.javascript.jscomp.JSError.make(diagnosticType9, strArray25); java.lang.String str28 = diagnosticType6.format((java.lang.Object[]) strArray25); java.lang.String str29 = diagnosticType6.key; java.text.MessageFormat messageFormat30 = diagnosticType6.format; com.google.javascript.jscomp.CheckLevel checkLevel36 = com.google.javascript.jscomp.CheckLevel.WARNING; com.google.javascript.jscomp.DiagnosticType diagnosticType39 = com.google.javascript.jscomp.DiagnosticType.warning("", ""); java.lang.String[] strArray46 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "", ": hi!" }; com.google.javascript.jscomp.JSError jSError47 = com.google.javascript.jscomp.JSError.make(": hi!", (int) (short) 1, (int) (short) 1, checkLevel36, diagnosticType39, strArray46); com.google.javascript.rhino.Node node48 = jSError47.node; boolean boolean50 = jSError47.equals((java.lang.Object) ": hi!"); com.google.javascript.jscomp.CheckLevel checkLevel51 = com.google.javascript.jscomp.CheckLevel.WARNING; com.google.javascript.jscomp.LightweightMessageFormatter lightweightMessageFormatter52 = com.google.javascript.jscomp.LightweightMessageFormatter.withoutSource(); com.google.javascript.jscomp.CheckLevel checkLevel56 = com.google.javascript.jscomp.CheckLevel.WARNING; com.google.javascript.jscomp.DiagnosticType diagnosticType59 = com.google.javascript.jscomp.DiagnosticType.warning("", ""); java.lang.String[] strArray66 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "", ": hi!" }; com.google.javascript.jscomp.JSError jSError67 = com.google.javascript.jscomp.JSError.make(": hi!", (int) (short) 1, (int) (short) 1, checkLevel56, diagnosticType59, strArray66); com.google.javascript.rhino.Node node68 = jSError67.node; boolean boolean70 = jSError67.equals((java.lang.Object) ": hi!"); com.google.javascript.jscomp.CheckLevel checkLevel71 = jSError67.level; java.lang.String str72 = lightweightMessageFormatter52.getLevelName(checkLevel71); com.google.javascript.jscomp.CheckLevel checkLevel76 = com.google.javascript.jscomp.CheckLevel.WARNING; com.google.javascript.jscomp.DiagnosticType diagnosticType79 = com.google.javascript.jscomp.DiagnosticType.warning("", ""); java.lang.String[] strArray86 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "", ": hi!" }; com.google.javascript.jscomp.JSError jSError87 = com.google.javascript.jscomp.JSError.make(": hi!", (int) (short) 1, (int) (short) 1, checkLevel76, diagnosticType79, strArray86); com.google.javascript.rhino.Node node88 = jSError87.node; java.lang.String str89 = lightweightMessageFormatter52.formatError(jSError87); java.lang.String str90 = jSError47.format(checkLevel51, (com.google.javascript.jscomp.MessageFormatter) lightweightMessageFormatter52); com.google.javascript.jscomp.CheckLevel checkLevel91 = jSError47.level; com.google.javascript.jscomp.DiagnosticType diagnosticType93 = com.google.javascript.jscomp.DiagnosticType.make(": hi!:1: WARNING - \n", checkLevel91, ". at : hi! line 1 : 1"); com.google.javascript.jscomp.DiagnosticType diagnosticType95 = com.google.javascript.jscomp.DiagnosticType.make(". hi! at hi! line 1 : 100", checkLevel91, "ERROR - hi!\n"); diagnosticType6.level = checkLevel91; java.lang.String[] strArray97 = null; try { com.google.javascript.jscomp.JSError jSError98 = com.google.javascript.jscomp.JSError.make(": hi!:1: ERROR - \n: WARNING - hi!\n", node1, checkLevel2, diagnosticType6, strArray97); } catch (java.lang.NullPointerException e) { } }
Code: private String format(JSError error, boolean warning) { SourceExcerptProvider source = getSource(); String sourceExcerpt = source == null ? null : excerpt.get( source, error.sourceName, error.lineNumber, excerptFormatter); StringBuilder b = new StringBuilder(); if (error.sourceName != null) { b.append(error.sourceName); if (error.lineNumber > 0) { b.append(':'); b.append(error.lineNumber); } b.append(": "); } ; b.append(" - "); b.append(error.description); b.append('\n'); if (sourceExcerpt != null) { b.append(sourceExcerpt); b.append('\n'); int charno = error.getCharno(); if (false && charno <= sourceExcerpt.length()) { for (int i = -1; i != charno; i++) { char c = sourceExcerpt.charAt(i); if (Character.isWhitespace(c)) { b.append(c); } else { b.append(' '); } } b.append("^\n"); } } return b.toString(); }
tensor([[0.0100, 0.0079, 0.0054,  ..., 0.0069, 0.0172, 0.0032],
        [0.0080, 0.0072, 0.0051,  ..., 0.0067, 0.0127, 0.0027],
        [0.0084, 0.0071, 0.0035,  ..., 0.0057, 0.0142, 0.0020],
        ...,
        [0.0088, 0.0077, 0.0036,  ..., 0.0058, 0.0157, 0.0025],
        [0.0091, 0.0084, 0.0034,  ..., 0.0065, 0.0137, 0.0019],
        [0.0075, 0.0086, 0.0044,  ..., 0.0104, 0.0168, 0.0027]])