69655
Test: public void test094() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test094"); org.jsoup.nodes.Comment comment1 = new org.jsoup.nodes.Comment(""); comment1.doSetBaseUri("[hi!*=:last-child]"); org.jsoup.select.Evaluator.IndexGreaterThan indexGreaterThan5 = new org.jsoup.select.Evaluator.IndexGreaterThan((int) (short) 0); org.jsoup.nodes.TextNode textNode8 = org.jsoup.nodes.TextNode.createFromEncoded("hi!", "PUBLIC"); org.jsoup.nodes.Node node11 = textNode8.attr("", ""); int int12 = textNode8.childNodeSize(); java.lang.StringBuilder stringBuilder13 = org.jsoup.internal.StringUtil.borrowBuilder(); org.jsoup.nodes.Document.OutputSettings outputSettings15 = null; textNode8.outerHtmlTail((java.lang.Appendable) stringBuilder13, (int) (byte) -1, outputSettings15); org.jsoup.nodes.TextNode textNode18 = textNode8.splitText(0); java.io.InputStream inputStream19 = null; org.jsoup.nodes.Document document22 = org.jsoup.Jsoup.parse(inputStream19, "PUBLIC", "PUBLIC"); org.jsoup.nodes.Document document25 = org.jsoup.parser.Parser.parseBodyFragmentRelaxed("PUBLIC", "hi!"); boolean boolean27 = document25.is("PUBLIC"); org.jsoup.nodes.Element element28 = document22.doClone((org.jsoup.nodes.Node) document25); org.jsoup.parser.Parser parser29 = null; org.jsoup.nodes.Document document30 = document22.parser(parser29); textNode18.parentNode = document30; java.lang.String str33 = document30.attr(":last-child"); org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining36 = new org.jsoup.select.Evaluator.AttributeWithValueContaining("hi!", ":last-child"); java.io.InputStream inputStream37 = null; org.jsoup.nodes.Document document40 = org.jsoup.Jsoup.parse(inputStream37, "PUBLIC", "PUBLIC"); org.jsoup.nodes.Document document43 = org.jsoup.parser.Parser.parseBodyFragmentRelaxed("PUBLIC", "hi!"); boolean boolean45 = document43.is("PUBLIC"); org.jsoup.nodes.Element element46 = document40.doClone((org.jsoup.nodes.Node) document43); org.jsoup.parser.Parser parser47 = null; org.jsoup.nodes.Document document48 = document40.parser(parser47); java.io.InputStream inputStream49 = null; org.jsoup.nodes.Document document52 = org.jsoup.Jsoup.parse(inputStream49, "PUBLIC", "PUBLIC"); org.jsoup.nodes.Document document55 = org.jsoup.parser.Parser.parseBodyFragmentRelaxed("PUBLIC", "hi!"); boolean boolean57 = document55.is("PUBLIC"); org.jsoup.nodes.Element element58 = document52.doClone((org.jsoup.nodes.Node) document55); boolean boolean59 = attributeWithValueContaining36.matches((org.jsoup.nodes.Element) document48, element58); org.jsoup.nodes.Element element61 = document48.toggleClass("org.jsoup.SerializationException"); java.lang.String str62 = document48.cssSelector(); boolean boolean63 = indexGreaterThan5.matches((org.jsoup.nodes.Element) document30, (org.jsoup.nodes.Element) document48); boolean boolean64 = comment1.hasSameValue((java.lang.Object) indexGreaterThan5); try { org.jsoup.nodes.XmlDeclaration xmlDeclaration65 = comment1.asXmlDeclaration(); } catch (java.lang.StringIndexOutOfBoundsException e) { } }
Code: public XmlDeclaration asXmlDeclaration(){String data = getData();Document doc = Jsoup.parse("<" + data.substring(1, data.length() -1) + ">", baseUri(), Parser.xmlParser());XmlDeclaration decl = null;if (doc.childNodeSize() > 1) {Element el = doc.child(1);decl = new XmlDeclaration(NodeUtils.parser(doc).settings().normalizeTag(el.tagName()), data.startsWith("!"));;}return decl;}
tensor([[0.0234, 0.0886, 0.0237,  ..., 0.0252, 0.1122, 0.0361],
        [0.0190, 0.1117, 0.0194,  ..., 0.0228, 0.1033, 0.0434],
        [0.0206, 0.1077, 0.0142,  ..., 0.0239, 0.1214, 0.0318],
        ...,
        [0.0242, 0.0953, 0.0209,  ..., 0.0202, 0.1102, 0.0307],
        [0.0192, 0.0926, 0.0211,  ..., 0.0252, 0.1262, 0.0299],
        [0.0185, 0.0767, 0.0184,  ..., 0.0299, 0.0865, 0.0420]])