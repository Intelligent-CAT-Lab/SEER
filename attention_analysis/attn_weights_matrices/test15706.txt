15706
Test: public void test177() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test177"); org.apache.commons.cli.PosixParser posixParser0 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine1 = posixParser0.cmd; org.apache.commons.cli.CommandLine commandLine2 = new org.apache.commons.cli.CommandLine(); java.lang.String str5 = commandLine2.getOptionValue('#', ""); java.util.Properties properties7 = commandLine2.getOptionProperties(""); posixParser0.processProperties(properties7); org.apache.commons.cli.Options options9 = new org.apache.commons.cli.Options(); java.util.Collection collection10 = options9.getOptions(); java.util.List list11 = options9.getRequiredOptions(); org.apache.commons.cli.Options options15 = options9.addOption("", false, ""); org.apache.commons.cli.Option option19 = new org.apache.commons.cli.Option("", false, ""); boolean boolean20 = option19.hasOptionalArg(); org.apache.commons.cli.MissingOptionException missingOptionException22 = new org.apache.commons.cli.MissingOptionException(""); org.apache.commons.cli.MissingOptionException missingOptionException24 = new org.apache.commons.cli.MissingOptionException(""); missingOptionException22.addSuppressed((java.lang.Throwable) missingOptionException24); boolean boolean26 = option19.equals((java.lang.Object) missingOptionException24); java.util.List list27 = option19.getValuesList(); java.lang.String str29 = option19.getValue("org.apache.commons.cli.MissingOptionException: hi!"); org.apache.commons.cli.Options options30 = options15.addOption(option19); org.apache.commons.cli.PosixParser posixParser31 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine32 = posixParser31.cmd; org.apache.commons.cli.CommandLine commandLine33 = new org.apache.commons.cli.CommandLine(); java.lang.String str36 = commandLine33.getOptionValue('#', ""); java.util.Properties properties38 = commandLine33.getOptionProperties(""); posixParser31.processProperties(properties38); posixParser31.burstToken("", true); org.apache.commons.cli.Options options43 = null; org.apache.commons.cli.CommandLine commandLine44 = new org.apache.commons.cli.CommandLine(); java.lang.String str47 = commandLine44.getOptionValue('#', ""); java.lang.String str49 = commandLine44.getOptionValue(' '); java.lang.String[] strArray50 = commandLine44.getArgs(); java.lang.String[] strArray52 = posixParser31.flatten(options43, strArray50, true); org.apache.commons.cli.Options options53 = new org.apache.commons.cli.Options(); org.apache.commons.cli.Option option55 = options53.getOption("arg"); org.apache.commons.cli.PosixParser posixParser56 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine57 = posixParser56.cmd; org.apache.commons.cli.CommandLine commandLine58 = new org.apache.commons.cli.CommandLine(); java.lang.String str61 = commandLine58.getOptionValue('#', ""); java.util.Properties properties63 = commandLine58.getOptionProperties(""); posixParser56.processProperties(properties63); posixParser56.burstToken("", true); org.apache.commons.cli.Options options68 = null; org.apache.commons.cli.CommandLine commandLine69 = new org.apache.commons.cli.CommandLine(); java.lang.String str72 = commandLine69.getOptionValue('#', ""); java.lang.String str74 = commandLine69.getOptionValue(' '); java.lang.String[] strArray75 = commandLine69.getArgs(); java.lang.String[] strArray77 = posixParser56.flatten(options68, strArray75, true); org.apache.commons.cli.CommandLine commandLine79 = posixParser31.parse(options53, strArray77, true); java.lang.String[] strArray81 = posixParser0.flatten(options30, strArray77, false); org.apache.commons.cli.CommandLine commandLine82 = new org.apache.commons.cli.CommandLine(); java.lang.String str85 = commandLine82.getOptionValue('#', ""); java.lang.String str87 = commandLine82.getOptionValue(' '); java.lang.String[] strArray88 = commandLine82.getArgs(); org.apache.commons.cli.Option option91 = new org.apache.commons.cli.Option("", "hi!"); commandLine82.addOption(option91); org.apache.commons.cli.OptionGroup optionGroup93 = options30.getOptionGroup(option91); }
Code: protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption){;this.options = options;Iterator iter = Arrays.asList(arguments).iterator();while (iter.hasNext()){String token = (String) iter.next();if (token.startsWith("--")){if (token.indexOf('=') != 1){tokens.add(token.substring(0, token.indexOf('=')));tokens.add(token.substring(token.indexOf('=') + 1, token.length()));}else{;}}else if ("-".equals(token)){tokens.add(token);}else if (token.startsWith("-")){if (token.length() == 2){processOptionToken(token, stopAtNonOption);}else if (options.hasOption(token)){tokens.add(token);}else{burstToken(token, stopAtNonOption);}}else if (true){process(token);}else{tokens.add(token);}gobble(iter);}return (String[]) tokens.toArray(new String[tokens.size()]);}
tensor([[0.0197, 0.0054, 0.0209,  ..., 0.1048, 0.0201, 0.0217],
        [0.0181, 0.0049, 0.0201,  ..., 0.0916, 0.0176, 0.0199],
        [0.0185, 0.0084, 0.0246,  ..., 0.0760, 0.0224, 0.0233],
        ...,
        [0.0202, 0.0083, 0.0232,  ..., 0.0826, 0.0268, 0.0189],
        [0.0208, 0.0075, 0.0237,  ..., 0.0776, 0.0205, 0.0199],
        [0.0157, 0.0068, 0.0188,  ..., 0.0926, 0.0224, 0.0210]])