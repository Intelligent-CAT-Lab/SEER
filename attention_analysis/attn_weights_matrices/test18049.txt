18049
Test: public void test201() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test201"); com.google.javascript.rhino.ErrorReporter errorReporter0 = null; com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0); com.google.javascript.rhino.jstype.NoType noType2 = new com.google.javascript.rhino.jstype.NoType(jSTypeRegistry1); com.google.javascript.rhino.ErrorReporter errorReporter3 = null; com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry4 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter3); com.google.javascript.rhino.jstype.NoType noType5 = new com.google.javascript.rhino.jstype.NoType(jSTypeRegistry4); java.lang.String str6 = noType5.toString(); com.google.javascript.rhino.JSDocInfo jSDocInfo8 = new com.google.javascript.rhino.JSDocInfo(); noType5.setPropertyJSDocInfo("", jSDocInfo8, false); boolean boolean11 = noType2.hasEqualCallType((com.google.javascript.rhino.jstype.FunctionType) noType5); com.google.javascript.rhino.jstype.JSType jSType13 = noType5.getPropertyType(""); com.google.javascript.rhino.jstype.ObjectType objectType14 = noType5.getImplicitPrototype(); boolean boolean15 = noType5.canBeCalled(); com.google.javascript.rhino.JSDocInfo jSDocInfo17 = new com.google.javascript.rhino.JSDocInfo(); java.lang.String str19 = jSDocInfo17.getDescriptionForParameter("error reporter"); com.google.javascript.rhino.JSDocInfo.Visibility visibility20 = jSDocInfo17.getVisibility(); boolean boolean21 = jSDocInfo17.hasThisType(); noType5.setPropertyJSDocInfo("hi!", jSDocInfo17, false); int int24 = noType5.getMaxArguments(); }
Code: public JSType getPropertyType(String name) { if ("prototype".equals(name)) { return getPrototype(); } else { if (!hasOwnProperty(name)) { if ("call".equals(name)) { Node params = getParametersNode(); if (params == null) { defineDeclaredProperty(name, new FunctionType(registry, null, null, null, getReturnType()), false); } else { params = params.cloneTree(); Node thisTypeNode = Node.newString(Token.NAME, "thisType"); thisTypeNode.setJSType( registry.createOptionalNullableType(getTypeOfThis())); params.addChildToFront(thisTypeNode); thisTypeNode.setOptionalArg(true); defineDeclaredProperty(name, new FunctionType(registry, null, null, params, getReturnType()), false); } } else if ("apply".equals(name)) { FunctionParamBuilder builder = new FunctionParamBuilder(registry); builder.addOptionalParams( registry.createNullableType(getTypeOfThis()), registry.createNullableType( registry.getNativeType(JSTypeNative.OBJECT_TYPE))); defineDeclaredProperty(name, new FunctionType(registry, null, null, builder.build(), getReturnType()), false); } } return super.getPropertyType(name); } }
tensor([[0.0066, 0.0167, 0.0063,  ..., 0.0091, 0.0028, 0.0028],
        [0.0045, 0.0206, 0.0075,  ..., 0.0067, 0.0023, 0.0023],
        [0.0061, 0.0171, 0.0083,  ..., 0.0089, 0.0028, 0.0028],
        ...,
        [0.0068, 0.0138, 0.0066,  ..., 0.0093, 0.0035, 0.0035],
        [0.0049, 0.0176, 0.0068,  ..., 0.0078, 0.0024, 0.0024],
        [0.0049, 0.0176, 0.0068,  ..., 0.0078, 0.0024, 0.0024]])