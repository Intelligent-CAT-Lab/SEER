70261
Test: public void test112() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test112"); org.apache.commons.jxpath.ri.compiler.Constant constant1 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant3 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant5 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.NameAttributeTest nameAttributeTest6 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest((org.apache.commons.jxpath.ri.compiler.Expression) constant3, (org.apache.commons.jxpath.ri.compiler.Expression) constant5); org.apache.commons.jxpath.ri.compiler.CoreOperationEqual coreOperationEqual7 = new org.apache.commons.jxpath.ri.compiler.CoreOperationEqual((org.apache.commons.jxpath.ri.compiler.Expression) constant1, (org.apache.commons.jxpath.ri.compiler.Expression) nameAttributeTest6); boolean boolean8 = nameAttributeTest6.isContextDependent(); org.apache.commons.jxpath.ri.compiler.Constant constant10 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant12 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.NameAttributeTest nameAttributeTest13 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest((org.apache.commons.jxpath.ri.compiler.Expression) constant10, (org.apache.commons.jxpath.ri.compiler.Expression) constant12); org.apache.commons.jxpath.ri.EvalContext evalContext14 = null; org.apache.commons.jxpath.ri.compiler.Constant constant16 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant18 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.NameAttributeTest nameAttributeTest19 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest((org.apache.commons.jxpath.ri.compiler.Expression) constant16, (org.apache.commons.jxpath.ri.compiler.Expression) constant18); org.apache.commons.jxpath.ri.compiler.Constant constant21 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant23 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.NameAttributeTest nameAttributeTest24 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest((org.apache.commons.jxpath.ri.compiler.Expression) constant21, (org.apache.commons.jxpath.ri.compiler.Expression) constant23); boolean boolean25 = nameAttributeTest13.equal(evalContext14, (org.apache.commons.jxpath.ri.compiler.Expression) constant16, (org.apache.commons.jxpath.ri.compiler.Expression) nameAttributeTest24); org.apache.commons.jxpath.ri.compiler.Constant constant27 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant29 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant31 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.NameAttributeTest nameAttributeTest32 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest((org.apache.commons.jxpath.ri.compiler.Expression) constant29, (org.apache.commons.jxpath.ri.compiler.Expression) constant31); org.apache.commons.jxpath.ri.compiler.CoreOperationEqual coreOperationEqual33 = new org.apache.commons.jxpath.ri.compiler.CoreOperationEqual((org.apache.commons.jxpath.ri.compiler.Expression) constant27, (org.apache.commons.jxpath.ri.compiler.Expression) nameAttributeTest32); org.apache.commons.jxpath.ri.compiler.Constant constant35 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant37 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant39 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.NameAttributeTest nameAttributeTest40 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest((org.apache.commons.jxpath.ri.compiler.Expression) constant37, (org.apache.commons.jxpath.ri.compiler.Expression) constant39); org.apache.commons.jxpath.ri.compiler.CoreOperationEqual coreOperationEqual41 = new org.apache.commons.jxpath.ri.compiler.CoreOperationEqual((org.apache.commons.jxpath.ri.compiler.Expression) constant35, (org.apache.commons.jxpath.ri.compiler.Expression) nameAttributeTest40); boolean boolean42 = org.apache.commons.jxpath.util.ValueUtils.isCollection((java.lang.Object) constant35); org.apache.commons.jxpath.ri.compiler.Expression[] expressionArray43 = new org.apache.commons.jxpath.ri.compiler.Expression[] { nameAttributeTest24, constant27, constant35 }; nameAttributeTest6.args = expressionArray43; org.apache.commons.jxpath.ri.EvalContext evalContext45 = null; org.apache.commons.jxpath.ri.compiler.NodeTest nodeTest46 = null; org.apache.commons.jxpath.ri.axes.SelfContext selfContext47 = new org.apache.commons.jxpath.ri.axes.SelfContext(evalContext45, nodeTest46); int int48 = selfContext47.getCurrentPosition(); org.apache.commons.jxpath.ri.compiler.Constant constant50 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant52 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.NameAttributeTest nameAttributeTest53 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest((org.apache.commons.jxpath.ri.compiler.Expression) constant50, (org.apache.commons.jxpath.ri.compiler.Expression) constant52); org.apache.commons.jxpath.ri.EvalContext evalContext54 = null; org.apache.commons.jxpath.ri.compiler.NodeTest nodeTest55 = null; org.apache.commons.jxpath.ri.axes.SelfContext selfContext56 = new org.apache.commons.jxpath.ri.axes.SelfContext(evalContext54, nodeTest55); java.lang.Object obj57 = constant50.computeValue(evalContext54); org.apache.commons.jxpath.ri.compiler.Constant constant59 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant61 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant63 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.NameAttributeTest nameAttributeTest64 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest((org.apache.commons.jxpath.ri.compiler.Expression) constant61, (org.apache.commons.jxpath.ri.compiler.Expression) constant63); org.apache.commons.jxpath.ri.compiler.CoreOperationEqual coreOperationEqual65 = new org.apache.commons.jxpath.ri.compiler.CoreOperationEqual((org.apache.commons.jxpath.ri.compiler.Expression) constant59, (org.apache.commons.jxpath.ri.compiler.Expression) nameAttributeTest64); boolean boolean66 = nameAttributeTest6.equal((org.apache.commons.jxpath.ri.EvalContext) selfContext47, (org.apache.commons.jxpath.ri.compiler.Expression) constant50, (org.apache.commons.jxpath.ri.compiler.Expression) nameAttributeTest64); boolean boolean67 = nameAttributeTest6.isSymmetric(); org.apache.commons.jxpath.ri.compiler.Expression expression68 = nameAttributeTest6.getNameTestExpression(); }
Code: protected boolean equal(EvalContext context,Expression left,Expression right){Object l = left.compute(context);Object r = right.compute(context);if (l instanceof InitialContext || l instanceof SelfContext) {;}if (r instanceof InitialContext || r instanceof SelfContext) {;}if (l instanceof Collection) {l = ((Collection) l).iterator();}if (r instanceof Collection) {r = ((Collection) r).iterator();}if ((l instanceof Iterator) && !(r instanceof Iterator)) {return contains((Iterator) l, r);}if (!(l instanceof Iterator) && (r instanceof Iterator)) {return contains((Iterator) r, l);}if (l instanceof Iterator && r instanceof Iterator) {return findMatch((Iterator) l, (Iterator) r);}return equal(l, r);}
tensor([[0.0168, 0.0294, 0.0148,  ..., 0.0086, 0.0238, 0.0201],
        [0.0169, 0.0357, 0.0155,  ..., 0.0114, 0.0312, 0.0214],
        [0.0189, 0.0272, 0.0148,  ..., 0.0079, 0.0283, 0.0241],
        ...,
        [0.0150, 0.0250, 0.0166,  ..., 0.0111, 0.0266, 0.0214],
        [0.0173, 0.0244, 0.0181,  ..., 0.0116, 0.0297, 0.0194],
        [0.0150, 0.0298, 0.0155,  ..., 0.0101, 0.0274, 0.0181]])