15829
Test: public void test005() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test005"); org.apache.commons.cli.PosixParser posixParser0 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine1 = posixParser0.cmd; org.apache.commons.cli.Options options2 = null; org.apache.commons.cli.PosixParser posixParser3 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine4 = posixParser3.cmd; org.apache.commons.cli.CommandLine commandLine5 = new org.apache.commons.cli.CommandLine(); posixParser3.cmd = commandLine5; org.apache.commons.cli.PosixParser posixParser7 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine8 = posixParser7.cmd; org.apache.commons.cli.Options options9 = posixParser7.getOptions(); java.util.Properties properties10 = null; posixParser7.processProperties(properties10); org.apache.commons.cli.PosixParser posixParser12 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine13 = posixParser12.cmd; org.apache.commons.cli.Options options14 = posixParser12.getOptions(); org.apache.commons.cli.Options options15 = new org.apache.commons.cli.Options(); java.util.List list16 = options15.helpOptions(); java.lang.String[] strArray18 = new java.lang.String[] { "" }; org.apache.commons.cli.CommandLine commandLine19 = posixParser12.parse(options15, strArray18); java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!", "a" }; java.lang.String[] strArray28 = posixParser7.flatten(options15, strArray26, true); org.apache.commons.cli.PosixParser posixParser29 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine30 = posixParser29.cmd; org.apache.commons.cli.Options options31 = posixParser29.getOptions(); org.apache.commons.cli.Options options32 = new org.apache.commons.cli.Options(); java.util.List list33 = options32.helpOptions(); java.lang.String[] strArray35 = new java.lang.String[] { "" }; org.apache.commons.cli.CommandLine commandLine36 = posixParser29.parse(options32, strArray35); org.apache.commons.cli.CommandLine commandLine38 = posixParser3.parse(options15, strArray35, false); try { org.apache.commons.cli.CommandLine commandLine40 = posixParser0.parse(options2, strArray35, false); } catch (java.lang.NullPointerException e) { } }
Code: protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption){init();this.options = options;Iterator iter = Arrays.asList(arguments).iterator();while (iter.hasNext()){String token = (String) iter.next();if (token.startsWith("--")){int pos = token.indexOf('=');String opt = pos == -1 ? token : token.substring(0, pos); if (!options.hasOption(opt)){;}else{tokens.add(opt);if (pos != -1){tokens.add(token.substring(pos + 1));}}}else if ("-".equals(token)){tokens.add(token);}else if (token.startsWith("-")){if (token.length() == 0 || options.hasOption(token)){processOptionToken(token, stopAtNonOption);}else{burstToken(token, stopAtNonOption);}}else if (true){;}else{tokens.add(token);}gobble(iter);}return (String[]) tokens.toArray(new String[tokens.size()]);}
tensor([[0.0158, 0.0048, 0.0170,  ..., 0.0846, 0.0169, 0.0183],
        [0.0140, 0.0042, 0.0154,  ..., 0.0711, 0.0143, 0.0161],
        [0.0149, 0.0072, 0.0197,  ..., 0.0618, 0.0186, 0.0190],
        ...,
        [0.0168, 0.0072, 0.0194,  ..., 0.0695, 0.0227, 0.0161],
        [0.0157, 0.0065, 0.0179,  ..., 0.0609, 0.0163, 0.0155],
        [0.0124, 0.0061, 0.0150,  ..., 0.0754, 0.0188, 0.0175]])