69460
Test: public void test83() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test83"); org.jsoup.nodes.Attribute attribute2 = org.jsoup.nodes.Attribute.createFromEncoded("<html>\n <head></head>\n <body>\n :containsOwn(hi!\n </body>\n</html>", "<html>\n <head>\n <title>#text</title>\n </head>\n <body>\n #document\n </body>\n</html>"); org.jsoup.select.Evaluator.AttributeWithValue attributeWithValue5 = new org.jsoup.select.Evaluator.AttributeWithValue(".<html>\n <head></head>\n <body>\n #document\n </body>\n</html>", " "); java.lang.String str6 = attributeWithValue5.toString(); org.jsoup.nodes.Document document9 = org.jsoup.Jsoup.parse("", "hi!"); org.jsoup.nodes.Element element10 = document9.parent(); java.lang.String str11 = document9.nodeName(); org.jsoup.nodes.Document document12 = document9.normalise(); org.jsoup.select.Elements elements15 = document9.getElementsByAttributeValueNot("#document", "#document"); java.lang.String str16 = document9.nodeName(); org.jsoup.nodes.Element element18 = document9.append("[]"); org.jsoup.nodes.Element element20 = element18.addClass("<html>\n <head></head>\n <body></body>\n</html>"); org.jsoup.nodes.Node node21 = element18.clone(); org.jsoup.nodes.Document document24 = org.jsoup.Jsoup.parseBodyFragment("#document", ""); org.jsoup.select.Elements elements26 = document24.getElementsContainingOwnText(""); org.jsoup.nodes.Element element27 = element18.appendChild((org.jsoup.nodes.Node) document24); boolean boolean29 = element18.hasClass("#root=\":containsOwn(hi!\""); org.jsoup.helper.DescendableLinkedList<org.jsoup.select.Evaluator.Id> idList30 = new org.jsoup.helper.DescendableLinkedList<org.jsoup.select.Evaluator.Id>(); int int32 = idList30.lastIndexOf((java.lang.Object) '4'); org.jsoup.nodes.Document document34 = org.jsoup.Jsoup.parse("#document"); boolean boolean35 = idList30.equals((java.lang.Object) document34); int int37 = idList30.indexOf((java.lang.Object) "[]"); org.jsoup.helper.DescendableLinkedList<org.jsoup.select.Evaluator.Id> idList38 = new org.jsoup.helper.DescendableLinkedList<org.jsoup.select.Evaluator.Id>(); int int40 = idList38.lastIndexOf((java.lang.Object) '4'); org.jsoup.nodes.Document document43 = org.jsoup.Jsoup.parse("", ""); boolean boolean44 = idList38.contains((java.lang.Object) ""); org.jsoup.select.Evaluator.Id id46 = new org.jsoup.select.Evaluator.Id("#document"); idList38.addFirst(id46); org.jsoup.select.Evaluator.Id id48 = idList38.getFirst(); idList30.addLast(id48); org.jsoup.select.Evaluator.Id id50 = idList30.pollLast(); org.jsoup.safety.Whitelist whitelist52 = org.jsoup.safety.Whitelist.simpleText(); boolean boolean53 = org.jsoup.Jsoup.isValid("hi!", whitelist52); org.jsoup.safety.Cleaner cleaner54 = new org.jsoup.safety.Cleaner(whitelist52); org.jsoup.nodes.Document document57 = org.jsoup.Jsoup.parse("", "hi!"); org.jsoup.nodes.Element element58 = document57.parent(); java.lang.String str59 = document57.nodeName(); org.jsoup.nodes.Element element60 = document57.clone(); org.jsoup.nodes.Document document63 = org.jsoup.Jsoup.parse("", "hi!"); org.jsoup.nodes.Element element64 = document63.parent(); java.lang.String str65 = document63.nodeName(); org.jsoup.nodes.Element element66 = document63.body(); org.jsoup.nodes.Element element67 = element60.appendChild((org.jsoup.nodes.Node) document63); org.jsoup.nodes.Node node68 = element67.clone(); org.jsoup.nodes.Document document69 = node68.ownerDocument(); org.jsoup.nodes.Document document70 = cleaner54.clean(document69); org.jsoup.select.Evaluator.Class class72 = new org.jsoup.select.Evaluator.Class("#root"); org.jsoup.nodes.Document document75 = org.jsoup.Jsoup.parse("", "hi!"); java.util.List<org.jsoup.nodes.TextNode> textNodeList76 = document75.textNodes(); org.jsoup.nodes.Document document79 = org.jsoup.Jsoup.parseBodyFragment("#document", ""); org.jsoup.nodes.Document document80 = document79.ownerDocument(); java.lang.String str81 = document80.val(); boolean boolean82 = class72.matches((org.jsoup.nodes.Element) document75, (org.jsoup.nodes.Element) document80); boolean boolean83 = cleaner54.isValid(document75); java.util.List<org.jsoup.nodes.TextNode> textNodeList84 = document75.textNodes(); int int85 = idList30.lastIndexOf((java.lang.Object) document75); boolean boolean86 = attributeWithValue5.matches(element18, (org.jsoup.nodes.Element) document75); boolean boolean87 = attribute2.equals((java.lang.Object) attributeWithValue5); java.lang.String str88 = attributeWithValue5.toString(); }
Code: public Document clean(Document dirtyDocument){;Document clean = Document.createShell(dirtyDocument.baseUri());;return clean;}
[[0.07166708 0.26161504 0.07213589 0.05526156 0.19211084 0.0461171
 0.22101474 0.08007774]
[0.06692339 0.2763254  0.05971137 0.04789264 0.1886994  0.0389004
 0.23773459 0.08381283]
[0.05782536 0.27173156 0.07155922 0.04138974 0.16226786 0.03994612
 0.28076068 0.0745195 ]
[0.06587343 0.29311126 0.06831126 0.05274617 0.18060315 0.05714565
 0.210825   0.07138412]
[0.07468183 0.2566928  0.07545564 0.05010776 0.18846196 0.04721083
 0.22650276 0.08088638]
[0.08635265 0.19845608 0.07280102 0.07918102 0.17946044 0.07235785
 0.22644076 0.08495016]
[0.04958168 0.2694707  0.07649092 0.05038562 0.19791044 0.04146368
 0.23083337 0.08386354]
[0.07118735 0.24524024 0.05913416 0.06090122 0.16800943 0.05437893
 0.2515179  0.08963078]]