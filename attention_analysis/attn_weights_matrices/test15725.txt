15725
Test: public void test208() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test208"); org.apache.commons.cli.PosixParser posixParser0 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine1 = posixParser0.cmd; org.apache.commons.cli.CommandLine commandLine2 = new org.apache.commons.cli.CommandLine(); java.lang.String str5 = commandLine2.getOptionValue('#', ""); java.util.Properties properties7 = commandLine2.getOptionProperties(""); posixParser0.processProperties(properties7); posixParser0.burstToken("", true); java.util.List list12 = posixParser0.getRequiredOptions(); org.apache.commons.cli.CommandLine commandLine13 = new org.apache.commons.cli.CommandLine(); java.lang.String str16 = commandLine13.getOptionValue('#', ""); boolean boolean18 = commandLine13.hasOption(' '); java.lang.String[] strArray20 = commandLine13.getOptionValues('4'); posixParser0.cmd = commandLine13; org.apache.commons.cli.CommandLine commandLine22 = new org.apache.commons.cli.CommandLine(); java.lang.String str25 = commandLine22.getOptionValue('#', ""); java.lang.String str27 = commandLine22.getOptionValue("hi!"); org.apache.commons.cli.Option[] optionArray28 = commandLine22.getOptions(); java.util.Properties properties30 = commandLine22.getOptionProperties("org.apache.commons.cli.MissingOptionException: hi!"); posixParser0.cmd = commandLine22; org.apache.commons.cli.Options options32 = posixParser0.getOptions(); org.apache.commons.cli.Options options33 = new org.apache.commons.cli.Options(); java.util.Collection collection34 = options33.getOptions(); java.util.List list35 = options33.getRequiredOptions(); org.apache.commons.cli.Options options39 = options33.addOption("", false, ""); java.util.Collection collection40 = options33.getOptionGroups(); org.apache.commons.cli.PosixParser posixParser41 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.Options options42 = new org.apache.commons.cli.Options(); boolean boolean44 = options42.hasOption("[ Options: [ short {} ] [ long {} ]"); org.apache.commons.cli.PosixParser posixParser45 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine46 = posixParser45.cmd; org.apache.commons.cli.CommandLine commandLine47 = new org.apache.commons.cli.CommandLine(); java.lang.String str50 = commandLine47.getOptionValue('#', ""); java.util.Properties properties52 = commandLine47.getOptionProperties(""); posixParser45.processProperties(properties52); posixParser45.burstToken("", true); org.apache.commons.cli.Options options57 = null; org.apache.commons.cli.CommandLine commandLine58 = new org.apache.commons.cli.CommandLine(); java.lang.String str61 = commandLine58.getOptionValue('#', ""); java.lang.String str63 = commandLine58.getOptionValue(' '); java.lang.String[] strArray64 = commandLine58.getArgs(); java.lang.String[] strArray66 = posixParser45.flatten(options57, strArray64, true); java.lang.String[] strArray68 = posixParser41.flatten(options42, strArray66, false); org.apache.commons.cli.CommandLine commandLine69 = posixParser0.parse(options33, strArray68); org.apache.commons.cli.CommandLine commandLine70 = posixParser0.cmd; org.apache.commons.cli.Option[] optionArray71 = commandLine70.getOptions(); java.lang.String[] strArray73 = commandLine70.getOptionValues(""); java.lang.Object obj75 = commandLine70.getOptionObject("[ Options: [ short {=[ option: [ARG] :: [ option: :: ] ]} ] [ long {} ]"); }
Code: protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption){;this.options = options;Iterator iter = Arrays.asList(arguments).iterator();while (iter.hasNext()){String token = (String) iter.next();if (token.startsWith("--")){if (token.indexOf('=') != 1){tokens.add(token.substring(0, token.indexOf('=')));tokens.add(token.substring(token.indexOf('=') + 1, token.length()));}else{;}}else if ("-".equals(token)){tokens.add(token);}else if (token.startsWith("-")){if (token.length() == 2){processOptionToken(token, stopAtNonOption);}else if (options.hasOption(token)){tokens.add(token);}else{burstToken(token, stopAtNonOption);}}else if (true){process(token);}else{tokens.add(token);}gobble(iter);}return (String[]) tokens.toArray(new String[tokens.size()]);}
tensor([[0.0197, 0.0054, 0.0209,  ..., 0.1048, 0.0201, 0.0217],
        [0.0181, 0.0049, 0.0201,  ..., 0.0916, 0.0176, 0.0199],
        [0.0185, 0.0084, 0.0246,  ..., 0.0760, 0.0224, 0.0233],
        ...,
        [0.0202, 0.0083, 0.0232,  ..., 0.0826, 0.0268, 0.0189],
        [0.0208, 0.0075, 0.0237,  ..., 0.0776, 0.0205, 0.0199],
        [0.0157, 0.0068, 0.0188,  ..., 0.0926, 0.0224, 0.0210]])