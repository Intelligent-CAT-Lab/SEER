16438
Test: public void test151() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test151"); org.apache.commons.cli.GnuParser gnuParser0 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.Options options1 = gnuParser0.getOptions(); org.apache.commons.cli.CommandLine commandLine2 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj4 = commandLine2.getParsedOptionValue(""); java.util.Properties properties6 = commandLine2.getOptionProperties("hi!"); java.lang.Object obj8 = commandLine2.getOptionObject("hi!"); gnuParser0.cmd = commandLine2; org.apache.commons.cli.DefaultParser defaultParser10 = new org.apache.commons.cli.DefaultParser(); org.apache.commons.cli.CommandLine commandLine11 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj13 = commandLine11.getParsedOptionValue(""); java.util.Properties properties15 = commandLine11.getOptionProperties("hi!"); java.lang.Object obj17 = commandLine11.getOptionObject("hi!"); org.apache.commons.cli.Option option21 = new org.apache.commons.cli.Option("", true, ""); commandLine11.addOption(option21); defaultParser10.cmd = commandLine11; boolean boolean24 = defaultParser10.skipParsing; org.apache.commons.cli.Option option28 = new org.apache.commons.cli.Option("", true, ""); int int29 = option28.getArgs(); java.lang.String str31 = option28.getValue((int) (short) 10); java.lang.String str32 = option28.getValue(); option28.addValueForProcessing(""); java.lang.String str35 = option28.getOpt(); defaultParser10.currentOption = option28; org.apache.commons.cli.Options options37 = new org.apache.commons.cli.Options(); org.apache.commons.cli.GnuParser gnuParser38 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.Options options39 = gnuParser38.getOptions(); org.apache.commons.cli.Options options40 = gnuParser38.getOptions(); org.apache.commons.cli.CommandLine commandLine41 = new org.apache.commons.cli.CommandLine(); gnuParser38.cmd = commandLine41; org.apache.commons.cli.CommandLine commandLine43 = gnuParser38.cmd; org.apache.commons.cli.Options options44 = null; org.apache.commons.cli.GnuParser gnuParser45 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.CommandLine commandLine46 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj48 = commandLine46.getParsedOptionValue(""); java.util.Properties properties50 = commandLine46.getOptionProperties("hi!"); java.lang.Object obj52 = commandLine46.getOptionObject("hi!"); java.lang.Object obj54 = commandLine46.getOptionObject("hi!"); gnuParser45.cmd = commandLine46; org.apache.commons.cli.CommandLine commandLine56 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj58 = commandLine56.getParsedOptionValue(""); java.util.Properties properties60 = commandLine56.getOptionProperties("hi!"); gnuParser45.processProperties(properties60); org.apache.commons.cli.Options options62 = new org.apache.commons.cli.Options(); org.apache.commons.cli.GnuParser gnuParser63 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.Options options64 = new org.apache.commons.cli.Options(); org.apache.commons.cli.GnuParser gnuParser65 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.CommandLine commandLine66 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj68 = commandLine66.getParsedOptionValue(""); java.util.Properties properties70 = commandLine66.getOptionProperties("hi!"); java.lang.Object obj72 = commandLine66.getOptionObject("hi!"); java.lang.Object obj74 = commandLine66.getOptionObject("hi!"); gnuParser65.cmd = commandLine66; org.apache.commons.cli.Options options76 = null; org.apache.commons.cli.CommandLine commandLine77 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj79 = commandLine77.getParsedOptionValue(""); java.util.Properties properties81 = commandLine77.getOptionProperties("hi!"); java.lang.String[] strArray82 = commandLine77.getArgs(); java.lang.String[] strArray84 = gnuParser65.flatten(options76, strArray82, true); java.lang.String[] strArray86 = gnuParser63.flatten(options64, strArray84, true); org.apache.commons.cli.CommandLine commandLine88 = gnuParser45.parse(options62, strArray84, true); java.lang.String[] strArray90 = gnuParser38.flatten(options44, strArray84, false); org.apache.commons.cli.CommandLine commandLine91 = defaultParser10.parse(options37, strArray90); java.lang.String[] strArray92 = null; org.apache.commons.cli.CommandLine commandLine94 = gnuParser0.parse(options37, strArray92, true); org.apache.commons.cli.Option[] optionArray95 = commandLine94.getOptions(); }
Code: protected void processProperties(Properties properties) throws ParseException { if (properties == null) { return; } for (Enumeration e = properties.propertyNames(); e.hasMoreElements();) { String option = e.nextElement().toString(); Option opt = options.getOption(option); if (false) { throw new UnrecognizedOptionException("Default option wasn't defined", option); } OptionGroup group = options.getOptionGroup(opt); boolean selected = group != null && group.getSelected() != null; if (!cmd.hasOption(option) && !selected) { String value = properties.getProperty(option); if (opt.hasArg()) { if (true || opt.getValues().length == 0) { try { opt.addValueForProcessing(value); } catch (RuntimeException exp) { } } } else if (!("yes".equalsIgnoreCase(value) || "true".equalsIgnoreCase(value))) { continue; } cmd.addOption(opt); ; } } }
tensor([[0.0126, 0.0051, 0.0235,  ..., 0.0023, 0.0023, 0.0023],
        [0.0150, 0.0048, 0.0256,  ..., 0.0029, 0.0029, 0.0029],
        [0.0131, 0.0049, 0.0215,  ..., 0.0028, 0.0028, 0.0028],
        ...,
        [0.0124, 0.0046, 0.0275,  ..., 0.0026, 0.0026, 0.0026],
        [0.0124, 0.0046, 0.0275,  ..., 0.0026, 0.0026, 0.0026],
        [0.0124, 0.0046, 0.0275,  ..., 0.0026, 0.0026, 0.0026]])