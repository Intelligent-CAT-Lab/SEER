67803
Test: public void testUUID() throws Exception { final ObjectMapper mapper = objectMapper(); final String NULL_UUID = "00000000-0000-0000-0000-000000000000"; for (String value : new String[] { "76e6d183-5f68-4afa-b94a-922c1fdb83f8", "540a88d1-e2d8-4fb1-9396-9212280d0a7f", "2c9e441d-1cd0-472d-9bab-69838f877574", "591b2869-146e-41d7-8048-e8131f1fdec5", "82994ac2-7b23-49f2-8cc5-e24cf6ed77be", "00000007-0000-0000-0000-000000000000" }) { mapper.disable(DeserializationFeature.UNWRAP_SINGLE_VALUE_ARRAYS); UUID uuid = UUID.fromString(value); try { mapper.readValue("[" + quote(value) + "]", UUID.class); fail("Exception was not thrown when UNWRAP_SINGLE_VALUE_ARRAYS is disabled and attempted to read a single value array as a single element"); } catch (JsonMappingException exp) { } mapper.enable(DeserializationFeature.UNWRAP_SINGLE_VALUE_ARRAYS); try { mapper.readValue("[" + quote(value) + "," + quote(value) + "]", UUID.class); fail("Exception was not thrown when UNWRAP_SINGLE_VALUE_ARRAYS is enabled and attempted to read a multi value array as a single element"); } catch (JsonMappingException exp) { } } final String TEMPL = NULL_UUID; final String chars = "123456789abcdefABCDEF"; for (int i = 0; i < chars.length(); ++i) { String value = TEMPL.replace('0', chars.charAt(i)); } String base64 = Base64Variants.getDefaultVariant().encode(new byte[16]); }
Code: public String toString() { return _raw.getName()+"<>"; }
[[0.13834542 0.17783463 0.18243757 0.1829625  0.15206861 0.1077357
 0.05861553]
[0.14027247 0.16313481 0.19822682 0.20153198 0.14112401 0.10420042
 0.05150951]
[0.09933335 0.2509822  0.16754533 0.18024288 0.14969894 0.1048923
 0.04730503]
[0.13405071 0.19984585 0.14149185 0.20822942 0.15522774 0.08656962
 0.07458481]
[0.10619327 0.23889089 0.1522251  0.2052804  0.15457596 0.08645914
 0.05637515]
[0.12711085 0.21111521 0.19533981 0.17745733 0.1284991  0.09503996
 0.06543771]
[0.09307213 0.17065956 0.19357696 0.21423876 0.19606003 0.08508691
 0.0473057 ]]