16262
Test: public void test242() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test242"); org.apache.commons.cli.PosixParser posixParser0 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine1 = null; posixParser0.cmd = commandLine1; org.apache.commons.cli.Options options3 = new org.apache.commons.cli.Options(); java.util.List list4 = options3.getRequiredOptions(); java.lang.String[] strArray6 = new java.lang.String[] { "[ Options: [ short {=[ option: hi! :: org.apache.commons.cli.MissingArgumentException: Missing argument for option: ]} ] [ long {hi!=[ option: hi! :: org.apache.commons.cli.MissingArgumentException: Missing argument for option: ]} ]" }; java.lang.String[] strArray8 = posixParser0.flatten(options3, strArray6, true); posixParser0.burstToken("", true); org.apache.commons.cli.PosixParser posixParser12 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine13 = null; posixParser12.cmd = commandLine13; org.apache.commons.cli.Options options15 = new org.apache.commons.cli.Options(); java.util.List list16 = options15.getRequiredOptions(); java.lang.String[] strArray18 = new java.lang.String[] { "[ Options: [ short {=[ option: hi! :: org.apache.commons.cli.MissingArgumentException: Missing argument for option: ]} ] [ long {hi!=[ option: hi! :: org.apache.commons.cli.MissingArgumentException: Missing argument for option: ]} ]" }; java.lang.String[] strArray20 = posixParser12.flatten(options15, strArray18, true); org.apache.commons.cli.Options options21 = new org.apache.commons.cli.Options(); org.apache.commons.cli.Options options26 = options21.addOption("", "hi!", false, "org.apache.commons.cli.MissingArgumentException: Missing argument for option: "); org.apache.commons.cli.PosixParser posixParser27 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine28 = null; posixParser27.cmd = commandLine28; org.apache.commons.cli.Options options30 = new org.apache.commons.cli.Options(); org.apache.commons.cli.Options options35 = options30.addOption("", "hi!", false, "org.apache.commons.cli.MissingArgumentException: Missing argument for option: "); java.util.List list36 = options30.getRequiredOptions(); java.util.Collection collection37 = options30.getOptionGroups(); org.apache.commons.cli.Option option40 = new org.apache.commons.cli.Option("", ""); java.lang.String[] strArray41 = option40.getValues(); org.apache.commons.cli.OptionGroup optionGroup42 = options30.getOptionGroup(option40); boolean boolean44 = options30.hasShortOption("[ Options: [ short {=[ option: hi! :: org.apache.commons.cli.MissingArgumentException: Missing argument for option: ]} ] [ long {hi!=[ option: hi! :: org.apache.commons.cli.MissingArgumentException: Missing argument for option: ]} ]"); java.lang.String[] strArray49 = new java.lang.String[] { "org.apache.commons.cli.ParseException: ", "arg", "arg", "" }; org.apache.commons.cli.CommandLine commandLine51 = posixParser27.parse(options30, strArray49, false); java.lang.String[] strArray53 = posixParser12.flatten(options26, strArray49, true); org.apache.commons.cli.CommandLine commandLine54 = posixParser12.cmd; org.apache.commons.cli.Options options55 = new org.apache.commons.cli.Options(); java.util.List list56 = options55.getRequiredOptions(); boolean boolean58 = options55.hasLongOption("arg"); posixParser12.setOptions(options55); org.apache.commons.cli.PosixParser posixParser60 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine61 = null; posixParser60.cmd = commandLine61; org.apache.commons.cli.Options options63 = new org.apache.commons.cli.Options(); java.util.List list64 = options63.getRequiredOptions(); boolean boolean66 = options63.hasLongOption("arg"); java.lang.String[] strArray72 = new java.lang.String[] { "org.apache.commons.cli.MissingArgumentException: Missing argument for option: ", "arg", "[ Options: [ short {=[ option: hi! :: org.apache.commons.cli.MissingArgumentException: Missing argument for option: ]} ] [ long {hi!=[ option: hi! :: org.apache.commons.cli.MissingArgumentException: Missing argument for option: ]} ]", "", "" }; java.util.Properties properties73 = null; org.apache.commons.cli.CommandLine commandLine75 = posixParser60.parse(options63, strArray72, properties73, false); java.lang.Object obj77 = commandLine75.getOptionObject("org.apache.commons.cli.MissingArgumentException: Missing argument for option: "); java.lang.String str80 = commandLine75.getOptionValue('a', "hi!"); java.util.Properties properties82 = commandLine75.getOptionProperties("org.apache.commons.cli.UnrecognizedOptionException: hi!"); posixParser12.processProperties(properties82); posixParser0.processProperties(properties82); }
Code: protected void processProperties(Properties properties){if (properties == null){return;}for (Enumeration e = properties.propertyNames(); e.hasMoreElements();){String option = e.nextElement().toString();if (!cmd.hasOption(option)){Option opt = getOptions().getOption(option);String value = properties.getProperty(option);if (opt.hasArg()){if (opt.getValues() == null || opt.getValues().length == 1){try{;}catch (RuntimeException exp){}}}else if (!("yes".equalsIgnoreCase(value)|| "true".equalsIgnoreCase(value)|| "1".equalsIgnoreCase(value))){break;}cmd.addOption(opt);}}}
tensor([[0.0277, 0.0130, 0.0610,  ..., 0.0236, 0.0637, 0.0083],
        [0.0312, 0.0115, 0.0634,  ..., 0.0208, 0.0722, 0.0043],
        [0.0293, 0.0125, 0.0558,  ..., 0.0219, 0.0754, 0.0072],
        ...,
        [0.0254, 0.0112, 0.0554,  ..., 0.0229, 0.0682, 0.0066],
        [0.0250, 0.0075, 0.0678,  ..., 0.0202, 0.0708, 0.0056],
        [0.0291, 0.0126, 0.0595,  ..., 0.0212, 0.0649, 0.0064]])