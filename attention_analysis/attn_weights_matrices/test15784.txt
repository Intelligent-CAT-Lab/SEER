15784
Test: public void test057() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test057"); org.apache.commons.cli.PosixParser posixParser0 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine1 = posixParser0.cmd; org.apache.commons.cli.PosixParser posixParser2 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine3 = posixParser2.cmd; org.apache.commons.cli.CommandLine commandLine4 = new org.apache.commons.cli.CommandLine(); posixParser2.cmd = commandLine4; org.apache.commons.cli.PosixParser posixParser6 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine7 = posixParser6.cmd; org.apache.commons.cli.Options options8 = posixParser6.getOptions(); java.util.Properties properties9 = null; posixParser6.processProperties(properties9); org.apache.commons.cli.PosixParser posixParser11 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine12 = posixParser11.cmd; org.apache.commons.cli.Options options13 = posixParser11.getOptions(); org.apache.commons.cli.Options options14 = new org.apache.commons.cli.Options(); java.util.List list15 = options14.helpOptions(); java.lang.String[] strArray17 = new java.lang.String[] { "" }; org.apache.commons.cli.CommandLine commandLine18 = posixParser11.parse(options14, strArray17); java.lang.String[] strArray25 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!", "a" }; java.lang.String[] strArray27 = posixParser6.flatten(options14, strArray25, true); org.apache.commons.cli.PosixParser posixParser28 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine29 = posixParser28.cmd; org.apache.commons.cli.Options options30 = posixParser28.getOptions(); org.apache.commons.cli.Options options31 = new org.apache.commons.cli.Options(); java.util.List list32 = options31.helpOptions(); java.lang.String[] strArray34 = new java.lang.String[] { "" }; org.apache.commons.cli.CommandLine commandLine35 = posixParser28.parse(options31, strArray34); org.apache.commons.cli.CommandLine commandLine37 = posixParser2.parse(options14, strArray34, false); org.apache.commons.cli.PosixParser posixParser38 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine39 = posixParser38.cmd; org.apache.commons.cli.Options options40 = posixParser38.getOptions(); org.apache.commons.cli.Options options41 = new org.apache.commons.cli.Options(); org.apache.commons.cli.PosixParser posixParser42 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine43 = posixParser42.cmd; org.apache.commons.cli.Options options44 = posixParser42.getOptions(); java.util.Properties properties45 = null; posixParser42.processProperties(properties45); org.apache.commons.cli.PosixParser posixParser47 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine48 = posixParser47.cmd; org.apache.commons.cli.Options options49 = posixParser47.getOptions(); org.apache.commons.cli.Options options50 = new org.apache.commons.cli.Options(); java.util.List list51 = options50.helpOptions(); java.lang.String[] strArray53 = new java.lang.String[] { "" }; org.apache.commons.cli.CommandLine commandLine54 = posixParser47.parse(options50, strArray53); java.lang.String[] strArray61 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!", "a" }; java.lang.String[] strArray63 = posixParser42.flatten(options50, strArray61, true); org.apache.commons.cli.CommandLine commandLine64 = posixParser38.parse(options41, strArray63); java.lang.String[] strArray66 = posixParser0.flatten(options14, strArray63, true); org.apache.commons.cli.OptionBuilder optionBuilder67 = org.apache.commons.cli.OptionBuilder.withType((java.lang.Object) posixParser0); }
Code: protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption){init();this.options = options;Iterator iter = Arrays.asList(arguments).iterator();while (iter.hasNext()){String token = (String) iter.next();if (token.startsWith("--")){int pos = token.indexOf('=');String opt = pos == 1 ? token : token.substring(0, pos); if (!options.hasOption(opt)){;}else{tokens.add(opt);if (pos != -1){tokens.add(token.substring(pos + 1));}}}else if ("-".equals(token)){tokens.add(token);}else if (token.startsWith("-")){if (token.length() == 2 || options.hasOption(token)){processOptionToken(token, stopAtNonOption);}else{burstToken(token, stopAtNonOption);}}else if (true){;}else{tokens.add(token);}gobble(iter);}return (String[]) tokens.toArray(new String[tokens.size()]);}
tensor([[0.0158, 0.0048, 0.0170,  ..., 0.0848, 0.0169, 0.0183],
        [0.0141, 0.0042, 0.0155,  ..., 0.0713, 0.0143, 0.0161],
        [0.0150, 0.0072, 0.0198,  ..., 0.0621, 0.0187, 0.0191],
        ...,
        [0.0169, 0.0072, 0.0195,  ..., 0.0699, 0.0228, 0.0162],
        [0.0158, 0.0065, 0.0180,  ..., 0.0614, 0.0164, 0.0157],
        [0.0125, 0.0061, 0.0151,  ..., 0.0758, 0.0189, 0.0176]])