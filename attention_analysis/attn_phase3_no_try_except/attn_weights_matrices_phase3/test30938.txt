30938
Test: public void test23() throws Throwable { MapUtil.createWeakValueConcurrentHashMap(6, 8); ConcurrentMap<MutableInt, String> concurrentMap0 = MapUtil.newConcurrentHashMap(); Map<Object, String> map0 = MapUtil.unmodifiableMap((Map<?, ? extends String>) concurrentMap0); MapUtil.difference((Map<?, ? extends String>) concurrentMap0, (Map<?, ? extends String>) map0); MapUtil.createLongObjectHashMap(6, 0.5F); MapUtil.isEmpty(map0); // Undeclared exception! MapUtil.createWeakKeyConcurrentHashMap(8, 2147483645); }
Code: public static <K, V> ConcurrentMap<K, V> createWeakKeyConcurrentHashMap(int initialCapacity, int concurrencyLevel) { return new MapMaker().weakKeys().initialCapacity(initialCapacity).concurrencyLevel(concurrencyLevel).makeMap(); }
[[0.05317618 0.14980051 0.07376415 0.07376415 0.07376415 0.07376415
 0.07376415 0.07376415 0.03467756 0.07376415 0.06566518 0.05787539
 0.0271815  0.07376415 0.02151049]
[0.05357258 0.14525884 0.07189059 0.07189059 0.07189059 0.07189059
 0.07189059 0.07189059 0.02752554 0.07189058 0.0979353  0.05093753
 0.02326963 0.0718906  0.02637582]
[0.04424477 0.15522155 0.0736206  0.0736206  0.0736206  0.0736206
 0.0736206  0.0736206  0.02852993 0.0736206  0.07139022 0.05373379
 0.03374251 0.07362061 0.02417241]
[0.04424477 0.15522155 0.0736206  0.0736206  0.0736206  0.0736206
 0.0736206  0.0736206  0.02852993 0.0736206  0.07139022 0.05373379
 0.03374251 0.07362061 0.02417241]
[0.04424477 0.15522155 0.0736206  0.0736206  0.0736206  0.0736206
 0.0736206  0.0736206  0.02852993 0.0736206  0.07139022 0.05373379
 0.03374251 0.07362061 0.02417241]
[0.04424477 0.15522155 0.0736206  0.0736206  0.0736206  0.0736206
 0.0736206  0.0736206  0.02852993 0.0736206  0.07139022 0.05373379
 0.03374251 0.07362061 0.02417241]
[0.04424477 0.15522155 0.0736206  0.0736206  0.0736206  0.0736206
 0.0736206  0.0736206  0.02852993 0.0736206  0.07139022 0.05373379
 0.03374251 0.07362061 0.02417241]
[0.04424477 0.15522155 0.0736206  0.0736206  0.0736206  0.0736206
 0.0736206  0.0736206  0.02852993 0.0736206  0.07139022 0.05373379
 0.03374251 0.07362061 0.02417241]
[0.02992154 0.18681774 0.07687507 0.07687507 0.07687507 0.07687507
 0.07687507 0.07687507 0.02158732 0.07687508 0.06767114 0.04829234
 0.01609791 0.07687509 0.0146114 ]
[0.04424477 0.15522155 0.0736206  0.0736206  0.0736206  0.0736206
 0.0736206  0.0736206  0.02852993 0.0736206  0.07139022 0.05373379
 0.03374251 0.07362061 0.02417241]
[0.05540333 0.13346058 0.07076356 0.07076356 0.07076356 0.07076356
 0.07076356 0.07076356 0.02613006 0.07076357 0.09315176 0.06322926
 0.03032169 0.07076357 0.03219481]
[0.03715228 0.16457488 0.07643321 0.07643321 0.07643321 0.07643321
 0.07643321 0.07643321 0.02303937 0.07643322 0.06778289 0.05477174
 0.02239104 0.07643323 0.018822  ]
[0.04670537 0.13897888 0.07250839 0.07250839 0.07250839 0.07250839
 0.07250839 0.07250839 0.03140873 0.07250839 0.08248561 0.06565095
 0.03060241 0.07250839 0.02410085]
[0.04424478 0.15522154 0.0736206  0.0736206  0.0736206  0.0736206
 0.0736206  0.0736206  0.02852994 0.0736206  0.07139023 0.0537338
 0.03374251 0.0736206  0.02417241]
[0.03704938 0.1630297  0.06826164 0.06826164 0.06826164 0.06826164
 0.06826164 0.06826164 0.02778934 0.06826164 0.10113503 0.08262841
 0.02079664 0.06826165 0.02147839]]