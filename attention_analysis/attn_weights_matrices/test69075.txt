69075
Test: public void test044() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test044"); java.util.Collection<org.jsoup.nodes.Element> elementCollection0 = null; org.jsoup.nodes.Element[] elementArray1 = new org.jsoup.nodes.Element[] {}; java.util.ArrayList<org.jsoup.nodes.Element> elementList2 = new java.util.ArrayList<org.jsoup.nodes.Element>(); boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.jsoup.nodes.Element>) elementList2, elementArray1); java.util.Collection<org.jsoup.nodes.Element> elementCollection4 = null; org.jsoup.select.Elements elements5 = org.jsoup.select.Selector.filterOut((java.util.Collection<org.jsoup.nodes.Element>) elementList2, elementCollection4); org.jsoup.select.Elements elements7 = elements5.select("hi!"); org.jsoup.select.Elements elements9 = elements5.append(""); org.jsoup.nodes.Element element10 = elements9.first(); org.jsoup.nodes.Document document14 = org.jsoup.parser.Parser.parseBodyFragment("hi!", "hi!"); org.jsoup.nodes.Element element15 = document14.head(); elements9.add(0, element15); try { org.jsoup.select.Elements elements17 = org.jsoup.select.Selector.filterOut(elementCollection0, (java.util.Collection<org.jsoup.nodes.Element>) elements9); } catch (java.lang.NullPointerException e) { } }
Code: private Elements select() { tq.consumeWhitespace(); if (tq.matchesAny(combinators)) { elements.add(root); combinator(tq.consume().toString()); } else if (tq.matches(":has(")) { elements.addAll(root.getAllElements()); } else { addElements(findElements()); } while (!tq.isEmpty()) { boolean seenWhite = tq.consumeWhitespace(); if (tq.matchChomp(",")) { while (!tq.isEmpty()) { String subQuery = tq.chompTo(","); elements.addAll(select(subQuery, root)); } } else if (tq.matchesAny(combinators)) { combinator(tq.consume().toString()); } else if (seenWhite) { combinator(" "); } else { Elements candidates = findElements(); intersectElements(filterForSelf(elements, candidates)); } } return new Elements(elements); }
tensor([[0.0145, 0.0068, 0.0114,  ..., 0.0053, 0.0176, 0.0045],
        [0.0130, 0.0060, 0.0121,  ..., 0.0050, 0.0149, 0.0040],
        [0.0096, 0.0066, 0.0127,  ..., 0.0045, 0.0219, 0.0035],
        ...,
        [0.0130, 0.0064, 0.0110,  ..., 0.0055, 0.0170, 0.0047],
        [0.0118, 0.0066, 0.0131,  ..., 0.0045, 0.0156, 0.0039],
        [0.0114, 0.0059, 0.0122,  ..., 0.0041, 0.0161, 0.0040]])