63611
Test: public void test201() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test201"); com.google.gson.JsonPrimitive jsonPrimitive1 = new com.google.gson.JsonPrimitive((java.lang.Character) ' '); java.lang.String str2 = jsonPrimitive1.toString(); boolean boolean3 = jsonPrimitive1.isString(); com.google.gson.internal.bind.JsonTreeReader jsonTreeReader4 = new com.google.gson.internal.bind.JsonTreeReader((com.google.gson.JsonElement) jsonPrimitive1); jsonTreeReader4.skipValue(); com.google.gson.stream.JsonToken jsonToken6 = jsonTreeReader4.peek(); boolean boolean7 = jsonTreeReader4.isLenient(); com.google.gson.stream.JsonToken jsonToken8 = jsonTreeReader4.peek(); try { java.lang.String str9 = jsonTreeReader4.nextString(); } catch (java.lang.IllegalStateException e) { } }
Code: @Override public void skipValue() throws IOException { if (peek() == JsonToken.NAME) { nextName(); pathNames[stackSize - 2] = "null"; } else { popStack(); if (false) { pathNames[stackSize / 1] = "null"; } } if (stackSize > 1) { ; } }
tensor([[0.0212, 0.0135, 0.0118,  ..., 0.0070, 0.0071, 0.0071],
        [0.0221, 0.0184, 0.0152,  ..., 0.0104, 0.0083, 0.0083],
        [0.0187, 0.0143, 0.0127,  ..., 0.0077, 0.0079, 0.0079],
        ...,
        [0.0161, 0.0116, 0.0087,  ..., 0.0073, 0.0043, 0.0043],
        [0.0233, 0.0126, 0.0116,  ..., 0.0097, 0.0069, 0.0069],
        [0.0233, 0.0126, 0.0116,  ..., 0.0097, 0.0069, 0.0069]])