69331
Test: public void test674() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test674"); org.jsoup.parser.TokeniserState tokeniserState0 = org.jsoup.parser.TokeniserState.BogusDoctype; org.jsoup.parser.HtmlTreeBuilder htmlTreeBuilder1 = new org.jsoup.parser.HtmlTreeBuilder(); htmlTreeBuilder1.generateImpliedEndTags(); org.jsoup.parser.HtmlTreeBuilder htmlTreeBuilder3 = new org.jsoup.parser.HtmlTreeBuilder(); org.jsoup.nodes.Element element4 = null; htmlTreeBuilder3.pushActiveFormattingElements(element4); org.jsoup.parser.Token.EndTag endTag6 = new org.jsoup.parser.Token.EndTag(); htmlTreeBuilder3.currentToken = endTag6; htmlTreeBuilder1.currentToken = endTag6; org.jsoup.parser.CharacterReader characterReader10 = new org.jsoup.parser.CharacterReader("[^<html>\n <head></head>\n <body>\n #text\n </body>\n</html>]"); htmlTreeBuilder1.reader = characterReader10; boolean boolean15 = characterReader10.rangeEquals(0, 52, ""); org.jsoup.parser.HtmlTreeBuilder htmlTreeBuilder16 = new org.jsoup.parser.HtmlTreeBuilder(); htmlTreeBuilder16.generateImpliedEndTags(); org.jsoup.parser.HtmlTreeBuilder htmlTreeBuilder18 = new org.jsoup.parser.HtmlTreeBuilder(); org.jsoup.nodes.Element element19 = null; htmlTreeBuilder18.pushActiveFormattingElements(element19); org.jsoup.parser.Token.EndTag endTag21 = new org.jsoup.parser.Token.EndTag(); htmlTreeBuilder18.currentToken = endTag21; htmlTreeBuilder16.currentToken = endTag21; org.jsoup.parser.ParseErrorList parseErrorList25 = org.jsoup.parser.ParseErrorList.tracking((int) (byte) 100); htmlTreeBuilder16.errors = parseErrorList25; org.jsoup.parser.Tokeniser tokeniser27 = new org.jsoup.parser.Tokeniser(characterReader10, parseErrorList25); org.jsoup.parser.TokeniserState tokeniserState28 = org.jsoup.parser.TokeniserState.DoctypePublicIdentifier_singleQuoted; tokeniser27.eofError(tokeniserState28); org.jsoup.parser.CharacterReader characterReader31 = new org.jsoup.parser.CharacterReader("[^<html>\n <head></head>\n <body>\n #text\n </body>\n</html>]"); java.lang.String str32 = characterReader31.toString(); boolean boolean33 = characterReader31.matchesLetter(); tokeniserState0.read(tokeniser27, characterReader31); org.jsoup.parser.Token.StartTag startTag35 = new org.jsoup.parser.Token.StartTag(); org.jsoup.nodes.Attributes attributes37 = new org.jsoup.nodes.Attributes(); java.lang.String str39 = attributes37.get("SYSTEM"); org.jsoup.parser.Token.StartTag startTag40 = startTag35.nameAttr(":last-of-type", attributes37); org.jsoup.parser.Token.Tag tag41 = startTag40.reset(); org.jsoup.parser.Token.StartTag startTag42 = new org.jsoup.parser.Token.StartTag(); org.jsoup.nodes.Attributes attributes44 = new org.jsoup.nodes.Attributes(); java.lang.String str46 = attributes44.get("SYSTEM"); org.jsoup.parser.Token.StartTag startTag47 = startTag42.nameAttr(":last-of-type", attributes44); startTag40.attributes = attributes44; org.jsoup.parser.HtmlTreeBuilder htmlTreeBuilder49 = new org.jsoup.parser.HtmlTreeBuilder(); org.jsoup.nodes.Element element50 = null; htmlTreeBuilder49.pushActiveFormattingElements(element50); org.jsoup.parser.Token.EndTag endTag52 = new org.jsoup.parser.Token.EndTag(); htmlTreeBuilder49.currentToken = endTag52; int[] intArray54 = new int[] {}; endTag52.appendAttributeValue(intArray54); startTag40.appendAttributeValue(intArray54); tokeniser27.startPending = startTag40; java.lang.String str58 = startTag40.normalName(); }
Code: static void reset(StringBuilder sb) { if (sb != null) { sb.delete(0, sb.length()); } }
[[0.14503296 0.03643813 0.11866269 0.03864246 0.08200154 0.17708413
 0.04229499 0.03570885 0.03390016 0.08200154 0.10884787 0.05057024
 0.02440721 0.02440721]
[0.14636108 0.04141301 0.17538743 0.05219591 0.06329644 0.18107454
 0.03114135 0.02770025 0.02840972 0.06329643 0.09381934 0.05455264
 0.02067593 0.02067593]
[0.12274542 0.0318549  0.1318935  0.04267706 0.07884271 0.23666069
 0.04016453 0.02135354 0.02701475 0.07884271 0.11079033 0.05099975
 0.01308007 0.01308007]
[0.18468371 0.03459965 0.16209257 0.04572215 0.05401901 0.16213046
 0.04592855 0.0273367  0.03038546 0.05401902 0.09661777 0.06030152
 0.02108172 0.02108172]
[0.13202618 0.05309669 0.1408767  0.06018074 0.07953728 0.11143029
 0.04121268 0.04080378 0.04504574 0.07953729 0.09758877 0.05561671
 0.03152359 0.03152359]
[0.18421403 0.02842805 0.16889589 0.03837277 0.05509222 0.23271292
 0.03079893 0.01293499 0.01737813 0.05509221 0.1124254  0.04384475
 0.00990485 0.00990485]
[0.156895   0.04658952 0.11859396 0.03628499 0.07245583 0.19789073
 0.0477917  0.02813286 0.03213881 0.07245584 0.09873523 0.06114188
 0.01544682 0.01544682]
[0.19194114 0.03036296 0.15562907 0.03322241 0.06444786 0.1654661
 0.03635633 0.01742125 0.02733419 0.06444786 0.13080451 0.05299453
 0.01478587 0.01478587]
[0.15672164 0.03409771 0.12379961 0.03791271 0.07197427 0.21603727
 0.04554868 0.02316708 0.03187697 0.07197427 0.11228213 0.04867547
 0.01296605 0.01296605]
[0.13202618 0.05309669 0.1408767  0.06018074 0.07953728 0.11143029
 0.04121268 0.04080378 0.04504574 0.07953729 0.09758877 0.05561671
 0.03152359 0.03152359]
[0.17507061 0.03654018 0.15013343 0.04431912 0.06165536 0.19203445
 0.04010829 0.02140762 0.02675379 0.06165536 0.10898627 0.04789769
 0.01671894 0.01671894]
[0.15468036 0.04324909 0.13788609 0.0469308  0.05889443 0.1665219
 0.04183749 0.04290183 0.03677937 0.05889443 0.10952769 0.05795204
 0.02197222 0.02197222]
[0.14988866 0.03909321 0.13703695 0.04176921 0.08002498 0.17017917
 0.04672186 0.02946148 0.03032075 0.08002498 0.10106418 0.0562133
 0.01910063 0.01910063]
[0.14988866 0.03909321 0.13703695 0.04176921 0.08002498 0.17017917
 0.04672186 0.02946148 0.03032075 0.08002498 0.10106418 0.0562133
 0.01910063 0.01910063]]