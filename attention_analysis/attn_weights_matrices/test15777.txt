15777
Test: public void test028() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test028"); org.apache.commons.cli.PosixParser posixParser0 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine1 = posixParser0.cmd; org.apache.commons.cli.Options options2 = posixParser0.getOptions(); org.apache.commons.cli.Options options3 = new org.apache.commons.cli.Options(); org.apache.commons.cli.PosixParser posixParser4 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine5 = posixParser4.cmd; org.apache.commons.cli.Options options6 = posixParser4.getOptions(); java.util.Properties properties7 = null; posixParser4.processProperties(properties7); org.apache.commons.cli.PosixParser posixParser9 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine10 = posixParser9.cmd; org.apache.commons.cli.Options options11 = posixParser9.getOptions(); org.apache.commons.cli.Options options12 = new org.apache.commons.cli.Options(); java.util.List list13 = options12.helpOptions(); java.lang.String[] strArray15 = new java.lang.String[] { "" }; org.apache.commons.cli.CommandLine commandLine16 = posixParser9.parse(options12, strArray15); java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!", "a" }; java.lang.String[] strArray25 = posixParser4.flatten(options12, strArray23, true); org.apache.commons.cli.CommandLine commandLine26 = posixParser0.parse(options3, strArray25); java.lang.Object obj28 = commandLine26.getOptionObject("a"); commandLine26.addArg("a"); }
Code: protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption){init();this.options = options;Iterator iter = Arrays.asList(arguments).iterator();while (iter.hasNext()){String token = (String) iter.next();if (token.startsWith("--")){int pos = token.indexOf('=');String opt = pos == 1 ? token : token.substring(0, pos); if (!options.hasOption(opt)){;}else{tokens.add(opt);if (pos != -1){tokens.add(token.substring(pos + 1));}}}else if ("-".equals(token)){tokens.add(token);}else if (token.startsWith("-")){if (token.length() == 2 || options.hasOption(token)){processOptionToken(token, stopAtNonOption);}else{burstToken(token, stopAtNonOption);}}else if (true){;}else{tokens.add(token);}gobble(iter);}return (String[]) tokens.toArray(new String[tokens.size()]);}
tensor([[0.0158, 0.0048, 0.0170,  ..., 0.0848, 0.0169, 0.0183],
        [0.0141, 0.0042, 0.0155,  ..., 0.0713, 0.0143, 0.0161],
        [0.0150, 0.0072, 0.0198,  ..., 0.0621, 0.0187, 0.0191],
        ...,
        [0.0169, 0.0072, 0.0195,  ..., 0.0699, 0.0228, 0.0162],
        [0.0158, 0.0065, 0.0180,  ..., 0.0614, 0.0164, 0.0157],
        [0.0125, 0.0061, 0.0151,  ..., 0.0758, 0.0189, 0.0176]])