164916
Test: public void test0() throws Throwable { MockRandom mockRandom0 = new MockRandom((-1240L)); JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0); MarsagliaNormalizedGaussianSampler marsagliaNormalizedGaussianSampler0 = new MarsagliaNormalizedGaussianSampler(jDKRandomWrapper0); LogNormalSampler logNormalSampler0 = new LogNormalSampler(marsagliaNormalizedGaussianSampler0, 3.049176835000556E-19, 2156.39); double double0 = logNormalSampler0.sample(); }
Code: public double sample() { return Math.exp(scale + shape * gaussian.sample()); }
[[0.08283159 0.14375319 0.11490123 0.1024209  0.0901682  0.11490123
 0.06693189 0.08037405 0.05528039 0.11490124 0.03353613]
[0.06693535 0.14902346 0.12235509 0.10530581 0.09854347 0.12235509
 0.04540017 0.0862864  0.05276383 0.1223551  0.02867624]
[0.06835587 0.12873085 0.11513294 0.10259318 0.08281268 0.11513294
 0.09278713 0.08116507 0.06287492 0.11513296 0.03528152]
[0.07707755 0.10556483 0.10464068 0.11570605 0.08977987 0.10464068
 0.08004262 0.10525621 0.07054214 0.10464071 0.04210864]
[0.06036096 0.13377419 0.12650165 0.10537495 0.0898025  0.12650165
 0.08251311 0.07340097 0.0457494  0.12650168 0.02951895]
[0.06835587 0.12873085 0.11513294 0.10259318 0.08281268 0.11513294
 0.09278713 0.08116507 0.06287492 0.11513296 0.03528152]
[0.07999086 0.12182777 0.11490521 0.09924728 0.09171909 0.11490521
 0.0649441  0.0941132  0.06828575 0.11490522 0.03515631]
[0.080473   0.11816223 0.11552934 0.14467506 0.08604529 0.11552934
 0.06669051 0.07812979 0.05089523 0.11552937 0.02834084]
[0.09111284 0.1376076  0.10681844 0.1170916  0.08483273 0.10681844
 0.05428529 0.08903013 0.0815217  0.10681845 0.02406274]
[0.06835587 0.12873082 0.11513294 0.10259318 0.08281268 0.11513294
 0.09278715 0.08116508 0.06287493 0.11513296 0.03528152]
[0.05814455 0.12595189 0.11156619 0.13308966 0.12226672 0.11156619
 0.06281761 0.07625562 0.05734768 0.11156622 0.0294277 ]]