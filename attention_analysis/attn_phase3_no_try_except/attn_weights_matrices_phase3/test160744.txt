160744
Test: public void test3() throws Throwable { KeyedPooledObjectFactory<Object, Object> keyedPooledObjectFactory0 = (KeyedPooledObjectFactory<Object, Object>) mock(KeyedPooledObjectFactory.class, new ViolatedAssumptionAnswer()); GenericKeyedObjectPoolConfig<Object> genericKeyedObjectPoolConfig0 = new GenericKeyedObjectPoolConfig<Object>(); GenericKeyedObjectPool<Object, Object> genericKeyedObjectPool0 = new GenericKeyedObjectPool<Object, Object>(keyedPooledObjectFactory0, genericKeyedObjectPoolConfig0); genericKeyedObjectPool0.setMessagesStatistics(true); int int0 = genericKeyedObjectPool0.getRemoveAbandonedTimeout(); FileSystemHandling.shouldAllThrowIOExceptions(); KeyedPooledObjectFactory<LinkedList<Integer>, LinkedList<Object>> keyedPooledObjectFactory1 = (KeyedPooledObjectFactory<LinkedList<Integer>, LinkedList<Object>>) mock(KeyedPooledObjectFactory.class, new ViolatedAssumptionAnswer()); GenericKeyedObjectPoolConfig<LinkedList<Object>> genericKeyedObjectPoolConfig1 = new GenericKeyedObjectPoolConfig<LinkedList<Object>>(); GenericKeyedObjectPoolConfig<LinkedList<Object>> genericKeyedObjectPoolConfig2 = genericKeyedObjectPoolConfig1.clone(); genericKeyedObjectPoolConfig2.setMinEvictableIdleTime(genericKeyedObjectPoolConfig1.DEFAULT_MIN_EVICTABLE_IDLE_DURATION); AbandonedConfig abandonedConfig0 = new AbandonedConfig(); abandonedConfig0.setRequireFullStackTrace(false); GenericKeyedObjectPool<LinkedList<Integer>, LinkedList<Object>> genericKeyedObjectPool1 = new GenericKeyedObjectPool<LinkedList<Integer>, LinkedList<Object>>(keyedPooledObjectFactory1, genericKeyedObjectPoolConfig2, abandonedConfig0); genericKeyedObjectPool1.getCreationStackTrace(); DefaultPooledObject<String> defaultPooledObject0 = new DefaultPooledObject<String>("org.apache.commons.pool2.impl.DefaultEvictionPolicy"); KeyedPooledObjectFactory<Object, String> keyedPooledObjectFactory2 = (KeyedPooledObjectFactory<Object, String>) mock(KeyedPooledObjectFactory.class, new ViolatedAssumptionAnswer()); doReturn(defaultPooledObject0).when(keyedPooledObjectFactory2).makeObject(any()); abandonedConfig0.setRemoveAbandonedOnMaintenance(true); GenericKeyedObjectPool<Object, String> genericKeyedObjectPool2 = new GenericKeyedObjectPool<Object, String>(keyedPooledObjectFactory2); System.setCurrentTimeMillis(0); genericKeyedObjectPool2.addObject(genericKeyedObjectPool1); genericKeyedObjectPool0.getTestOnReturn(); KeyedPooledObjectFactory<Integer, String> keyedPooledObjectFactory3 = (KeyedPooledObjectFactory<Integer, String>) mock(KeyedPooledObjectFactory.class, new ViolatedAssumptionAnswer()); GenericKeyedObjectPool<Integer, String> genericKeyedObjectPool3 = new GenericKeyedObjectPool<Integer, String>(keyedPooledObjectFactory3); genericKeyedObjectPool3.use("C"); KeyedPooledObjectFactory<String, Object> keyedPooledObjectFactory4 = (KeyedPooledObjectFactory<String, Object>) mock(KeyedPooledObjectFactory.class, new ViolatedAssumptionAnswer()); AbandonedConfig abandonedConfig1 = AbandonedConfig.copy(abandonedConfig0); abandonedConfig0.toString(); GenericKeyedObjectPool<String, Object> genericKeyedObjectPool4 = new GenericKeyedObjectPool<String, Object>(keyedPooledObjectFactory4, genericKeyedObjectPoolConfig0, abandonedConfig1); genericKeyedObjectPool4.getNumActive("z;#3_8I"); genericKeyedObjectPool2.getNumWaitersByKey(); genericKeyedObjectPool3.getNumTestsPerEvictionRun(); int int1 = genericKeyedObjectPool3.getRemoveAbandonedTimeout(); }
Code: default int getRemoveAbandonedTimeout() { return 0; }
[[0.29046556 0.04657379 0.14869256 0.19592969 0.13271783 0.14981163
 0.03580888]
[0.30031314 0.04761505 0.17266092 0.17588256 0.11525914 0.15207788
 0.03619133]
[0.2727492  0.06253292 0.16170704 0.16348675 0.11892593 0.1656436
 0.05495457]
[0.21837278 0.05810549 0.15870795 0.19677287 0.13976017 0.15910512
 0.06917566]
[0.34578207 0.04437144 0.14986077 0.16040327 0.11081481 0.14527017
 0.04349744]
[0.26487508 0.05717286 0.14676356 0.17986614 0.12762266 0.17565036
 0.04804934]
[0.23255406 0.05694686 0.14040446 0.19786012 0.16592276 0.16392457
 0.04238715]]