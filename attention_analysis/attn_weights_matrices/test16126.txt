16126
Test: public void testGroovy() throws Exception { Options options = new Options(); options.addOption( OptionBuilder.withLongOpt("define"). withDescription("define a system property"). hasArg(true). withArgName("name=value"). create('D')); options.addOption( OptionBuilder.hasArg(false) .withDescription("usage information") .withLongOpt("help") .create('h')); options.addOption( OptionBuilder.hasArg(false) .withDescription("debug mode will print out full stack traces") .withLongOpt("debug") .create('d')); options.addOption( OptionBuilder.hasArg(false) .withDescription("display the Groovy and JVM versions") .withLongOpt("version") .create('v')); options.addOption( OptionBuilder.withArgName("charset") .hasArg() .withDescription("specify the encoding of the files") .withLongOpt("encoding") .create('c')); options.addOption( OptionBuilder.withArgName("script") .hasArg() .withDescription("specify a command line script") .create('e')); options.addOption( OptionBuilder.withArgName("extension") .hasOptionalArg() .withDescription("modify files in place; create backup if extension is given (e.g. \'.bak\')") .create('i')); options.addOption( OptionBuilder.hasArg(false) .withDescription("process files line by line using implicit 'line' variable") .create('n')); options.addOption( OptionBuilder.hasArg(false) .withDescription("process files line by line and print result (see also -n)") .create('p')); options.addOption( OptionBuilder.withArgName("port") .hasOptionalArg() .withDescription("listen on a port and process inbound lines") .create('l')); options.addOption( OptionBuilder.withArgName("splitPattern") .hasOptionalArg() .withDescription("split lines using splitPattern (default '\\s') using implicit 'split' variable") .withLongOpt("autosplit") .create('a')); Parser parser = new PosixParser(); CommandLine line = parser.parse(options, new String[] { "-e", "println 'hello'" }, true); }
Code: public static Option create(String opt){Option option = new Option(opt, description);option.setLongOpt(longopt);option.setRequired(required);option.setOptionalArg(optionalArg);option.setArgs(numberOfArgs);;option.setValueSeparator(valuesep);;OptionBuilder.reset();return option;}
tensor([[0.0445, 0.1548, 0.1385, 0.0952, 0.3189, 0.0785, 0.0288, 0.0216, 0.0506,
         0.0380, 0.0307],
        [0.0510, 0.1498, 0.1349, 0.0973, 0.3080, 0.0900, 0.0331, 0.0227, 0.0428,
         0.0461, 0.0243],
        [0.0370, 0.1633, 0.1129, 0.1115, 0.3388, 0.0661, 0.0324, 0.0174, 0.0509,
         0.0436, 0.0261],
        [0.0333, 0.1596, 0.1320, 0.0921, 0.3239, 0.0874, 0.0251, 0.0197, 0.0530,
         0.0439, 0.0299],
        [0.0426, 0.1386, 0.1343, 0.0758, 0.3368, 0.0601, 0.0410, 0.0245, 0.0559,
         0.0594, 0.0310],
        [0.0296, 0.1384, 0.0872, 0.1127, 0.4149, 0.0627, 0.0248, 0.0188, 0.0430,
         0.0436, 0.0241],
        [0.0606, 0.1414, 0.1368, 0.1192, 0.2202, 0.0858, 0.0492, 0.0283, 0.0504,
         0.0596, 0.0485],
        [0.0405, 0.1312, 0.1194, 0.0823, 0.3821, 0.0738, 0.0308, 0.0242, 0.0453,
         0.0436, 0.0268],
        [0.0585, 0.1395, 0.1290, 0.0758, 0.3015, 0.0875, 0.0391, 0.0238, 0.0590,
         0.0563, 0.0299],
        [0.0650, 0.1027, 0.1511, 0.0857, 0.2576, 0.1174, 0.0394, 0.0337, 0.0531,
         0.0532, 0.0412],
        [0.0407, 0.1420, 0.1200, 0.0875, 0.3258, 0.0828, 0.0366, 0.0316, 0.0524,
         0.0481, 0.0328]])