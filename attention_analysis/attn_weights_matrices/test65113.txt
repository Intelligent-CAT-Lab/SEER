65113
Test: public void testExceptionWithGeneratorMapping() throws Exception { JsonFactory f = new MappingJsonFactory(); JsonGenerator jg = f.createGenerator(new BrokenStringWriter("TEST")); try { jg.writeObject(createLongObject()); fail("Should have gotten an exception"); } catch (Exception e) { verifyException(e, IOException.class, "TEST"); } }
Code: public void writeObject(Object value) throws IOException { _append(JsonToken.VALUE_EMBEDDED_OBJECT, value); }
[[0.08591166 0.07039115 0.06687443 0.09832692 0.19825804 0.04626834
 0.1217839  0.06001903 0.21398014 0.0381864 ]
[0.07052045 0.0623403  0.07234626 0.10063899 0.249345   0.04040099
 0.1265138  0.03501023 0.20453054 0.03835341]
[0.0615953  0.05352465 0.07782896 0.09671853 0.21177137 0.05090912
 0.16079974 0.04170403 0.20979887 0.03534941]
[0.081163   0.05767484 0.0704992  0.09660563 0.25307584 0.04491823
 0.13509908 0.05025807 0.17735687 0.03334924]
[0.05889571 0.05703418 0.07052402 0.11489742 0.28671718 0.03760318
 0.1426026  0.03438271 0.1694975  0.02784555]
[0.07256747 0.05752169 0.06582493 0.09774862 0.2795822  0.04106341
 0.12984924 0.04934537 0.17891303 0.02758409]
[0.09598929 0.08250147 0.08253644 0.11043915 0.17285568 0.06207376
 0.13991612 0.06046572 0.14158875 0.05163353]
[0.06724212 0.05427551 0.08571928 0.07213199 0.26923445 0.05030718
 0.13718134 0.0483187  0.183628   0.03196147]
[0.07825015 0.08239385 0.07859951 0.09919062 0.19149365 0.04344207
 0.13767725 0.06166958 0.19671492 0.03056839]
[0.06310949 0.05759939 0.11443894 0.07604236 0.26650023 0.0487641
 0.15274133 0.04930184 0.13817783 0.03332445]]