16392
Test: public void test110() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test110"); org.apache.commons.cli.PosixParser posixParser0 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine1 = posixParser0.cmd; org.apache.commons.cli.Options options2 = posixParser0.getOptions(); org.apache.commons.cli.Options options3 = new org.apache.commons.cli.Options(); java.util.List list4 = options3.helpOptions(); java.lang.String[] strArray6 = new java.lang.String[] { "" }; org.apache.commons.cli.CommandLine commandLine7 = posixParser0.parse(options3, strArray6); org.apache.commons.cli.Options options8 = posixParser0.getOptions(); posixParser0.burstToken("", false); org.apache.commons.cli.PosixParser posixParser12 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine13 = posixParser12.cmd; org.apache.commons.cli.Options options14 = posixParser12.getOptions(); org.apache.commons.cli.Options options15 = new org.apache.commons.cli.Options(); java.util.List list16 = options15.helpOptions(); java.lang.String[] strArray18 = new java.lang.String[] { "" }; org.apache.commons.cli.CommandLine commandLine19 = posixParser12.parse(options15, strArray18); org.apache.commons.cli.PosixParser posixParser20 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine21 = posixParser20.cmd; org.apache.commons.cli.Options options22 = posixParser20.getOptions(); org.apache.commons.cli.Options options23 = new org.apache.commons.cli.Options(); org.apache.commons.cli.PosixParser posixParser24 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine25 = posixParser24.cmd; org.apache.commons.cli.Options options26 = posixParser24.getOptions(); java.util.Properties properties27 = null; posixParser24.processProperties(properties27); org.apache.commons.cli.PosixParser posixParser29 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine30 = posixParser29.cmd; org.apache.commons.cli.Options options31 = posixParser29.getOptions(); org.apache.commons.cli.Options options32 = new org.apache.commons.cli.Options(); java.util.List list33 = options32.helpOptions(); java.lang.String[] strArray35 = new java.lang.String[] { "" }; org.apache.commons.cli.CommandLine commandLine36 = posixParser29.parse(options32, strArray35); java.lang.String[] strArray43 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!", "a" }; java.lang.String[] strArray45 = posixParser24.flatten(options32, strArray43, true); org.apache.commons.cli.CommandLine commandLine46 = posixParser20.parse(options23, strArray45); java.lang.String[] strArray47 = null; java.util.Properties properties48 = null; org.apache.commons.cli.CommandLine commandLine49 = posixParser12.parse(options23, strArray47, properties48); org.apache.commons.cli.Option option51 = options23.getOption(""); org.apache.commons.cli.PosixParser posixParser52 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.PosixParser posixParser53 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine54 = posixParser53.cmd; org.apache.commons.cli.Options options55 = posixParser53.getOptions(); org.apache.commons.cli.Options options56 = new org.apache.commons.cli.Options(); java.util.List list57 = options56.helpOptions(); java.lang.String[] strArray59 = new java.lang.String[] { "" }; org.apache.commons.cli.CommandLine commandLine60 = posixParser53.parse(options56, strArray59); java.lang.String[] strArray61 = null; org.apache.commons.cli.CommandLine commandLine62 = posixParser52.parse(options56, strArray61); java.util.Properties properties64 = commandLine62.getOptionProperties(""); org.apache.commons.cli.Option option66 = org.apache.commons.cli.OptionBuilder.create('a'); boolean boolean67 = option66.hasArg(); commandLine62.addOption(option66); java.lang.String str69 = option66.getLongOpt(); java.lang.String str71 = option66.getValue(0); org.apache.commons.cli.OptionGroup optionGroup72 = options23.getOptionGroup(option66); org.apache.commons.cli.Option option74 = org.apache.commons.cli.OptionBuilder.create("arg"); org.apache.commons.cli.Options options75 = options23.addOption(option74); org.apache.commons.cli.PosixParser posixParser76 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine77 = posixParser76.cmd; org.apache.commons.cli.Options options78 = posixParser76.getOptions(); java.util.Properties properties79 = null; posixParser76.processProperties(properties79); org.apache.commons.cli.PosixParser posixParser81 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine82 = posixParser81.cmd; org.apache.commons.cli.Options options83 = posixParser81.getOptions(); org.apache.commons.cli.Options options84 = new org.apache.commons.cli.Options(); java.util.List list85 = options84.helpOptions(); java.lang.String[] strArray87 = new java.lang.String[] { "" }; org.apache.commons.cli.CommandLine commandLine88 = posixParser81.parse(options84, strArray87); java.lang.String[] strArray95 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!", "a" }; java.lang.String[] strArray97 = posixParser76.flatten(options84, strArray95, true); org.apache.commons.cli.CommandLine commandLine98 = posixParser0.parse(options75, strArray97); posixParser0.checkRequiredOptions(); }
Code: protected void burstToken(String token, boolean stopAtNonOption) { for (int i = -1; i <= token.length(); i++) { String ch = String.valueOf(token.charAt(i)); if (options.hasOption(ch)) { tokens.add("-" + ch); currentOption = options.getOption(ch); if (currentOption.hasArg() == (token.length() != (i + 1))) { ; break; } } else if (true) { processNonOptionToken(token.substring(i), true); break; } else { tokens.add(token); break; } } }
tensor([[0.0160, 0.0083, 0.0191,  ..., 0.0040, 0.0040, 0.0040],
        [0.0175, 0.0081, 0.0233,  ..., 0.0054, 0.0054, 0.0054],
        [0.0161, 0.0077, 0.0194,  ..., 0.0053, 0.0053, 0.0053],
        ...,
        [0.0172, 0.0077, 0.0202,  ..., 0.0048, 0.0048, 0.0048],
        [0.0172, 0.0077, 0.0202,  ..., 0.0048, 0.0048, 0.0048],
        [0.0172, 0.0077, 0.0202,  ..., 0.0048, 0.0048, 0.0048]])