67883
Test: public void test876() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test876"); com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null; com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0); int int2 = xmlSerializerProvider1.cachedSerializersCount(); boolean boolean4 = xmlSerializerProvider1.includeFilterSuppressNulls((java.lang.Object) (short) 0); com.fasterxml.jackson.dataformat.xml.JacksonXmlModule jacksonXmlModule6 = null; com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(jacksonXmlModule6); com.fasterxml.jackson.databind.PropertyNamingStrategy propertyNamingStrategy8 = xmlMapper7.getPropertyNamingStrategy(); com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector9 = null; com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector10 = null; com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = xmlMapper7.setAnnotationIntrospectors(annotationIntrospector9, annotationIntrospector10); com.fasterxml.jackson.annotation.JsonInclude.Include include12 = null; com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = objectMapper11.setSerializationInclusion(include12); com.fasterxml.jackson.databind.PropertyNamingStrategy propertyNamingStrategy14 = objectMapper13.getPropertyNamingStrategy(); com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray15 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {}; objectMapper13.registerSubtypes(namedTypeArray15); com.fasterxml.jackson.databind.JsonMappingException jsonMappingException17 = xmlSerializerProvider1.mappingException("xmlInfo", (java.lang.Object[]) namedTypeArray15); }
Code: protected XmlSerializerProvider(XmlSerializerProvider src) { super(src); _rootNameLookup = new XmlRootNameLookup(); }
[[0.15873751 0.09880935 0.09431486 0.16942419 0.0477096  0.05652901
 0.06767977 0.04132008 0.2313938  0.03408188]
[0.15344304 0.10386926 0.10882913 0.14736266 0.05995402 0.06060034
 0.0613979  0.04172421 0.22484751 0.03797195]
[0.14654018 0.09728298 0.10366036 0.17178117 0.05310424 0.08421149
 0.06478402 0.03752169 0.20722073 0.03389309]
[0.17866151 0.10039898 0.1018561  0.15485011 0.05391405 0.06192411
 0.07727094 0.05070805 0.1667991  0.05361708]
[0.17507216 0.09457049 0.11422358 0.13548535 0.05126155 0.08219662
 0.06704421 0.04180788 0.20383906 0.0344991 ]
[0.16780962 0.10722855 0.10777827 0.13265826 0.04711027 0.04992538
 0.06790618 0.04229331 0.23468009 0.04261005]
[0.15612313 0.11163482 0.10134819 0.12515621 0.05767913 0.07974912
 0.08858833 0.04948739 0.17734437 0.05288939]
[0.17221344 0.09531792 0.10672333 0.15663925 0.04808199 0.06917582
 0.06579388 0.0531562  0.18787394 0.04502415]
[0.15351352 0.10432938 0.09416802 0.19149476 0.04734521 0.06351733
 0.04905872 0.03644885 0.22635923 0.033765  ]
[0.15475067 0.09862643 0.09923044 0.18765709 0.05568799 0.06856855
 0.06482663 0.03987408 0.19063342 0.04014466]]