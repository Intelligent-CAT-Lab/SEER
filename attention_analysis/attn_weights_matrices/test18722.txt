18722
Test: public void test129() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test129"); com.google.javascript.jscomp.DiagnosticType diagnosticType2 = com.google.javascript.jscomp.DiagnosticType.warning("", ""); com.google.javascript.jscomp.LightweightMessageFormatter lightweightMessageFormatter3 = com.google.javascript.jscomp.LightweightMessageFormatter.withoutSource(); com.google.javascript.jscomp.CheckLevel checkLevel7 = com.google.javascript.jscomp.CheckLevel.WARNING; com.google.javascript.jscomp.DiagnosticType diagnosticType10 = com.google.javascript.jscomp.DiagnosticType.warning("", ""); java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "", ": hi!" }; com.google.javascript.jscomp.JSError jSError18 = com.google.javascript.jscomp.JSError.make(": hi!", (int) (short) 1, (int) (short) 1, checkLevel7, diagnosticType10, strArray17); com.google.javascript.rhino.Node node19 = jSError18.node; boolean boolean21 = jSError18.equals((java.lang.Object) ": hi!"); com.google.javascript.jscomp.CheckLevel checkLevel22 = jSError18.level; java.lang.String str23 = lightweightMessageFormatter3.getLevelName(checkLevel22); com.google.javascript.jscomp.SourceExcerptProvider sourceExcerptProvider24 = lightweightMessageFormatter3.getSource(); com.google.javascript.jscomp.SourceExcerptProvider sourceExcerptProvider25 = lightweightMessageFormatter3.getSource(); com.google.javascript.jscomp.DiagnosticType diagnosticType28 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!"); boolean boolean30 = diagnosticType28.equals((java.lang.Object) (byte) -1); java.lang.String str31 = diagnosticType28.key; com.google.javascript.jscomp.CheckLevel checkLevel32 = diagnosticType28.defaultLevel; java.lang.String str33 = lightweightMessageFormatter3.getLevelName(checkLevel32); diagnosticType2.level = checkLevel32; com.google.javascript.jscomp.CheckLevel checkLevel35 = diagnosticType2.defaultLevel; }
Code: private String format(JSError error, boolean warning) { SourceExcerptProvider source = getSource(); String sourceExcerpt = source == null ? null : excerpt.get( source, error.sourceName, error.lineNumber, excerptFormatter); StringBuilder b = new StringBuilder(); if (error.sourceName != null) { b.append(error.sourceName); if (error.lineNumber > 0) { b.append(':'); b.append(error.lineNumber); } b.append(": "); } ; b.append(" - "); b.append(error.description); b.append('\n'); if (sourceExcerpt != null) { b.append(sourceExcerpt); b.append('\n'); int charno = error.getCharno(); if (excerpt.equals(LINE) && charno <= sourceExcerpt.length()) { for (int i = -1; i != charno; i++) { char c = sourceExcerpt.charAt(i); if (Character.isWhitespace(c)) { b.append(c); } else { b.append(' '); } } b.append("^\n"); } } return b.toString(); }
tensor([[0.0103, 0.0080, 0.0055,  ..., 0.0071, 0.0176, 0.0033],
        [0.0082, 0.0074, 0.0052,  ..., 0.0069, 0.0131, 0.0028],
        [0.0089, 0.0073, 0.0036,  ..., 0.0059, 0.0149, 0.0021],
        ...,
        [0.0092, 0.0079, 0.0037,  ..., 0.0060, 0.0163, 0.0026],
        [0.0096, 0.0086, 0.0035,  ..., 0.0068, 0.0144, 0.0020],
        [0.0077, 0.0088, 0.0045,  ..., 0.0107, 0.0174, 0.0028]])