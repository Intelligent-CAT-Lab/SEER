17856
Test: public void testApply2() throws Exception { testMarkCalls("var f = function() {}", "f.apply()", ImmutableList.<String>of()); }
Code: public boolean apply(JSType type) { if (!type.isSubtype( typeRegistry.getNativeType(OBJECT_TYPE))) { reportWarning(THIS_TYPE_NON_OBJECT, type.toString()); return false; } return true; }
tensor([[0.0353, 0.0794, 0.1308, 0.0376, 0.0556, 0.0959, 0.1764, 0.0543, 0.0556,
         0.0404, 0.0514, 0.0399, 0.0503, 0.0169, 0.0399, 0.0236, 0.0169],
        [0.0224, 0.0998, 0.1353, 0.0362, 0.0666, 0.0868, 0.1900, 0.0398, 0.0666,
         0.0325, 0.0540, 0.0403, 0.0459, 0.0120, 0.0403, 0.0197, 0.0120],
        [0.0290, 0.0916, 0.1408, 0.0345, 0.0565, 0.0939, 0.2113, 0.0406, 0.0565,
         0.0317, 0.0504, 0.0348, 0.0494, 0.0136, 0.0348, 0.0170, 0.0136],
        [0.0316, 0.0991, 0.0977, 0.0473, 0.0573, 0.0929, 0.1867, 0.0480, 0.0573,
         0.0419, 0.0615, 0.0415, 0.0491, 0.0112, 0.0415, 0.0245, 0.0112],
        [0.0402, 0.0822, 0.0843, 0.0512, 0.0700, 0.0685, 0.1562, 0.0580, 0.0700,
         0.0432, 0.0500, 0.0456, 0.0590, 0.0238, 0.0456, 0.0285, 0.0238],
        [0.0171, 0.0811, 0.1806, 0.0325, 0.0484, 0.1009, 0.2707, 0.0307, 0.0484,
         0.0211, 0.0543, 0.0233, 0.0361, 0.0069, 0.0233, 0.0178, 0.0069],
        [0.0258, 0.0900, 0.1210, 0.0448, 0.0567, 0.1081, 0.1964, 0.0464, 0.0567,
         0.0360, 0.0448, 0.0411, 0.0405, 0.0154, 0.0411, 0.0196, 0.0154],
        [0.0341, 0.0617, 0.1166, 0.0434, 0.0549, 0.0910, 0.1837, 0.0643, 0.0549,
         0.0499, 0.0473, 0.0375, 0.0530, 0.0215, 0.0375, 0.0273, 0.0215],
        [0.0402, 0.0822, 0.0843, 0.0512, 0.0700, 0.0685, 0.1562, 0.0580, 0.0700,
         0.0432, 0.0500, 0.0456, 0.0590, 0.0238, 0.0456, 0.0285, 0.0238],
        [0.0236, 0.0957, 0.0962, 0.0363, 0.0657, 0.0886, 0.2024, 0.0374, 0.0657,
         0.0399, 0.0558, 0.0382, 0.0551, 0.0178, 0.0382, 0.0255, 0.0178],
        [0.0380, 0.1100, 0.1051, 0.0439, 0.0547, 0.0912, 0.1722, 0.0500, 0.0547,
         0.0394, 0.0672, 0.0372, 0.0456, 0.0148, 0.0372, 0.0242, 0.0148],
        [0.0233, 0.0922, 0.1518, 0.0324, 0.0545, 0.0903, 0.2058, 0.0397, 0.0545,
         0.0350, 0.0556, 0.0323, 0.0536, 0.0145, 0.0323, 0.0178, 0.0145],
        [0.0368, 0.0925, 0.0825, 0.0395, 0.0559, 0.0775, 0.1819, 0.0482, 0.0559,
         0.0469, 0.0496, 0.0445, 0.0677, 0.0222, 0.0445, 0.0316, 0.0222],
        [0.0229, 0.0755, 0.0810, 0.0413, 0.0659, 0.0899, 0.1970, 0.0440, 0.0659,
         0.0531, 0.0473, 0.0521, 0.0527, 0.0138, 0.0521, 0.0316, 0.0138],
        [0.0233, 0.0922, 0.1518, 0.0324, 0.0545, 0.0903, 0.2058, 0.0397, 0.0545,
         0.0350, 0.0556, 0.0323, 0.0536, 0.0145, 0.0323, 0.0178, 0.0145],
        [0.0272, 0.1191, 0.1224, 0.0404, 0.0602, 0.0927, 0.1822, 0.0353, 0.0602,
         0.0348, 0.0521, 0.0372, 0.0474, 0.0122, 0.0372, 0.0272, 0.0122],
        [0.0229, 0.0755, 0.0810, 0.0413, 0.0659, 0.0899, 0.1970, 0.0440, 0.0659,
         0.0531, 0.0473, 0.0521, 0.0527, 0.0138, 0.0521, 0.0316, 0.0138]])