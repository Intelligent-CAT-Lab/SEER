70172
Test: public void test095() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test095"); org.apache.commons.jxpath.ri.compiler.TreeCompiler treeCompiler0 = new org.apache.commons.jxpath.ri.compiler.TreeCompiler(); java.lang.Object obj3 = treeCompiler0.qname("/", "http: java.lang.Object obj6 = treeCompiler0.qname("org.apache.commons.jxpath.JXPathAbstractFactoryException: <<unknown namespace>>", ""); org.apache.commons.jxpath.ri.compiler.Constant constant8 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant10 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant12 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.NameAttributeTest nameAttributeTest13 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest((org.apache.commons.jxpath.ri.compiler.Expression) constant10, (org.apache.commons.jxpath.ri.compiler.Expression) constant12); org.apache.commons.jxpath.ri.compiler.CoreOperationEqual coreOperationEqual14 = new org.apache.commons.jxpath.ri.compiler.CoreOperationEqual((org.apache.commons.jxpath.ri.compiler.Expression) constant8, (org.apache.commons.jxpath.ri.compiler.Expression) nameAttributeTest13); boolean boolean15 = nameAttributeTest13.isContextDependent(); org.apache.commons.jxpath.ri.compiler.Constant constant17 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant19 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.NameAttributeTest nameAttributeTest20 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest((org.apache.commons.jxpath.ri.compiler.Expression) constant17, (org.apache.commons.jxpath.ri.compiler.Expression) constant19); org.apache.commons.jxpath.ri.EvalContext evalContext21 = null; org.apache.commons.jxpath.ri.compiler.Constant constant23 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant25 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.NameAttributeTest nameAttributeTest26 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest((org.apache.commons.jxpath.ri.compiler.Expression) constant23, (org.apache.commons.jxpath.ri.compiler.Expression) constant25); org.apache.commons.jxpath.ri.compiler.Constant constant28 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant30 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.NameAttributeTest nameAttributeTest31 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest((org.apache.commons.jxpath.ri.compiler.Expression) constant28, (org.apache.commons.jxpath.ri.compiler.Expression) constant30); boolean boolean32 = nameAttributeTest20.equal(evalContext21, (org.apache.commons.jxpath.ri.compiler.Expression) constant23, (org.apache.commons.jxpath.ri.compiler.Expression) nameAttributeTest31); org.apache.commons.jxpath.ri.compiler.Constant constant34 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant36 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant38 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.NameAttributeTest nameAttributeTest39 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest((org.apache.commons.jxpath.ri.compiler.Expression) constant36, (org.apache.commons.jxpath.ri.compiler.Expression) constant38); org.apache.commons.jxpath.ri.compiler.CoreOperationEqual coreOperationEqual40 = new org.apache.commons.jxpath.ri.compiler.CoreOperationEqual((org.apache.commons.jxpath.ri.compiler.Expression) constant34, (org.apache.commons.jxpath.ri.compiler.Expression) nameAttributeTest39); org.apache.commons.jxpath.ri.compiler.Constant constant42 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant44 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant46 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.NameAttributeTest nameAttributeTest47 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest((org.apache.commons.jxpath.ri.compiler.Expression) constant44, (org.apache.commons.jxpath.ri.compiler.Expression) constant46); org.apache.commons.jxpath.ri.compiler.CoreOperationEqual coreOperationEqual48 = new org.apache.commons.jxpath.ri.compiler.CoreOperationEqual((org.apache.commons.jxpath.ri.compiler.Expression) constant42, (org.apache.commons.jxpath.ri.compiler.Expression) nameAttributeTest47); boolean boolean49 = org.apache.commons.jxpath.util.ValueUtils.isCollection((java.lang.Object) constant42); org.apache.commons.jxpath.ri.compiler.Expression[] expressionArray50 = new org.apache.commons.jxpath.ri.compiler.Expression[] { nameAttributeTest31, constant34, constant42 }; nameAttributeTest13.args = expressionArray50; java.lang.Object obj52 = treeCompiler0.sum((java.lang.Object[]) expressionArray50); org.apache.commons.jxpath.ri.compiler.TreeCompiler treeCompiler53 = new org.apache.commons.jxpath.ri.compiler.TreeCompiler(); java.lang.Object obj55 = treeCompiler53.literal("http: java.lang.Object[] objArray56 = new java.lang.Object[] {}; java.lang.Object obj57 = treeCompiler53.union(objArray56); org.apache.commons.jxpath.JXPathContext jXPathContext58 = null; org.apache.commons.jxpath.JXPathContext jXPathContext60 = org.apache.commons.jxpath.JXPathContext.newContext(jXPathContext58, (java.lang.Object) 75); org.apache.commons.jxpath.KeyManager keyManager61 = null; jXPathContext60.setKeyManager(keyManager61); org.apache.commons.jxpath.IdentityManager identityManager63 = jXPathContext60.getIdentityManager(); org.apache.commons.jxpath.Functions functions64 = null; jXPathContext60.setFunctions(functions64); org.apache.commons.jxpath.JXPathContext jXPathContext66 = null; org.apache.commons.jxpath.JXPathContext jXPathContext68 = org.apache.commons.jxpath.JXPathContext.newContext(jXPathContext66, (java.lang.Object) 75); org.apache.commons.jxpath.KeyManager keyManager69 = null; jXPathContext68.setKeyManager(keyManager69); org.apache.commons.jxpath.KeyManager keyManager71 = null; jXPathContext68.setKeyManager(keyManager71); org.apache.commons.jxpath.Pointer pointer73 = jXPathContext68.getContextPointer(); java.util.Locale locale74 = jXPathContext68.getLocale(); org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer jDOMNodePointer75 = new org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer((java.lang.Object) functions64, locale74); org.apache.commons.jxpath.ri.model.beans.CollectionPointer collectionPointer76 = new org.apache.commons.jxpath.ri.model.beans.CollectionPointer((java.lang.Object) objArray56, locale74); java.lang.Object obj77 = treeCompiler0.or(objArray56); org.apache.commons.jxpath.JXPathAbstractFactoryException jXPathAbstractFactoryException79 = new org.apache.commons.jxpath.JXPathAbstractFactoryException("<<unknown namespace>>"); org.apache.commons.jxpath.JXPathException jXPathException80 = new org.apache.commons.jxpath.JXPathException((java.lang.Throwable) jXPathAbstractFactoryException79); java.lang.Throwable[] throwableArray81 = jXPathAbstractFactoryException79.getSuppressed(); org.apache.commons.jxpath.ri.parser.Token token82 = new org.apache.commons.jxpath.ri.parser.Token(); int int83 = token82.beginColumn; token82.kind = 40; try { java.lang.Object obj86 = treeCompiler0.multiply((java.lang.Object) throwableArray81, (java.lang.Object) 40); } catch (java.lang.ClassCastException e) { } }
Code: protected boolean equal( EvalContext context, Expression left, Expression right) { Object l = left.compute(context); Object r = right.compute(context); if (l instanceof InitialContext) { ((EvalContext) l).reset(); } if (l instanceof SelfContext) { l = ((EvalContext) l).getSingleNodePointer(); } if (r instanceof InitialContext) { ((EvalContext) r).reset(); } if (r instanceof SelfContext) { r = ((EvalContext) r).getSingleNodePointer(); } if (l instanceof Collection) { l = ((Collection) l).iterator(); } if (r instanceof Collection) { r = ((Collection) r).iterator(); } if ((l instanceof Iterator) && !(r instanceof Iterator)) { return contains((Iterator) l, r); } if (!(l instanceof Iterator) && (r instanceof Iterator)) { return contains((Iterator) r, l); } if (l instanceof Iterator && r instanceof Iterator) { return findMatch((Iterator) l, (Iterator) r); } return equal(l, r); }
tensor([[0.0106, 0.0185, 0.0267,  ..., 0.0151, 0.0092, 0.0020],
        [0.0111, 0.0234, 0.0248,  ..., 0.0204, 0.0091, 0.0020],
        [0.0084, 0.0176, 0.0351,  ..., 0.0152, 0.0102, 0.0019],
        ...,
        [0.0116, 0.0164, 0.0266,  ..., 0.0200, 0.0111, 0.0019],
        [0.0102, 0.0209, 0.0220,  ..., 0.0145, 0.0094, 0.0022],
        [0.0099, 0.0155, 0.0158,  ..., 0.0187, 0.0116, 0.0023]])