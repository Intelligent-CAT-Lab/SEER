67539
Test: public void testSimpleNumbers() throws Exception { final StringBuilder sb = new StringBuilder(); MAPPER.acceptJsonFormatVisitor(Numbers.class, new JsonFormatVisitorWrapper.Base() { @Override public JsonObjectFormatVisitor expectObjectFormat(final JavaType type) { return new JsonObjectFormatVisitor.Base(getProvider()) { @Override public void optionalProperty(BeanProperty prop) throws JsonMappingException { sb.append("[optProp ").append(prop.getName()).append("("); JsonSerializer<Object> ser = null; if (prop instanceof BeanPropertyWriter) { BeanPropertyWriter bpw = (BeanPropertyWriter) prop; ser = bpw.getSerializer(); } final SerializerProvider prov = getProvider(); if (ser == null) { ser = prov.findValueSerializer(prop.getType(), prop); } ser.acceptJsonFormatVisitor(new JsonFormatVisitorWrapper.Base() { @Override public JsonNumberFormatVisitor expectNumberFormat( JavaType t) throws JsonMappingException { return new JsonNumberFormatVisitor() { @Override public void format(JsonValueFormat format) { sb.append("[numberFormat=").append(format).append("]"); } @Override public void enumTypes(Set<String> enums) { } @Override public void numberType(NumberType numberType) { sb.append("[numberType=").append(numberType).append("]"); } }; } @Override public JsonIntegerFormatVisitor expectIntegerFormat(JavaType t) throws JsonMappingException { return new JsonIntegerFormatVisitor() { @Override public void format(JsonValueFormat format) { sb.append("[integerFormat=").append(format).append("]"); } @Override public void enumTypes(Set<String> enums) { } @Override public void numberType(NumberType numberType) { sb.append("[numberType=").append(numberType).append("]"); } }; } }, prop.getType()); sb.append(")]"); } }; } }); }
Code: public void acceptJsonFormatVisitor(JsonFormatVisitorWrapper visitor, JavaType typeHint){if (true) {;} else {if (((Class<?>) handledType()) == BigDecimal.class) {visitFloatFormat(visitor, typeHint, JsonParser.NumberType.BIG_DECIMAL);} else {}
[[0.04429493 0.03676331 0.04250618 0.05717924 0.07092325 0.0381189
 0.10755246 0.02242293 0.05947249 0.05316153 0.05090353 0.02926786
 0.06772639 0.04249488 0.05992477 0.0850201  0.03564009 0.05947251
 0.03715462]
[0.03386328 0.03080608 0.03695321 0.04233782 0.08183872 0.04322201
 0.16575894 0.01908041 0.06546713 0.03748775 0.04335723 0.02154554
 0.04816087 0.04470852 0.03529411 0.10866008 0.02932832 0.06546715
 0.04666289]
[0.03376099 0.03046359 0.04781167 0.05427454 0.07168171 0.03929366
 0.11158259 0.02474824 0.05925946 0.04039214 0.05400585 0.02038599
 0.05822823 0.06163818 0.0379207  0.11655533 0.03536463 0.05925947
 0.043373  ]
[0.04127145 0.03098489 0.0342904  0.05199657 0.07050826 0.03616902
 0.123592   0.0228642  0.07021684 0.04631684 0.06443013 0.02176882
 0.06246701 0.04894792 0.03335099 0.08791625 0.03520179 0.07021685
 0.04748977]
[0.04514878 0.02623488 0.0357707  0.05155313 0.08113176 0.03539089
 0.13705343 0.02167527 0.05793967 0.03127269 0.06034913 0.02222389
 0.0662342  0.05235045 0.04339547 0.09825612 0.03478775 0.0579397
 0.04129212]
[0.03939897 0.03974132 0.04052951 0.04914827 0.07259861 0.04203946
 0.12839545 0.02788433 0.06829774 0.04665706 0.046011   0.02762119
 0.05465532 0.0431357  0.03444866 0.07885131 0.04043135 0.06829777
 0.05185697]
[0.03088912 0.02534699 0.0388322  0.04871439 0.07067072 0.03731944
 0.17139128 0.01603068 0.07135482 0.03472647 0.04703012 0.01629275
 0.0553727  0.04409166 0.03498478 0.10880984 0.03306436 0.07135486
 0.0437228 ]
[0.04239367 0.03302474 0.03523741 0.05831406 0.07254688 0.04014489
 0.15646699 0.02708844 0.07021049 0.03786679 0.04946505 0.02125989
 0.04747323 0.0392494  0.0351737  0.08851509 0.03575952 0.07021052
 0.0395992 ]
[0.03493895 0.02712446 0.03869785 0.05142259 0.0802972  0.0412394
 0.15230821 0.0239212  0.06607682 0.03810942 0.05142199 0.02038453
 0.05362652 0.06669071 0.03187761 0.08291022 0.03143602 0.06607686
 0.04143944]
[0.02954384 0.02727009 0.04899774 0.055172   0.06703865 0.0512847
 0.12882681 0.01707635 0.06194858 0.03574778 0.07614845 0.02165112
 0.06369874 0.04687466 0.03841103 0.09363523 0.04040104 0.06194858
 0.03432458]
[0.04045203 0.03497659 0.03213451 0.04749076 0.06852087 0.04279092
 0.132756   0.02629057 0.07775289 0.04634427 0.03966136 0.02240984
 0.05058549 0.04883697 0.04217062 0.07668218 0.03989905 0.07775292
 0.05249218]
[0.039892   0.03318957 0.05226985 0.05315974 0.07404873 0.03847856
 0.11916196 0.01829372 0.05595516 0.03879754 0.05659099 0.02510732
 0.061437   0.04295356 0.05489621 0.09767013 0.04284615 0.05595517
 0.03929661]
[0.02375884 0.02634945 0.04556348 0.04523908 0.0767802  0.03407597
 0.17101243 0.0171455  0.06299503 0.02823908 0.04175215 0.01650383
 0.05812091 0.04504238 0.03320405 0.1519851  0.02489593 0.06299505
 0.03434157]
[0.04016604 0.03340921 0.03674246 0.05159587 0.08235432 0.03926818
 0.16352001 0.02541553 0.06474461 0.03556463 0.04633331 0.02271817
 0.04730476 0.03721319 0.03720654 0.09236847 0.0355511  0.06474464
 0.04377904]
[0.03883629 0.03079325 0.04882611 0.04844875 0.06521039 0.03709912
 0.11163972 0.02128045 0.06368405 0.04275318 0.05563126 0.02054115
 0.05983956 0.05950836 0.05041591 0.10248178 0.03805876 0.06368406
 0.04126786]
[0.03704038 0.02781752 0.04556285 0.06069582 0.07018574 0.03956101
 0.14840251 0.0174111  0.06421641 0.03066959 0.05095091 0.01884787
 0.05623747 0.04480607 0.03839117 0.11275569 0.03587949 0.06421645
 0.03635195]
[0.0370414  0.03367548 0.03680169 0.04664395 0.07616489 0.04527321
 0.15276708 0.02413156 0.06268203 0.03707391 0.04849482 0.01920677
 0.05567806 0.05034301 0.03680531 0.09039468 0.03818896 0.06268204
 0.04595117]
[0.03493895 0.02712445 0.03869785 0.0514226  0.08029719 0.0412394
 0.15230823 0.0239212  0.06607683 0.03810943 0.05142201 0.02038453
 0.05362652 0.06669071 0.03187761 0.08291017 0.03143602 0.06607685
 0.04143945]
[0.04887056 0.03397495 0.04453037 0.05945961 0.07696406 0.0374229
 0.14015773 0.0214757  0.05435108 0.04546492 0.0437773  0.02353679
 0.04998453 0.04827167 0.04678569 0.08649836 0.03655837 0.05435109
 0.04756433]]