18005
Test: public void test03() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test03"); com.google.javascript.jscomp.PrepareAst.PrepareAnnotations prepareAnnotations0 = new com.google.javascript.jscomp.PrepareAst.PrepareAnnotations(); com.google.javascript.jscomp.AbstractCompiler abstractCompiler1 = null; com.google.javascript.jscomp.FlowSensitiveInlineVariables flowSensitiveInlineVariables2 = new com.google.javascript.jscomp.FlowSensitiveInlineVariables(abstractCompiler1); com.google.javascript.jscomp.ReferenceCollectingCallback.Behavior behavior3 = com.google.javascript.jscomp.ReferenceCollectingCallback.DO_NOTHING_BEHAVIOR; com.google.javascript.jscomp.AbstractCompiler abstractCompiler4 = null; com.google.javascript.jscomp.NodeTraversal.Callback callback5 = null; com.google.javascript.jscomp.ScopeCreator scopeCreator6 = null; com.google.javascript.jscomp.NodeTraversal nodeTraversal7 = new com.google.javascript.jscomp.NodeTraversal(abstractCompiler4, callback5, scopeCreator6); java.util.ArrayDeque<com.google.javascript.jscomp.ControlFlowGraph<com.google.javascript.rhino.Node>> nodeControlFlowGraphQueue8 = new java.util.ArrayDeque<com.google.javascript.jscomp.ControlFlowGraph<com.google.javascript.rhino.Node>>(); nodeTraversal7.cfgs = nodeControlFlowGraphQueue8; com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceMap referenceMap10 = null; behavior3.afterExitScope(nodeTraversal7, referenceMap10); com.google.javascript.rhino.Node[] nodeArray13 = new com.google.javascript.rhino.Node[] {}; com.google.javascript.rhino.Node node14 = new com.google.javascript.rhino.Node(0, nodeArray13); com.google.javascript.jscomp.Scope scope15 = null; com.google.javascript.jscomp.JSModule jSModule16 = null; com.google.javascript.jscomp.UseSite useSite17 = new com.google.javascript.jscomp.UseSite(node14, scope15, jSModule16); boolean boolean18 = com.google.javascript.jscomp.NodeUtil.isAssignmentOp(node14); com.google.javascript.jscomp.WarningsGuard[] warningsGuardArray20 = new com.google.javascript.jscomp.WarningsGuard[] {}; com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard21 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuardArray20); node14.putProp(0, (java.lang.Object) composeWarningsGuard21); com.google.javascript.rhino.Node[] nodeArray24 = new com.google.javascript.rhino.Node[] {}; com.google.javascript.rhino.Node node25 = new com.google.javascript.rhino.Node(0, nodeArray24); com.google.javascript.jscomp.Scope scope26 = null; com.google.javascript.jscomp.JSModule jSModule27 = null; com.google.javascript.jscomp.UseSite useSite28 = new com.google.javascript.jscomp.UseSite(node25, scope26, jSModule27); int int29 = node25.getSideEffectFlags(); boolean boolean30 = node25.isContinue(); boolean boolean31 = com.google.javascript.jscomp.NodeUtil.isHoistedFunctionDeclaration(node25); boolean boolean32 = flowSensitiveInlineVariables2.shouldTraverse(nodeTraversal7, node14, node25); com.google.javascript.rhino.Node node34 = com.google.javascript.jscomp.parsing.JsDocInfoParser.parseTypeString("JSCOMPILER_PRESERVE"); boolean boolean35 = node34.isNull(); com.google.javascript.rhino.Node node36 = null; prepareAnnotations0.visit(nodeTraversal7, node34, node36); try { boolean boolean38 = com.google.javascript.jscomp.SimpleDefinitionFinder.isSimpleFunctionDeclaration(node36); } catch (java.lang.NullPointerException e) { } }
Code: public void visit(NodeTraversal t, Node n, Node parent) { if (n.isName() && n.getString().equals(varName)) { if (parent.isAssign() && (parent.getFirstChild() == n) && isAssignChain(parent, cfgNode)) { return; } else { numUsesWithinCfgNode++; } } }
tensor([[0.0213, 0.0174, 0.0103,  ..., 0.0094, 0.0094, 0.0094],
        [0.0164, 0.0147, 0.0058,  ..., 0.0092, 0.0092, 0.0092],
        [0.0164, 0.0118, 0.0073,  ..., 0.0052, 0.0052, 0.0052],
        ...,
        [0.0149, 0.0137, 0.0081,  ..., 0.0080, 0.0080, 0.0080],
        [0.0149, 0.0137, 0.0081,  ..., 0.0080, 0.0080, 0.0080],
        [0.0149, 0.0137, 0.0081,  ..., 0.0080, 0.0080, 0.0080]])