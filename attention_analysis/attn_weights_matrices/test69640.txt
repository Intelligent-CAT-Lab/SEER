69640
Test: public void test50() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test50"); org.jsoup.select.Evaluator.IsEmpty isEmpty0 = new org.jsoup.select.Evaluator.IsEmpty(); org.jsoup.nodes.Document document2 = org.jsoup.Jsoup.parseBodyFragment(""); org.jsoup.nodes.Element element4 = document2.text("\n<!--hi!-->"); org.jsoup.nodes.Attributes attributes5 = document2.attributes(); boolean boolean6 = document2.updateMetaCharsetElement(); org.jsoup.nodes.Element element8 = document2.toggleClass(""); org.jsoup.nodes.Document document10 = org.jsoup.Jsoup.parseBodyFragment(""); org.jsoup.nodes.Element element12 = document10.text("\n<!--hi!-->"); org.jsoup.nodes.Element element14 = document10.prependText("\n<!--hi!-->"); int int15 = element14.siblingIndex(); java.lang.String str16 = element14.nodeName(); boolean boolean17 = isEmpty0.matches((org.jsoup.nodes.Element) document2, element14); org.jsoup.nodes.Element element18 = null; org.jsoup.select.Evaluator.IndexGreaterThan indexGreaterThan20 = new org.jsoup.select.Evaluator.IndexGreaterThan((int) (byte) -1); java.lang.String str21 = indexGreaterThan20.toString(); org.jsoup.nodes.Document document23 = org.jsoup.Jsoup.parseBodyFragment(""); org.jsoup.nodes.Element element25 = document23.text("\n<!--hi!-->"); org.jsoup.select.Elements elements28 = document23.getElementsByAttributeValue("<!--hi!-->", "\n<!--hi!-->"); org.jsoup.select.Elements elements31 = document23.getElementsByAttributeValueStarting("<!--hi!-->", "PUBLIC"); org.jsoup.nodes.Document document33 = org.jsoup.Jsoup.parseBodyFragment("<?\n<!--hi!-->?>"); boolean boolean34 = indexGreaterThan20.matches((org.jsoup.nodes.Element) document23, (org.jsoup.nodes.Element) document33); org.jsoup.select.Evaluator.IsOnlyChild isOnlyChild35 = new org.jsoup.select.Evaluator.IsOnlyChild(); org.jsoup.nodes.Element element36 = null; org.jsoup.nodes.Document document38 = org.jsoup.Jsoup.parseBodyFragment(""); java.lang.String str39 = document38.nodeName(); boolean boolean40 = isOnlyChild35.matches(element36, (org.jsoup.nodes.Element) document38); org.jsoup.nodes.Element element41 = document38.head(); org.jsoup.nodes.Element element43 = element41.after("PUBLIC"); org.jsoup.helper.W3CDom w3CDom44 = new org.jsoup.helper.W3CDom(); org.jsoup.nodes.Document document46 = org.jsoup.Jsoup.parseBodyFragment(""); org.jsoup.nodes.Element element48 = document46.text("\n<!--hi!-->"); org.jsoup.nodes.Element element50 = document46.prependText("\n<!--hi!-->"); java.lang.String str51 = document46.ownText(); org.jsoup.nodes.Element element52 = document46.parent(); org.w3c.dom.Document document53 = w3CDom44.fromJsoup(document46); org.jsoup.nodes.Node node54 = document46.clearAttributes(); boolean boolean55 = indexGreaterThan20.matches(element43, (org.jsoup.nodes.Element) document46); org.jsoup.nodes.Element element56 = element43.lastElementSibling(); boolean boolean57 = isEmpty0.matches(element18, element43); }
Code: public void head(org.jsoup.nodes.Node source, int depth){namespacesStack.push(new HashMap<>(namespacesStack.peek())); if (source instanceof org.jsoup.nodes.Element) {org.jsoup.nodes.Element sourceEl = (org.jsoup.nodes.Element) source;String prefix = updateNamespaces(sourceEl);String namespace = namespacesStack.peek().get(prefix);String tagName = sourceEl.tagName();Element el =doc.createElementNS(namespace, tagName);;if (dest == null) { doc.appendChild(el);} else {dest.appendChild(el);}dest = el; } else if (source instanceof org.jsoup.nodes.TextNode) {org.jsoup.nodes.TextNode sourceText = (org.jsoup.nodes.TextNode) source;Text text = doc.createTextNode(sourceText.getWholeText());;} else if (source instanceof org.jsoup.nodes.Comment) {org.jsoup.nodes.Comment sourceComment = (org.jsoup.nodes.Comment) source;Comment comment = doc.createComment(sourceComment.getData());dest.appendChild(comment);} else if (source instanceof org.jsoup.nodes.DataNode) {org.jsoup.nodes.DataNode sourceData = (org.jsoup.nodes.DataNode) source;Text node = doc.createTextNode(sourceData.getWholeData());dest.appendChild(node);} else {}}
tensor([[0.0094, 0.0079, 0.0145,  ..., 0.0231, 0.0122, 0.0288],
        [0.0069, 0.0066, 0.0110,  ..., 0.0224, 0.0121, 0.0250],
        [0.0098, 0.0079, 0.0117,  ..., 0.0241, 0.0124, 0.0235],
        ...,
        [0.0095, 0.0056, 0.0128,  ..., 0.0185, 0.0087, 0.0231],
        [0.0073, 0.0057, 0.0123,  ..., 0.0222, 0.0128, 0.0242],
        [0.0102, 0.0091, 0.0151,  ..., 0.0181, 0.0122, 0.0230]])