101240
Test: public void test075() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test075"); org.joda.time.chrono.GJChronology gJChronology0 = org.joda.time.chrono.GJChronology.getInstance(); org.joda.time.DurationField durationField1 = gJChronology0.halfdays(); org.joda.time.DateTimeField dateTimeField2 = gJChronology0.secondOfDay(); org.joda.time.chrono.GJChronology gJChronology3 = org.joda.time.chrono.GJChronology.getInstance(); org.joda.time.DateTimeField dateTimeField4 = gJChronology3.minuteOfHour(); org.joda.time.DateTimeField dateTimeField5 = gJChronology3.hourOfDay(); org.joda.time.field.SkipDateTimeField skipDateTimeField6 = new org.joda.time.field.SkipDateTimeField((org.joda.time.Chronology) gJChronology0, dateTimeField5); int int8 = skipDateTimeField6.getMinimumValue((long) 'a'); org.joda.time.chrono.ISOChronology iSOChronology9 = org.joda.time.chrono.ISOChronology.getInstance(); java.lang.String str10 = iSOChronology9.toString(); org.joda.time.Chronology chronology11 = iSOChronology9.withUTC(); org.joda.time.DateTimeField dateTimeField12 = iSOChronology9.millisOfDay(); org.joda.time.LocalDate localDate13 = new org.joda.time.LocalDate(); org.joda.time.DateTime dateTime14 = localDate13.toDateTimeAtCurrentTime(); int[] intArray15 = localDate13.getValues(); org.joda.time.LocalDate localDate17 = localDate13.minusWeeks((int) (byte) 1); int[] intArray19 = iSOChronology9.get((org.joda.time.ReadablePartial) localDate13, (long) (short) -1); org.joda.time.LocalDate localDate20 = new org.joda.time.LocalDate(); boolean boolean21 = org.joda.time.DateTimeUtils.isContiguous((org.joda.time.ReadablePartial) localDate20); org.joda.time.DateTimeZone dateTimeZone23 = org.joda.time.DateTimeZone.forOffsetMillis(0); org.joda.time.Interval interval24 = localDate20.toInterval(dateTimeZone23); org.joda.time.DurationFieldType durationFieldType25 = org.joda.time.DurationFieldType.years(); java.lang.String str26 = durationFieldType25.toString(); org.joda.time.LocalDate localDate28 = localDate20.withFieldAdded(durationFieldType25, 36); int int29 = localDate13.compareTo((org.joda.time.ReadablePartial) localDate20); org.joda.time.DateTimeFieldType dateTimeFieldType30 = org.joda.time.DateTimeFieldType.dayOfWeek(); boolean boolean31 = localDate13.isSupported(dateTimeFieldType30); org.joda.time.LocalDate localDate33 = new org.joda.time.LocalDate(); boolean boolean34 = org.joda.time.DateTimeUtils.isContiguous((org.joda.time.ReadablePartial) localDate33); org.joda.time.DateTimeZone dateTimeZone36 = org.joda.time.DateTimeZone.forOffsetMillis(0); org.joda.time.Interval interval37 = localDate33.toInterval(dateTimeZone36); org.joda.time.Chronology chronology38 = org.joda.time.DateTimeUtils.getIntervalChronology((org.joda.time.ReadableInterval) interval37); org.joda.time.chrono.GJChronology gJChronology39 = org.joda.time.chrono.GJChronology.getInstance(); org.joda.time.DateTimeField dateTimeField40 = gJChronology39.yearOfEra(); int int42 = dateTimeField40.getMinimumValue(0L); org.joda.time.DateTimeFieldType dateTimeFieldType43 = org.joda.time.DateTimeFieldType.weekyearOfCentury(); org.joda.time.field.OffsetDateTimeField offsetDateTimeField45 = new org.joda.time.field.OffsetDateTimeField(dateTimeField40, dateTimeFieldType43, (int) (short) 10); org.joda.time.DurationField durationField46 = offsetDateTimeField45.getRangeDurationField(); java.lang.String str47 = offsetDateTimeField45.toString(); long long50 = offsetDateTimeField45.addWrapField((long) (byte) 10, (-1)); org.joda.time.LocalDate localDate51 = new org.joda.time.LocalDate(); org.joda.time.DateTime dateTime52 = localDate51.toDateTimeAtCurrentTime(); int[] intArray53 = localDate51.getValues(); org.joda.time.LocalDate localDate55 = localDate51.minusWeeks((int) (byte) 1); java.util.Locale locale57 = null; java.lang.String str58 = offsetDateTimeField45.getAsText((org.joda.time.ReadablePartial) localDate51, (int) (short) -1, locale57); int[] intArray60 = chronology38.get((org.joda.time.ReadablePartial) localDate51, (long) 10); java.util.Locale locale62 = null; try { int[] intArray63 = skipDateTimeField6.set((org.joda.time.ReadablePartial) localDate13, 36, intArray60, "", locale62); } catch (org.joda.time.IllegalFieldValueException e) { } }
Code: public int compareTo(DurationField durationField) { return 0; }
tensor([[0.1150, 0.0709, 0.2207, 0.0907, 0.1629, 0.1278, 0.1608, 0.0511],
        [0.0793, 0.0558, 0.2462, 0.0963, 0.1874, 0.1289, 0.1666, 0.0396],
        [0.1146, 0.0533, 0.2353, 0.0959, 0.1828, 0.1059, 0.1731, 0.0392],
        [0.0840, 0.0431, 0.2673, 0.0965, 0.1709, 0.1196, 0.1756, 0.0430],
        [0.1050, 0.0490, 0.2448, 0.1002, 0.1817, 0.1191, 0.1382, 0.0620],
        [0.0795, 0.0445, 0.3127, 0.0823, 0.1707, 0.1128, 0.1516, 0.0460],
        [0.1004, 0.0552, 0.2223, 0.1099, 0.1733, 0.1232, 0.1695, 0.0463],
        [0.0730, 0.0548, 0.2202, 0.0878, 0.1987, 0.1627, 0.1606, 0.0422]])