69458
Test: public void test02() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test02"); org.jsoup.safety.Whitelist whitelist1 = org.jsoup.safety.Whitelist.simpleText(); boolean boolean2 = org.jsoup.Jsoup.isValid("hi!", whitelist1); org.jsoup.safety.Cleaner cleaner3 = new org.jsoup.safety.Cleaner(whitelist1); org.jsoup.nodes.Document document6 = org.jsoup.Jsoup.parse("", "hi!"); org.jsoup.nodes.Element element7 = document6.parent(); java.lang.String str8 = document6.nodeName(); org.jsoup.nodes.Element element9 = document6.clone(); org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!"); org.jsoup.nodes.Element element13 = document12.parent(); java.lang.String str14 = document12.nodeName(); org.jsoup.nodes.Element element15 = document12.body(); org.jsoup.nodes.Element element16 = element9.appendChild((org.jsoup.nodes.Node) document12); org.jsoup.nodes.Node node17 = element16.clone(); org.jsoup.nodes.Document document18 = node17.ownerDocument(); org.jsoup.nodes.Document document19 = cleaner3.clean(document18); org.jsoup.nodes.Document document22 = org.jsoup.Jsoup.parse("", "hi!"); org.jsoup.nodes.Element element23 = document22.parent(); java.lang.String str24 = document22.nodeName(); org.jsoup.nodes.Element element25 = document22.clone(); org.jsoup.nodes.Document document28 = org.jsoup.Jsoup.parse("", "hi!"); org.jsoup.nodes.Element element29 = document28.parent(); java.lang.String str30 = document28.nodeName(); org.jsoup.nodes.Element element31 = document28.body(); org.jsoup.nodes.Element element32 = element25.appendChild((org.jsoup.nodes.Node) document28); boolean boolean33 = cleaner3.isValid(document28); org.jsoup.nodes.Element element35 = document28.wrap("#root"); org.jsoup.nodes.Element element37 = document28.text(" "); document28.title(""); }
Code: public Document clean(Document dirtyDocument){;Document clean = Document.createShell(dirtyDocument.baseUri());;return clean;}
tensor([[0.0717, 0.2616, 0.0721, 0.0553, 0.1921, 0.0461, 0.2210, 0.0801],
        [0.0669, 0.2763, 0.0597, 0.0479, 0.1887, 0.0389, 0.2377, 0.0838],
        [0.0578, 0.2717, 0.0716, 0.0414, 0.1623, 0.0399, 0.2808, 0.0745],
        [0.0659, 0.2931, 0.0683, 0.0527, 0.1806, 0.0571, 0.2108, 0.0714],
        [0.0747, 0.2567, 0.0755, 0.0501, 0.1885, 0.0472, 0.2265, 0.0809],
        [0.0864, 0.1985, 0.0728, 0.0792, 0.1795, 0.0724, 0.2264, 0.0850],
        [0.0496, 0.2695, 0.0765, 0.0504, 0.1979, 0.0415, 0.2308, 0.0839],
        [0.0712, 0.2452, 0.0591, 0.0609, 0.1680, 0.0544, 0.2515, 0.0896]])