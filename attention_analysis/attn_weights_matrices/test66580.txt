66580
Test: public void testComplexObject() throws Exception { FixtureObject aTestObj = new FixtureObject(); ObjectMapper aMapper = new ObjectMapper(); StringWriter aWriter = new StringWriter(); JsonGenerator aGen = new JsonFactory().createGenerator(aWriter); aMapper.writeValue(aGen, aTestObj); aGen.close(); JsonParser jp = new JsonFactory().createParser(new StringReader(aWriter.toString())); while (jp.nextToken() != JsonToken.END_OBJECT) { String name = jp.getCurrentName(); JsonToken t = jp.nextToken(); if (name.equals("uri") || name.equals("url")) { } else if (name.equals("testNull")) { } else if (name.equals("testString")) { } else if (name.equals("testBoolean")) { } else if (name.equals("testEnum")) { } else if (name.equals("testInteger")) { } else if (name.equals("testLong")) { } else if (name.equals("testBigInteger")) { } else if (name.equals("testBigDecimal")) { } else if (name.equals("testCharacter")) { } else if (name.equals("testShort")) { } else if (name.equals("testByte")) { } else if (name.equals("testFloat")) { } else if (name.equals("testDouble")) { } else if (name.equals("testStringBuffer")) { } else if (name.equals("testError")) { while (jp.nextToken() == JsonToken.FIELD_NAME) { name = jp.getCurrentName(); if (name.equals("cause")) { } else if (name.equals("message")) { } else if (name.equals("localizedMessage")) { } else if (name.equals("stackTrace")) { int i = 0; while(jp.nextToken() != JsonToken.END_ARRAY) { if(i >= 100000) { } } } else if (name.equals("suppressed")) { } else { fail("Unexpected field name '"+name+"'"); } } } else { fail("Unexpected field, name '"+name+"'"); } } jp.close(); }
Code: public String toString() { return _raw.getName()+"<>"; }
[[0.13834542 0.17783463 0.18243757 0.1829625  0.15206861 0.1077357
 0.05861553]
[0.14027247 0.16313481 0.19822682 0.20153198 0.14112401 0.10420042
 0.05150951]
[0.09933335 0.2509822  0.16754533 0.18024288 0.14969894 0.1048923
 0.04730503]
[0.13405071 0.19984585 0.14149185 0.20822942 0.15522774 0.08656962
 0.07458481]
[0.10619327 0.23889089 0.1522251  0.2052804  0.15457596 0.08645914
 0.05637515]
[0.12711085 0.21111521 0.19533981 0.17745733 0.1284991  0.09503996
 0.06543771]
[0.09307213 0.17065956 0.19357696 0.21423876 0.19606003 0.08508691
 0.0473057 ]]