62648
Test: public void testPrettyPrintObject() throws IOException { StringWriter stringWriter = new StringWriter(); JsonWriter jsonWriter = new JsonWriter(stringWriter); jsonWriter.setIndent(" "); jsonWriter.beginObject(); jsonWriter.name("a").value(true); jsonWriter.name("b").value(false); jsonWriter.name("c").value(5.0); jsonWriter.name("e").nullValue(); jsonWriter.name("f").beginArray(); jsonWriter.value(6.0); jsonWriter.value(7.0); jsonWriter.endArray(); jsonWriter.name("g").beginObject(); jsonWriter.name("h").value(8.0); jsonWriter.name("i").value(9.0); jsonWriter.endObject(); jsonWriter.endObject(); String expected = "{\n" + " \"a\": true,\n" + " \"b\": false,\n" + " \"c\": 5.0,\n" + " \"e\": null,\n" + " \"f\": [\n" + " 6.0,\n" + " 7.0\n" + " ],\n" + " \"g\": {\n" + " \"h\": 8.0,\n" + " \"i\": 9.0\n" + " }\n" + "}"; }
Code: public JsonWriter value(double value) throws IOException { writeDeferredName(); if (!lenient && (Double.isNaN(value) || Double.isInfinite(value))) { throw new IllegalArgumentException("Numeric values must be finite, but was " + value); } beforeValue(); out.append(Double.toString(value)); return this; }
tensor([[0.0199, 0.0226, 0.1575,  ..., 0.0223, 0.0184, 0.0093],
        [0.0186, 0.0287, 0.1414,  ..., 0.0206, 0.0163, 0.0118],
        [0.0176, 0.0235, 0.1648,  ..., 0.0190, 0.0166, 0.0088],
        ...,
        [0.0140, 0.0207, 0.1997,  ..., 0.0198, 0.0134, 0.0083],
        [0.0230, 0.0281, 0.1393,  ..., 0.0275, 0.0149, 0.0103],
        [0.0145, 0.0284, 0.1395,  ..., 0.0321, 0.0140, 0.0083]])