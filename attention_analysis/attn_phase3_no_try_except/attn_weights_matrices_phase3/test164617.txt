164617
Test: public void test2() throws Throwable { DiscreteInverseCumulativeProbabilityFunction discreteInverseCumulativeProbabilityFunction0 = mock(DiscreteInverseCumulativeProbabilityFunction.class, new ViolatedAssumptionAnswer()); InverseTransformDiscreteSampler inverseTransformDiscreteSampler0 = new InverseTransformDiscreteSampler((UniformRandomProvider) null, discreteInverseCumulativeProbabilityFunction0); // Undeclared exception!  inverseTransformDiscreteSampler0.toString();   }
Code: public String toString() { return function.toString() + " (inverse method) [" + rng.toString() + "]"; }
[[0.05503447 0.06972686 0.0682188  0.07996853 0.06138103 0.07635337
 0.0447427  0.0830798  0.07635337 0.07635337 0.05715975 0.0447427
 0.07635337 0.0447427  0.06089952 0.02488961]
[0.0564985  0.06348976 0.07068177 0.0939383  0.05833785 0.07765117
 0.04889559 0.07453117 0.07765117 0.07765117 0.05409989 0.04889559
 0.07765117 0.04889559 0.0479576  0.02317363]
[0.04341713 0.09983461 0.06423739 0.08690357 0.06591257 0.0756315
 0.04339349 0.08249708 0.0756315  0.0756315  0.04040918 0.04339349
 0.0756315  0.04339349 0.06170308 0.02237893]
[0.05527297 0.07703581 0.05350607 0.09427647 0.06290485 0.06999766
 0.05800175 0.07458287 0.06999766 0.06999766 0.04054715 0.05800175
 0.06999766 0.05800175 0.05549938 0.03237851]
[0.03927487 0.08365752 0.05233376 0.08003762 0.05646256 0.07670483
 0.0543983  0.09953579 0.07670483 0.07670483 0.04493413 0.0543983
 0.07670483 0.0543983  0.05198045 0.0217691 ]
[0.04465679 0.07939453 0.06572763 0.07754995 0.05437918 0.07331225
 0.06213002 0.07793987 0.07331225 0.07331225 0.04575015 0.06213002
 0.07331225 0.06213002 0.04909294 0.02586996]
[0.05500251 0.08507017 0.06278817 0.08002185 0.06554937 0.07445624
 0.04714011 0.07758045 0.07445624 0.07445624 0.04764749 0.04714011
 0.07445624 0.04714011 0.0597545  0.02734019]
[0.04612989 0.10324022 0.07321459 0.11673453 0.06520095 0.07463226
 0.03434613 0.07460077 0.07463226 0.07463226 0.04566788 0.03434613
 0.07463226 0.03434613 0.05587472 0.01776904]
[0.04465679 0.07939453 0.06572763 0.07754995 0.05437918 0.07331225
 0.06213002 0.07793987 0.07331225 0.07331225 0.04575015 0.06213002
 0.07331225 0.06213002 0.04909294 0.02586996]
[0.04465679 0.07939453 0.06572763 0.07754995 0.05437918 0.07331225
 0.06213002 0.07793987 0.07331225 0.07331225 0.04575015 0.06213002
 0.07331225 0.06213002 0.04909294 0.02586996]
[0.04716933 0.0884371  0.05711207 0.1019372  0.07236847 0.06886274
 0.05322162 0.08223953 0.06886274 0.06886274 0.03606356 0.05322162
 0.06886274 0.05322162 0.05518313 0.02437385]
[0.05500251 0.08507017 0.06278817 0.08002185 0.06554937 0.07445624
 0.04714011 0.07758045 0.07445624 0.07445624 0.04764749 0.04714011
 0.07445624 0.04714011 0.0597545  0.02734019]
[0.04465679 0.07939453 0.06572763 0.07754995 0.05437918 0.07331225
 0.06213002 0.07793987 0.07331225 0.07331225 0.04575015 0.06213002
 0.07331225 0.06213002 0.04909294 0.02586996]
[0.05500251 0.08507017 0.06278817 0.08002185 0.06554937 0.07445624
 0.04714011 0.07758045 0.07445624 0.07445624 0.04764749 0.04714011
 0.07445624 0.04714011 0.0597545  0.02734019]
[0.04792858 0.08665363 0.06753477 0.09378096 0.06797531 0.07348727
 0.04609855 0.08337446 0.07348727 0.07348727 0.04569118 0.04609855
 0.07348727 0.04609855 0.05672523 0.01809106]
[0.03902017 0.07135196 0.07156645 0.11646555 0.08990014 0.07016974
 0.04362996 0.08552325 0.07016974 0.07016974 0.04569789 0.04362996
 0.07016974 0.04362996 0.04462308 0.02428265]]