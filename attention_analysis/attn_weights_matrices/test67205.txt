67205
Test: public void test16() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test16"); com.fasterxml.jackson.databind.json.JsonMapper jsonMapper0 = new com.fasterxml.jackson.databind.json.JsonMapper(); java.text.DateFormat dateFormat1 = null; com.fasterxml.jackson.databind.ObjectMapper objectMapper2 = jsonMapper0.setDateFormat(dateFormat1); com.fasterxml.jackson.annotation.JsonSetter.Value value3 = null; com.fasterxml.jackson.databind.ObjectMapper objectMapper4 = jsonMapper0.setDefaultSetterInfo(value3); com.fasterxml.jackson.databind.cfg.HandlerInstantiator handlerInstantiator5 = null; java.lang.Object obj6 = jsonMapper0.setHandlerInstantiator(handlerInstantiator5); com.fasterxml.jackson.databind.json.JsonMapper jsonMapper7 = new com.fasterxml.jackson.databind.json.JsonMapper(); com.fasterxml.jackson.databind.SerializationFeature serializationFeature8 = com.fasterxml.jackson.databind.SerializationFeature.WRITE_EMPTY_JSON_ARRAYS; boolean boolean9 = jsonMapper7.isEnabled(serializationFeature8); com.fasterxml.jackson.databind.SerializationFeature serializationFeature10 = com.fasterxml.jackson.databind.SerializationFeature.FLUSH_AFTER_WRITE_VALUE; java.lang.String str11 = jsonMapper7.writeValueAsString((java.lang.Object) serializationFeature10); com.fasterxml.jackson.databind.node.BooleanNode booleanNode12 = com.fasterxml.jackson.databind.node.BooleanNode.FALSE; com.fasterxml.jackson.databind.node.BooleanNode booleanNode14 = com.fasterxml.jackson.databind.node.BooleanNode.FALSE; com.fasterxml.jackson.databind.JsonNode[] jsonNodeArray15 = new com.fasterxml.jackson.databind.JsonNode[] { booleanNode14 }; java.util.ArrayList<com.fasterxml.jackson.databind.JsonNode> jsonNodeList16 = new java.util.ArrayList<com.fasterxml.jackson.databind.JsonNode>(); boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.fasterxml.jackson.databind.JsonNode>) jsonNodeList16, jsonNodeArray15); java.util.List<com.fasterxml.jackson.databind.JsonNode> jsonNodeList18 = booleanNode12.findParents("", (java.util.List<com.fasterxml.jackson.databind.JsonNode>) jsonNodeList16); com.fasterxml.jackson.core.JsonParser jsonParser19 = booleanNode12.traverse(); com.fasterxml.jackson.core.FormatSchema formatSchema20 = null; boolean boolean21 = jsonParser19.canUseSchema(formatSchema20); com.fasterxml.jackson.core.JsonLocation jsonLocation23 = null; com.fasterxml.jackson.databind.ser.std.DateSerializer dateSerializer24 = com.fasterxml.jackson.databind.ser.std.DateSerializer.instance; com.fasterxml.jackson.databind.ser.std.DateSerializer dateSerializer25 = com.fasterxml.jackson.databind.ser.std.DateSerializer.instance; boolean boolean26 = dateSerializer24.isDefaultSerializer((com.fasterxml.jackson.databind.JsonSerializer<java.util.Date>) dateSerializer25); java.lang.Class<java.util.Date> dateClass27 = dateSerializer24.handledType(); java.util.Collection<java.lang.Object> objCollection29 = null; com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException unrecognizedPropertyException30 = new com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException(jsonParser19, "", jsonLocation23, dateClass27, "JSON", objCollection29); com.fasterxml.jackson.databind.ser.std.NumberSerializer numberSerializer31 = com.fasterxml.jackson.databind.ser.std.NumberSerializer.instance; com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = null; com.fasterxml.jackson.databind.node.BooleanNode booleanNode33 = com.fasterxml.jackson.databind.node.BooleanNode.FALSE; com.fasterxml.jackson.databind.node.BooleanNode booleanNode35 = com.fasterxml.jackson.databind.node.BooleanNode.FALSE; com.fasterxml.jackson.databind.JsonNode[] jsonNodeArray36 = new com.fasterxml.jackson.databind.JsonNode[] { booleanNode35 }; java.util.ArrayList<com.fasterxml.jackson.databind.JsonNode> jsonNodeList37 = new java.util.ArrayList<com.fasterxml.jackson.databind.JsonNode>(); boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.fasterxml.jackson.databind.JsonNode>) jsonNodeList37, jsonNodeArray36); java.util.List<com.fasterxml.jackson.databind.JsonNode> jsonNodeList39 = booleanNode33.findParents("", (java.util.List<com.fasterxml.jackson.databind.JsonNode>) jsonNodeList37); com.fasterxml.jackson.core.JsonParser jsonParser40 = booleanNode33.traverse(); com.fasterxml.jackson.core.FormatSchema formatSchema41 = null; boolean boolean42 = jsonParser40.canUseSchema(formatSchema41); com.fasterxml.jackson.core.JsonLocation jsonLocation44 = null; com.fasterxml.jackson.databind.ser.std.DateSerializer dateSerializer45 = com.fasterxml.jackson.databind.ser.std.DateSerializer.instance; com.fasterxml.jackson.databind.ser.std.DateSerializer dateSerializer46 = com.fasterxml.jackson.databind.ser.std.DateSerializer.instance; boolean boolean47 = dateSerializer45.isDefaultSerializer((com.fasterxml.jackson.databind.JsonSerializer<java.util.Date>) dateSerializer46); java.lang.Class<java.util.Date> dateClass48 = dateSerializer45.handledType(); java.util.Collection<java.lang.Object> objCollection50 = null; com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException unrecognizedPropertyException51 = new com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException(jsonParser40, "", jsonLocation44, dateClass48, "JSON", objCollection50); com.fasterxml.jackson.databind.JsonNode jsonNode52 = numberSerializer31.getSchema(serializerProvider32, (java.lang.reflect.Type) dateClass48); jsonMapper7.addMixInAnnotations(dateClass27, dateClass48); com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper54 = null; try { jsonMapper0.acceptJsonFormatVisitor(dateClass27, jsonFormatVisitorWrapper54); } catch (java.lang.NullPointerException e) { } }
Code: public void acceptJsonFormatVisitor(JsonFormatVisitorWrapper visitor, JavaType typeHint) throws JsonMappingException { if (_isInt) { visitIntFormat(visitor, typeHint, JsonParser.NumberType.BIG_INTEGER); } else { if (((Class<?>) handledType()) == BigDecimal.class) { visitFloatFormat(visitor, typeHint, JsonParser.NumberType.BIG_DECIMAL); } else { visitor.expectNumberFormat(typeHint); } } }
tensor([[0.0234, 0.0186, 0.0260,  ..., 0.0094, 0.0094, 0.0094],
        [0.0193, 0.0154, 0.0253,  ..., 0.0084, 0.0084, 0.0084],
        [0.0181, 0.0149, 0.0293,  ..., 0.0064, 0.0064, 0.0064],
        ...,
        [0.0168, 0.0147, 0.0175,  ..., 0.0077, 0.0077, 0.0077],
        [0.0168, 0.0147, 0.0175,  ..., 0.0077, 0.0077, 0.0077],
        [0.0168, 0.0147, 0.0175,  ..., 0.0077, 0.0077, 0.0077]])