16282
Test: public void test116() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test116"); org.apache.commons.cli.MissingOptionException missingOptionException1 = new org.apache.commons.cli.MissingOptionException("[ Options: [ short {} ] [ long {} ]"); java.util.List list2 = missingOptionException1.getMissingOptions(); org.apache.commons.cli.GnuParser gnuParser3 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.CommandLine commandLine4 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj6 = commandLine4.getParsedOptionValue(""); java.util.Properties properties8 = commandLine4.getOptionProperties("hi!"); java.lang.Object obj10 = commandLine4.getOptionObject("hi!"); java.lang.Object obj12 = commandLine4.getOptionObject("hi!"); gnuParser3.cmd = commandLine4; org.apache.commons.cli.CommandLine commandLine14 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj16 = commandLine14.getParsedOptionValue(""); java.util.Properties properties18 = commandLine14.getOptionProperties("hi!"); gnuParser3.processProperties(properties18); org.apache.commons.cli.Options options20 = new org.apache.commons.cli.Options(); org.apache.commons.cli.GnuParser gnuParser21 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.Options options22 = new org.apache.commons.cli.Options(); org.apache.commons.cli.GnuParser gnuParser23 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.CommandLine commandLine24 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj26 = commandLine24.getParsedOptionValue(""); java.util.Properties properties28 = commandLine24.getOptionProperties("hi!"); java.lang.Object obj30 = commandLine24.getOptionObject("hi!"); java.lang.Object obj32 = commandLine24.getOptionObject("hi!"); gnuParser23.cmd = commandLine24; org.apache.commons.cli.Options options34 = null; org.apache.commons.cli.CommandLine commandLine35 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj37 = commandLine35.getParsedOptionValue(""); java.util.Properties properties39 = commandLine35.getOptionProperties("hi!"); java.lang.String[] strArray40 = commandLine35.getArgs(); java.lang.String[] strArray42 = gnuParser23.flatten(options34, strArray40, true); java.lang.String[] strArray44 = gnuParser21.flatten(options22, strArray42, true); org.apache.commons.cli.CommandLine commandLine46 = gnuParser3.parse(options20, strArray42, true); java.util.List list48 = options20.getMatchingOptions("hi!"); boolean boolean50 = options20.hasLongOption("hi!"); java.util.List list51 = options20.getRequiredOptions(); org.apache.commons.cli.MissingOptionException missingOptionException52 = new org.apache.commons.cli.MissingOptionException(list51); missingOptionException1.addSuppressed((java.lang.Throwable) missingOptionException52); }
Code: protected void processProperties(Properties properties){if (properties == null){return;}for (Enumeration e = properties.propertyNames(); e.hasMoreElements();){String option = e.nextElement().toString();if (!cmd.hasOption(option)){Option opt = getOptions().getOption(option);String value = properties.getProperty(option);if (opt.hasArg()){if (opt.getValues() == null || opt.getValues().length == -1){try{;}catch (RuntimeException exp){}}}else if (!("yes".equalsIgnoreCase(value)|| "true".equalsIgnoreCase(value)|| "1".equalsIgnoreCase(value))){continue;};updateRequiredOptions(opt);}}}
tensor([[0.0297, 0.0132, 0.0614,  ..., 0.0242, 0.0689, 0.0156],
        [0.0358, 0.0119, 0.0637,  ..., 0.0217, 0.0839, 0.0122],
        [0.0310, 0.0126, 0.0560,  ..., 0.0220, 0.0807, 0.0155],
        ...,
        [0.0272, 0.0115, 0.0557,  ..., 0.0234, 0.0744, 0.0128],
        [0.0281, 0.0079, 0.0680,  ..., 0.0210, 0.0808, 0.0141],
        [0.0282, 0.0114, 0.0569,  ..., 0.0225, 0.0803, 0.0147]])