68971
Test: public void test569() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test569"); org.jsoup.select.Evaluator.IsOnlyChild isOnlyChild0 = new org.jsoup.select.Evaluator.IsOnlyChild(); org.jsoup.select.StructuralEvaluator.PreviousSibling previousSibling1 = new org.jsoup.select.StructuralEvaluator.PreviousSibling((org.jsoup.select.Evaluator) isOnlyChild0); org.jsoup.select.Evaluator.IndexGreaterThan indexGreaterThan3 = new org.jsoup.select.Evaluator.IndexGreaterThan((int) '4'); org.jsoup.nodes.Document document5 = org.jsoup.nodes.Document.createShell("hi!"); java.util.List<org.jsoup.nodes.TextNode> textNodeList6 = document5.textNodes(); org.jsoup.nodes.Document document8 = org.jsoup.nodes.Document.createShell("hi!"); boolean boolean9 = indexGreaterThan3.matches((org.jsoup.nodes.Element) document5, (org.jsoup.nodes.Element) document8); org.jsoup.select.CombiningEvaluator.Or or10 = new org.jsoup.select.CombiningEvaluator.Or(); java.lang.String str11 = or10.toString(); java.util.ArrayList<org.jsoup.select.Evaluator> evaluatorList12 = or10.evaluators; org.jsoup.select.CombiningEvaluator.And and13 = new org.jsoup.select.CombiningEvaluator.And((java.util.Collection<org.jsoup.select.Evaluator>) evaluatorList12); org.jsoup.nodes.Element element14 = null; org.jsoup.select.Evaluator.IndexGreaterThan indexGreaterThan16 = new org.jsoup.select.Evaluator.IndexGreaterThan((int) '4'); org.jsoup.nodes.Document document18 = org.jsoup.nodes.Document.createShell("hi!"); java.util.List<org.jsoup.nodes.TextNode> textNodeList19 = document18.textNodes(); org.jsoup.nodes.Document document21 = org.jsoup.nodes.Document.createShell("hi!"); boolean boolean22 = indexGreaterThan16.matches((org.jsoup.nodes.Element) document18, (org.jsoup.nodes.Element) document21); boolean boolean23 = and13.matches(element14, (org.jsoup.nodes.Element) document18); boolean boolean24 = previousSibling1.matches((org.jsoup.nodes.Element) document5, (org.jsoup.nodes.Element) document18); org.jsoup.nodes.Element element26 = document5.addClass("\n<!--:lt(100)-->"); }
Code: public boolean matches(Element root, Element element) { if (element instanceof PseudoTextElement) return true; List<TextNode> textNodes = element.textNodes(); for (TextNode textNode : textNodes) { PseudoTextElement pel = new PseudoTextElement( org.jsoup.parser.Tag.valueOf(element.tagName()), element.baseUri(), element.attributes()); textNode.replaceWith(pel); pel.appendChild(textNode); } return false; }
tensor([[0.0223, 0.0500, 0.0217,  ..., 0.0252, 0.0318, 0.0107],
        [0.0160, 0.0765, 0.0182,  ..., 0.0276, 0.0320, 0.0081],
        [0.0133, 0.0550, 0.0200,  ..., 0.0245, 0.0327, 0.0094],
        ...,
        [0.0150, 0.0634, 0.0166,  ..., 0.0210, 0.0343, 0.0091],
        [0.0218, 0.0551, 0.0202,  ..., 0.0261, 0.0398, 0.0129],
        [0.0154, 0.0516, 0.0192,  ..., 0.0348, 0.0352, 0.0091]])