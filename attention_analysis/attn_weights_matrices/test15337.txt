15337
Test: public void test222() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test222"); org.apache.commons.cli.PosixParser posixParser0 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.PosixParser posixParser1 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.Options options2 = new org.apache.commons.cli.Options(); java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "[ option: +ARG :: ]", "hi!", "hi!" }; java.util.Properties properties8 = null; org.apache.commons.cli.CommandLine commandLine9 = posixParser1.parse(options2, strArray7, properties8); java.lang.String[] strArray15 = new java.lang.String[] { "", "[ option: +ARG :: ]", "[ option: +ARG :: ]", "hi!", "" }; org.apache.commons.cli.CommandLine commandLine16 = posixParser0.parse(options2, strArray15); org.apache.commons.cli.PosixParser posixParser17 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.PosixParser posixParser18 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.Options options19 = new org.apache.commons.cli.Options(); java.lang.String[] strArray24 = new java.lang.String[] { "hi!", "[ option: +ARG :: ]", "hi!", "hi!" }; java.util.Properties properties25 = null; org.apache.commons.cli.CommandLine commandLine26 = posixParser18.parse(options19, strArray24, properties25); java.lang.String[] strArray28 = new java.lang.String[] { "" }; java.util.Properties properties29 = null; org.apache.commons.cli.CommandLine commandLine31 = posixParser17.parse(options19, strArray28, properties29, true); org.apache.commons.cli.PosixParser posixParser32 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.PosixParser posixParser33 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.Options options34 = new org.apache.commons.cli.Options(); java.lang.String[] strArray39 = new java.lang.String[] { "hi!", "[ option: +ARG :: ]", "hi!", "hi!" }; java.util.Properties properties40 = null; org.apache.commons.cli.CommandLine commandLine41 = posixParser33.parse(options34, strArray39, properties40); java.lang.String[] strArray47 = new java.lang.String[] { "", "[ option: +ARG :: ]", "[ option: +ARG :: ]", "hi!", "" }; org.apache.commons.cli.CommandLine commandLine48 = posixParser32.parse(options34, strArray47); org.apache.commons.cli.CommandLine commandLine49 = posixParser0.parse(options19, strArray47); posixParser0.burstToken("hi!", true); org.apache.commons.cli.PosixParser posixParser53 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.PosixParser posixParser54 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.Options options55 = new org.apache.commons.cli.Options(); java.lang.String[] strArray60 = new java.lang.String[] { "hi!", "[ option: +ARG :: ]", "hi!", "hi!" }; java.util.Properties properties61 = null; org.apache.commons.cli.CommandLine commandLine62 = posixParser54.parse(options55, strArray60, properties61); java.lang.String[] strArray64 = new java.lang.String[] { "" }; java.util.Properties properties65 = null; org.apache.commons.cli.CommandLine commandLine67 = posixParser53.parse(options55, strArray64, properties65, true); org.apache.commons.cli.Option option69 = options55.getOption("[ option: +ARG :: ]"); org.apache.commons.cli.Option option71 = org.apache.commons.cli.OptionBuilder.create('a'); option71.setDescription(""); org.apache.commons.cli.OptionGroup optionGroup74 = options55.getOptionGroup(option71); org.apache.commons.cli.PosixParser posixParser75 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.Options options76 = new org.apache.commons.cli.Options(); java.lang.String[] strArray81 = new java.lang.String[] { "hi!", "[ option: +ARG :: ]", "hi!", "hi!" }; java.util.Properties properties82 = null; org.apache.commons.cli.CommandLine commandLine83 = posixParser75.parse(options76, strArray81, properties82); java.lang.String[] strArray85 = posixParser0.flatten(options55, strArray81, true); java.util.Collection collection86 = options55.getOptions(); java.lang.String str87 = options55.toString(); } ] [ long {} ]" + "'", str87, "[ Options: [ short {} ] [ long {} ]"); }
Code: public Option[] getOptions() { Collection processed = options; Option[] optionsArray = new Option[processed.size()]; return (Option[]) processed.toArray(optionsArray); }
tensor([[0.0434, 0.0405, 0.0869, 0.0619, 0.0783, 0.0333, 0.0276, 0.0281, 0.0405,
         0.0395, 0.0276, 0.0216, 0.1857, 0.0483, 0.1186, 0.0989, 0.0194],
        [0.0370, 0.0366, 0.1028, 0.0901, 0.0899, 0.0272, 0.0299, 0.0199, 0.0366,
         0.0370, 0.0299, 0.0183, 0.1354, 0.0585, 0.1490, 0.0866, 0.0150],
        [0.0466, 0.0271, 0.0774, 0.0756, 0.1320, 0.0314, 0.0369, 0.0298, 0.0271,
         0.0395, 0.0369, 0.0222, 0.1521, 0.0477, 0.1409, 0.0532, 0.0235],
        [0.0504, 0.0400, 0.0705, 0.0785, 0.1077, 0.0292, 0.0418, 0.0340, 0.0400,
         0.0474, 0.0418, 0.0285, 0.1148, 0.0583, 0.1097, 0.0793, 0.0281],
        [0.0407, 0.0314, 0.0733, 0.0821, 0.1014, 0.0309, 0.0323, 0.0229, 0.0314,
         0.0424, 0.0323, 0.0237, 0.1532, 0.0488, 0.1320, 0.0983, 0.0230],
        [0.0348, 0.0480, 0.1098, 0.0574, 0.1015, 0.0234, 0.0294, 0.0198, 0.0480,
         0.0280, 0.0294, 0.0159, 0.2279, 0.0448, 0.1006, 0.0668, 0.0146],
        [0.0553, 0.0477, 0.0798, 0.0592, 0.1074, 0.0270, 0.0449, 0.0372, 0.0477,
         0.0471, 0.0449, 0.0258, 0.1002, 0.0601, 0.1050, 0.0844, 0.0263],
        [0.0331, 0.0409, 0.0932, 0.0639, 0.0837, 0.0291, 0.0279, 0.0232, 0.0409,
         0.0361, 0.0279, 0.0177, 0.1861, 0.0494, 0.1511, 0.0819, 0.0141],
        [0.0370, 0.0366, 0.1028, 0.0901, 0.0899, 0.0272, 0.0299, 0.0199, 0.0366,
         0.0370, 0.0299, 0.0183, 0.1354, 0.0585, 0.1490, 0.0866, 0.0150],
        [0.0384, 0.0404, 0.0823, 0.0711, 0.0845, 0.0307, 0.0311, 0.0215, 0.0404,
         0.0388, 0.0311, 0.0194, 0.1642, 0.0510, 0.1528, 0.0874, 0.0148],
        [0.0553, 0.0477, 0.0798, 0.0592, 0.1074, 0.0270, 0.0449, 0.0372, 0.0477,
         0.0471, 0.0449, 0.0258, 0.1002, 0.0601, 0.1050, 0.0844, 0.0263],
        [0.0377, 0.0320, 0.0762, 0.0762, 0.1017, 0.0282, 0.0295, 0.0267, 0.0320,
         0.0305, 0.0295, 0.0236, 0.2108, 0.0532, 0.1156, 0.0749, 0.0216],
        [0.0356, 0.0269, 0.0991, 0.0642, 0.1126, 0.0335, 0.0366, 0.0323, 0.0269,
         0.0352, 0.0366, 0.0270, 0.1836, 0.0561, 0.1098, 0.0645, 0.0194],
        [0.0291, 0.0314, 0.0867, 0.0615, 0.1239, 0.0226, 0.0288, 0.0220, 0.0314,
         0.0303, 0.0288, 0.0171, 0.2178, 0.0415, 0.1323, 0.0779, 0.0166],
        [0.0322, 0.0479, 0.0878, 0.0638, 0.0951, 0.0340, 0.0275, 0.0211, 0.0479,
         0.0337, 0.0275, 0.0166, 0.1925, 0.0530, 0.1131, 0.0950, 0.0113],
        [0.0394, 0.0488, 0.0918, 0.0751, 0.0918, 0.0297, 0.0274, 0.0199, 0.0488,
         0.0369, 0.0274, 0.0202, 0.1574, 0.0447, 0.1512, 0.0740, 0.0157],
        [0.0316, 0.0329, 0.0905, 0.0789, 0.0906, 0.0270, 0.0283, 0.0252, 0.0329,
         0.0371, 0.0283, 0.0177, 0.1514, 0.0683, 0.1494, 0.0931, 0.0171]])