69002
Test: public void test07() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test07"); org.jsoup.select.Evaluator.AttributeWithValueNot attributeWithValueNot2 = new org.jsoup.select.Evaluator.AttributeWithValueNot("hi!", "hi!"); org.jsoup.nodes.Document document4 = new org.jsoup.nodes.Document(""); java.util.List<org.jsoup.nodes.Node> nodeList5 = document4.childNodes(); org.jsoup.nodes.Node node6 = document4.clone(); org.jsoup.nodes.Element element8 = document4.append(""); org.jsoup.nodes.Document document9 = document4.clone(); org.jsoup.nodes.Node node10 = document9.clone(); org.jsoup.nodes.Document document12 = new org.jsoup.nodes.Document(""); java.util.List<org.jsoup.nodes.Node> nodeList13 = document12.childNodes(); org.jsoup.nodes.Node node14 = document12.clone(); org.jsoup.nodes.Element element16 = document12.append(""); org.jsoup.nodes.Document document17 = document12.clone(); boolean boolean18 = attributeWithValueNot2.matches((org.jsoup.nodes.Element) document9, (org.jsoup.nodes.Element) document17); org.jsoup.select.Evaluator.AttributeWithValueNot attributeWithValueNot21 = new org.jsoup.select.Evaluator.AttributeWithValueNot("hi!", "hi!"); org.jsoup.nodes.Document document23 = new org.jsoup.nodes.Document(""); java.util.List<org.jsoup.nodes.Node> nodeList24 = document23.childNodes(); org.jsoup.nodes.Node node25 = document23.clone(); org.jsoup.nodes.Element element27 = document23.append(""); org.jsoup.nodes.Document document28 = document23.clone(); org.jsoup.nodes.Node node29 = document28.clone(); org.jsoup.nodes.Document document31 = new org.jsoup.nodes.Document(""); java.util.List<org.jsoup.nodes.Node> nodeList32 = document31.childNodes(); org.jsoup.nodes.Node node33 = document31.clone(); org.jsoup.nodes.Element element35 = document31.append(""); org.jsoup.nodes.Document document36 = document31.clone(); boolean boolean37 = attributeWithValueNot21.matches((org.jsoup.nodes.Element) document28, (org.jsoup.nodes.Element) document36); org.jsoup.nodes.Document document39 = new org.jsoup.nodes.Document(""); java.util.List<org.jsoup.nodes.Node> nodeList40 = document39.childNodes(); org.jsoup.nodes.Document document42 = new org.jsoup.nodes.Document(""); java.lang.String str43 = document42.outerHtml(); java.lang.String str44 = document42.className(); java.lang.String str45 = document42.toString(); org.jsoup.nodes.Document document47 = new org.jsoup.nodes.Document(""); java.lang.String str48 = document47.outerHtml(); java.lang.String str49 = document47.className(); org.jsoup.nodes.Document document51 = new org.jsoup.nodes.Document(""); java.lang.String str52 = document51.outerHtml(); java.lang.String str53 = document51.className(); java.lang.String str54 = document51.toString(); org.jsoup.nodes.Document document56 = new org.jsoup.nodes.Document(""); java.lang.String str57 = document56.outerHtml(); java.lang.String str58 = document56.className(); org.jsoup.nodes.Element[] elementArray59 = new org.jsoup.nodes.Element[] { document39, document42, document47, document51, document56 }; java.util.ArrayList<org.jsoup.nodes.Element> elementList60 = new java.util.ArrayList<org.jsoup.nodes.Element>(); boolean boolean61 = java.util.Collections.addAll((java.util.Collection<org.jsoup.nodes.Element>) elementList60, elementArray59); org.jsoup.nodes.Document document63 = new org.jsoup.nodes.Document(""); java.lang.String str64 = document63.outerHtml(); org.jsoup.nodes.Document document66 = new org.jsoup.nodes.Document(""); org.jsoup.nodes.Element[] elementArray67 = new org.jsoup.nodes.Element[] { document63, document66 }; java.util.ArrayList<org.jsoup.nodes.Element> elementList68 = new java.util.ArrayList<org.jsoup.nodes.Element>(); boolean boolean69 = java.util.Collections.addAll((java.util.Collection<org.jsoup.nodes.Element>) elementList68, elementArray67); org.jsoup.select.Elements elements70 = org.jsoup.select.Selector.filterOut((java.util.Collection<org.jsoup.nodes.Element>) elementList60, (java.util.Collection<org.jsoup.nodes.Element>) elementList68); org.jsoup.nodes.Document document73 = new org.jsoup.nodes.Document(""); org.jsoup.nodes.Element element74 = document73.body(); org.jsoup.nodes.Element element75 = elements70.set(0, (org.jsoup.nodes.Element) document73); boolean boolean76 = attributeWithValueNot2.matches((org.jsoup.nodes.Element) document28, element75); org.jsoup.select.StructuralEvaluator.Root root77 = new org.jsoup.select.StructuralEvaluator.Root(); org.jsoup.select.Evaluator[] evaluatorArray78 = new org.jsoup.select.Evaluator[] { attributeWithValueNot2, root77 }; java.util.ArrayList<org.jsoup.select.Evaluator> evaluatorList79 = new java.util.ArrayList<org.jsoup.select.Evaluator>(); boolean boolean80 = java.util.Collections.addAll((java.util.Collection<org.jsoup.select.Evaluator>) evaluatorList79, evaluatorArray78); org.jsoup.select.CombiningEvaluator.Or or81 = new org.jsoup.select.CombiningEvaluator.Or((java.util.Collection<org.jsoup.select.Evaluator>) evaluatorList79); org.jsoup.select.CombiningEvaluator.And and82 = new org.jsoup.select.CombiningEvaluator.And((java.util.Collection<org.jsoup.select.Evaluator>) evaluatorList79); org.jsoup.select.CombiningEvaluator.Or or83 = new org.jsoup.select.CombiningEvaluator.Or((java.util.Collection<org.jsoup.select.Evaluator>) evaluatorList79); }
Code: public String toString() { return StringUtil.join(evaluators, " "); }
tensor([[0.0927, 0.1171, 0.1135, 0.1372, 0.1037, 0.1736, 0.1382, 0.0813, 0.0425],
        [0.0952, 0.1075, 0.1214, 0.1550, 0.0979, 0.1680, 0.1273, 0.0893, 0.0384],
        [0.0673, 0.1550, 0.0998, 0.1346, 0.1022, 0.2111, 0.1281, 0.0674, 0.0347],
        [0.0935, 0.1306, 0.0908, 0.1591, 0.1065, 0.1541, 0.1264, 0.0844, 0.0547],
        [0.0660, 0.1343, 0.0826, 0.1400, 0.0939, 0.2112, 0.1603, 0.0740, 0.0378],
        [0.0879, 0.1141, 0.1168, 0.1688, 0.1198, 0.1666, 0.1205, 0.0713, 0.0342],
        [0.0674, 0.1514, 0.1078, 0.1685, 0.0949, 0.1873, 0.1097, 0.0873, 0.0257],
        [0.0896, 0.1262, 0.0879, 0.1450, 0.0859, 0.2201, 0.1376, 0.0748, 0.0328],
        [0.0615, 0.1126, 0.1196, 0.1645, 0.1362, 0.1704, 0.1429, 0.0572, 0.0351]])