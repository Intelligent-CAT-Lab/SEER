16255
Test: public void test0461() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0461"); org.apache.commons.cli.Option option1 = org.apache.commons.cli.OptionBuilder.create('\000'); org.apache.commons.cli.OptionBuilder optionBuilder2 = org.apache.commons.cli.OptionBuilder.withType((java.lang.Object) option1); boolean boolean3 = option1.hasOptionalArg(); option1.setArgs((-2)); boolean boolean6 = option1.hasArgName(); org.apache.commons.cli.Option option11 = new org.apache.commons.cli.Option("", "hi!", false, "hi!"); option11.setRequired(false); option11.setOptionalArg(true); boolean boolean16 = option11.hasLongOpt(); char char17 = option11.getValueSeparator(); option11.clearValues(); java.util.List list19 = option11.getValuesList(); char char20 = option11.getValueSeparator(); java.lang.String str21 = option11.getOpt(); org.apache.commons.cli.OptionBuilder optionBuilder23 = org.apache.commons.cli.OptionBuilder.withDescription(""); boolean boolean24 = option11.equals((java.lang.Object) optionBuilder23); option1.setType((java.lang.Object) option11); boolean boolean26 = option11.hasOptionalArg(); try { option11.addValueForProcessing(""); } catch (java.lang.RuntimeException e) { } }
Code: public static Option create(String opt){Option option = new Option(opt, description);option.setLongOpt(longopt);option.setRequired(required);;option.setArgs(numberOfArgs);;option.setValueSeparator(valuesep);option.setArgName(argName);OptionBuilder.reset();return option;}
[[0.04106498 0.13790745 0.12348897 0.08516244 0.31340656 0.07437887
 0.02639257 0.02011247 0.0471209  0.10243973 0.02852511]
[0.04883189 0.14176548 0.12699662 0.09198506 0.30101934 0.08668615
 0.0316905  0.02162187 0.04096001 0.08521612 0.02322698]
[0.03422158 0.14658463 0.1007094  0.10003819 0.33162    0.0629355
 0.02992962 0.01598542 0.04697327 0.10668067 0.02432171]
[0.03134721 0.14584427 0.11930162 0.08400895 0.32109508 0.08347273
 0.02347161 0.0183584  0.04994992 0.0953026  0.02784762]
[0.03934073 0.12558478 0.11977115 0.06843519 0.33324435 0.05711589
 0.03789714 0.02292662 0.05260774 0.11443838 0.02863808]
[0.02760708 0.12697825 0.07996662 0.10319746 0.4099557  0.05975527
 0.02304448 0.01749914 0.04034011 0.08905606 0.02259977]
[0.05856237 0.13443021 0.12978908 0.11339337 0.21642044 0.08317193
 0.04729747 0.02731408 0.04863705 0.09424571 0.04673826]
[0.03815229 0.12283316 0.11101905 0.07689644 0.3794496  0.07113867
 0.02913463 0.022909   0.0432652  0.07970298 0.02549902]
[0.05617645 0.1333952  0.12206624 0.07216733 0.29848558 0.08504657
 0.03751402 0.02291353 0.05707949 0.08626208 0.02889348]
[0.03816942 0.13429207 0.15042435 0.08334658 0.3428779  0.06133706
 0.03296939 0.01830273 0.03716661 0.07980891 0.02130509]
[0.0383251  0.13186854 0.11041633 0.08066893 0.32204878 0.0798112
 0.0342523  0.0293734  0.0495231  0.09276662 0.03094564]]