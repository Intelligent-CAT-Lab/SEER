99715
Test: public void testCompareTo() { YearMonth test1 = new YearMonth(2005, 6); YearMonth test1a = new YearMonth(2005, 6); YearMonth test2 = new YearMonth(2005, 7); YearMonth test3 = new YearMonth(2005, 7, GregorianChronology.getInstanceUTC()); DateTimeFieldType[] types = new DateTimeFieldType[] { DateTimeFieldType.year(), DateTimeFieldType.monthOfYear(), }; int[] values = new int[] {2005, 6}; Partial p = new Partial(types, values); try { test1.compareTo(null); fail(); } catch (NullPointerException ex) {} try { test1.compareTo(new LocalTime()); fail(); } catch (ClassCastException ex) {} Partial partial = new Partial() .with(DateTimeFieldType.centuryOfEra(), 1) .with(DateTimeFieldType.halfdayOfDay(), 0) .with(DateTimeFieldType.dayOfMonth(), 9); try { new YearMonth(1970, 6).compareTo(partial); fail(); } catch (ClassCastException ex) {} }
Code: public int compareTo(DurationField durationField) { return 0; }
[[0.11504672 0.07088312 0.22071868 0.09066784 0.16294885 0.12779254
 0.16083539 0.05110686]
[0.07928596 0.0558209  0.24616511 0.09625609 0.18735772 0.12893778
 0.16655207 0.03962431]
[0.11457121 0.05334648 0.23531055 0.09587287 0.18281381 0.1058514
 0.17308146 0.03915217]
[0.08398679 0.04311445 0.26733202 0.09647291 0.1708708  0.1196094
 0.17559966 0.04301397]
[0.10497404 0.04898982 0.24481355 0.10018218 0.1817163  0.11911991
 0.13819627 0.06200793]
[0.07951632 0.04447542 0.31265107 0.08226886 0.17065464 0.11283726
 0.15159996 0.04599651]
[0.10038751 0.05522908 0.22225319 0.10987818 0.1732733  0.12319817
 0.16946179 0.04631881]
[0.07304599 0.0548218  0.22016698 0.0877915  0.19865648 0.16269505
 0.16059923 0.04222292]]