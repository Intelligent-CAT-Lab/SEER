16303
Test: public void test040() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test040"); org.apache.commons.cli.PosixParser posixParser0 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine1 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj3 = commandLine1.getParsedOptionValue(""); java.util.Properties properties5 = commandLine1.getOptionProperties("hi!"); posixParser0.processProperties(properties5); posixParser0.burstToken("", true); org.apache.commons.cli.GnuParser gnuParser10 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.CommandLine commandLine11 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj13 = commandLine11.getParsedOptionValue(""); java.util.Properties properties15 = commandLine11.getOptionProperties("hi!"); java.lang.Object obj17 = commandLine11.getOptionObject("hi!"); java.lang.Object obj19 = commandLine11.getOptionObject("hi!"); gnuParser10.cmd = commandLine11; org.apache.commons.cli.CommandLine commandLine21 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj23 = commandLine21.getParsedOptionValue(""); java.util.Properties properties25 = commandLine21.getOptionProperties("hi!"); gnuParser10.processProperties(properties25); org.apache.commons.cli.Options options27 = new org.apache.commons.cli.Options(); org.apache.commons.cli.GnuParser gnuParser28 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.Options options29 = new org.apache.commons.cli.Options(); org.apache.commons.cli.GnuParser gnuParser30 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.CommandLine commandLine31 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj33 = commandLine31.getParsedOptionValue(""); java.util.Properties properties35 = commandLine31.getOptionProperties("hi!"); java.lang.Object obj37 = commandLine31.getOptionObject("hi!"); java.lang.Object obj39 = commandLine31.getOptionObject("hi!"); gnuParser30.cmd = commandLine31; org.apache.commons.cli.Options options41 = null; org.apache.commons.cli.CommandLine commandLine42 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj44 = commandLine42.getParsedOptionValue(""); java.util.Properties properties46 = commandLine42.getOptionProperties("hi!"); java.lang.String[] strArray47 = commandLine42.getArgs(); java.lang.String[] strArray49 = gnuParser30.flatten(options41, strArray47, true); java.lang.String[] strArray51 = gnuParser28.flatten(options29, strArray49, true); org.apache.commons.cli.CommandLine commandLine53 = gnuParser10.parse(options27, strArray49, true); java.util.List list55 = options27.getMatchingOptions("hi!"); boolean boolean57 = options27.hasLongOption("hi!"); java.util.List list58 = options27.getRequiredOptions(); org.apache.commons.cli.Option option62 = new org.apache.commons.cli.Option("", true, ""); java.lang.String str63 = option62.getLongOpt(); org.apache.commons.cli.OptionGroup optionGroup64 = options27.getOptionGroup(option62); java.lang.String str65 = options27.toString(); posixParser0.setOptions(options27); boolean boolean68 = options27.hasOption("org.apache.commons.cli.AmbiguousOptionException: Ambiguous option: '' (could be: )"); } ] [ long {} ]" + "'", str65, "[ Options: [ short {} ] [ long {} ]"); }
Code: protected void processProperties(Properties properties){if (properties == null){return;}for (Enumeration e = properties.propertyNames(); e.hasMoreElements();){String option = e.nextElement().toString();if (!cmd.hasOption(option)){Option opt = getOptions().getOption(option);String value = properties.getProperty(option);if (opt.hasArg()){if (opt.getValues() == null || opt.getValues().length == -1){try{;}catch (RuntimeException exp){}}}else if (!("yes".equalsIgnoreCase(value)|| "true".equalsIgnoreCase(value)|| "1".equalsIgnoreCase(value))){continue;}cmd.addOption(opt);;}}}
tensor([[0.0296, 0.0131, 0.0610,  ..., 0.0240, 0.0687, 0.0208],
        [0.0354, 0.0118, 0.0630,  ..., 0.0214, 0.0831, 0.0226],
        [0.0308, 0.0125, 0.0556,  ..., 0.0218, 0.0801, 0.0216],
        ...,
        [0.0269, 0.0114, 0.0553,  ..., 0.0232, 0.0736, 0.0215],
        [0.0279, 0.0079, 0.0676,  ..., 0.0208, 0.0802, 0.0201],
        [0.0328, 0.0132, 0.0575,  ..., 0.0238, 0.0449, 0.0263]])