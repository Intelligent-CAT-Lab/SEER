16265
Test: public void test190() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test190"); org.apache.commons.cli.PosixParser posixParser0 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine1 = null; posixParser0.cmd = commandLine1; org.apache.commons.cli.Options options3 = new org.apache.commons.cli.Options(); java.util.List list4 = options3.getRequiredOptions(); java.lang.String[] strArray6 = new java.lang.String[] { "[ Options: [ short {=[ option: hi! :: org.apache.commons.cli.MissingArgumentException: Missing argument for option: ]} ] [ long {hi!=[ option: hi! :: org.apache.commons.cli.MissingArgumentException: Missing argument for option: ]} ]" }; java.lang.String[] strArray8 = posixParser0.flatten(options3, strArray6, true); org.apache.commons.cli.Options options9 = new org.apache.commons.cli.Options(); org.apache.commons.cli.PosixParser posixParser10 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine11 = null; posixParser10.cmd = commandLine11; org.apache.commons.cli.Options options13 = new org.apache.commons.cli.Options(); java.util.List list14 = options13.getRequiredOptions(); java.lang.String[] strArray16 = new java.lang.String[] { "[ Options: [ short {=[ option: hi! :: org.apache.commons.cli.MissingArgumentException: Missing argument for option: ]} ] [ long {hi!=[ option: hi! :: org.apache.commons.cli.MissingArgumentException: Missing argument for option: ]} ]" }; java.lang.String[] strArray18 = posixParser10.flatten(options13, strArray16, true); java.lang.String[] strArray20 = posixParser0.flatten(options9, strArray18, false); java.util.Properties properties21 = null; posixParser0.processProperties(properties21); org.apache.commons.cli.Options options23 = new org.apache.commons.cli.Options(); org.apache.commons.cli.Option option25 = options23.getOption("org.apache.commons.cli.UnrecognizedOptionException: hi!"); org.apache.commons.cli.PosixParser posixParser26 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine27 = null; posixParser26.cmd = commandLine27; org.apache.commons.cli.Options options29 = new org.apache.commons.cli.Options(); java.util.List list30 = options29.getRequiredOptions(); java.lang.String[] strArray32 = new java.lang.String[] { "[ Options: [ short {=[ option: hi! :: org.apache.commons.cli.MissingArgumentException: Missing argument for option: ]} ] [ long {hi!=[ option: hi! :: org.apache.commons.cli.MissingArgumentException: Missing argument for option: ]} ]" }; java.lang.String[] strArray34 = posixParser26.flatten(options29, strArray32, true); org.apache.commons.cli.Options options35 = new org.apache.commons.cli.Options(); org.apache.commons.cli.PosixParser posixParser36 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine37 = null; posixParser36.cmd = commandLine37; org.apache.commons.cli.Options options39 = new org.apache.commons.cli.Options(); java.util.List list40 = options39.getRequiredOptions(); java.lang.String[] strArray42 = new java.lang.String[] { "[ Options: [ short {=[ option: hi! :: org.apache.commons.cli.MissingArgumentException: Missing argument for option: ]} ] [ long {hi!=[ option: hi! :: org.apache.commons.cli.MissingArgumentException: Missing argument for option: ]} ]" }; java.lang.String[] strArray44 = posixParser36.flatten(options39, strArray42, true); java.lang.String[] strArray46 = posixParser26.flatten(options35, strArray44, false); org.apache.commons.cli.CommandLine commandLine47 = posixParser0.parse(options23, strArray46); boolean boolean49 = options23.hasOption("org.apache.commons.cli.UnrecognizedOptionException: org.apache.commons.cli.UnrecognizedOptionException: hi!"); }
Code: protected void processProperties(Properties properties){if (properties == null){return;}for (Enumeration e = properties.propertyNames(); e.hasMoreElements();){String option = e.nextElement().toString();if (!cmd.hasOption(option)){Option opt = getOptions().getOption(option);String value = properties.getProperty(option);if (opt.hasArg()){if (opt.getValues() == null || opt.getValues().length == 1){try{opt.addValueForProcessing(value);}catch (RuntimeException exp){}}}else if (!("yes".equalsIgnoreCase(value)|| "true".equalsIgnoreCase(value)|| "1".equalsIgnoreCase(value))){break;};}}}
tensor([[0.0301, 0.0134, 0.0624,  ..., 0.0245, 0.0698, 0.0066],
        [0.0362, 0.0121, 0.0647,  ..., 0.0220, 0.0848, 0.0033],
        [0.0314, 0.0128, 0.0568,  ..., 0.0223, 0.0818, 0.0064],
        ...,
        [0.0275, 0.0117, 0.0564,  ..., 0.0237, 0.0753, 0.0060],
        [0.0285, 0.0080, 0.0691,  ..., 0.0213, 0.0820, 0.0046],
        [0.0382, 0.0144, 0.0571,  ..., 0.0272, 0.0624, 0.0059]])