24659
Test: public void test3() throws Throwable { RegionBSPTree1S regionBSPTree1S0 = RegionBSPTree1S.empty(); Point1S point1S0 = Point1S.NaN; Precision.DoubleEquivalence precision_DoubleEquivalence0 = mock(Precision.DoubleEquivalence.class, new ViolatedAssumptionAnswer()); CutAngle cutAngle0 = new CutAngle(point1S0, false, precision_DoubleEquivalence0); HyperplaneConvexSubset<Point1S> hyperplaneConvexSubset0 = cutAngle0.span(); regionBSPTree1S0.insert((HyperplaneSubset<Point1S>) hyperplaneConvexSubset0); Point1S point1S1 = regionBSPTree1S0.project(point1S0); }
Code: public Point1S project(final Point1S pt) { final BoundaryProjector1S projector = new BoundaryProjector1S(pt); accept(projector); return projector.getProjected(); }
[[0.05473659 0.07593341 0.07593341 0.07593341 0.07593341 0.07253101
 0.04387512 0.07593341 0.07593341 0.03441249 0.02763807 0.07593341
 0.07593341 0.06018369 0.07593341 0.02322231]
[0.04508723 0.07460539 0.07460539 0.07460539 0.07460539 0.075055
 0.04453546 0.07460539 0.07460539 0.04921955 0.03458603 0.07460539
 0.07460539 0.05481777 0.07460539 0.02525046]
[0.04508723 0.07460539 0.07460539 0.07460539 0.07460539 0.075055
 0.04453546 0.07460539 0.07460539 0.04921955 0.03458603 0.07460539
 0.07460539 0.05481777 0.07460539 0.02525046]
[0.04508723 0.07460539 0.07460539 0.07460539 0.07460539 0.075055
 0.04453546 0.07460539 0.07460539 0.04921955 0.03458603 0.07460539
 0.07460539 0.05481777 0.07460539 0.02525046]
[0.04508723 0.07460539 0.07460539 0.07460539 0.07460539 0.075055
 0.04453546 0.07460539 0.07460539 0.04921955 0.03458603 0.07460539
 0.07460539 0.05481777 0.07460539 0.02525046]
[0.05541285 0.06896666 0.06896666 0.06896666 0.06896666 0.09722388
 0.05473104 0.06896666 0.06896666 0.04649962 0.02973919 0.06896666
 0.06896666 0.06271005 0.06896666 0.0329834 ]
[0.05062819 0.07455279 0.07455279 0.07455279 0.07455279 0.09127629
 0.0343782  0.07455279 0.07455279 0.03909293 0.02216225 0.07455279
 0.07455279 0.07377619 0.07455279 0.01771089]
[0.04508723 0.07460539 0.07460539 0.07460539 0.07460539 0.075055
 0.04453546 0.07460539 0.07460539 0.04921955 0.03458603 0.07460539
 0.07460539 0.05481777 0.07460539 0.02525046]
[0.04508723 0.07460539 0.07460539 0.07460539 0.07460539 0.075055
 0.04453546 0.07460539 0.07460539 0.04921955 0.03458603 0.07460539
 0.07460539 0.05481777 0.07460539 0.02525046]
[0.05369448 0.07591417 0.07591417 0.07591417 0.07591417 0.06184078
 0.04527144 0.07591417 0.07591417 0.04486334 0.0253343  0.07591417
 0.07591417 0.05916348 0.07591417 0.02660464]
[0.0481158  0.07367046 0.07367046 0.07367046 0.07367046 0.08742321
 0.03864124 0.07367046 0.07367046 0.03847313 0.03124535 0.07367046
 0.07367046 0.06770182 0.07367046 0.02536532]
[0.04508723 0.07460539 0.07460539 0.07460539 0.07460539 0.075055
 0.04453546 0.07460539 0.07460539 0.04921955 0.03458603 0.07460539
 0.07460539 0.05481777 0.07460539 0.02525046]
[0.04508723 0.07460539 0.07460539 0.07460539 0.07460539 0.075055
 0.04453546 0.07460539 0.07460539 0.04921955 0.03458603 0.07460539
 0.07460539 0.05481777 0.07460539 0.02525046]
[0.03937227 0.0786217  0.0786217  0.0786217  0.0786217  0.07670197
 0.0361368  0.0786217  0.0786217  0.03847583 0.02347482 0.0786217
 0.0786217  0.05720906 0.0786217  0.0210339 ]
[0.04508723 0.07460539 0.07460539 0.07460539 0.07460539 0.075055
 0.04453546 0.07460539 0.07460539 0.04921955 0.03458603 0.07460539
 0.07460539 0.05481777 0.07460539 0.02525046]
[0.03914391 0.07014848 0.07014848 0.07014848 0.07014848 0.11824282
 0.03674415 0.07014848 0.07014848 0.03731266 0.02203321 0.07014848
 0.07014848 0.09059222 0.07014848 0.02459477]]