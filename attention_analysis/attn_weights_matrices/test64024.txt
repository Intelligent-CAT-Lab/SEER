64024
Test: public void test183() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test183"); com.fasterxml.jackson.core.SerializableString serializableString0 = null; com.fasterxml.jackson.core.util.DefaultPrettyPrinter defaultPrettyPrinter1 = new com.fasterxml.jackson.core.util.DefaultPrettyPrinter(serializableString0); com.fasterxml.jackson.core.util.DefaultPrettyPrinter defaultPrettyPrinter2 = defaultPrettyPrinter1.withSpacesInObjectEntries(); com.fasterxml.jackson.core.SerializableString serializableString3 = null; com.fasterxml.jackson.core.util.DefaultPrettyPrinter defaultPrettyPrinter4 = new com.fasterxml.jackson.core.util.DefaultPrettyPrinter(serializableString3); com.fasterxml.jackson.core.util.DefaultPrettyPrinter.FixedSpaceIndenter fixedSpaceIndenter5 = com.fasterxml.jackson.core.util.DefaultPrettyPrinter.FixedSpaceIndenter.instance; boolean boolean6 = fixedSpaceIndenter5.isInline(); com.fasterxml.jackson.core.util.DefaultPrettyPrinter defaultPrettyPrinter7 = defaultPrettyPrinter4.withObjectIndenter((com.fasterxml.jackson.core.util.DefaultPrettyPrinter.Indenter) fixedSpaceIndenter5); com.fasterxml.jackson.core.util.DefaultPrettyPrinter defaultPrettyPrinter8 = defaultPrettyPrinter7.createInstance(); com.fasterxml.jackson.core.SerializableString serializableString9 = null; com.fasterxml.jackson.core.util.DefaultPrettyPrinter defaultPrettyPrinter10 = new com.fasterxml.jackson.core.util.DefaultPrettyPrinter(serializableString9); com.fasterxml.jackson.core.util.DefaultPrettyPrinter.FixedSpaceIndenter fixedSpaceIndenter11 = com.fasterxml.jackson.core.util.DefaultPrettyPrinter.FixedSpaceIndenter.instance; boolean boolean12 = fixedSpaceIndenter11.isInline(); com.fasterxml.jackson.core.util.DefaultPrettyPrinter defaultPrettyPrinter13 = defaultPrettyPrinter10.withObjectIndenter((com.fasterxml.jackson.core.util.DefaultPrettyPrinter.Indenter) fixedSpaceIndenter11); com.fasterxml.jackson.core.util.DefaultPrettyPrinter defaultPrettyPrinter14 = defaultPrettyPrinter7.withObjectIndenter((com.fasterxml.jackson.core.util.DefaultPrettyPrinter.Indenter) fixedSpaceIndenter11); defaultPrettyPrinter1.indentArraysWith((com.fasterxml.jackson.core.util.DefaultPrettyPrinter.Indenter) fixedSpaceIndenter11); com.fasterxml.jackson.core.json.DupDetector dupDetector16 = null; com.fasterxml.jackson.core.json.JsonWriteContext jsonWriteContext17 = com.fasterxml.jackson.core.json.JsonWriteContext.createRootContext(dupDetector16); com.fasterxml.jackson.core.json.JsonWriteContext jsonWriteContext18 = jsonWriteContext17.createChildObjectContext(); com.fasterxml.jackson.core.json.JsonWriteContext jsonWriteContext19 = jsonWriteContext17._child; com.fasterxml.jackson.core.json.DupDetector dupDetector20 = null; com.fasterxml.jackson.core.json.JsonWriteContext jsonWriteContext21 = jsonWriteContext19.withDupDetector(dupDetector20); com.fasterxml.jackson.core.json.DupDetector dupDetector22 = null; com.fasterxml.jackson.core.json.JsonWriteContext jsonWriteContext23 = jsonWriteContext21.withDupDetector(dupDetector22); com.fasterxml.jackson.core.JsonFactory jsonFactory24 = new com.fasterxml.jackson.core.JsonFactory(); boolean boolean25 = jsonFactory24.requiresCustomCodec(); com.fasterxml.jackson.core.JsonFactory jsonFactory27 = jsonFactory24.setRootValueSeparator("3.0"); jsonWriteContext23.setCurrentValue((java.lang.Object) jsonFactory24); com.fasterxml.jackson.core.JsonGenerator.Feature feature29 = com.fasterxml.jackson.core.JsonGenerator.Feature.AUTO_CLOSE_TARGET; com.fasterxml.jackson.core.JsonFactory jsonFactory31 = jsonFactory24.configure(feature29, false); java.io.Writer writer32 = null; com.fasterxml.jackson.core.JsonGenerator jsonGenerator33 = jsonFactory24.createGenerator(writer32); com.fasterxml.jackson.core.JsonGenerator.Feature feature34 = com.fasterxml.jackson.core.JsonGenerator.Feature.AUTO_CLOSE_TARGET; boolean boolean36 = feature34.enabledIn(11); com.fasterxml.jackson.core.JsonGenerator jsonGenerator38 = jsonGenerator33.configure(feature34, false); com.fasterxml.jackson.core.JsonGenerator jsonGenerator40 = jsonGenerator33.setFeatureMask((-1973126225)); defaultPrettyPrinter1.writeArrayValueSeparator(jsonGenerator33); com.fasterxml.jackson.core.json.DupDetector dupDetector42 = null; com.fasterxml.jackson.core.json.JsonWriteContext jsonWriteContext43 = com.fasterxml.jackson.core.json.JsonWriteContext.createRootContext(dupDetector42); com.fasterxml.jackson.core.json.JsonWriteContext jsonWriteContext44 = jsonWriteContext43.createChildObjectContext(); com.fasterxml.jackson.core.json.JsonWriteContext jsonWriteContext45 = jsonWriteContext43._child; com.fasterxml.jackson.core.json.DupDetector dupDetector46 = null; com.fasterxml.jackson.core.json.JsonWriteContext jsonWriteContext47 = jsonWriteContext45.withDupDetector(dupDetector46); com.fasterxml.jackson.core.json.DupDetector dupDetector48 = null; com.fasterxml.jackson.core.json.JsonWriteContext jsonWriteContext49 = jsonWriteContext47.withDupDetector(dupDetector48); com.fasterxml.jackson.core.JsonFactory jsonFactory50 = new com.fasterxml.jackson.core.JsonFactory(); boolean boolean51 = jsonFactory50.requiresCustomCodec(); com.fasterxml.jackson.core.JsonFactory jsonFactory53 = jsonFactory50.setRootValueSeparator("3.0"); jsonWriteContext49.setCurrentValue((java.lang.Object) jsonFactory50); com.fasterxml.jackson.core.JsonGenerator.Feature feature55 = com.fasterxml.jackson.core.JsonGenerator.Feature.AUTO_CLOSE_TARGET; com.fasterxml.jackson.core.JsonFactory jsonFactory57 = jsonFactory50.configure(feature55, false); java.io.Writer writer58 = null; com.fasterxml.jackson.core.JsonGenerator jsonGenerator59 = jsonFactory50.createGenerator(writer58); com.fasterxml.jackson.core.JsonStreamContext jsonStreamContext60 = jsonGenerator59.getOutputContext(); jsonGenerator59.writeNumber("-1"); jsonGenerator59.writeNumber((float) (-648367840)); defaultPrettyPrinter1.writeObjectEntrySeparator(jsonGenerator59); com.fasterxml.jackson.core.util.DefaultPrettyPrinter.NopIndenter nopIndenter66 = new com.fasterxml.jackson.core.util.DefaultPrettyPrinter.NopIndenter(); com.fasterxml.jackson.core.util.DefaultPrettyPrinter defaultPrettyPrinter67 = defaultPrettyPrinter1.withArrayIndenter((com.fasterxml.jackson.core.util.DefaultPrettyPrinter.Indenter) nopIndenter66); com.fasterxml.jackson.core.JsonFactory jsonFactory68 = new com.fasterxml.jackson.core.JsonFactory(); boolean boolean69 = jsonFactory68.requiresCustomCodec(); com.fasterxml.jackson.core.JsonParser.Feature feature70 = com.fasterxml.jackson.core.JsonParser.Feature.ALLOW_UNQUOTED_CONTROL_CHARS; com.fasterxml.jackson.core.JsonFactory jsonFactory71 = jsonFactory68.disable(feature70); com.fasterxml.jackson.core.JsonParser jsonParser73 = jsonFactory71.createJsonParser(""); java.io.Writer writer74 = null; com.fasterxml.jackson.core.JsonGenerator jsonGenerator75 = jsonFactory71.createGenerator(writer74); int int76 = jsonGenerator75.getFormatFeatures(); defaultPrettyPrinter67.writeEndArray(jsonGenerator75, (-1973089155)); jsonGenerator75.writeNumber((float) 1649451217); }
Code: public JsonGenerator disable(Feature f) { super.disable(f); if (f == Feature.QUOTE_FIELD_NAMES) { _cfgUnqNames = true; } return this; }
tensor([[0.0406, 0.0541, 0.0626, 0.1424, 0.0533, 0.0180, 0.1093, 0.0900, 0.0642,
         0.0398, 0.0533, 0.1053, 0.0255, 0.0279, 0.0171, 0.0446, 0.0349, 0.0171],
        [0.0372, 0.0457, 0.0639, 0.1762, 0.0504, 0.0138, 0.1070, 0.0995, 0.0598,
         0.0364, 0.0504, 0.0994, 0.0272, 0.0259, 0.0147, 0.0445, 0.0334, 0.0147],
        [0.0336, 0.0486, 0.0662, 0.1670, 0.0640, 0.0129, 0.0979, 0.1175, 0.0531,
         0.0242, 0.0640, 0.1022, 0.0237, 0.0255, 0.0130, 0.0499, 0.0238, 0.0130],
        [0.0263, 0.0371, 0.0528, 0.2079, 0.0640, 0.0133, 0.1005, 0.1212, 0.0472,
         0.0258, 0.0640, 0.0942, 0.0241, 0.0268, 0.0137, 0.0462, 0.0214, 0.0137],
        [0.0448, 0.0683, 0.0602, 0.1218, 0.0664, 0.0226, 0.0778, 0.0893, 0.0492,
         0.0330, 0.0664, 0.0935, 0.0370, 0.0322, 0.0243, 0.0522, 0.0367, 0.0243],
        [0.0307, 0.0454, 0.0560, 0.1683, 0.0610, 0.0120, 0.0958, 0.1088, 0.0599,
         0.0295, 0.0610, 0.1090, 0.0289, 0.0295, 0.0134, 0.0453, 0.0321, 0.0134],
        [0.0249, 0.0331, 0.0478, 0.2079, 0.0549, 0.0075, 0.1414, 0.1413, 0.0501,
         0.0262, 0.0549, 0.0971, 0.0197, 0.0231, 0.0083, 0.0330, 0.0205, 0.0083],
        [0.0305, 0.0461, 0.0675, 0.1603, 0.0602, 0.0163, 0.1097, 0.1021, 0.0527,
         0.0302, 0.0602, 0.1067, 0.0228, 0.0271, 0.0168, 0.0438, 0.0302, 0.0168],
        [0.0215, 0.0367, 0.0430, 0.2112, 0.0566, 0.0107, 0.1182, 0.1550, 0.0529,
         0.0271, 0.0566, 0.0828, 0.0223, 0.0224, 0.0115, 0.0354, 0.0244, 0.0115],
        [0.0315, 0.0518, 0.0605, 0.1576, 0.0541, 0.0183, 0.1437, 0.1013, 0.0641,
         0.0341, 0.0541, 0.0821, 0.0236, 0.0275, 0.0138, 0.0416, 0.0264, 0.0138],
        [0.0448, 0.0683, 0.0602, 0.1218, 0.0664, 0.0226, 0.0778, 0.0893, 0.0492,
         0.0330, 0.0664, 0.0935, 0.0370, 0.0322, 0.0243, 0.0522, 0.0367, 0.0243],
        [0.0310, 0.0531, 0.0647, 0.1584, 0.0641, 0.0165, 0.1057, 0.0911, 0.0503,
         0.0313, 0.0641, 0.0988, 0.0247, 0.0304, 0.0162, 0.0497, 0.0338, 0.0162],
        [0.0485, 0.0579, 0.0609, 0.1024, 0.0522, 0.0299, 0.1069, 0.0776, 0.0555,
         0.0415, 0.0522, 0.0944, 0.0395, 0.0341, 0.0232, 0.0528, 0.0474, 0.0232],
        [0.0342, 0.0501, 0.0632, 0.1547, 0.0606, 0.0191, 0.1128, 0.1187, 0.0546,
         0.0333, 0.0606, 0.0823, 0.0250, 0.0319, 0.0131, 0.0440, 0.0286, 0.0131],
        [0.0290, 0.0375, 0.0724, 0.1319, 0.0679, 0.0173, 0.1103, 0.1121, 0.0496,
         0.0316, 0.0679, 0.0908, 0.0255, 0.0385, 0.0149, 0.0614, 0.0265, 0.0149],
        [0.0279, 0.0531, 0.0522, 0.2012, 0.0532, 0.0136, 0.1158, 0.1057, 0.0547,
         0.0303, 0.0532, 0.0946, 0.0272, 0.0222, 0.0147, 0.0407, 0.0251, 0.0147],
        [0.0437, 0.0492, 0.0630, 0.1429, 0.0656, 0.0194, 0.1060, 0.0769, 0.0569,
         0.0287, 0.0656, 0.1045, 0.0258, 0.0356, 0.0181, 0.0532, 0.0268, 0.0181],
        [0.0290, 0.0375, 0.0724, 0.1319, 0.0679, 0.0173, 0.1103, 0.1121, 0.0496,
         0.0316, 0.0679, 0.0908, 0.0255, 0.0385, 0.0149, 0.0614, 0.0265, 0.0149]])