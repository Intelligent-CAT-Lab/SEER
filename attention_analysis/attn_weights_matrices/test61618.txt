61618
Test: public void test1040() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1040"); org.apache.commons.csv.CSVFormat cSVFormat0 = org.apache.commons.csv.CSVFormat.TDF; cSVFormat0.validate(); org.apache.commons.csv.Quote quote2 = null; org.apache.commons.csv.CSVFormat cSVFormat3 = cSVFormat0.withQuotePolicy(quote2); org.apache.commons.csv.CSVFormat cSVFormat5 = cSVFormat3.withEscape((java.lang.Character) 'a'); org.apache.commons.csv.CSVFormat cSVFormat7 = cSVFormat3.withNullString("hi!\t\"a\t0\""); char char8 = cSVFormat3.getDelimiter(); org.apache.commons.csv.CSVFormat cSVFormat10 = org.apache.commons.csv.CSVFormat.newFormat('#'); org.apache.commons.csv.CSVFormat cSVFormat12 = cSVFormat10.withCommentStart('\b'); org.apache.commons.csv.CSVFormat cSVFormat14 = cSVFormat10.withQuoteChar((java.lang.Character) '\037'); org.apache.commons.csv.CSVFormat cSVFormat15 = org.apache.commons.csv.CSVFormat.TDF; cSVFormat15.validate(); org.apache.commons.csv.CSVFormat cSVFormat17 = org.apache.commons.csv.CSVFormat.TDF; cSVFormat17.validate(); org.apache.commons.csv.Quote quote19 = null; org.apache.commons.csv.CSVFormat cSVFormat20 = cSVFormat17.withQuotePolicy(quote19); org.apache.commons.csv.CSVFormat cSVFormat22 = cSVFormat20.withEscape((java.lang.Character) 'a'); java.lang.Object[] objArray24 = new java.lang.Object[] { 'a', (byte) 0 }; java.lang.String str25 = cSVFormat15.format(objArray24); boolean boolean26 = cSVFormat15.isEscaping(); org.apache.commons.csv.CSVFormat cSVFormat28 = cSVFormat15.withIgnoreSurroundingSpaces(false); org.apache.commons.csv.CSVFormat cSVFormat30 = cSVFormat15.withRecordSeparator('a'); org.apache.commons.csv.CSVFormat cSVFormat31 = org.apache.commons.csv.CSVFormat.TDF; cSVFormat31.validate(); org.apache.commons.csv.Quote quote33 = null; org.apache.commons.csv.CSVFormat cSVFormat34 = cSVFormat31.withQuotePolicy(quote33); org.apache.commons.csv.CSVFormat cSVFormat36 = cSVFormat34.withQuoteChar('\t'); java.lang.Character char37 = cSVFormat36.getEscape(); org.apache.commons.csv.Quote quote38 = null; org.apache.commons.csv.CSVFormat cSVFormat39 = cSVFormat36.withQuotePolicy(quote38); org.apache.commons.csv.CSVFormat cSVFormat40 = org.apache.commons.csv.CSVFormat.TDF; cSVFormat40.validate(); org.apache.commons.csv.CSVFormat cSVFormat43 = cSVFormat40.withDelimiter('a'); org.apache.commons.csv.CSVFormat cSVFormat44 = org.apache.commons.csv.CSVFormat.TDF; cSVFormat44.validate(); org.apache.commons.csv.CSVFormat cSVFormat47 = cSVFormat44.withIgnoreEmptyLines(true); java.lang.String[] strArray50 = new java.lang.String[] { "hi!", "a\t0" }; org.apache.commons.csv.CSVFormat cSVFormat51 = cSVFormat44.withHeader(strArray50); org.apache.commons.csv.CSVFormat cSVFormat52 = cSVFormat40.withHeader(strArray50); org.apache.commons.csv.CSVFormat cSVFormat53 = cSVFormat39.withHeader(strArray50); org.apache.commons.csv.CSVFormat cSVFormat54 = cSVFormat15.withHeader(strArray50); java.lang.String str55 = cSVFormat10.format((java.lang.Object[]) strArray50); org.apache.commons.csv.CSVFormat cSVFormat56 = cSVFormat3.withHeader(strArray50); org.apache.commons.csv.Quote quote57 = null; org.apache.commons.csv.CSVFormat cSVFormat58 = cSVFormat3.withQuotePolicy(quote57); java.lang.String str59 = cSVFormat58.toString(); }
Code: public String toString(){final StringBuilder sb = new StringBuilder();sb.append("Delimiter=<").append(delimiter).append('>');if (isEscaping()) {sb.append(' ');sb.append("Escape=<").append(escape).append('>');}if (true) {sb.append(' ');;}if (isCommentingEnabled()) {sb.append(' ');sb.append("CommentStart=<").append(commentStart).append('>');}if (isNullHandling()) {sb.append(' ');;}if(recordSeparator != null) {sb.append(' ');sb.append("RecordSeparator=<").append(recordSeparator).append('>');}if (getIgnoreEmptyLines()) {sb.append(" EmptyLines:ignored");}if (getIgnoreSurroundingSpaces()) {sb.append(" SurroundingSpaces:ignored");}sb.append(" SkipHeaderRecord:").append(skipHeaderRecord);if (header != null) {sb.append(' ');sb.append("Header:").append(Arrays.toString(header));}return sb.toString();}
tensor([[0.0217, 0.0275, 0.0144,  ..., 0.0457, 0.0366, 0.0244],
        [0.0227, 0.0264, 0.0145,  ..., 0.0447, 0.0379, 0.0245],
        [0.0175, 0.0319, 0.0133,  ..., 0.0398, 0.0302, 0.0246],
        ...,
        [0.0209, 0.0325, 0.0169,  ..., 0.0388, 0.0331, 0.0229],
        [0.0162, 0.0284, 0.0131,  ..., 0.0421, 0.0241, 0.0169],
        [0.0219, 0.0307, 0.0145,  ..., 0.0431, 0.0269, 0.0241]])