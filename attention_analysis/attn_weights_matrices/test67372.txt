67372
Test: public void testCustomLists() throws Exception { ObjectMapper mapper = new ObjectMapper(); SimpleModule module = new SimpleModule("test", Version.unknownVersion()); JsonSerializer<?> ser = new CollectionSerializer(null, false, null, null); final JsonSerializer<Object> collectionSerializer = (JsonSerializer<Object>) ser; module.addSerializer(Collection.class, new JsonSerializer<Collection>() { @Override public void serialize(Collection value, JsonGenerator jgen, SerializerProvider provider) throws IOException, JsonProcessingException { if (value.size() != 0) { collectionSerializer.serialize(value, jgen, provider); } else { jgen.writeNull(); } } }); mapper.registerModule(module); }
Code: public void serialize(Object value, JsonGenerator g, SerializerProvider provider){switch (_typeId) {case TYPE_DATE:provider.defaultSerializeDateKey((Date)value, g);break;case TYPE_CALENDAR:;break;case TYPE_CLASS:g.writeFieldName(((Class<?>)value).getName());break;case TYPE_ENUM:{String str = provider.isEnabled(SerializationFeature.WRITE_ENUMS_USING_TO_STRING)? value.toString() : ((Enum<?>) value).name();;}break;case TYPE_TO_STRING:default:g.writeFieldName(value.toString());}}
tensor([[0.0311, 0.0265, 0.0751, 0.0286, 0.0394, 0.0325, 0.0920, 0.0285, 0.0515,
         0.0822, 0.0303, 0.0134, 0.0187, 0.0102, 0.0255, 0.0219, 0.0203, 0.1524,
         0.1033, 0.0331, 0.0372, 0.0188, 0.0273],
        [0.0238, 0.0246, 0.0693, 0.0182, 0.0280, 0.0283, 0.1271, 0.0181, 0.0413,
         0.0708, 0.0191, 0.0095, 0.0237, 0.0127, 0.0234, 0.0138, 0.0223, 0.2433,
         0.0839, 0.0261, 0.0311, 0.0170, 0.0244],
        [0.0339, 0.0265, 0.0675, 0.0300, 0.0447, 0.0358, 0.0956, 0.0197, 0.0407,
         0.0833, 0.0330, 0.0153, 0.0231, 0.0148, 0.0308, 0.0203, 0.0186, 0.1705,
         0.0864, 0.0253, 0.0339, 0.0227, 0.0276],
        [0.0194, 0.0169, 0.0870, 0.0208, 0.0304, 0.0332, 0.1280, 0.0181, 0.0397,
         0.0731, 0.0243, 0.0112, 0.0215, 0.0106, 0.0201, 0.0162, 0.0184, 0.1914,
         0.1193, 0.0216, 0.0344, 0.0170, 0.0272],
        [0.0274, 0.0233, 0.0893, 0.0222, 0.0315, 0.0246, 0.1060, 0.0242, 0.0443,
         0.0783, 0.0279, 0.0113, 0.0207, 0.0113, 0.0221, 0.0153, 0.0205, 0.2046,
         0.0909, 0.0240, 0.0358, 0.0172, 0.0272],
        [0.0187, 0.0229, 0.0706, 0.0260, 0.0297, 0.0264, 0.1118, 0.0235, 0.0417,
         0.0972, 0.0323, 0.0114, 0.0246, 0.0122, 0.0286, 0.0169, 0.0186, 0.1875,
         0.0972, 0.0329, 0.0282, 0.0172, 0.0241],
        [0.0229, 0.0189, 0.0875, 0.0263, 0.0354, 0.0336, 0.1032, 0.0173, 0.0379,
         0.1060, 0.0189, 0.0097, 0.0194, 0.0092, 0.0196, 0.0139, 0.0215, 0.2136,
         0.0894, 0.0206, 0.0294, 0.0173, 0.0283],
        [0.0267, 0.0253, 0.0944, 0.0250, 0.0372, 0.0321, 0.0956, 0.0222, 0.0429,
         0.0867, 0.0270, 0.0124, 0.0176, 0.0139, 0.0248, 0.0164, 0.0198, 0.1958,
         0.0770, 0.0247, 0.0329, 0.0172, 0.0323],
        [0.0196, 0.0174, 0.1074, 0.0213, 0.0295, 0.0215, 0.1309, 0.0159, 0.0419,
         0.0900, 0.0221, 0.0078, 0.0154, 0.0084, 0.0197, 0.0156, 0.0158, 0.2068,
         0.0998, 0.0238, 0.0303, 0.0127, 0.0263],
        [0.0236, 0.0201, 0.1100, 0.0291, 0.0335, 0.0234, 0.1078, 0.0225, 0.0482,
         0.0942, 0.0249, 0.0108, 0.0191, 0.0100, 0.0205, 0.0190, 0.0199, 0.1890,
         0.0793, 0.0208, 0.0272, 0.0165, 0.0306],
        [0.0281, 0.0267, 0.0672, 0.0277, 0.0365, 0.0331, 0.1136, 0.0201, 0.0458,
         0.0656, 0.0269, 0.0156, 0.0193, 0.0132, 0.0231, 0.0213, 0.0254, 0.1986,
         0.0883, 0.0223, 0.0363, 0.0167, 0.0284],
        [0.0362, 0.0249, 0.0763, 0.0289, 0.0406, 0.0297, 0.0934, 0.0238, 0.0533,
         0.0718, 0.0312, 0.0163, 0.0261, 0.0157, 0.0201, 0.0228, 0.0219, 0.1709,
         0.0830, 0.0255, 0.0363, 0.0225, 0.0290],
        [0.0276, 0.0259, 0.0898, 0.0189, 0.0285, 0.0276, 0.1024, 0.0184, 0.0463,
         0.0800, 0.0279, 0.0113, 0.0198, 0.0104, 0.0213, 0.0201, 0.0227, 0.1795,
         0.1180, 0.0300, 0.0294, 0.0195, 0.0249],
        [0.0248, 0.0174, 0.0981, 0.0230, 0.0292, 0.0261, 0.1165, 0.0164, 0.0419,
         0.0815, 0.0239, 0.0104, 0.0202, 0.0104, 0.0220, 0.0115, 0.0171, 0.2296,
         0.0981, 0.0176, 0.0236, 0.0161, 0.0247],
        [0.0246, 0.0258, 0.0654, 0.0258, 0.0341, 0.0330, 0.1025, 0.0202, 0.0436,
         0.0882, 0.0249, 0.0153, 0.0284, 0.0152, 0.0255, 0.0229, 0.0222, 0.1805,
         0.0880, 0.0298, 0.0323, 0.0227, 0.0290],
        [0.0210, 0.0221, 0.1127, 0.0237, 0.0307, 0.0325, 0.1008, 0.0173, 0.0373,
         0.0965, 0.0209, 0.0107, 0.0163, 0.0080, 0.0184, 0.0155, 0.0166, 0.1930,
         0.1072, 0.0252, 0.0286, 0.0178, 0.0273],
        [0.0367, 0.0309, 0.0688, 0.0335, 0.0442, 0.0405, 0.0871, 0.0277, 0.0553,
         0.0545, 0.0327, 0.0232, 0.0246, 0.0236, 0.0288, 0.0203, 0.0318, 0.1246,
         0.0708, 0.0329, 0.0411, 0.0306, 0.0357],
        [0.0281, 0.0202, 0.0793, 0.0222, 0.0291, 0.0385, 0.1031, 0.0194, 0.0367,
         0.0949, 0.0241, 0.0112, 0.0232, 0.0117, 0.0205, 0.0148, 0.0150, 0.2075,
         0.0927, 0.0288, 0.0338, 0.0178, 0.0275],
        [0.0220, 0.0181, 0.0831, 0.0260, 0.0372, 0.0222, 0.1322, 0.0192, 0.0438,
         0.0674, 0.0284, 0.0124, 0.0191, 0.0109, 0.0197, 0.0178, 0.0211, 0.1699,
         0.1294, 0.0254, 0.0343, 0.0159, 0.0245],
        [0.0320, 0.0260, 0.0899, 0.0226, 0.0334, 0.0391, 0.0962, 0.0252, 0.0552,
         0.0649, 0.0272, 0.0140, 0.0156, 0.0138, 0.0235, 0.0260, 0.0257, 0.1629,
         0.0885, 0.0240, 0.0383, 0.0216, 0.0344],
        [0.0240, 0.0203, 0.0836, 0.0263, 0.0312, 0.0318, 0.1112, 0.0202, 0.0457,
         0.0733, 0.0278, 0.0118, 0.0235, 0.0105, 0.0222, 0.0162, 0.0178, 0.1902,
         0.1052, 0.0311, 0.0347, 0.0158, 0.0257],
        [0.0235, 0.0157, 0.0972, 0.0186, 0.0302, 0.0267, 0.1201, 0.0155, 0.0341,
         0.0793, 0.0248, 0.0105, 0.0167, 0.0081, 0.0214, 0.0149, 0.0143, 0.2284,
         0.1160, 0.0203, 0.0274, 0.0140, 0.0223],
        [0.0238, 0.0189, 0.0934, 0.0248, 0.0349, 0.0207, 0.1203, 0.0183, 0.0370,
         0.0812, 0.0263, 0.0098, 0.0231, 0.0100, 0.0188, 0.0136, 0.0198, 0.2154,
         0.0937, 0.0233, 0.0307, 0.0179, 0.0244]])