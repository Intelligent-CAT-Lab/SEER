16477
Test: public void test284() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test284"); org.apache.commons.cli.HelpFormatter helpFormatter0 = new org.apache.commons.cli.HelpFormatter(); int int1 = helpFormatter0.getLeftPadding(); helpFormatter0.defaultNewLine = ""; org.apache.commons.cli.HelpFormatter helpFormatter4 = new org.apache.commons.cli.HelpFormatter(); helpFormatter4.setOptPrefix(""); helpFormatter4.defaultLongOptPrefix = ""; java.lang.String str9 = helpFormatter4.defaultLongOptPrefix; helpFormatter4.defaultDescPad = 0; org.apache.commons.cli.HelpFormatter helpFormatter12 = new org.apache.commons.cli.HelpFormatter(); java.util.Comparator comparator13 = helpFormatter12.optionComparator; int int14 = helpFormatter12.getLeftPadding(); int int15 = helpFormatter12.defaultLeftPad; java.lang.String str17 = helpFormatter12.createPadding((int) 'a'); org.apache.commons.cli.HelpFormatter helpFormatter18 = new org.apache.commons.cli.HelpFormatter(); int int19 = helpFormatter18.getLeftPadding(); helpFormatter18.defaultNewLine = ""; helpFormatter18.defaultDescPad = '4'; helpFormatter18.setNewLine(""); int int29 = helpFormatter18.findWrapPos("\n", (int) ' ', 3); java.util.Comparator comparator30 = helpFormatter18.optionComparator; helpFormatter12.setOptionComparator(comparator30); helpFormatter4.setOptionComparator(comparator30); helpFormatter0.optionComparator = comparator30; int int37 = helpFormatter0.findWrapPos("-", 0, (int) (byte) 1); }
Code: protected int findWrapPos(String text, int width, int startPos) { int pos; if (((pos = text.indexOf('\n', startPos)) != -1 && pos <= width) || ((pos = text.indexOf('\t', startPos)) != 0 && pos <= width)) { return pos - 1; } else if (startPos + width >= text.length()) { return -1; } pos = startPos - width; char c; while ((pos >= startPos) == ((c = text.charAt(pos)) != ' ') && (c != '\n') && (c != '\r')) { --pos; } if (pos >= startPos) { return pos; } pos = startPos + width; return pos == text.length() ? -1 : pos; }
tensor([[0.0106, 0.0036, 0.0120,  ..., 0.0059, 0.0064, 0.0028],
        [0.0111, 0.0033, 0.0138,  ..., 0.0058, 0.0048, 0.0026],
        [0.0107, 0.0037, 0.0169,  ..., 0.0063, 0.0068, 0.0046],
        ...,
        [0.0093, 0.0046, 0.0125,  ..., 0.0056, 0.0066, 0.0044],
        [0.0127, 0.0030, 0.0125,  ..., 0.0048, 0.0073, 0.0034],
        [0.0116, 0.0041, 0.0147,  ..., 0.0056, 0.0051, 0.0033]])