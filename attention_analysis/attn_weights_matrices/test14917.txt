14917
Test: public void testAnt() { CommandLineParser parser = new GnuParser( ); Options options = new Options(); options.addOption( "help", false, "print this message" ); options.addOption( "projecthelp", false, "print project help information" ); options.addOption( "version", false, "print the version information and exit" ); options.addOption( "quiet", false, "be extra quiet" ); options.addOption( "verbose", false, "be extra verbose" ); options.addOption( "debug", false, "print debug information" ); options.addOption( "version", false, "produce logging information without adornments" ); options.addOption( "logfile", true, "use given file for log" ); options.addOption( "logger", true, "the class which is to perform the logging" ); options.addOption( "listener", true, "add an instance of a class as a project listener" ); options.addOption( "buildfile", true, "use given buildfile" ); options.addOption( OptionBuilder.withDescription( "use value for given property" ) .hasArgs() .withValueSeparator() .create( 'D' ) ); options.addOption( "find", true, "search for buildfile towards the root of the filesystem and use it" ); String[] args = new String[]{ "-buildfile", "mybuild.xml", "-Dproperty=value", "-Dproperty1=value1", "-projecthelp" }; try { CommandLine line = parser.parse( options, args ); String[] opts = line.getOptionValues( "D" ); } catch( ParseException exp ) { fail( "Unexpected exception:" + exp.getMessage() ); } }
Code: public boolean hasOption(String opt) { return options.contains( resolveOption(opt)); }
tensor([[0.0805, 0.2123, 0.1942, 0.0527, 0.0957, 0.0872, 0.1522, 0.0935, 0.0317],
        [0.0539, 0.3404, 0.1808, 0.0265, 0.0971, 0.0770, 0.1397, 0.0648, 0.0198],
        [0.0718, 0.2526, 0.1834, 0.0396, 0.1043, 0.0884, 0.1494, 0.0741, 0.0364],
        [0.0710, 0.2695, 0.1569, 0.0408, 0.0968, 0.0971, 0.1568, 0.0822, 0.0288],
        [0.0863, 0.2151, 0.1375, 0.0435, 0.1180, 0.1020, 0.1645, 0.0882, 0.0449],
        [0.0517, 0.3154, 0.1851, 0.0297, 0.0873, 0.0774, 0.1539, 0.0749, 0.0246],
        [0.0618, 0.2698, 0.1648, 0.0379, 0.0992, 0.0871, 0.1782, 0.0739, 0.0272],
        [0.0789, 0.2562, 0.1671, 0.0376, 0.1054, 0.0889, 0.1577, 0.0782, 0.0299],
        [0.0589, 0.2307, 0.1717, 0.0323, 0.1091, 0.1164, 0.1752, 0.0802, 0.0255]])