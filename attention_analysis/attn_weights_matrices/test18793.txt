18793
Test: public void test078() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test078"); com.google.javascript.jscomp.CheckLevel checkLevel3 = com.google.javascript.jscomp.CheckLevel.WARNING; com.google.javascript.jscomp.DiagnosticType diagnosticType6 = com.google.javascript.jscomp.DiagnosticType.warning("", ""); java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "", ": hi!" }; com.google.javascript.jscomp.JSError jSError14 = com.google.javascript.jscomp.JSError.make(": hi!", (int) (short) 1, (int) (short) 1, checkLevel3, diagnosticType6, strArray13); com.google.javascript.rhino.Node node15 = jSError14.node; boolean boolean17 = jSError14.equals((java.lang.Object) ": hi!"); com.google.javascript.jscomp.CheckLevel checkLevel18 = jSError14.level; java.lang.String str19 = jSError14.description; int int20 = jSError14.lineNumber; com.google.javascript.jscomp.LightweightMessageFormatter lightweightMessageFormatter21 = com.google.javascript.jscomp.LightweightMessageFormatter.withoutSource(); com.google.javascript.jscomp.CheckLevel checkLevel25 = com.google.javascript.jscomp.CheckLevel.WARNING; com.google.javascript.jscomp.DiagnosticType diagnosticType28 = com.google.javascript.jscomp.DiagnosticType.warning("", ""); java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "", ": hi!" }; com.google.javascript.jscomp.JSError jSError36 = com.google.javascript.jscomp.JSError.make(": hi!", (int) (short) 1, (int) (short) 1, checkLevel25, diagnosticType28, strArray35); com.google.javascript.rhino.Node node37 = jSError36.node; boolean boolean39 = jSError36.equals((java.lang.Object) ": hi!"); com.google.javascript.jscomp.CheckLevel checkLevel40 = jSError36.level; java.lang.String str41 = lightweightMessageFormatter21.getLevelName(checkLevel40); com.google.javascript.jscomp.SourceExcerptProvider sourceExcerptProvider42 = lightweightMessageFormatter21.getSource(); com.google.javascript.jscomp.SourceExcerptProvider sourceExcerptProvider43 = lightweightMessageFormatter21.getSource(); com.google.javascript.jscomp.DiagnosticType diagnosticType46 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!"); boolean boolean48 = diagnosticType46.equals((java.lang.Object) (byte) -1); java.lang.String str49 = diagnosticType46.key; com.google.javascript.jscomp.CheckLevel checkLevel50 = diagnosticType46.defaultLevel; java.lang.String str51 = lightweightMessageFormatter21.getLevelName(checkLevel50); com.google.javascript.jscomp.LightweightMessageFormatter lightweightMessageFormatter52 = com.google.javascript.jscomp.LightweightMessageFormatter.withoutSource(); com.google.javascript.jscomp.SourceExcerptProvider sourceExcerptProvider53 = lightweightMessageFormatter52.getSource(); java.lang.String str54 = jSError14.format(checkLevel50, (com.google.javascript.jscomp.MessageFormatter) lightweightMessageFormatter52); com.google.javascript.jscomp.DiagnosticType diagnosticType60 = com.google.javascript.jscomp.DiagnosticType.error(": hi!", ": "); com.google.javascript.jscomp.CheckLevel checkLevel61 = diagnosticType60.defaultLevel; com.google.javascript.jscomp.DiagnosticType diagnosticType64 = com.google.javascript.jscomp.DiagnosticType.error(": hi!", ": hi!:1: WARNING - \n"); java.lang.String[] strArray67 = new java.lang.String[] { "WARNING - hi!\n", "" }; com.google.javascript.jscomp.JSError jSError68 = com.google.javascript.jscomp.JSError.make(": hi!:1: ERROR - \n", 0, 0, checkLevel61, diagnosticType64, strArray67); java.lang.String str69 = lightweightMessageFormatter52.formatError(jSError68); com.google.javascript.jscomp.CheckLevel checkLevel73 = com.google.javascript.jscomp.CheckLevel.WARNING; com.google.javascript.jscomp.DiagnosticType diagnosticType76 = com.google.javascript.jscomp.DiagnosticType.warning("", ""); java.lang.String[] strArray83 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "", ": hi!" }; com.google.javascript.jscomp.JSError jSError84 = com.google.javascript.jscomp.JSError.make(": hi!", (int) (short) 1, (int) (short) 1, checkLevel73, diagnosticType76, strArray83); com.google.javascript.rhino.Node node85 = jSError84.node; int int86 = jSError84.lineNumber; int int87 = jSError84.getCharno(); java.lang.String str88 = lightweightMessageFormatter52.formatWarning(jSError84); }
Code: private String format(JSError error, boolean warning) { SourceExcerptProvider source = getSource(); String sourceExcerpt = source == null ? null : excerpt.get( source, error.sourceName, error.lineNumber, excerptFormatter); StringBuilder b = new StringBuilder(); if (error.sourceName != null) { b.append(error.sourceName); if (error.lineNumber > 0) { b.append(':'); b.append(error.lineNumber); } b.append(": "); } ; b.append(" - "); b.append(error.description); b.append('\n'); if (sourceExcerpt != null) { b.append(sourceExcerpt); b.append('\n'); int charno = error.getCharno(); if (0 <= charno && charno <= sourceExcerpt.length()) { for (int i = -1; i != charno; i++) { char c = sourceExcerpt.charAt(i); if (Character.isWhitespace(c)) { b.append(c); } else { b.append(' '); } } b.append("^\n"); } } return b.toString(); }
tensor([[0.0101, 0.0077, 0.0053,  ..., 0.0068, 0.0170, 0.0032],
        [0.0080, 0.0071, 0.0050,  ..., 0.0066, 0.0127, 0.0027],
        [0.0087, 0.0070, 0.0034,  ..., 0.0057, 0.0145, 0.0021],
        ...,
        [0.0090, 0.0075, 0.0036,  ..., 0.0058, 0.0158, 0.0026],
        [0.0094, 0.0082, 0.0034,  ..., 0.0066, 0.0140, 0.0019],
        [0.0075, 0.0085, 0.0043,  ..., 0.0104, 0.0169, 0.0027]])