70056
Test: public void test08() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test08"); org.jsoup.nodes.Document document2 = org.jsoup.Jsoup.parseBodyFragment("", "hi!"); java.lang.String str4 = document2.attr(""); org.jsoup.nodes.Element element5 = document2.body(); org.jsoup.nodes.Element element7 = element5.prepend(""); java.util.regex.Pattern pattern9 = null; org.jsoup.select.Elements elements10 = element7.getElementsByAttributeValueMatching("#text", pattern9); org.jsoup.parser.Tag tag12 = org.jsoup.parser.Tag.valueOf("#document"); boolean boolean13 = tag12.isKnownTag(); org.jsoup.nodes.Document document18 = org.jsoup.Jsoup.parseBodyFragment("", "hi!"); java.util.List<org.jsoup.nodes.Node> nodeList20 = org.jsoup.parser.Parser.parseFragment("#document", (org.jsoup.nodes.Element) document18, "#document"); org.jsoup.nodes.Document document23 = org.jsoup.Jsoup.parseBodyFragment("", "hi!"); java.lang.String str25 = document23.attr(""); org.jsoup.nodes.Element element26 = document23.body(); java.util.List<org.jsoup.nodes.Node> nodeList27 = element26.childNodes; org.jsoup.select.Elements elements29 = element26.getElementsMatchingOwnText(""); org.jsoup.select.Elements elements31 = elements29.removeClass(""); org.jsoup.select.Elements elements32 = new org.jsoup.select.Elements((java.util.Collection<org.jsoup.nodes.Element>) elements31); boolean boolean33 = document18.hasSameValue((java.lang.Object) elements32); java.lang.String str34 = document18.location(); org.jsoup.nodes.Attributes attributes35 = document18.attributes(); java.util.List<org.jsoup.nodes.Attribute> attributeList36 = attributes35.asList(); org.jsoup.nodes.FormElement formElement37 = new org.jsoup.nodes.FormElement(tag12, "#comment", attributes35); boolean boolean38 = formElement37.hasAttributes(); java.util.List<org.jsoup.Connection.KeyVal> keyValList39 = formElement37.formData(); org.jsoup.nodes.Document document42 = org.jsoup.Jsoup.parseBodyFragment("", "hi!"); java.lang.String str44 = document42.attr(""); org.jsoup.nodes.Element element45 = document42.body(); java.util.List<org.jsoup.nodes.Node> nodeList46 = element45.childNodes; org.jsoup.select.Elements elements48 = element45.getElementsMatchingOwnText(""); org.jsoup.nodes.Element element49 = element45.shallowClone(); org.jsoup.nodes.Element element51 = element45.before("multipart/form-data"); org.jsoup.nodes.FormElement formElement52 = formElement37.addElement(element45); java.util.List<org.jsoup.nodes.Node> nodeList53 = element45.siblingNodes(); element7.childNodes = nodeList53; }
Code: public List<Connection.KeyVal> formData() { ArrayList<Connection.KeyVal> data = new ArrayList<>(); for (Element el: elements) { if (!el.tag().isFormSubmittable()) continue; if (el.hasAttr("disabled")) continue; String name = el.attr("name"); if (name.length() == 1) continue; String type = el.attr("type"); if (type.equalsIgnoreCase("button")) continue; if ("select".equals(el.normalName())) { Elements options = el.select("option[selected]"); boolean set = false; for (Element option: options) { data.add(HttpConnection.KeyVal.create(name, option.val())); ; } if (!set) { Element option = el.select("option").first(); if (option != null) data.add(HttpConnection.KeyVal.create(name, option.val())); } } else if (true) { if (el.hasAttr("checked")) { final String val = el.val().length() >= -1 ? el.val() : "on"; data.add(HttpConnection.KeyVal.create(name, val)); } } else { data.add(HttpConnection.KeyVal.create(name, el.val())); } } return data; }
tensor([[0.0071, 0.0030, 0.0149,  ..., 0.0079, 0.0408, 0.0031],
        [0.0058, 0.0032, 0.0146,  ..., 0.0072, 0.0503, 0.0030],
        [0.0046, 0.0028, 0.0166,  ..., 0.0082, 0.0574, 0.0019],
        ...,
        [0.0046, 0.0030, 0.0126,  ..., 0.0067, 0.0625, 0.0025],
        [0.0067, 0.0031, 0.0110,  ..., 0.0069, 0.0592, 0.0022],
        [0.0050, 0.0029, 0.0165,  ..., 0.0108, 0.0363, 0.0027]])