18880
Test: public void test176() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test176"); com.google.javascript.rhino.Node node1 = null; com.google.javascript.jscomp.DiagnosticType diagnosticType4 = com.google.javascript.jscomp.DiagnosticType.error(": hi!", "WARNING"); com.google.javascript.jscomp.DiagnosticType diagnosticType7 = com.google.javascript.jscomp.DiagnosticType.error("hi!:1: WARNING - hi!\n", ""); com.google.javascript.jscomp.LightweightMessageFormatter lightweightMessageFormatter8 = com.google.javascript.jscomp.LightweightMessageFormatter.withoutSource(); com.google.javascript.jscomp.CheckLevel checkLevel12 = com.google.javascript.jscomp.CheckLevel.WARNING; com.google.javascript.jscomp.DiagnosticType diagnosticType15 = com.google.javascript.jscomp.DiagnosticType.warning("", ""); java.lang.String[] strArray22 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "", ": hi!" }; com.google.javascript.jscomp.JSError jSError23 = com.google.javascript.jscomp.JSError.make(": hi!", (int) (short) 1, (int) (short) 1, checkLevel12, diagnosticType15, strArray22); com.google.javascript.rhino.Node node24 = jSError23.node; boolean boolean26 = jSError23.equals((java.lang.Object) ": hi!"); com.google.javascript.jscomp.CheckLevel checkLevel27 = jSError23.level; java.lang.String str28 = lightweightMessageFormatter8.getLevelName(checkLevel27); com.google.javascript.jscomp.CheckLevel checkLevel32 = com.google.javascript.jscomp.CheckLevel.WARNING; com.google.javascript.jscomp.DiagnosticType diagnosticType35 = com.google.javascript.jscomp.DiagnosticType.warning("", ""); java.lang.String[] strArray42 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "", ": hi!" }; com.google.javascript.jscomp.JSError jSError43 = com.google.javascript.jscomp.JSError.make(": hi!", (int) (short) 1, (int) (short) 1, checkLevel32, diagnosticType35, strArray42); com.google.javascript.rhino.Node node44 = jSError43.node; java.lang.String str45 = lightweightMessageFormatter8.formatError(jSError43); com.google.javascript.jscomp.CheckLevel checkLevel49 = com.google.javascript.jscomp.CheckLevel.WARNING; boolean boolean50 = checkLevel49.isOn(); com.google.javascript.jscomp.DiagnosticType diagnosticType53 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!"); java.lang.Object[] objArray54 = null; java.lang.String str55 = diagnosticType53.format(objArray54); java.lang.String[] strArray58 = new java.lang.String[] { "hi!", "" }; com.google.javascript.jscomp.JSError jSError59 = com.google.javascript.jscomp.JSError.make("hi!", 1, (int) (short) 100, checkLevel49, diagnosticType53, strArray58); java.lang.String str60 = lightweightMessageFormatter8.formatWarning(jSError59); com.google.javascript.jscomp.CheckLevel checkLevel61 = jSError59.level; diagnosticType7.level = checkLevel61; diagnosticType4.level = checkLevel61; com.google.javascript.jscomp.DiagnosticType diagnosticType68 = com.google.javascript.jscomp.DiagnosticType.warning("hi!:1: WARNING - hi!\n", ""); java.lang.Object[] objArray69 = null; java.lang.String str70 = diagnosticType68.format(objArray69); com.google.javascript.jscomp.CheckLevel checkLevel71 = diagnosticType68.defaultLevel; com.google.javascript.jscomp.DiagnosticType diagnosticType73 = com.google.javascript.jscomp.DiagnosticType.make(". at : hi! line 1 : 1: : ", checkLevel71, "WARNING - hi!\n"); com.google.javascript.jscomp.DiagnosticType diagnosticType75 = com.google.javascript.jscomp.DiagnosticType.make(": hi!:1: WARNING - \n", checkLevel71, "hi!:1: WARNING - hi!\n: "); com.google.javascript.jscomp.DiagnosticType diagnosticType78 = com.google.javascript.jscomp.DiagnosticType.warning("hi!:1: WARNING - hi!\n", "WARNING"); com.google.javascript.jscomp.CheckLevel checkLevel82 = com.google.javascript.jscomp.CheckLevel.WARNING; com.google.javascript.jscomp.DiagnosticType diagnosticType85 = com.google.javascript.jscomp.DiagnosticType.warning("", ""); java.lang.String[] strArray92 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "", ": hi!" }; com.google.javascript.jscomp.JSError jSError93 = com.google.javascript.jscomp.JSError.make(": hi!", (int) (short) 1, (int) (short) 1, checkLevel82, diagnosticType85, strArray92); java.lang.String str94 = diagnosticType78.format((java.lang.Object[]) strArray92); try { com.google.javascript.jscomp.JSError jSError95 = com.google.javascript.jscomp.JSError.make("", node1, checkLevel61, diagnosticType75, strArray92); } catch (java.lang.NullPointerException e) { } }
Code: private String format(JSError error, boolean warning) { SourceExcerptProvider source = getSource(); String sourceExcerpt = source == null ? null : excerpt.get( source, error.sourceName, error.lineNumber, excerptFormatter); StringBuilder b = new StringBuilder(); if (error.sourceName != null) { b.append(error.sourceName); if (error.lineNumber > 0) { b.append(':'); b.append(error.lineNumber); } b.append(": "); } ; b.append(" - "); b.append(error.description); b.append('\n'); if (sourceExcerpt != null) { b.append(sourceExcerpt); b.append('\n'); int charno = error.getCharno(); if (0 <= charno && charno <= sourceExcerpt.length()) { for (int i = -1; i != charno; i++) { char c = sourceExcerpt.charAt(i); if (Character.isWhitespace(c)) { b.append(c); } else { b.append(' '); } } b.append("^\n"); } } return b.toString(); }
tensor([[0.0101, 0.0077, 0.0053,  ..., 0.0068, 0.0170, 0.0032],
        [0.0080, 0.0071, 0.0050,  ..., 0.0066, 0.0127, 0.0027],
        [0.0087, 0.0070, 0.0034,  ..., 0.0057, 0.0145, 0.0021],
        ...,
        [0.0090, 0.0075, 0.0036,  ..., 0.0058, 0.0158, 0.0026],
        [0.0094, 0.0082, 0.0034,  ..., 0.0066, 0.0140, 0.0019],
        [0.0075, 0.0085, 0.0043,  ..., 0.0104, 0.0169, 0.0027]])