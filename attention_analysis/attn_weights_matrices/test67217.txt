67217
Test: public void test145() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test145"); com.fasterxml.jackson.databind.node.DoubleNode doubleNode1 = new com.fasterxml.jackson.databind.node.DoubleNode((double) 1); com.fasterxml.jackson.databind.MappingJsonFactory mappingJsonFactory2 = new com.fasterxml.jackson.databind.MappingJsonFactory(); boolean boolean3 = doubleNode1.equals((java.lang.Object) mappingJsonFactory2); java.io.Reader reader4 = null; com.fasterxml.jackson.core.JsonParser jsonParser5 = mappingJsonFactory2.createJsonParser(reader4); com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer untypedObjectDeserializer6 = com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.instance; java.lang.Class<?> wildcardClass7 = untypedObjectDeserializer6.handledType(); java.util.Iterator<java.lang.Object> objItor8 = jsonParser5.readValuesAs((java.lang.Class<java.lang.Object>) wildcardClass7); com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer untypedObjectDeserializer9 = com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.instance; com.fasterxml.jackson.databind.node.DoubleNode doubleNode11 = new com.fasterxml.jackson.databind.node.DoubleNode((double) 1); com.fasterxml.jackson.core.ObjectCodec objectCodec12 = null; com.fasterxml.jackson.core.JsonParser jsonParser13 = doubleNode11.traverse(objectCodec12); com.fasterxml.jackson.databind.util.TokenBuffer tokenBuffer14 = new com.fasterxml.jackson.databind.util.TokenBuffer(jsonParser13); tokenBuffer14._forceBigDecimal = false; tokenBuffer14._forceBigDecimal = true; com.fasterxml.jackson.databind.util.TokenBuffer.Segment segment19 = tokenBuffer14._last; com.fasterxml.jackson.databind.node.TextNode textNode22 = new com.fasterxml.jackson.databind.node.TextNode("1.0"); com.fasterxml.jackson.core.JsonToken jsonToken23 = textNode22.asToken(); com.fasterxml.jackson.databind.node.DoubleNode doubleNode25 = new com.fasterxml.jackson.databind.node.DoubleNode((double) 1); com.fasterxml.jackson.databind.MappingJsonFactory mappingJsonFactory26 = new com.fasterxml.jackson.databind.MappingJsonFactory(); boolean boolean27 = doubleNode25.equals((java.lang.Object) mappingJsonFactory26); com.fasterxml.jackson.databind.util.TokenBuffer.Segment segment29 = segment19.append(100, jsonToken23, (java.lang.Object) mappingJsonFactory26, (java.lang.Object) (byte) -1); boolean boolean30 = mappingJsonFactory26.requiresCustomCodec(); com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider31 = null; com.fasterxml.jackson.databind.deser.DefaultDeserializationContext defaultDeserializationContext32 = null; com.fasterxml.jackson.databind.ObjectMapper objectMapper33 = new com.fasterxml.jackson.databind.ObjectMapper((com.fasterxml.jackson.core.JsonFactory) mappingJsonFactory26, defaultSerializerProvider31, defaultDeserializationContext32); com.fasterxml.jackson.databind.ser.std.StringSerializer stringSerializer34 = new com.fasterxml.jackson.databind.ser.std.StringSerializer(); java.lang.Class<java.lang.Object> objClass35 = stringSerializer34.handledType(); int int36 = com.fasterxml.jackson.databind.util.TypeKey.typedHash(objClass35); com.fasterxml.jackson.databind.ObjectWriter objectWriter37 = objectMapper33.writerFor(objClass35); java.io.Writer writer38 = null; com.fasterxml.jackson.databind.SequenceWriter sequenceWriter39 = objectWriter37.writeValues(writer38); com.fasterxml.jackson.core.PrettyPrinter prettyPrinter40 = null; com.fasterxml.jackson.databind.ObjectWriter objectWriter41 = objectWriter37.with(prettyPrinter40); com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes42 = objectWriter37.getAttributes(); com.fasterxml.jackson.core.PrettyPrinter prettyPrinter43 = null; com.fasterxml.jackson.databind.ObjectWriter objectWriter44 = objectWriter37.with(prettyPrinter43); com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig deserializerFactoryConfig45 = null; com.fasterxml.jackson.databind.deser.BeanDeserializerFactory beanDeserializerFactory46 = new com.fasterxml.jackson.databind.deser.BeanDeserializerFactory(deserializerFactoryConfig45); com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig deserializerFactoryConfig47 = null; com.fasterxml.jackson.databind.deser.DeserializerFactory deserializerFactory48 = beanDeserializerFactory46.withConfig(deserializerFactoryConfig47); com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl impl49 = new com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl(deserializerFactory48); com.fasterxml.jackson.databind.ObjectWriter objectWriter50 = objectWriter44.withoutAttribute((java.lang.Object) impl49); com.fasterxml.jackson.databind.BeanProperty beanProperty51 = null; com.fasterxml.jackson.databind.JsonDeserializer<?> wildcardJsonDeserializer52 = untypedObjectDeserializer9.createContextual((com.fasterxml.jackson.databind.DeserializationContext) impl49, beanProperty51); com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer untypedObjectDeserializer53 = com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.instance; java.lang.Class<?> wildcardClass54 = untypedObjectDeserializer53.handledType(); com.fasterxml.jackson.databind.JavaType javaType55 = com.fasterxml.jackson.databind.type.TypeFactory.unknownType(); int int56 = com.fasterxml.jackson.databind.util.TypeKey.untypedHash(javaType55); com.fasterxml.jackson.databind.JavaType javaType57 = javaType55.withStaticTyping(); com.fasterxml.jackson.databind.type.CollectionType collectionType58 = com.fasterxml.jackson.databind.type.CollectionType.construct((java.lang.Class<java.lang.Object>) wildcardClass54, javaType55); com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer untypedObjectDeserializer59 = com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.instance; java.lang.Class<?> wildcardClass60 = untypedObjectDeserializer59.handledType(); com.fasterxml.jackson.databind.JavaType javaType61 = collectionType58.widenContentsBy((java.lang.Class<java.lang.Object>) wildcardClass60); java.lang.Class<?> wildcardClass62 = javaType61.getParameterSource(); com.fasterxml.jackson.databind.node.DoubleNode doubleNode64 = new com.fasterxml.jackson.databind.node.DoubleNode((double) 1); com.fasterxml.jackson.core.ObjectCodec objectCodec65 = null; com.fasterxml.jackson.core.JsonParser jsonParser66 = doubleNode64.traverse(objectCodec65); com.fasterxml.jackson.databind.util.TokenBuffer tokenBuffer67 = new com.fasterxml.jackson.databind.util.TokenBuffer(jsonParser66); tokenBuffer67.writeBoolean(false); com.fasterxml.jackson.core.ObjectCodec objectCodec70 = tokenBuffer67._objectCodec; tokenBuffer67.writeOmittedField(""); com.fasterxml.jackson.core.JsonToken jsonToken73 = tokenBuffer67.firstToken(); com.fasterxml.jackson.databind.node.TextNode textNode75 = new com.fasterxml.jackson.databind.node.TextNode("1.0"); com.fasterxml.jackson.core.JsonToken jsonToken76 = textNode75.asToken(); com.fasterxml.jackson.core.JsonToken jsonToken77 = textNode75.asToken(); tokenBuffer67._appendValue(jsonToken77); com.fasterxml.jackson.databind.JsonMappingException jsonMappingException79 = impl49.mappingException((java.lang.Class<java.lang.Object>) wildcardClass62, jsonToken77); com.fasterxml.jackson.databind.util.TokenBuffer tokenBuffer80 = new com.fasterxml.jackson.databind.util.TokenBuffer(jsonParser5, (com.fasterxml.jackson.databind.DeserializationContext) impl49); }
Code: public void writeBoolean(boolean state) throws IOException { _appendValue(state ? JsonToken.VALUE_TRUE : JsonToken.VALUE_FALSE); }
[[0.0605721  0.05044237 0.08028628 0.07514279 0.13501127 0.03429543
 0.09238743 0.10952723 0.09701809 0.09358986 0.06076832 0.08260816
 0.02835068]
[0.04791692 0.04322924 0.09440701 0.06213748 0.16797899 0.02836974
 0.08995552 0.11557445 0.09920955 0.11664303 0.04323088 0.06423615
 0.027111  ]
[0.04582131 0.03468212 0.06988372 0.09612028 0.17450674 0.02997508
 0.08104953 0.11292415 0.10664778 0.09141138 0.03845901 0.1002036
 0.01831528]
[0.06883941 0.05419882 0.05370506 0.06577687 0.13158293 0.03801566
 0.08475605 0.10566856 0.11538003 0.10221352 0.05349993 0.10188028
 0.02448283]
[0.0388624  0.03854479 0.06062705 0.06637597 0.1828917  0.02602473
 0.10031854 0.12540808 0.10606924 0.11128169 0.0481047  0.07629656
 0.01919458]
[0.04810654 0.03851762 0.06422152 0.08380155 0.18351993 0.02893559
 0.09342597 0.11173112 0.09976019 0.09376442 0.04200931 0.09292793
 0.01927836]
[0.06046731 0.05269428 0.08506516 0.07668177 0.10706231 0.04047861
 0.09640937 0.10531414 0.07902357 0.11897294 0.04952008 0.09418781
 0.03412266]
[0.05119966 0.0437028  0.07193792 0.08390978 0.16496348 0.03504784
 0.0978912  0.10821963 0.09275001 0.09942408 0.04076411 0.08338307
 0.02680646]
[0.0466705  0.03306631 0.09218935 0.06782572 0.13292979 0.03061649
 0.12159866 0.10526429 0.09871507 0.12582259 0.05070285 0.07188082
 0.02271756]
[0.05510817 0.03842791 0.0650463  0.08331155 0.14428617 0.03117852
 0.09425749 0.110236   0.09720618 0.11727433 0.0464937  0.08705641
 0.03011721]
[0.05627411 0.04481854 0.05834708 0.07055688 0.12753123 0.03935906
 0.09301561 0.10249943 0.11766344 0.13560969 0.04024123 0.08266166
 0.03142203]
[0.05661167 0.05671991 0.08552435 0.06039864 0.13422559 0.0279718
 0.09607288 0.11923456 0.09692798 0.12438008 0.03938028 0.076558
 0.02599418]
[0.0415158  0.03883129 0.05351384 0.07410906 0.17459665 0.03392413
 0.10996976 0.10717938 0.10272455 0.11155091 0.03968506 0.08889261
 0.023507  ]]