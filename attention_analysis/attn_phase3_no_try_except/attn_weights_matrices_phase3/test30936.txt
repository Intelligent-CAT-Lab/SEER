30936
Test: public void test21() throws Throwable { ConcurrentMap<Object, Integer> concurrentMap0 = MapUtil.createWeakKeyConcurrentHashMap(46, 46); MapUtil.isNotEmpty(concurrentMap0); MapUtil.createMutableLongValueHashMap(46, (float) 46); MapUtil.createConcurrentMapCounter(); ArrayList<Class<Integer>> arrayList0 = new ArrayList<Class<Integer>>(); ArrayList<MutableLong> arrayList1 = new ArrayList<MutableLong>(); MapUtil.newHashMap((List<Class<Integer>>) arrayList0, (List<MutableLong>) arrayList1); IntObjectHashMap<Class<String>> intObjectHashMap0 = MapUtil.createIntObjectHashMap(46, 1.0F); ConcurrentHashMultiset<MutableLong> concurrentHashMultiset0 = MapUtil.createConcurrentMapCounter((Iterable<? extends MutableLong>) arrayList1); }
Code: public static <E> AtomicLongMap<E> createConcurrentMapCounter() { return AtomicLongMap.create(); }
[[0.08705309 0.22537404 0.10313097 0.12074617 0.12074617 0.09613342
 0.09334239 0.12074617 0.03272755]
[0.08575311 0.2148786  0.09346603 0.11727166 0.11727166 0.1360348
 0.08011487 0.11727166 0.03793762]
[0.06809902 0.21144786 0.0927877  0.125364   0.125364   0.11903127
 0.10789913 0.125364   0.02464291]
[0.07222505 0.24039829 0.09251083 0.122435   0.122435   0.10405979
 0.08738562 0.122435   0.03611546]
[0.07222505 0.24039829 0.09251083 0.122435   0.122435   0.10405979
 0.08738562 0.122435   0.03611546]
[0.08759288 0.19704965 0.07645367 0.12018198 0.12018198 0.12865347
 0.10239895 0.12018198 0.04730547]
[0.05948471 0.24508941 0.09702867 0.12816672 0.12816672 0.0966783
 0.08972872 0.12816672 0.02749002]
[0.07222505 0.24039829 0.09251083 0.122435   0.122435   0.10405979
 0.08738562 0.122435   0.03611546]
[0.05974677 0.22689286 0.08117341 0.1154476  0.1154476  0.1320956
 0.12428841 0.1154476  0.02946016]]