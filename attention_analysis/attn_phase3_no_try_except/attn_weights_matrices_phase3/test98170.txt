98170
Test: public void test6820() throws Throwable { BigInteger bigInteger0 = BigInteger.ONE; BigFraction bigFraction0 = BigFraction.of(bigInteger0); BigDecimal bigDecimal0 = bigFraction0.ZERO.bigDecimalValue(); int int0 = 0; BigFraction bigFraction1 = bigFraction0.ONE.subtract(0); int int1 = 3; BigFraction bigFraction2 = bigFraction0.pow(3); long long0 = 4503599627370495L; BigFraction bigFraction3 = bigFraction2.divide(4503599627370495L); int int2 = bigFraction2.getNumeratorAsInt(); BigFraction bigFraction4 = bigFraction2.multiply(bigInteger0); int int3 = 1; BigFraction bigFraction5 = bigFraction0.ZERO.divide(1); BigFraction bigFraction6 = bigFraction0.reciprocal(); BigInteger bigInteger1 = bigFraction3.getNumerator(); int int4 = 66; BigFraction bigFraction7 = BigFraction.from(6.8906115302525E-7, 2.1849356500069916E-4, 66); BigInteger bigInteger2 = BigInteger.ONE; BigFraction bigFraction8 = bigFraction0.ZERO.subtract(bigInteger2); double double0 = bigFraction8.doubleValue(); }
Code: public double doubleValue() { return Double.longBitsToDouble(toFloatingPointBits(11, 52)); }
[[0.09699349 0.16748102 0.19109026 0.12778537 0.10655439 0.13455366
 0.13455366 0.04098815]
[0.07598384 0.164449   0.20100501 0.13494882 0.116249   0.13597944
 0.13597944 0.03540551]
[0.0897857  0.13826169 0.20004016 0.1455903  0.10944471 0.13340874
 0.13340874 0.05005995]
[0.09559753 0.1290644  0.20687267 0.15414825 0.10996136 0.12503763
 0.12503763 0.05428063]
[0.07314821 0.1570531  0.1900086  0.13965224 0.10677546 0.14746031
 0.14746031 0.03844179]
[0.08202368 0.15269935 0.21159904 0.13657053 0.09972645 0.13571852
 0.13571852 0.04594391]
[0.08202368 0.15269935 0.21159904 0.13657053 0.09972645 0.13571852
 0.13571852 0.04594391]
[0.06997068 0.15288453 0.16207635 0.1636245  0.14813653 0.13365781
 0.13365781 0.03599178]]