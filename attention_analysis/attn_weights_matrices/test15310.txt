15310
Test: public void test218() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test218"); org.apache.commons.cli2.option.PropertyOption propertyOption3 = new org.apache.commons.cli2.option.PropertyOption("", "hi!", (int) 'a'); java.util.List list4 = null; org.apache.commons.cli2.commandline.WriteableCommandLineImpl writeableCommandLineImpl5 = new org.apache.commons.cli2.commandline.WriteableCommandLineImpl((org.apache.commons.cli2.Option) propertyOption3, list4); org.apache.commons.cli2.option.PropertyOption propertyOption9 = new org.apache.commons.cli2.option.PropertyOption("", "hi!", (int) 'a'); java.lang.String str10 = propertyOption9.getPreferredName(); writeableCommandLineImpl5.addOption((org.apache.commons.cli2.Option) propertyOption9); org.apache.commons.cli2.option.PropertyOption propertyOption15 = new org.apache.commons.cli2.option.PropertyOption("", "hi!", (int) 'a'); org.apache.commons.cli2.WriteableCommandLine writeableCommandLine16 = null; propertyOption15.defaults(writeableCommandLine16); java.util.List list18 = null; java.util.List list19 = writeableCommandLineImpl5.getValues((org.apache.commons.cli2.Option) propertyOption15, list18); org.apache.commons.cli2.builder.ArgumentBuilder argumentBuilder20 = new org.apache.commons.cli2.builder.ArgumentBuilder(); org.apache.commons.cli2.Argument argument21 = argumentBuilder20.create(); org.apache.commons.cli2.option.PropertyOption propertyOption25 = new org.apache.commons.cli2.option.PropertyOption("", "hi!", (int) 'a'); java.util.List list26 = null; org.apache.commons.cli2.commandline.WriteableCommandLineImpl writeableCommandLineImpl27 = new org.apache.commons.cli2.commandline.WriteableCommandLineImpl((org.apache.commons.cli2.Option) propertyOption25, list26); org.apache.commons.cli2.option.PropertyOption propertyOption31 = new org.apache.commons.cli2.option.PropertyOption("", "hi!", (int) 'a'); java.lang.String str32 = propertyOption31.getPreferredName(); org.apache.commons.cli2.Option option34 = propertyOption31.findOption(""); boolean boolean35 = writeableCommandLineImpl27.hasOption((org.apache.commons.cli2.Option) propertyOption31); org.apache.commons.cli2.option.PropertyOption propertyOption39 = new org.apache.commons.cli2.option.PropertyOption("", "hi!", (int) 'a'); java.util.List list40 = null; org.apache.commons.cli2.commandline.WriteableCommandLineImpl writeableCommandLineImpl41 = new org.apache.commons.cli2.commandline.WriteableCommandLineImpl((org.apache.commons.cli2.Option) propertyOption39, list40); org.apache.commons.cli2.option.PropertyOption propertyOption45 = new org.apache.commons.cli2.option.PropertyOption("", "hi!", (int) 'a'); java.util.List list46 = null; org.apache.commons.cli2.commandline.WriteableCommandLineImpl writeableCommandLineImpl47 = new org.apache.commons.cli2.commandline.WriteableCommandLineImpl((org.apache.commons.cli2.Option) propertyOption45, list46); org.apache.commons.cli2.option.PropertyOption propertyOption51 = new org.apache.commons.cli2.option.PropertyOption("", "hi!", (int) 'a'); java.lang.String str52 = propertyOption51.getPreferredName(); writeableCommandLineImpl47.addOption((org.apache.commons.cli2.Option) propertyOption51); java.lang.Boolean boolean55 = writeableCommandLineImpl41.getSwitch((org.apache.commons.cli2.Option) propertyOption51, (java.lang.Boolean) true); org.apache.commons.cli2.option.PropertyOption propertyOption59 = new org.apache.commons.cli2.option.PropertyOption("", "hi!", (int) 'a'); java.lang.Object obj60 = null; boolean boolean61 = propertyOption59.equals(obj60); java.util.List list62 = writeableCommandLineImpl41.getValues((org.apache.commons.cli2.Option) propertyOption59); org.apache.commons.cli2.option.PropertyOption propertyOption67 = new org.apache.commons.cli2.option.PropertyOption("", "hi!", (int) 'a'); java.util.List list68 = null; org.apache.commons.cli2.commandline.WriteableCommandLineImpl writeableCommandLineImpl69 = new org.apache.commons.cli2.commandline.WriteableCommandLineImpl((org.apache.commons.cli2.Option) propertyOption67, list68); org.apache.commons.cli2.option.PropertyOption propertyOption73 = new org.apache.commons.cli2.option.PropertyOption("", "hi!", (int) 'a'); java.lang.String str74 = propertyOption73.getPreferredName(); writeableCommandLineImpl69.addOption((org.apache.commons.cli2.Option) propertyOption73); java.util.List list76 = writeableCommandLineImpl69.getOptions(); java.util.List list77 = writeableCommandLineImpl41.getValues("<property>=<value>", list76); org.apache.commons.cli2.option.GroupImpl groupImpl82 = new org.apache.commons.cli2.option.GroupImpl(list77, "Passes properties and values to the application", "", 10, (int) (byte) 1); boolean boolean83 = groupImpl82.isRequired(); argument21.defaultValues((org.apache.commons.cli2.WriteableCommandLine) writeableCommandLineImpl27, (org.apache.commons.cli2.Option) groupImpl82); java.lang.String str86 = writeableCommandLineImpl5.getProperty((org.apache.commons.cli2.Option) groupImpl82, "org.apache.commons.cli2.validation.InvalidArgumentException: hi!"); }
Code: public void addOption(Option option) { options.add(option); nameToOption.put(option.getPreferredName(), option); for (Iterator i = option.getTriggers().iterator(); i.hasNext();) { nameToOption.put(i.next(), option); } Option parent = option.getParent(); while (parent != null && !options.contains(parent)) { options.add(parent); parent = parent.getParent(); } }
tensor([[0.0206, 0.0166, 0.0663,  ..., 0.0497, 0.0087, 0.0087],
        [0.0151, 0.0131, 0.0968,  ..., 0.0666, 0.0079, 0.0079],
        [0.0145, 0.0144, 0.0798,  ..., 0.0517, 0.0077, 0.0077],
        ...,
        [0.0193, 0.0157, 0.0691,  ..., 0.0520, 0.0083, 0.0083],
        [0.0141, 0.0128, 0.0646,  ..., 0.0448, 0.0074, 0.0074],
        [0.0141, 0.0128, 0.0646,  ..., 0.0448, 0.0074, 0.0074]])