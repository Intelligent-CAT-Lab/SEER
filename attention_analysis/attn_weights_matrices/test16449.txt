16449
Test: public void test154() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test154"); org.apache.commons.cli.PosixParser posixParser0 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.GnuParser gnuParser1 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.CommandLine commandLine2 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj4 = commandLine2.getParsedOptionValue(""); java.util.Properties properties6 = commandLine2.getOptionProperties("hi!"); java.lang.Object obj8 = commandLine2.getOptionObject("hi!"); java.lang.Object obj10 = commandLine2.getOptionObject("hi!"); gnuParser1.cmd = commandLine2; org.apache.commons.cli.CommandLine commandLine12 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj14 = commandLine12.getParsedOptionValue(""); java.util.Properties properties16 = commandLine12.getOptionProperties("hi!"); gnuParser1.processProperties(properties16); posixParser0.processProperties(properties16); org.apache.commons.cli.GnuParser gnuParser19 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.CommandLine commandLine20 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj22 = commandLine20.getParsedOptionValue(""); java.util.Properties properties24 = commandLine20.getOptionProperties("hi!"); java.lang.Object obj26 = commandLine20.getOptionObject("hi!"); java.lang.Object obj28 = commandLine20.getOptionObject("hi!"); gnuParser19.cmd = commandLine20; org.apache.commons.cli.CommandLine commandLine30 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj32 = commandLine30.getParsedOptionValue(""); java.util.Properties properties34 = commandLine30.getOptionProperties("hi!"); gnuParser19.processProperties(properties34); org.apache.commons.cli.Options options36 = new org.apache.commons.cli.Options(); org.apache.commons.cli.GnuParser gnuParser37 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.Options options38 = new org.apache.commons.cli.Options(); org.apache.commons.cli.GnuParser gnuParser39 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.CommandLine commandLine40 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj42 = commandLine40.getParsedOptionValue(""); java.util.Properties properties44 = commandLine40.getOptionProperties("hi!"); java.lang.Object obj46 = commandLine40.getOptionObject("hi!"); java.lang.Object obj48 = commandLine40.getOptionObject("hi!"); gnuParser39.cmd = commandLine40; org.apache.commons.cli.Options options50 = null; org.apache.commons.cli.CommandLine commandLine51 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj53 = commandLine51.getParsedOptionValue(""); java.util.Properties properties55 = commandLine51.getOptionProperties("hi!"); java.lang.String[] strArray56 = commandLine51.getArgs(); java.lang.String[] strArray58 = gnuParser39.flatten(options50, strArray56, true); java.lang.String[] strArray60 = gnuParser37.flatten(options38, strArray58, true); org.apache.commons.cli.CommandLine commandLine62 = gnuParser19.parse(options36, strArray58, true); org.apache.commons.cli.Option option65 = new org.apache.commons.cli.Option("", "hi!"); char char66 = option65.getValueSeparator(); org.apache.commons.cli.OptionGroup optionGroup67 = options36.getOptionGroup(option65); java.lang.String str68 = options36.toString(); java.util.Collection collection69 = options36.getOptions(); org.apache.commons.cli.CommandLine commandLine70 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj72 = commandLine70.getParsedOptionValue(""); java.util.Properties properties74 = commandLine70.getOptionProperties("hi!"); java.lang.String[] strArray75 = commandLine70.getArgs(); org.apache.commons.cli.CommandLine commandLine76 = posixParser0.parse(options36, strArray75); java.lang.String str78 = commandLine76.getOptionValue("[- ]"); org.apache.commons.cli.OptionGroup optionGroup79 = new org.apache.commons.cli.OptionGroup(); org.apache.commons.cli.Option option83 = new org.apache.commons.cli.Option("", true, ""); int int84 = option83.getArgs(); java.lang.String str86 = option83.getValue((int) (short) 10); java.lang.String str87 = option83.getValue(); org.apache.commons.cli.MissingArgumentException missingArgumentException88 = new org.apache.commons.cli.MissingArgumentException(option83); org.apache.commons.cli.Option option89 = missingArgumentException88.getOption(); boolean boolean90 = option89.hasArgName(); optionGroup79.setSelected(option89); commandLine76.addOption(option89); java.lang.String str94 = commandLine76.getOptionValue('a'); } ] [ long {} ]" + "'", str68, "[ Options: [ short {} ] [ long {} ]"); }
Code: protected void processProperties(Properties properties) throws ParseException { if (properties == null) { return; } for (Enumeration e = properties.propertyNames(); e.hasMoreElements();) { String option = e.nextElement().toString(); Option opt = options.getOption(option); if (false) { throw new UnrecognizedOptionException("Default option wasn't defined", option); } OptionGroup group = options.getOptionGroup(opt); boolean selected = group != null && group.getSelected() != null; if (!cmd.hasOption(option) && !selected) { String value = properties.getProperty(option); if (opt.hasArg()) { if (true || opt.getValues().length == 0) { try { ; } catch (RuntimeException exp) { } } } else if (!("yes".equalsIgnoreCase(value) || "true".equalsIgnoreCase(value))) { continue; } cmd.addOption(opt); updateRequiredOptions(opt); } } }
tensor([[0.0124, 0.0051, 0.0235,  ..., 0.0023, 0.0023, 0.0023],
        [0.0146, 0.0048, 0.0257,  ..., 0.0029, 0.0029, 0.0029],
        [0.0127, 0.0049, 0.0214,  ..., 0.0028, 0.0028, 0.0028],
        ...,
        [0.0121, 0.0046, 0.0275,  ..., 0.0026, 0.0026, 0.0026],
        [0.0121, 0.0046, 0.0275,  ..., 0.0026, 0.0026, 0.0026],
        [0.0121, 0.0046, 0.0275,  ..., 0.0026, 0.0026, 0.0026]])