101238
Test: public void test144() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test144"); org.joda.time.JodaTimePermission jodaTimePermission1 = new org.joda.time.JodaTimePermission("DateTimeField[weekyearOfCentury]"); org.joda.time.LocalDate localDate2 = new org.joda.time.LocalDate(); boolean boolean3 = org.joda.time.DateTimeUtils.isContiguous((org.joda.time.ReadablePartial) localDate2); jodaTimePermission1.checkGuard((java.lang.Object) boolean3); java.lang.String str5 = jodaTimePermission1.getActions(); org.joda.time.chrono.ISOChronology iSOChronology6 = org.joda.time.chrono.ISOChronology.getInstance(); java.lang.String str7 = iSOChronology6.toString(); org.joda.time.Chronology chronology8 = iSOChronology6.withUTC(); org.joda.time.DateTimeField dateTimeField9 = iSOChronology6.millisOfDay(); org.joda.time.LocalDate localDate10 = new org.joda.time.LocalDate(); org.joda.time.DateTime dateTime11 = localDate10.toDateTimeAtCurrentTime(); int[] intArray12 = localDate10.getValues(); org.joda.time.LocalDate localDate14 = localDate10.minusWeeks((int) (byte) 1); int[] intArray16 = iSOChronology6.get((org.joda.time.ReadablePartial) localDate10, (long) (short) -1); org.joda.time.LocalDate localDate17 = new org.joda.time.LocalDate(); boolean boolean18 = org.joda.time.DateTimeUtils.isContiguous((org.joda.time.ReadablePartial) localDate17); org.joda.time.DateTimeZone dateTimeZone20 = org.joda.time.DateTimeZone.forOffsetMillis(0); org.joda.time.Interval interval21 = localDate17.toInterval(dateTimeZone20); org.joda.time.DurationFieldType durationFieldType22 = org.joda.time.DurationFieldType.years(); java.lang.String str23 = durationFieldType22.toString(); org.joda.time.LocalDate localDate25 = localDate17.withFieldAdded(durationFieldType22, 36); int int26 = localDate10.compareTo((org.joda.time.ReadablePartial) localDate17); int int27 = localDate10.getEra(); boolean boolean28 = jodaTimePermission1.equals((java.lang.Object) localDate10); java.lang.String str29 = jodaTimePermission1.getActions(); java.security.PermissionCollection permissionCollection30 = jodaTimePermission1.newPermissionCollection(); org.joda.time.JodaTimePermission jodaTimePermission32 = new org.joda.time.JodaTimePermission("DateTimeField[weekyearOfCentury]"); org.joda.time.LocalDate localDate33 = new org.joda.time.LocalDate(); boolean boolean34 = org.joda.time.DateTimeUtils.isContiguous((org.joda.time.ReadablePartial) localDate33); jodaTimePermission32.checkGuard((java.lang.Object) boolean34); java.lang.String str36 = jodaTimePermission32.getActions(); boolean boolean37 = jodaTimePermission1.implies((java.security.Permission) jodaTimePermission32); }
Code: public int compareTo(DurationField durationField) { return 0; }
tensor([[0.1150, 0.0709, 0.2207, 0.0907, 0.1629, 0.1278, 0.1608, 0.0511],
        [0.0793, 0.0558, 0.2462, 0.0963, 0.1874, 0.1289, 0.1666, 0.0396],
        [0.1146, 0.0533, 0.2353, 0.0959, 0.1828, 0.1059, 0.1731, 0.0392],
        [0.0840, 0.0431, 0.2673, 0.0965, 0.1709, 0.1196, 0.1756, 0.0430],
        [0.1050, 0.0490, 0.2448, 0.1002, 0.1817, 0.1191, 0.1382, 0.0620],
        [0.0795, 0.0445, 0.3127, 0.0823, 0.1707, 0.1128, 0.1516, 0.0460],
        [0.1004, 0.0552, 0.2223, 0.1099, 0.1733, 0.1232, 0.1695, 0.0463],
        [0.0730, 0.0548, 0.2202, 0.0878, 0.1987, 0.1627, 0.1606, 0.0422]])