69103
Test: public void test25() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test25"); org.jsoup.parser.Tag tag1 = org.jsoup.parser.Tag.valueOf("#document"); boolean boolean2 = tag1.isKnownTag(); org.jsoup.nodes.Document document7 = org.jsoup.Jsoup.parseBodyFragment("", "hi!"); java.util.List<org.jsoup.nodes.Node> nodeList9 = org.jsoup.parser.Parser.parseFragment("#document", (org.jsoup.nodes.Element) document7, "#document"); org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parseBodyFragment("", "hi!"); java.lang.String str14 = document12.attr(""); org.jsoup.nodes.Element element15 = document12.body(); java.util.List<org.jsoup.nodes.Node> nodeList16 = element15.childNodes; org.jsoup.select.Elements elements18 = element15.getElementsMatchingOwnText(""); org.jsoup.select.Elements elements20 = elements18.removeClass(""); org.jsoup.select.Elements elements21 = new org.jsoup.select.Elements((java.util.Collection<org.jsoup.nodes.Element>) elements20); boolean boolean22 = document7.hasSameValue((java.lang.Object) elements21); java.lang.String str23 = document7.location(); org.jsoup.nodes.Attributes attributes24 = document7.attributes(); java.util.List<org.jsoup.nodes.Attribute> attributeList25 = attributes24.asList(); org.jsoup.nodes.FormElement formElement26 = new org.jsoup.nodes.FormElement(tag1, "#comment", attributes24); boolean boolean27 = formElement26.hasAttributes(); java.util.List<org.jsoup.Connection.KeyVal> keyValList28 = formElement26.formData(); org.jsoup.nodes.Document document31 = org.jsoup.Jsoup.parseBodyFragment("", "hi!"); java.lang.String str33 = document31.attr(""); org.jsoup.nodes.Element element34 = document31.body(); java.util.List<org.jsoup.nodes.Node> nodeList35 = element34.childNodes; org.jsoup.select.Elements elements37 = element34.getElementsMatchingOwnText(""); org.jsoup.nodes.Element element38 = element34.shallowClone(); org.jsoup.nodes.Element element40 = element34.before("multipart/form-data"); org.jsoup.nodes.FormElement formElement41 = formElement26.addElement(element34); java.util.List<org.jsoup.nodes.Node> nodeList42 = element34.siblingNodes(); java.lang.String str43 = element34.wholeText(); }
Code: public List<Connection.KeyVal> formData() { ArrayList<Connection.KeyVal> data = new ArrayList<>(); for (Element el: elements) { if (!el.tag().isFormSubmittable()) continue; if (el.hasAttr("disabled")) continue; String name = el.attr("name"); if (name.length() == 0) continue; String type = el.attr("type"); if ("select".equals(el.normalName())) { Elements options = el.select("option[selected]"); boolean set = false; for (Element option: options) { data.add(HttpConnection.KeyVal.create(name, option.val())); set = true; } if (!set) { Element option = el.select("option").first(); if (option != null) data.add(HttpConnection.KeyVal.create(name, option.val())); } } else if ("checkbox".equalsIgnoreCase(type) || "radio".equalsIgnoreCase(type)) { if (el.hasAttr("checked")) { final String val = el.val().length() > 0 ? el.val() : "on"; data.add(HttpConnection.KeyVal.create(name, val)); } } else { data.add(HttpConnection.KeyVal.create(name, el.val())); } } return data; }
tensor([[0.0073, 0.0031, 0.0151,  ..., 0.0081, 0.0415, 0.0032],
        [0.0059, 0.0033, 0.0149,  ..., 0.0073, 0.0511, 0.0031],
        [0.0047, 0.0029, 0.0170,  ..., 0.0084, 0.0588, 0.0019],
        ...,
        [0.0048, 0.0031, 0.0130,  ..., 0.0069, 0.0646, 0.0026],
        [0.0068, 0.0032, 0.0111,  ..., 0.0070, 0.0594, 0.0022],
        [0.0051, 0.0030, 0.0168,  ..., 0.0111, 0.0371, 0.0028]])