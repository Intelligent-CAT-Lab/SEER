61044
Test: public void test418() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test418"); org.apache.commons.csv.CSVFormat.Predefined predefined0 = org.apache.commons.csv.CSVFormat.Predefined.MySQL; org.apache.commons.csv.CSVFormat cSVFormat1 = predefined0.getFormat(); org.apache.commons.csv.CSVFormat cSVFormat2 = cSVFormat1.withIgnoreEmptyLines(); org.apache.commons.csv.CSVFormat cSVFormat3 = cSVFormat1.withIgnoreEmptyLines(); org.apache.commons.csv.ExtendedBufferedReader extendedBufferedReader4 = null; org.apache.commons.csv.Lexer lexer5 = new org.apache.commons.csv.Lexer(cSVFormat3, extendedBufferedReader4); boolean boolean7 = lexer5.isDelimiter(100); boolean boolean9 = lexer5.isStartOfLine((int) '#'); org.apache.commons.csv.CSVFormat cSVFormat10 = org.apache.commons.csv.CSVFormat.EXCEL; org.apache.commons.csv.CSVFormat cSVFormat12 = cSVFormat10.withRecordSeparator('a'); org.apache.commons.csv.CSVFormat cSVFormat14 = cSVFormat12.withQuote('a'); org.apache.commons.csv.CSVFormat cSVFormat16 = cSVFormat14.withEscape((java.lang.Character) ' '); org.apache.commons.csv.CSVFormat cSVFormat18 = cSVFormat16.withQuote((java.lang.Character) '\"'); java.lang.Object[] objArray21 = new java.lang.Object[] { '\t', (byte) 100 }; java.lang.String str22 = cSVFormat18.format(objArray21); org.apache.commons.csv.ExtendedBufferedReader extendedBufferedReader23 = null; org.apache.commons.csv.Lexer lexer24 = new org.apache.commons.csv.Lexer(cSVFormat18, extendedBufferedReader23); boolean boolean26 = lexer24.isStartOfLine(0); boolean boolean28 = lexer24.isStartOfLine((int) ' '); org.apache.commons.csv.CSVFormat.Predefined predefined29 = org.apache.commons.csv.CSVFormat.Predefined.MySQL; org.apache.commons.csv.CSVFormat cSVFormat30 = predefined29.getFormat(); org.apache.commons.csv.CSVFormat cSVFormat31 = cSVFormat30.withIgnoreEmptyLines(); org.apache.commons.csv.CSVFormat cSVFormat33 = cSVFormat31.withQuote('\f'); org.apache.commons.csv.CSVFormat cSVFormat34 = org.apache.commons.csv.CSVFormat.EXCEL; org.apache.commons.csv.CSVFormat cSVFormat36 = cSVFormat34.withRecordSeparator('a'); org.apache.commons.csv.CSVFormat cSVFormat38 = cSVFormat36.withQuote('a'); org.apache.commons.csv.CSVFormat cSVFormat40 = cSVFormat38.withEscape((java.lang.Character) ' '); org.apache.commons.csv.CSVFormat cSVFormat42 = cSVFormat40.withQuote((java.lang.Character) '\"'); org.apache.commons.csv.Token token43 = new org.apache.commons.csv.Token(); org.apache.commons.csv.Token.Type type44 = token43.type; java.lang.StringBuilder stringBuilder45 = token43.content; org.apache.commons.csv.CSVPrinter cSVPrinter46 = cSVFormat40.print((java.lang.Appendable) stringBuilder45); org.apache.commons.csv.CSVPrinter cSVPrinter47 = cSVFormat31.print((java.lang.Appendable) stringBuilder45); lexer24.trimTrailingSpaces(stringBuilder45); lexer5.trimTrailingSpaces(stringBuilder45); org.apache.commons.csv.CSVFormat cSVFormat50 = org.apache.commons.csv.CSVFormat.EXCEL; org.apache.commons.csv.CSVFormat cSVFormat52 = cSVFormat50.withRecordSeparator('a'); org.apache.commons.csv.CSVFormat cSVFormat54 = cSVFormat52.withQuote('a'); org.apache.commons.csv.CSVFormat cSVFormat56 = cSVFormat54.withEscape((java.lang.Character) ' '); org.apache.commons.csv.CSVFormat cSVFormat58 = cSVFormat56.withQuote((java.lang.Character) '\"'); java.lang.Object[] objArray61 = new java.lang.Object[] { '\t', (byte) 100 }; java.lang.String str62 = cSVFormat58.format(objArray61); org.apache.commons.csv.ExtendedBufferedReader extendedBufferedReader63 = null; org.apache.commons.csv.Lexer lexer64 = new org.apache.commons.csv.Lexer(cSVFormat58, extendedBufferedReader63); boolean boolean66 = lexer64.isEscape((int) (short) 100); boolean boolean68 = lexer64.isCommentStart((int) (short) 1); org.apache.commons.csv.CSVFormat.Predefined predefined69 = org.apache.commons.csv.CSVFormat.Predefined.MySQL; org.apache.commons.csv.CSVFormat cSVFormat70 = predefined69.getFormat(); org.apache.commons.csv.CSVFormat cSVFormat71 = cSVFormat70.withIgnoreEmptyLines(); org.apache.commons.csv.CSVFormat cSVFormat73 = cSVFormat71.withQuote('\f'); org.apache.commons.csv.CSVFormat cSVFormat74 = org.apache.commons.csv.CSVFormat.EXCEL; org.apache.commons.csv.CSVFormat cSVFormat76 = cSVFormat74.withRecordSeparator('a'); org.apache.commons.csv.CSVFormat cSVFormat78 = cSVFormat76.withQuote('a'); org.apache.commons.csv.CSVFormat cSVFormat80 = cSVFormat78.withEscape((java.lang.Character) ' '); org.apache.commons.csv.CSVFormat cSVFormat82 = cSVFormat80.withQuote((java.lang.Character) '\"'); org.apache.commons.csv.Token token83 = new org.apache.commons.csv.Token(); org.apache.commons.csv.Token.Type type84 = token83.type; java.lang.StringBuilder stringBuilder85 = token83.content; org.apache.commons.csv.CSVPrinter cSVPrinter86 = cSVFormat80.print((java.lang.Appendable) stringBuilder85); org.apache.commons.csv.CSVPrinter cSVPrinter87 = cSVFormat71.print((java.lang.Appendable) stringBuilder85); lexer64.trimTrailingSpaces(stringBuilder85); lexer5.trimTrailingSpaces(stringBuilder85); try { long long90 = lexer5.getCharacterPosition(); } catch (java.lang.NullPointerException e) { } }
Code: public CSVFormat getFormat() { return format; }
tensor([[0.1533, 0.0595, 0.1861, 0.1826, 0.1661, 0.1919, 0.0605],
        [0.1473, 0.0510, 0.1541, 0.2556, 0.2061, 0.1399, 0.0460],
        [0.1549, 0.0614, 0.1836, 0.2027, 0.1823, 0.1551, 0.0600],
        [0.1531, 0.0797, 0.1405, 0.2044, 0.1817, 0.1620, 0.0787],
        [0.1294, 0.0542, 0.1653, 0.1955, 0.1977, 0.2014, 0.0565],
        [0.1246, 0.0462, 0.1642, 0.2405, 0.2533, 0.1317, 0.0395],
        [0.1331, 0.0692, 0.1406, 0.2394, 0.2610, 0.1003, 0.0565]])