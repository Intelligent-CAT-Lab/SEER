67250
Test: public void test19() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test19"); com.fasterxml.jackson.databind.JavaType javaType0 = null; com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer2 = null; com.fasterxml.jackson.databind.ser.std.SqlDateSerializer sqlDateSerializer4 = new com.fasterxml.jackson.databind.ser.std.SqlDateSerializer((java.lang.Boolean) false); com.fasterxml.jackson.databind.SerializerProvider serializerProvider5 = null; com.fasterxml.jackson.databind.BeanProperty beanProperty6 = null; com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = sqlDateSerializer4.createContextual(serializerProvider5, beanProperty6); com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer objectArraySerializer8 = new com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer(javaType0, false, typeSerializer2, (com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) wildcardJsonSerializer7); com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = null; com.fasterxml.jackson.databind.MappingJsonFactory mappingJsonFactory10 = new com.fasterxml.jackson.databind.MappingJsonFactory(objectMapper9); com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider11 = null; com.fasterxml.jackson.databind.deser.DefaultDeserializationContext defaultDeserializationContext12 = null; com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = new com.fasterxml.jackson.databind.ObjectMapper((com.fasterxml.jackson.core.JsonFactory) mappingJsonFactory10, defaultSerializerProvider11, defaultDeserializationContext12); com.fasterxml.jackson.databind.MapperFeature[] mapperFeatureArray14 = new com.fasterxml.jackson.databind.MapperFeature[] {}; com.fasterxml.jackson.databind.ObjectMapper objectMapper15 = objectMapper13.enable(mapperFeatureArray14); com.fasterxml.jackson.core.JsonGenerator jsonGenerator16 = null; com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = null; objectArraySerializer8.serializeContents((java.lang.Object[]) mapperFeatureArray14, jsonGenerator16, serializerProvider17); com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = objectArraySerializer8.getDelegatee(); }
Code: public JsonSerializer<?> createContextual(SerializerProvider serializers, BeanProperty property) throws JsonMappingException { if (property == null) { return this; } JsonFormat.Value format = findFormatOverrides(serializers, property, handledType()); if (format == null) { return this; } JsonFormat.Shape shape = format.getShape(); if (shape.isNumeric()) { return withFormat(Boolean.TRUE, null); } if (format.hasPattern()) { final Locale loc = format.hasLocale() ? format.getLocale() : serializers.getLocale(); SimpleDateFormat df = new SimpleDateFormat(format.getPattern(), loc); TimeZone tz = format.hasTimeZone() ? format.getTimeZone() : serializers.getTimeZone(); df.setTimeZone(tz); return withFormat(Boolean.FALSE, df); } final boolean hasLocale = format.hasLocale(); final boolean hasTZ = format.hasTimeZone(); final boolean asString = (shape == JsonFormat.Shape.STRING); if (!hasLocale && !hasTZ && !asString) { return this; } DateFormat df0 = serializers.getConfig().getDateFormat(); if (df0 instanceof StdDateFormat) { StdDateFormat std = (StdDateFormat) df0; if (format.hasLocale()) { std = std.withLocale(format.getLocale()); } if (format.hasTimeZone()) { std = std.withTimeZone(format.getTimeZone()); } return withFormat(Boolean.FALSE, std); } if (!(df0 instanceof SimpleDateFormat)) { serializers.reportMappingProblem("Configured `DateFormat` (%s) not a `SimpleDateFormat`; can not configure `Locale` or `TimeZone`",df0.getClass().getName()); } SimpleDateFormat df = (SimpleDateFormat) df0; if (hasLocale) { df = new SimpleDateFormat(df.toPattern(), format.getLocale()); } else { df = (SimpleDateFormat) df.clone(); } TimeZone newTz = format.getTimeZone(); boolean changeTZ = (newTz != null) && !newTz.equals(df.getTimeZone()); if (changeTZ) { df.setTimeZone(newTz); } return withFormat(Boolean.FALSE, df); }
tensor([[0.0037, 0.0162, 0.0022,  ..., 0.0056, 0.0072, 0.0017],
        [0.0037, 0.0168, 0.0023,  ..., 0.0044, 0.0058, 0.0020],
        [0.0031, 0.0241, 0.0023,  ..., 0.0048, 0.0059, 0.0015],
        ...,
        [0.0040, 0.0162, 0.0029,  ..., 0.0050, 0.0068, 0.0019],
        [0.0046, 0.0131, 0.0032,  ..., 0.0060, 0.0062, 0.0021],
        [0.0027, 0.0177, 0.0026,  ..., 0.0053, 0.0077, 0.0015]])