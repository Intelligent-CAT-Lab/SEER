99551
Test: public void test8256() throws Throwable { BigInteger bigInteger0 = BigInteger.ONE; BigFraction bigFraction0 = BigFraction.of(bigInteger0); BigDecimal bigDecimal0 = bigFraction0.ZERO.bigDecimalValue(); BigFraction bigFraction1 = bigFraction0.ONE.subtract(0); BigFraction bigFraction2 = bigFraction0.pow(3); BigFraction bigFraction3 = bigFraction2.divide(4503599627370495L); int int0 = bigFraction2.getNumeratorAsInt(); BigFraction bigFraction4 = bigFraction2.multiply(bigInteger0); int int1 = 1; BigFraction bigFraction5 = bigFraction0.ZERO.divide(1); BigFraction bigFraction6 = bigFraction0.reciprocal(); BigInteger bigInteger1 = bigFraction3.getNumerator(); BigFraction bigFraction7 = BigFraction.from(6.8906115302525E-7, 2.1849356500069916E-4, 66); BigInteger bigInteger2 = BigInteger.ONE; BigFraction bigFraction8 = bigFraction0.ZERO.subtract(bigInteger2); double double0 = bigFraction8.doubleValue(); BigFraction bigFraction9 = bigFraction3.negate(); BigFraction bigFraction10 = bigFraction9.ZERO.subtract(bigFraction2); BigInteger bigInteger3 = bigFraction9.getNumerator(); }
Code: public BigInteger getNumerator() { return numerator; }
[[0.12181346 0.20477727 0.16897765 0.15279016 0.13287061 0.16897765
 0.0497932 ]
[0.10719919 0.13110533 0.18543826 0.1994181  0.16679916 0.18543826
 0.02460171]
[0.10693721 0.1812264  0.1788832  0.16731483 0.12973358 0.17888321
 0.05702156]
[0.1234308  0.14443326 0.16625583 0.1882363  0.14338705 0.16625583
 0.06800094]
[0.09041837 0.19347088 0.18598759 0.16502564 0.13328883 0.18598759
 0.04582112]
[0.10693721 0.1812264  0.1788832  0.16731483 0.12973358 0.17888321
 0.05702156]
[0.08863683 0.13893181 0.17036223 0.20121987 0.18590477 0.17036222
 0.0445822 ]]