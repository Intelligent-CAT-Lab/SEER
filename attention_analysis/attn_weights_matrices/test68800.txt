68800
Test: @Test public void testKeepsPreTextInCode() { String h = "<pre><code>code\n\ncode</code></pre>"; Document doc = Jsoup.parse(h); }
Code: public String html() { StringBuilder accum = new StringBuilder(); html(accum); return getOutputSettings().prettyPrint() ? accum.toString().trim() : accum.toString(); }
[[0.03886555 0.04820523 0.0363809  0.06379711 0.04385259 0.05731726
 0.02521941 0.01877518 0.05344768 0.0255051  0.04425196 0.03691678
 0.05808987 0.19812119 0.04088846 0.19118631 0.01917937]
[0.03661884 0.04020901 0.03420221 0.06630391 0.05602914 0.07147413
 0.02433569 0.01569258 0.0615762  0.01977048 0.03844618 0.03458395
 0.04348083 0.21514738 0.02933559 0.19674401 0.01604984]
[0.03176997 0.04745629 0.03312825 0.0784834  0.04510238 0.06594797
 0.01624658 0.01805832 0.06524561 0.01754262 0.04457913 0.04289272
 0.06582893 0.19475612 0.02606703 0.19342744 0.01346724]
[0.0431665  0.05866323 0.04409315 0.07597891 0.05672643 0.06070311
 0.03623406 0.02313175 0.07937632 0.02645888 0.04881942 0.04285157
 0.05210828 0.15784796 0.03623968 0.1318601  0.02574066]
[0.03414374 0.0464598  0.03921368 0.08038785 0.04728508 0.05914505
 0.02524487 0.01765256 0.06070914 0.01568908 0.04517126 0.0432494
 0.05763802 0.19139527 0.02618285 0.19033995 0.02009241]
[0.03994191 0.04451926 0.03593713 0.06169569 0.04127105 0.05703317
 0.02458229 0.02262    0.07294656 0.01758146 0.05435158 0.0493542
 0.06011834 0.18514064 0.03753142 0.17674112 0.01863421]
[0.0479683  0.05654524 0.04835344 0.0563602  0.05370075 0.06487411
 0.04039976 0.02269483 0.06732517 0.02872784 0.05306548 0.05734403
 0.06489064 0.13701156 0.04163989 0.1350627  0.0240361 ]
[0.03316777 0.05049714 0.02940352 0.07106142 0.04144716 0.04690319
 0.02560865 0.02029748 0.06531894 0.01694304 0.0469706  0.04177789
 0.05379508 0.20819679 0.04244539 0.18631238 0.01985355]
[0.03068208 0.040188   0.03925787 0.07169055 0.04710011 0.06195176
 0.02269919 0.01447713 0.05331961 0.01313876 0.04848114 0.04335738
 0.05414324 0.22446913 0.02108674 0.2002647  0.01369262]
[0.02944703 0.05189385 0.04488339 0.06927175 0.03814894 0.06835587
 0.03061702 0.01612308 0.05795282 0.02084072 0.0514837  0.03512552
 0.05953166 0.19780745 0.02708619 0.18565702 0.01577407]
[0.02536951 0.04483344 0.0318928  0.05977054 0.04790232 0.06027174
 0.02542297 0.0145858  0.06760302 0.01665946 0.03508693 0.03204987
 0.05521961 0.26051813 0.02578579 0.18116425 0.01586385]
[0.03546507 0.04079624 0.03100742 0.08162451 0.05152496 0.05433782
 0.02366431 0.01222389 0.05801747 0.01379266 0.03579802 0.03333201
 0.04903654 0.22920074 0.03229344 0.20339748 0.01448739]
[0.02550665 0.0433811  0.02818757 0.08347747 0.0458073  0.05140326
 0.01772211 0.01240946 0.04291068 0.01414717 0.03752085 0.03813232
 0.04565813 0.23200786 0.03273973 0.23388687 0.01510142]
[0.03403417 0.04726429 0.03523323 0.06873618 0.0494636  0.05390747
 0.02435958 0.01659547 0.04660684 0.0192223  0.03864045 0.03496167
 0.05981322 0.23897414 0.03194845 0.18393417 0.01630479]
[0.03878518 0.04318359 0.04912399 0.06896953 0.04851507 0.06097817
 0.03108986 0.02057878 0.05888924 0.02022622 0.04856627 0.03816083
 0.07390768 0.18218884 0.02891958 0.16519463 0.02272249]
[0.03263234 0.05623173 0.03229263 0.0759577  0.0496628  0.06033105
 0.02252377 0.02079618 0.08780473 0.01972162 0.03725399 0.04339043
 0.05040143 0.16342226 0.04494578 0.18197109 0.02066045]
[0.02636254 0.04821857 0.03692705 0.07702631 0.04220377 0.06285961
 0.02484601 0.01482494 0.05890513 0.01842011 0.06025806 0.03684133
 0.06187222 0.19387846 0.02701644 0.19341089 0.01612857]]