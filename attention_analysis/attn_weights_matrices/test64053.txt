64053
Test: public void test540() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test540"); com.fasterxml.jackson.core.util.BufferRecycler bufferRecycler0 = null; com.fasterxml.jackson.core.io.IOContext iOContext3 = new com.fasterxml.jackson.core.io.IOContext(bufferRecycler0, (java.lang.Object) 0.0f, true); com.fasterxml.jackson.core.JsonEncoding jsonEncoding4 = com.fasterxml.jackson.core.JsonEncoding.UTF16_BE; java.lang.String str5 = jsonEncoding4.getJavaName(); com.fasterxml.jackson.core.io.IOContext iOContext6 = iOContext3.withEncoding(jsonEncoding4); com.fasterxml.jackson.core.util.BufferRecycler bufferRecycler8 = null; com.fasterxml.jackson.core.io.IOContext iOContext11 = new com.fasterxml.jackson.core.io.IOContext(bufferRecycler8, (java.lang.Object) 0.0f, true); com.fasterxml.jackson.core.JsonEncoding jsonEncoding12 = iOContext11.getEncoding(); java.io.InputStream inputStream13 = null; byte[] byteArray14 = com.fasterxml.jackson.core.json.UTF8JsonGenerator.HEX_CHARS; com.fasterxml.jackson.core.io.MergedStream mergedStream17 = new com.fasterxml.jackson.core.io.MergedStream(iOContext11, inputStream13, byteArray14, (int) '4', (-1)); boolean boolean18 = mergedStream17.markSupported(); int int19 = mergedStream17.available(); com.fasterxml.jackson.core.ObjectCodec objectCodec20 = null; com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer byteQuadsCanonicalizer21 = com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.createRoot(); java.lang.String str22 = byteQuadsCanonicalizer21.toString(); int int23 = byteQuadsCanonicalizer21.totalCount(); int int24 = byteQuadsCanonicalizer21.bucketCount(); byte[] byteArray25 = com.fasterxml.jackson.core.io.CharTypes.copyHexBytes(); com.fasterxml.jackson.core.json.UTF8StreamJsonParser uTF8StreamJsonParser29 = new com.fasterxml.jackson.core.json.UTF8StreamJsonParser(iOContext6, (int) (byte) -17, (java.io.InputStream) mergedStream17, objectCodec20, byteQuadsCanonicalizer21, byteArray25, (-1695542384), 208279835, false); java.lang.String str31 = uTF8StreamJsonParser29.getValueAsString("UTF-8"); int[] intArray32 = com.fasterxml.jackson.core.io.CharTypes.get7BitOutputEscapes(); uTF8StreamJsonParser29._quadBuffer = intArray32; com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer byteQuadsCanonicalizer34 = uTF8StreamJsonParser29._symbols; }
Code: public String getValueAsString() throws IOException { if (_currToken == JsonToken.VALUE_STRING) { if (_tokenIncomplete) { _tokenIncomplete = false; return _finishAndReturnString(); } return _textBuffer.contentsAsString(); } if (_currToken == JsonToken.FIELD_NAME) { return getCurrentName(); } return super.getValueAsString(null); }
tensor([[0.0225, 0.0291, 0.0317,  ..., 0.0246, 0.0119, 0.0093],
        [0.0225, 0.0264, 0.0385,  ..., 0.0224, 0.0103, 0.0079],
        [0.0195, 0.0332, 0.0416,  ..., 0.0222, 0.0094, 0.0079],
        ...,
        [0.0156, 0.0378, 0.0359,  ..., 0.0232, 0.0080, 0.0078],
        [0.0176, 0.0354, 0.0330,  ..., 0.0260, 0.0081, 0.0085],
        [0.0160, 0.0294, 0.0250,  ..., 0.0327, 0.0104, 0.0075]])