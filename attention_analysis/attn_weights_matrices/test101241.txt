101241
Test: public void test075() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test075"); org.joda.time.chrono.GJChronology gJChronology0 = org.joda.time.chrono.GJChronology.getInstance(); org.joda.time.DurationField durationField1 = gJChronology0.halfdays(); org.joda.time.DateTimeField dateTimeField2 = gJChronology0.secondOfDay(); org.joda.time.chrono.GJChronology gJChronology3 = org.joda.time.chrono.GJChronology.getInstance(); org.joda.time.DateTimeField dateTimeField4 = gJChronology3.minuteOfHour(); org.joda.time.DateTimeField dateTimeField5 = gJChronology3.hourOfDay(); org.joda.time.field.SkipDateTimeField skipDateTimeField6 = new org.joda.time.field.SkipDateTimeField((org.joda.time.Chronology) gJChronology0, dateTimeField5); int int8 = skipDateTimeField6.getMinimumValue((long) 'a'); org.joda.time.chrono.ISOChronology iSOChronology9 = org.joda.time.chrono.ISOChronology.getInstance(); java.lang.String str10 = iSOChronology9.toString(); org.joda.time.Chronology chronology11 = iSOChronology9.withUTC(); org.joda.time.DateTimeField dateTimeField12 = iSOChronology9.millisOfDay(); org.joda.time.LocalDate localDate13 = new org.joda.time.LocalDate(); org.joda.time.DateTime dateTime14 = localDate13.toDateTimeAtCurrentTime(); int[] intArray15 = localDate13.getValues(); org.joda.time.LocalDate localDate17 = localDate13.minusWeeks((int) (byte) 1); int[] intArray19 = iSOChronology9.get((org.joda.time.ReadablePartial) localDate13, (long) (short) -1); org.joda.time.LocalDate localDate20 = new org.joda.time.LocalDate(); boolean boolean21 = org.joda.time.DateTimeUtils.isContiguous((org.joda.time.ReadablePartial) localDate20); org.joda.time.DateTimeZone dateTimeZone23 = org.joda.time.DateTimeZone.forOffsetMillis(0); org.joda.time.Interval interval24 = localDate20.toInterval(dateTimeZone23); org.joda.time.DurationFieldType durationFieldType25 = org.joda.time.DurationFieldType.years(); java.lang.String str26 = durationFieldType25.toString(); org.joda.time.LocalDate localDate28 = localDate20.withFieldAdded(durationFieldType25, 36); int int29 = localDate13.compareTo((org.joda.time.ReadablePartial) localDate20); org.joda.time.DateTimeFieldType dateTimeFieldType30 = org.joda.time.DateTimeFieldType.dayOfWeek(); boolean boolean31 = localDate13.isSupported(dateTimeFieldType30); org.joda.time.LocalDate localDate33 = new org.joda.time.LocalDate(); boolean boolean34 = org.joda.time.DateTimeUtils.isContiguous((org.joda.time.ReadablePartial) localDate33); org.joda.time.DateTimeZone dateTimeZone36 = org.joda.time.DateTimeZone.forOffsetMillis(0); org.joda.time.Interval interval37 = localDate33.toInterval(dateTimeZone36); org.joda.time.Chronology chronology38 = org.joda.time.DateTimeUtils.getIntervalChronology((org.joda.time.ReadableInterval) interval37); org.joda.time.chrono.GJChronology gJChronology39 = org.joda.time.chrono.GJChronology.getInstance(); org.joda.time.DateTimeField dateTimeField40 = gJChronology39.yearOfEra(); int int42 = dateTimeField40.getMinimumValue(0L); org.joda.time.DateTimeFieldType dateTimeFieldType43 = org.joda.time.DateTimeFieldType.weekyearOfCentury(); org.joda.time.field.OffsetDateTimeField offsetDateTimeField45 = new org.joda.time.field.OffsetDateTimeField(dateTimeField40, dateTimeFieldType43, (int) (short) 10); org.joda.time.DurationField durationField46 = offsetDateTimeField45.getRangeDurationField(); java.lang.String str47 = offsetDateTimeField45.toString(); long long50 = offsetDateTimeField45.addWrapField((long) (byte) 10, (-1)); org.joda.time.LocalDate localDate51 = new org.joda.time.LocalDate(); org.joda.time.DateTime dateTime52 = localDate51.toDateTimeAtCurrentTime(); int[] intArray53 = localDate51.getValues(); org.joda.time.LocalDate localDate55 = localDate51.minusWeeks((int) (byte) 1); java.util.Locale locale57 = null; java.lang.String str58 = offsetDateTimeField45.getAsText((org.joda.time.ReadablePartial) localDate51, (int) (short) -1, locale57); int[] intArray60 = chronology38.get((org.joda.time.ReadablePartial) localDate51, (long) 10); java.util.Locale locale62 = null; try { int[] intArray63 = skipDateTimeField6.set((org.joda.time.ReadablePartial) localDate13, 36, intArray60, "", locale62); } catch (org.joda.time.IllegalFieldValueException e) { } }
Code: public int compareTo(DurationField durationField) { if (durationField.isSupported()) { return 1; } return 0; }
tensor([[0.0617, 0.0399, 0.1322, 0.0504, 0.0775, 0.1658, 0.0973, 0.0775, 0.0673,
         0.0319, 0.0252, 0.0673, 0.0806, 0.0252],
        [0.0388, 0.0290, 0.1369, 0.0501, 0.0821, 0.2237, 0.1002, 0.0821, 0.0620,
         0.0195, 0.0183, 0.0620, 0.0770, 0.0183],
        [0.0645, 0.0324, 0.1493, 0.0580, 0.0914, 0.1544, 0.0817, 0.0914, 0.0592,
         0.0248, 0.0203, 0.0592, 0.0931, 0.0203],
        [0.0426, 0.0230, 0.1578, 0.0536, 0.0754, 0.2071, 0.1090, 0.0754, 0.0584,
         0.0180, 0.0196, 0.0584, 0.0821, 0.0196],
        [0.0599, 0.0289, 0.1584, 0.0606, 0.0946, 0.1034, 0.0824, 0.0946, 0.0691,
         0.0336, 0.0336, 0.0691, 0.0782, 0.0336],
        [0.0363, 0.0180, 0.2493, 0.0466, 0.0774, 0.2049, 0.0775, 0.0774, 0.0478,
         0.0117, 0.0118, 0.0478, 0.0817, 0.0118],
        [0.0526, 0.0390, 0.1605, 0.0596, 0.0819, 0.1301, 0.0875, 0.0819, 0.0649,
         0.0336, 0.0270, 0.0649, 0.0896, 0.0270],
        [0.0599, 0.0289, 0.1584, 0.0606, 0.0946, 0.1034, 0.0824, 0.0946, 0.0691,
         0.0336, 0.0336, 0.0691, 0.0782, 0.0336],
        [0.0415, 0.0250, 0.1995, 0.0477, 0.0800, 0.1722, 0.0894, 0.0800, 0.0605,
         0.0242, 0.0220, 0.0605, 0.0755, 0.0220],
        [0.0516, 0.0345, 0.1477, 0.0557, 0.0788, 0.1684, 0.0915, 0.0788, 0.0743,
         0.0225, 0.0215, 0.0743, 0.0791, 0.0215],
        [0.0402, 0.0309, 0.1352, 0.0508, 0.0936, 0.1530, 0.0852, 0.0936, 0.0850,
         0.0224, 0.0206, 0.0850, 0.0842, 0.0206],
        [0.0415, 0.0250, 0.1995, 0.0477, 0.0800, 0.1722, 0.0894, 0.0800, 0.0605,
         0.0242, 0.0220, 0.0605, 0.0755, 0.0220],
        [0.0536, 0.0305, 0.1309, 0.0608, 0.0852, 0.1796, 0.0764, 0.0852, 0.0661,
         0.0299, 0.0234, 0.0661, 0.0888, 0.0234],
        [0.0402, 0.0309, 0.1352, 0.0508, 0.0936, 0.1530, 0.0852, 0.0936, 0.0850,
         0.0224, 0.0206, 0.0850, 0.0842, 0.0206]])