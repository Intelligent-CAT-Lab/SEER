67218
Test: public void test145() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test145"); com.fasterxml.jackson.databind.node.DoubleNode doubleNode1 = new com.fasterxml.jackson.databind.node.DoubleNode((double) 1); com.fasterxml.jackson.databind.MappingJsonFactory mappingJsonFactory2 = new com.fasterxml.jackson.databind.MappingJsonFactory(); boolean boolean3 = doubleNode1.equals((java.lang.Object) mappingJsonFactory2); java.io.Reader reader4 = null; com.fasterxml.jackson.core.JsonParser jsonParser5 = mappingJsonFactory2.createJsonParser(reader4); com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer untypedObjectDeserializer6 = com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.instance; java.lang.Class<?> wildcardClass7 = untypedObjectDeserializer6.handledType(); java.util.Iterator<java.lang.Object> objItor8 = jsonParser5.readValuesAs((java.lang.Class<java.lang.Object>) wildcardClass7); com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer untypedObjectDeserializer9 = com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.instance; com.fasterxml.jackson.databind.node.DoubleNode doubleNode11 = new com.fasterxml.jackson.databind.node.DoubleNode((double) 1); com.fasterxml.jackson.core.ObjectCodec objectCodec12 = null; com.fasterxml.jackson.core.JsonParser jsonParser13 = doubleNode11.traverse(objectCodec12); com.fasterxml.jackson.databind.util.TokenBuffer tokenBuffer14 = new com.fasterxml.jackson.databind.util.TokenBuffer(jsonParser13); tokenBuffer14._forceBigDecimal = false; tokenBuffer14._forceBigDecimal = true; com.fasterxml.jackson.databind.util.TokenBuffer.Segment segment19 = tokenBuffer14._last; com.fasterxml.jackson.databind.node.TextNode textNode22 = new com.fasterxml.jackson.databind.node.TextNode("1.0"); com.fasterxml.jackson.core.JsonToken jsonToken23 = textNode22.asToken(); com.fasterxml.jackson.databind.node.DoubleNode doubleNode25 = new com.fasterxml.jackson.databind.node.DoubleNode((double) 1); com.fasterxml.jackson.databind.MappingJsonFactory mappingJsonFactory26 = new com.fasterxml.jackson.databind.MappingJsonFactory(); boolean boolean27 = doubleNode25.equals((java.lang.Object) mappingJsonFactory26); com.fasterxml.jackson.databind.util.TokenBuffer.Segment segment29 = segment19.append(100, jsonToken23, (java.lang.Object) mappingJsonFactory26, (java.lang.Object) (byte) -1); boolean boolean30 = mappingJsonFactory26.requiresCustomCodec(); com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider31 = null; com.fasterxml.jackson.databind.deser.DefaultDeserializationContext defaultDeserializationContext32 = null; com.fasterxml.jackson.databind.ObjectMapper objectMapper33 = new com.fasterxml.jackson.databind.ObjectMapper((com.fasterxml.jackson.core.JsonFactory) mappingJsonFactory26, defaultSerializerProvider31, defaultDeserializationContext32); com.fasterxml.jackson.databind.ser.std.StringSerializer stringSerializer34 = new com.fasterxml.jackson.databind.ser.std.StringSerializer(); java.lang.Class<java.lang.Object> objClass35 = stringSerializer34.handledType(); int int36 = com.fasterxml.jackson.databind.util.TypeKey.typedHash(objClass35); com.fasterxml.jackson.databind.ObjectWriter objectWriter37 = objectMapper33.writerFor(objClass35); java.io.Writer writer38 = null; com.fasterxml.jackson.databind.SequenceWriter sequenceWriter39 = objectWriter37.writeValues(writer38); com.fasterxml.jackson.core.PrettyPrinter prettyPrinter40 = null; com.fasterxml.jackson.databind.ObjectWriter objectWriter41 = objectWriter37.with(prettyPrinter40); com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes42 = objectWriter37.getAttributes(); com.fasterxml.jackson.core.PrettyPrinter prettyPrinter43 = null; com.fasterxml.jackson.databind.ObjectWriter objectWriter44 = objectWriter37.with(prettyPrinter43); com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig deserializerFactoryConfig45 = null; com.fasterxml.jackson.databind.deser.BeanDeserializerFactory beanDeserializerFactory46 = new com.fasterxml.jackson.databind.deser.BeanDeserializerFactory(deserializerFactoryConfig45); com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig deserializerFactoryConfig47 = null; com.fasterxml.jackson.databind.deser.DeserializerFactory deserializerFactory48 = beanDeserializerFactory46.withConfig(deserializerFactoryConfig47); com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl impl49 = new com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl(deserializerFactory48); com.fasterxml.jackson.databind.ObjectWriter objectWriter50 = objectWriter44.withoutAttribute((java.lang.Object) impl49); com.fasterxml.jackson.databind.BeanProperty beanProperty51 = null; com.fasterxml.jackson.databind.JsonDeserializer<?> wildcardJsonDeserializer52 = untypedObjectDeserializer9.createContextual((com.fasterxml.jackson.databind.DeserializationContext) impl49, beanProperty51); com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer untypedObjectDeserializer53 = com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.instance; java.lang.Class<?> wildcardClass54 = untypedObjectDeserializer53.handledType(); com.fasterxml.jackson.databind.JavaType javaType55 = com.fasterxml.jackson.databind.type.TypeFactory.unknownType(); int int56 = com.fasterxml.jackson.databind.util.TypeKey.untypedHash(javaType55); com.fasterxml.jackson.databind.JavaType javaType57 = javaType55.withStaticTyping(); com.fasterxml.jackson.databind.type.CollectionType collectionType58 = com.fasterxml.jackson.databind.type.CollectionType.construct((java.lang.Class<java.lang.Object>) wildcardClass54, javaType55); com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer untypedObjectDeserializer59 = com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.instance; java.lang.Class<?> wildcardClass60 = untypedObjectDeserializer59.handledType(); com.fasterxml.jackson.databind.JavaType javaType61 = collectionType58.widenContentsBy((java.lang.Class<java.lang.Object>) wildcardClass60); java.lang.Class<?> wildcardClass62 = javaType61.getParameterSource(); com.fasterxml.jackson.databind.node.DoubleNode doubleNode64 = new com.fasterxml.jackson.databind.node.DoubleNode((double) 1); com.fasterxml.jackson.core.ObjectCodec objectCodec65 = null; com.fasterxml.jackson.core.JsonParser jsonParser66 = doubleNode64.traverse(objectCodec65); com.fasterxml.jackson.databind.util.TokenBuffer tokenBuffer67 = new com.fasterxml.jackson.databind.util.TokenBuffer(jsonParser66); tokenBuffer67.writeBoolean(false); com.fasterxml.jackson.core.ObjectCodec objectCodec70 = tokenBuffer67._objectCodec; tokenBuffer67.writeOmittedField(""); com.fasterxml.jackson.core.JsonToken jsonToken73 = tokenBuffer67.firstToken(); com.fasterxml.jackson.databind.node.TextNode textNode75 = new com.fasterxml.jackson.databind.node.TextNode("1.0"); com.fasterxml.jackson.core.JsonToken jsonToken76 = textNode75.asToken(); com.fasterxml.jackson.core.JsonToken jsonToken77 = textNode75.asToken(); tokenBuffer67._appendValue(jsonToken77); com.fasterxml.jackson.databind.JsonMappingException jsonMappingException79 = impl49.mappingException((java.lang.Class<java.lang.Object>) wildcardClass62, jsonToken77); com.fasterxml.jackson.databind.util.TokenBuffer tokenBuffer80 = new com.fasterxml.jackson.databind.util.TokenBuffer(jsonParser5, (com.fasterxml.jackson.databind.DeserializationContext) impl49); }
Code: public void writeBoolean(boolean state) throws IOException { _append(state ? JsonToken.VALUE_TRUE : JsonToken.VALUE_FALSE); }
tensor([[0.0620, 0.0520, 0.0797, 0.0770, 0.1361, 0.0358, 0.0975, 0.0914, 0.0966,
         0.0947, 0.0634, 0.0842, 0.0297],
        [0.0485, 0.0453, 0.0891, 0.0631, 0.1674, 0.0303, 0.0981, 0.1056, 0.0964,
         0.1156, 0.0460, 0.0652, 0.0293],
        [0.0460, 0.0358, 0.0651, 0.0983, 0.1745, 0.0316, 0.0880, 0.1063, 0.1034,
         0.0901, 0.0402, 0.1012, 0.0194],
        [0.0704, 0.0558, 0.0537, 0.0669, 0.1332, 0.0395, 0.0886, 0.0891, 0.1159,
         0.1030, 0.0555, 0.1033, 0.0253],
        [0.0403, 0.0404, 0.0607, 0.0688, 0.1866, 0.0275, 0.1068, 0.0997, 0.1067,
         0.1127, 0.0508, 0.0787, 0.0203],
        [0.0496, 0.0399, 0.0645, 0.0869, 0.1884, 0.0306, 0.0996, 0.0838, 0.1007,
         0.0961, 0.0443, 0.0955, 0.0203],
        [0.0611, 0.0535, 0.0826, 0.0773, 0.1073, 0.0415, 0.1012, 0.0989, 0.0775,
         0.1185, 0.0505, 0.0950, 0.0352],
        [0.0728, 0.0570, 0.0813, 0.0718, 0.1185, 0.0446, 0.0715, 0.0913, 0.1040,
         0.1305, 0.0524, 0.0817, 0.0226],
        [0.0464, 0.0339, 0.0856, 0.0678, 0.1307, 0.0321, 0.1294, 0.1113, 0.0939,
         0.1210, 0.0529, 0.0711, 0.0239],
        [0.0554, 0.0391, 0.0627, 0.0842, 0.1459, 0.0327, 0.1010, 0.0992, 0.0944,
         0.1165, 0.0486, 0.0883, 0.0319],
        [0.0577, 0.0463, 0.0577, 0.0723, 0.1269, 0.0413, 0.0985, 0.0883, 0.1160,
         0.1360, 0.0420, 0.0842, 0.0329],
        [0.0584, 0.0599, 0.0841, 0.0625, 0.1379, 0.0297, 0.1036, 0.0946, 0.0966,
         0.1250, 0.0414, 0.0786, 0.0277],
        [0.0424, 0.0405, 0.0526, 0.0756, 0.1779, 0.0363, 0.1205, 0.0795, 0.1013,
         0.1138, 0.0426, 0.0917, 0.0254]])