19150
Test: public void test029() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test029"); com.google.javascript.jscomp.CheckLevel checkLevel3 = com.google.javascript.jscomp.CheckLevel.WARNING; com.google.javascript.jscomp.DiagnosticType diagnosticType6 = com.google.javascript.jscomp.DiagnosticType.warning("", ""); java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "", ": hi!" }; com.google.javascript.jscomp.JSError jSError14 = com.google.javascript.jscomp.JSError.make(": hi!", (int) (short) 1, (int) (short) 1, checkLevel3, diagnosticType6, strArray13); com.google.javascript.rhino.Node node15 = jSError14.node; int int16 = jSError14.lineNumber; com.google.javascript.jscomp.DiagnosticType diagnosticType17 = jSError14.getType(); java.lang.String str18 = jSError14.description; com.google.javascript.jscomp.LightweightMessageFormatter lightweightMessageFormatter19 = com.google.javascript.jscomp.LightweightMessageFormatter.withoutSource(); com.google.javascript.jscomp.CheckLevel checkLevel23 = com.google.javascript.jscomp.CheckLevel.WARNING; com.google.javascript.jscomp.DiagnosticType diagnosticType26 = com.google.javascript.jscomp.DiagnosticType.warning("", ""); java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "", ": hi!" }; com.google.javascript.jscomp.JSError jSError34 = com.google.javascript.jscomp.JSError.make(": hi!", (int) (short) 1, (int) (short) 1, checkLevel23, diagnosticType26, strArray33); com.google.javascript.rhino.Node node35 = jSError34.node; boolean boolean37 = jSError34.equals((java.lang.Object) ": hi!"); com.google.javascript.jscomp.CheckLevel checkLevel38 = jSError34.level; java.lang.String str39 = lightweightMessageFormatter19.getLevelName(checkLevel38); com.google.javascript.jscomp.SourceExcerptProvider sourceExcerptProvider40 = lightweightMessageFormatter19.getSource(); com.google.javascript.jscomp.SourceExcerptProvider sourceExcerptProvider41 = lightweightMessageFormatter19.getSource(); com.google.javascript.jscomp.DiagnosticType diagnosticType44 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!"); boolean boolean46 = diagnosticType44.equals((java.lang.Object) (byte) -1); java.lang.String str47 = diagnosticType44.key; com.google.javascript.jscomp.CheckLevel checkLevel48 = diagnosticType44.defaultLevel; java.lang.String str49 = lightweightMessageFormatter19.getLevelName(checkLevel48); com.google.javascript.jscomp.LightweightMessageFormatter lightweightMessageFormatter50 = com.google.javascript.jscomp.LightweightMessageFormatter.withoutSource(); com.google.javascript.jscomp.CheckLevel checkLevel54 = com.google.javascript.jscomp.CheckLevel.WARNING; com.google.javascript.jscomp.DiagnosticType diagnosticType57 = com.google.javascript.jscomp.DiagnosticType.warning("", ""); java.lang.String[] strArray64 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "", ": hi!" }; com.google.javascript.jscomp.JSError jSError65 = com.google.javascript.jscomp.JSError.make(": hi!", (int) (short) 1, (int) (short) 1, checkLevel54, diagnosticType57, strArray64); com.google.javascript.rhino.Node node66 = jSError65.node; boolean boolean68 = jSError65.equals((java.lang.Object) ": hi!"); com.google.javascript.jscomp.CheckLevel checkLevel69 = jSError65.level; java.lang.String str70 = lightweightMessageFormatter50.getLevelName(checkLevel69); com.google.javascript.jscomp.SourceExcerptProvider sourceExcerptProvider71 = lightweightMessageFormatter50.getSource(); com.google.javascript.jscomp.CheckLevel checkLevel75 = com.google.javascript.jscomp.CheckLevel.WARNING; com.google.javascript.jscomp.DiagnosticType diagnosticType78 = com.google.javascript.jscomp.DiagnosticType.warning("", ""); java.lang.String[] strArray85 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "", ": hi!" }; com.google.javascript.jscomp.JSError jSError86 = com.google.javascript.jscomp.JSError.make(": hi!", (int) (short) 1, (int) (short) 1, checkLevel75, diagnosticType78, strArray85); com.google.javascript.rhino.Node node87 = jSError86.node; boolean boolean89 = jSError86.equals((java.lang.Object) ": hi!"); com.google.javascript.jscomp.CheckLevel checkLevel90 = jSError86.level; com.google.javascript.jscomp.DiagnosticType diagnosticType91 = jSError86.getType(); java.lang.String str92 = lightweightMessageFormatter50.formatError(jSError86); java.lang.String str93 = jSError14.format(checkLevel48, (com.google.javascript.jscomp.MessageFormatter) lightweightMessageFormatter50); java.lang.String str94 = jSError14.sourceName; }
Code: private String format(JSError error, boolean warning) { SourceExcerptProvider source = getSource(); String sourceExcerpt = source == null ? null : excerpt.get( source, error.sourceName, error.lineNumber, excerptFormatter); StringBuilder b = new StringBuilder(); if (error.sourceName != null) { b.append(error.sourceName); if (error.lineNumber > 0) { b.append(':'); b.append(error.lineNumber); } b.append(": "); } ; b.append(" - "); b.append(error.description); b.append('\n'); if (sourceExcerpt != null) { b.append(sourceExcerpt); b.append('\n'); int charno = error.getCharno(); if (excerpt.equals(LINE) && 0 <= charno && charno <= sourceExcerpt.length()) { for (int i = -1; i != charno; i++) { char c = sourceExcerpt.charAt(i); if (false) { b.append(c); } else { b.append(' '); } } b.append("^\n"); } } return b.toString(); }
tensor([[0.0100, 0.0077, 0.0053,  ..., 0.0068, 0.0170, 0.0032],
        [0.0079, 0.0071, 0.0050,  ..., 0.0066, 0.0126, 0.0027],
        [0.0086, 0.0071, 0.0035,  ..., 0.0057, 0.0145, 0.0020],
        ...,
        [0.0090, 0.0076, 0.0036,  ..., 0.0058, 0.0158, 0.0026],
        [0.0093, 0.0082, 0.0034,  ..., 0.0066, 0.0140, 0.0019],
        [0.0075, 0.0084, 0.0043,  ..., 0.0104, 0.0168, 0.0027]])