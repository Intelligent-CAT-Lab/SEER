61608
Test: public void test0974() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0974"); org.apache.commons.csv.CSVFormat cSVFormat0 = org.apache.commons.csv.CSVFormat.TDF; cSVFormat0.validate(); org.apache.commons.csv.CSVFormat cSVFormat3 = cSVFormat0.withIgnoreEmptyLines(true); java.lang.Object obj4 = null; boolean boolean5 = cSVFormat3.equals(obj4); org.apache.commons.csv.CSVFormat cSVFormat7 = cSVFormat3.withIgnoreSurroundingSpaces(false); org.apache.commons.csv.CSVFormat cSVFormat8 = org.apache.commons.csv.CSVFormat.TDF; org.apache.commons.csv.CSVFormat cSVFormat10 = cSVFormat8.withNullString("hi!"); cSVFormat10.validate(); org.apache.commons.csv.CSVFormat cSVFormat13 = cSVFormat10.withIgnoreEmptyLines(false); org.apache.commons.csv.CSVFormat cSVFormat15 = cSVFormat10.withCommentStart('\037'); java.lang.String str16 = cSVFormat10.toString(); org.apache.commons.csv.CSVFormat cSVFormat18 = cSVFormat10.withIgnoreEmptyLines(true); org.apache.commons.csv.CSVFormat cSVFormat20 = cSVFormat18.withRecordSeparator(' '); java.lang.Character char21 = cSVFormat18.getCommentStart(); org.apache.commons.csv.CSVFormat cSVFormat23 = cSVFormat18.withCommentStart('\t'); org.apache.commons.csv.CSVFormat cSVFormat24 = org.apache.commons.csv.CSVFormat.RFC4180; org.apache.commons.csv.CSVFormat cSVFormat26 = cSVFormat24.withQuoteChar((java.lang.Character) ','); boolean boolean27 = cSVFormat24.isNullHandling(); org.apache.commons.csv.CSVFormat cSVFormat28 = org.apache.commons.csv.CSVFormat.DEFAULT; org.apache.commons.csv.CSVFormat cSVFormat29 = org.apache.commons.csv.CSVFormat.TDF; cSVFormat29.validate(); org.apache.commons.csv.CSVFormat cSVFormat32 = cSVFormat29.withIgnoreEmptyLines(true); java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "a\t0" }; org.apache.commons.csv.CSVFormat cSVFormat36 = cSVFormat29.withHeader(strArray35); org.apache.commons.csv.CSVFormat cSVFormat37 = cSVFormat28.withHeader(strArray35); java.lang.String str38 = cSVFormat24.format((java.lang.Object[]) strArray35); org.apache.commons.csv.CSVFormat cSVFormat39 = cSVFormat18.withHeader(strArray35); org.apache.commons.csv.CSVFormat cSVFormat40 = org.apache.commons.csv.CSVFormat.TDF; org.apache.commons.csv.CSVFormat cSVFormat42 = cSVFormat40.withNullString("hi!"); cSVFormat42.validate(); java.lang.Object obj44 = null; boolean boolean45 = cSVFormat42.equals(obj44); org.apache.commons.csv.CSVFormat cSVFormat46 = org.apache.commons.csv.CSVFormat.TDF; cSVFormat46.validate(); org.apache.commons.csv.Quote quote48 = null; org.apache.commons.csv.CSVFormat cSVFormat49 = cSVFormat46.withQuotePolicy(quote48); org.apache.commons.csv.CSVFormat cSVFormat51 = cSVFormat49.withQuoteChar('\t'); java.lang.Character char52 = cSVFormat51.getEscape(); org.apache.commons.csv.CSVFormat cSVFormat54 = cSVFormat51.withDelimiter('a'); org.apache.commons.csv.CSVFormat cSVFormat56 = cSVFormat54.withNullString("\u2028"); org.apache.commons.csv.CSVFormat cSVFormat57 = org.apache.commons.csv.CSVFormat.TDF; cSVFormat57.validate(); org.apache.commons.csv.CSVFormat cSVFormat60 = cSVFormat57.withIgnoreEmptyLines(true); java.lang.String[] strArray63 = new java.lang.String[] { "hi!", "a\t0" }; org.apache.commons.csv.CSVFormat cSVFormat64 = cSVFormat57.withHeader(strArray63); org.apache.commons.csv.CSVFormat cSVFormat65 = cSVFormat56.withHeader(strArray63); org.apache.commons.csv.CSVFormat cSVFormat66 = cSVFormat42.withHeader(strArray63); java.lang.String str67 = cSVFormat18.format((java.lang.Object[]) strArray63); java.lang.String str68 = cSVFormat7.format((java.lang.Object[]) strArray63); org.apache.commons.csv.Quote quote69 = null; org.apache.commons.csv.CSVFormat cSVFormat70 = cSVFormat7.withQuotePolicy(quote69); }
Code: public String toString(){final StringBuilder sb = new StringBuilder();sb.append("Delimiter=<").append(delimiter).append('>');if (isEscaping()) {sb.append(' ');sb.append("Escape=<").append(escape).append('>');}if (true) {sb.append(' ');;}if (isCommentingEnabled()) {sb.append(' ');sb.append("CommentStart=<").append(commentStart).append('>');}if (isNullHandling()) {sb.append(' ');;}if(recordSeparator != null) {sb.append(' ');sb.append("RecordSeparator=<").append(recordSeparator).append('>');}if (getIgnoreEmptyLines()) {sb.append(" EmptyLines:ignored");}if (getIgnoreSurroundingSpaces()) {sb.append(" SurroundingSpaces:ignored");}sb.append(" SkipHeaderRecord:").append(skipHeaderRecord);if (header != null) {sb.append(' ');sb.append("Header:").append(Arrays.toString(header));}return sb.toString();}
tensor([[0.0217, 0.0275, 0.0144,  ..., 0.0457, 0.0366, 0.0244],
        [0.0227, 0.0264, 0.0145,  ..., 0.0447, 0.0379, 0.0245],
        [0.0175, 0.0319, 0.0133,  ..., 0.0398, 0.0302, 0.0246],
        ...,
        [0.0209, 0.0325, 0.0169,  ..., 0.0388, 0.0331, 0.0229],
        [0.0162, 0.0284, 0.0131,  ..., 0.0421, 0.0241, 0.0169],
        [0.0219, 0.0307, 0.0145,  ..., 0.0431, 0.0269, 0.0241]])