69008
Test: public void test348() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test348"); org.jsoup.select.Evaluator.AttributeWithValueEnding attributeWithValueEnding2 = new org.jsoup.select.Evaluator.AttributeWithValueEnding("hi!", "SYSTEM"); org.jsoup.nodes.Document document4 = org.jsoup.Jsoup.parse(":nth-child(100)"); org.jsoup.nodes.Document document6 = org.jsoup.Jsoup.parse(":nth-child(100)"); org.jsoup.nodes.Document document8 = org.jsoup.Jsoup.parse(":nth-child(100)"); org.jsoup.nodes.Element[] elementArray9 = new org.jsoup.nodes.Element[] { document4, document6, document8 }; java.util.ArrayList<org.jsoup.nodes.Element> elementList10 = new java.util.ArrayList<org.jsoup.nodes.Element>(); boolean boolean11 = java.util.Collections.addAll((java.util.Collection<org.jsoup.nodes.Element>) elementList10, elementArray9); java.util.stream.Stream<org.jsoup.nodes.Element> elementStream12 = elementList10.stream(); java.util.ListIterator<org.jsoup.nodes.Element> elementItor13 = elementList10.listIterator(); elementList10.trimToSize(); org.jsoup.nodes.Document document16 = org.jsoup.Jsoup.parse(":nth-child(100)"); java.util.List<org.jsoup.nodes.Node> nodeList17 = document16.ensureChildNodes(); java.lang.String str18 = document16.nodeName(); boolean boolean19 = elementList10.add((org.jsoup.nodes.Element) document16); org.jsoup.select.Elements elements22 = document16.getElementsByAttributeValueEnding("#data", "#data"); java.lang.String str23 = document16.id(); document16.doSetBaseUri(":first-child"); org.jsoup.select.Elements elements26 = org.jsoup.select.Collector.collect((org.jsoup.select.Evaluator) attributeWithValueEnding2, (org.jsoup.nodes.Element) document16); org.jsoup.select.Elements elements28 = elements26.tagName(":first-child"); org.jsoup.select.Elements elements30 = elements28.tagName("#text"); }
Code: protected List<Node> ensureChildNodes() { return EmptyNodes; }
tensor([[0.1063, 0.1783, 0.2599, 0.1972, 0.1057, 0.1150, 0.0376],
        [0.1156, 0.1660, 0.2468, 0.1753, 0.1232, 0.1227, 0.0505],
        [0.0966, 0.1440, 0.2607, 0.1823, 0.1290, 0.1390, 0.0484],
        [0.1585, 0.1298, 0.2166, 0.1850, 0.1090, 0.1403, 0.0608],
        [0.1301, 0.1495, 0.2964, 0.1774, 0.0967, 0.1032, 0.0467],
        [0.1175, 0.1414, 0.2672, 0.1738, 0.1007, 0.1536, 0.0459],
        [0.1202, 0.1330, 0.2367, 0.2100, 0.1528, 0.1044, 0.0430]])