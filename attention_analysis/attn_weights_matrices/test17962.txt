17962
Test: public void test34() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test34"); com.google.javascript.jscomp.AbstractCompiler abstractCompiler0 = null; com.google.javascript.jscomp.ReferenceCollectingCallback.Behavior behavior1 = null; com.google.javascript.jscomp.ReferenceCollectingCallback referenceCollectingCallback2 = new com.google.javascript.jscomp.ReferenceCollectingCallback(abstractCompiler0, behavior1); java.util.Set<com.google.javascript.jscomp.Scope.Var> varSet3 = referenceCollectingCallback2.getReferencedVariables(); com.google.javascript.jscomp.Scope.Var var4 = null; com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection referenceCollection5 = referenceCollectingCallback2.getReferenceCollection(var4); com.google.javascript.jscomp.AbstractCompiler abstractCompiler6 = null; com.google.javascript.jscomp.Compiler compiler7 = new com.google.javascript.jscomp.Compiler(); com.google.javascript.jscomp.PerformanceTracker performanceTracker8 = compiler7.tracker; com.google.javascript.jscomp.CheckGlobalThis checkGlobalThis9 = new com.google.javascript.jscomp.CheckGlobalThis((com.google.javascript.jscomp.AbstractCompiler) compiler7); com.google.javascript.jscomp.NodeTraversal nodeTraversal10 = new com.google.javascript.jscomp.NodeTraversal(abstractCompiler6, (com.google.javascript.jscomp.NodeTraversal.Callback) checkGlobalThis9); com.google.javascript.rhino.ErrorReporter errorReporter11 = null; com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry12 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter11); com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType> jSTypeStaticScope13 = null; com.google.javascript.rhino.jstype.JSType jSType18 = jSTypeRegistry12.getType(jSTypeStaticScope13, "hi!", "hi!", 0, 1); java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable20 = jSTypeRegistry12.getEachReferenceTypeWithProperty(""); com.google.javascript.rhino.jstype.FunctionParamBuilder functionParamBuilder21 = new com.google.javascript.rhino.jstype.FunctionParamBuilder(jSTypeRegistry12); com.google.javascript.rhino.Node node22 = functionParamBuilder21.build(); com.google.javascript.rhino.ScriptOrFnNode scriptOrFnNode27 = new com.google.javascript.rhino.ScriptOrFnNode(2, 10, (int) '4'); int int29 = scriptOrFnNode27.getIntProp(29); boolean boolean30 = com.google.javascript.jscomp.NodeUtil.isForIn((com.google.javascript.rhino.Node) scriptOrFnNode27); boolean boolean31 = com.google.javascript.jscomp.NodeUtil.isImmutableValue((com.google.javascript.rhino.Node) scriptOrFnNode27); com.google.javascript.rhino.ScriptOrFnNode scriptOrFnNode35 = new com.google.javascript.rhino.ScriptOrFnNode(2, 10, (int) '4'); scriptOrFnNode35.removeProp(1); com.google.javascript.rhino.Node node38 = scriptOrFnNode35.cloneTree(); boolean boolean39 = scriptOrFnNode27.isEquivalentToTyped((com.google.javascript.rhino.Node) scriptOrFnNode35); com.google.javascript.jscomp.CheckLevel checkLevel40 = null; com.google.javascript.jscomp.DiagnosticType diagnosticType41 = com.google.javascript.jscomp.ProcessDefines.UNKNOWN_DEFINE_WARNING; java.lang.String[] strArray42 = null; com.google.javascript.jscomp.JSError jSError43 = com.google.javascript.jscomp.JSError.make("com.google.javascript.rhino.EcmaError: LinkedGraph: hi! (hi!#100)", (com.google.javascript.rhino.Node) scriptOrFnNode27, checkLevel40, diagnosticType41, strArray42); int int44 = scriptOrFnNode27.getEncodedSourceEnd(); java.lang.String str45 = com.google.javascript.jscomp.NodeUtil.getSourceName((com.google.javascript.rhino.Node) scriptOrFnNode27); referenceCollectingCallback2.visit(nodeTraversal10, node22, (com.google.javascript.rhino.Node) scriptOrFnNode27); java.util.Set<com.google.javascript.jscomp.Scope.Var> varSet47 = referenceCollectingCallback2.getReferencedVariables(); com.google.javascript.jscomp.AbstractCompiler abstractCompiler48 = null; com.google.javascript.jscomp.Compiler compiler49 = new com.google.javascript.jscomp.Compiler(); com.google.javascript.jscomp.PerformanceTracker performanceTracker50 = compiler49.tracker; com.google.javascript.jscomp.CheckGlobalThis checkGlobalThis51 = new com.google.javascript.jscomp.CheckGlobalThis((com.google.javascript.jscomp.AbstractCompiler) compiler49); com.google.javascript.jscomp.NodeTraversal nodeTraversal52 = new com.google.javascript.jscomp.NodeTraversal(abstractCompiler48, (com.google.javascript.jscomp.NodeTraversal.Callback) checkGlobalThis51); com.google.javascript.jscomp.ReferenceCollectingCallback.BasicBlock basicBlock53 = null; com.google.javascript.rhino.ScriptOrFnNode scriptOrFnNode57 = new com.google.javascript.rhino.ScriptOrFnNode(2, 10, (int) '4'); int int59 = scriptOrFnNode57.getIntProp(29); boolean boolean60 = com.google.javascript.jscomp.NodeUtil.isForIn((com.google.javascript.rhino.Node) scriptOrFnNode57); boolean boolean61 = com.google.javascript.jscomp.NodeUtil.isImmutableValue((com.google.javascript.rhino.Node) scriptOrFnNode57); com.google.javascript.rhino.ScriptOrFnNode scriptOrFnNode65 = new com.google.javascript.rhino.ScriptOrFnNode(2, 10, (int) '4'); scriptOrFnNode65.removeProp(1); com.google.javascript.rhino.Node node68 = scriptOrFnNode65.cloneTree(); boolean boolean69 = scriptOrFnNode57.isEquivalentToTyped((com.google.javascript.rhino.Node) scriptOrFnNode65); scriptOrFnNode65.putBooleanProp((int) (byte) 1, true); boolean boolean73 = com.google.javascript.jscomp.NodeUtil.isCallOrNew((com.google.javascript.rhino.Node) scriptOrFnNode65); com.google.javascript.jscomp.ReferenceCollectingCallback.BasicBlock basicBlock74 = new com.google.javascript.jscomp.ReferenceCollectingCallback.BasicBlock(basicBlock53, (com.google.javascript.rhino.Node) scriptOrFnNode65); scriptOrFnNode65.removeParamOrVar(""); java.util.logging.Logger logger77 = com.google.javascript.jscomp.Tracer.logger; com.google.javascript.jscomp.LoggerErrorManager loggerErrorManager78 = new com.google.javascript.jscomp.LoggerErrorManager(logger77); loggerErrorManager78.generateReport(); com.google.javascript.jscomp.CheckLevel checkLevel80 = com.google.javascript.jscomp.CheckLevel.ERROR; com.google.javascript.jscomp.DiagnosticType diagnosticType84 = com.google.javascript.jscomp.SyntacticScopeCreator.VAR_ARGUMENTS_SHADOWED_ERROR; java.lang.String[] strArray85 = com.google.javascript.rhino.ScriptRuntime.emptyStrings; com.google.javascript.jscomp.JSError jSError86 = com.google.javascript.jscomp.JSError.make("", 100, (int) ' ', diagnosticType84, strArray85); java.lang.String str87 = jSError86.sourceName; loggerErrorManager78.println(checkLevel80, jSError86); com.google.javascript.jscomp.DiagnosticType diagnosticType89 = com.google.javascript.jscomp.CheckAccessControls.DEPRECATED_CLASS; java.lang.String[] strArray90 = com.google.javascript.rhino.ScriptRuntime.emptyStrings; com.google.javascript.jscomp.JSError jSError91 = nodeTraversal52.makeError((com.google.javascript.rhino.Node) scriptOrFnNode65, checkLevel80, diagnosticType89, strArray90); com.google.javascript.rhino.Node node92 = nodeTraversal52.getEnclosingFunction(); com.google.javascript.rhino.Node node93 = nodeTraversal52.getEnclosingFunction(); com.google.javascript.jscomp.Compiler compiler94 = nodeTraversal52.getCompiler(); try { referenceCollectingCallback2.exitScope(nodeTraversal52); } catch (java.util.NoSuchElementException e) { } }
Code: public void visit(NodeTraversal t, Node n, Node parent) { if (n.getType() == Token.NAME) { Var v = t.getScope().getVar(n.getString()); if (v != null && varFilter.apply(v)) { addReference(t, v, new Reference(n, parent, t, blockStack.peek())); } } if (isBlockBoundary(n, parent)) { blockStack.pop(); } }
tensor([[0.0153, 0.0125, 0.0073,  ..., 0.0314, 0.0068, 0.0068],
        [0.0116, 0.0106, 0.0040,  ..., 0.0333, 0.0067, 0.0067],
        [0.0115, 0.0082, 0.0050,  ..., 0.0256, 0.0037, 0.0037],
        ...,
        [0.0126, 0.0098, 0.0057,  ..., 0.0277, 0.0041, 0.0041],
        [0.0108, 0.0099, 0.0059,  ..., 0.0298, 0.0057, 0.0057],
        [0.0108, 0.0099, 0.0059,  ..., 0.0298, 0.0057, 0.0057]])