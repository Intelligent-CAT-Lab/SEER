68957
Test: public void test13() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test13"); org.jsoup.nodes.TextNode textNode2 = org.jsoup.nodes.TextNode.createFromEncoded("hi!", "hi!"); textNode2.setBaseUri(""); java.lang.String str5 = textNode2.getWholeText(); textNode2.setSiblingIndex(100); java.lang.StringBuilder stringBuilder8 = null; org.jsoup.nodes.Document.OutputSettings outputSettings10 = new org.jsoup.nodes.Document.OutputSettings(); textNode2.outerHtmlTail(stringBuilder8, 100, outputSettings10); textNode2.setBaseUri("hi!"); java.lang.String str15 = textNode2.attr("hi!"); java.lang.String str16 = textNode2.baseUri(); java.lang.String str17 = textNode2.text; textNode2.siblingIndex = 1; java.lang.StringBuilder stringBuilder20 = null; org.jsoup.nodes.DocumentType documentType26 = new org.jsoup.nodes.DocumentType("hi!=\"\"", "#document", "", "[#text^=hi!]"); java.lang.StringBuilder stringBuilder27 = null; org.jsoup.nodes.TextNode textNode31 = org.jsoup.nodes.TextNode.createFromEncoded("hi!", "hi!"); textNode31.setBaseUri(""); java.lang.String str34 = textNode31.getWholeText(); textNode31.setSiblingIndex(100); java.lang.StringBuilder stringBuilder37 = null; org.jsoup.nodes.Document.OutputSettings outputSettings39 = new org.jsoup.nodes.Document.OutputSettings(); textNode31.outerHtmlTail(stringBuilder37, 100, outputSettings39); org.jsoup.nodes.Entities.EscapeMode escapeMode41 = org.jsoup.nodes.Entities.EscapeMode.extended; org.jsoup.nodes.Document.OutputSettings outputSettings42 = outputSettings39.escapeMode(escapeMode41); org.jsoup.nodes.Entities.EscapeMode escapeMode43 = org.jsoup.nodes.Entities.EscapeMode.base; org.jsoup.nodes.Document.OutputSettings outputSettings44 = outputSettings42.escapeMode(escapeMode43); java.nio.charset.Charset charset45 = outputSettings42.charset(); org.jsoup.nodes.Document.OutputSettings outputSettings47 = outputSettings42.prettyPrint(true); org.jsoup.nodes.Document.OutputSettings outputSettings49 = outputSettings47.indentAmount((int) (byte) 10); java.nio.charset.CharsetEncoder charsetEncoder50 = outputSettings49.encoder(); org.jsoup.nodes.TextNode textNode53 = org.jsoup.nodes.TextNode.createFromEncoded("hi!", "hi!"); textNode53.setBaseUri(""); java.lang.String str56 = textNode53.getWholeText(); textNode53.setSiblingIndex(100); java.lang.StringBuilder stringBuilder59 = null; org.jsoup.nodes.Document.OutputSettings outputSettings61 = new org.jsoup.nodes.Document.OutputSettings(); textNode53.outerHtmlTail(stringBuilder59, 100, outputSettings61); org.jsoup.nodes.Entities.EscapeMode escapeMode63 = org.jsoup.nodes.Entities.EscapeMode.extended; org.jsoup.nodes.Document.OutputSettings outputSettings64 = outputSettings61.escapeMode(escapeMode63); java.nio.charset.Charset charset65 = outputSettings61.charset(); org.jsoup.nodes.Document.OutputSettings outputSettings66 = outputSettings49.charset(charset65); documentType26.outerHtmlTail(stringBuilder27, 1, outputSettings66); java.lang.StringBuilder stringBuilder68 = null; org.jsoup.nodes.DocumentType documentType74 = new org.jsoup.nodes.DocumentType("hi!=\"\"", "#document", "", "[#text^=hi!]"); java.lang.String str75 = documentType74.nodeName(); java.lang.StringBuilder stringBuilder76 = null; org.jsoup.nodes.TextNode textNode80 = org.jsoup.nodes.TextNode.createFromEncoded("hi!", "hi!"); textNode80.setBaseUri(""); java.lang.String str83 = textNode80.getWholeText(); textNode80.setSiblingIndex(100); java.lang.StringBuilder stringBuilder86 = null; org.jsoup.nodes.Document.OutputSettings outputSettings88 = new org.jsoup.nodes.Document.OutputSettings(); textNode80.outerHtmlTail(stringBuilder86, 100, outputSettings88); org.jsoup.nodes.Entities.EscapeMode escapeMode90 = org.jsoup.nodes.Entities.EscapeMode.extended; org.jsoup.nodes.Document.OutputSettings outputSettings91 = outputSettings88.escapeMode(escapeMode90); org.jsoup.nodes.Document.OutputSettings outputSettings92 = outputSettings88.clone(); org.jsoup.nodes.Document.OutputSettings outputSettings93 = outputSettings88.clone(); documentType74.outerHtmlTail(stringBuilder76, (int) (byte) 10, outputSettings88); documentType26.outerHtmlTail(stringBuilder68, (int) (byte) 0, outputSettings88); try { textNode2.indent(stringBuilder20, 2, outputSettings88); } catch (java.lang.NullPointerException e) { } }
Code: public DocumentType(String name, String publicId, String systemId, String baseUri) { super(baseUri); Validate.notEmpty(name); attr("name", name); attr("publicId", publicId); attr("systemId", systemId); }
tensor([[0.0356, 0.0341, 0.1363, 0.0451, 0.0457, 0.0451, 0.0186, 0.0451, 0.0763,
         0.0513, 0.0613, 0.0157, 0.0226, 0.0291, 0.0437, 0.0174, 0.2102, 0.0508,
         0.0160],
        [0.0296, 0.0265, 0.1464, 0.0530, 0.0408, 0.0530, 0.0148, 0.0530, 0.0770,
         0.0566, 0.0580, 0.0115, 0.0159, 0.0265, 0.0404, 0.0122, 0.2240, 0.0487,
         0.0121],
        [0.0384, 0.0423, 0.1029, 0.0459, 0.0456, 0.0459, 0.0222, 0.0459, 0.0597,
         0.0645, 0.0637, 0.0182, 0.0324, 0.0350, 0.0564, 0.0203, 0.1874, 0.0529,
         0.0205],
        [0.0364, 0.0299, 0.1240, 0.0417, 0.0509, 0.0417, 0.0214, 0.0417, 0.0658,
         0.0561, 0.0606, 0.0117, 0.0234, 0.0338, 0.0416, 0.0161, 0.2471, 0.0421,
         0.0141],
        [0.0255, 0.0296, 0.1130, 0.0488, 0.0398, 0.0488, 0.0205, 0.0488, 0.0562,
         0.0713, 0.0582, 0.0100, 0.0173, 0.0319, 0.0362, 0.0149, 0.2732, 0.0445,
         0.0117],
        [0.0364, 0.0299, 0.1240, 0.0417, 0.0509, 0.0417, 0.0214, 0.0417, 0.0658,
         0.0561, 0.0606, 0.0117, 0.0234, 0.0338, 0.0416, 0.0161, 0.2471, 0.0421,
         0.0141],
        [0.0290, 0.0332, 0.1436, 0.0584, 0.0479, 0.0584, 0.0246, 0.0584, 0.0806,
         0.0622, 0.0626, 0.0140, 0.0199, 0.0303, 0.0418, 0.0141, 0.1697, 0.0406,
         0.0108],
        [0.0364, 0.0299, 0.1240, 0.0417, 0.0509, 0.0417, 0.0214, 0.0417, 0.0658,
         0.0561, 0.0606, 0.0117, 0.0234, 0.0338, 0.0416, 0.0161, 0.2471, 0.0421,
         0.0141],
        [0.0344, 0.0365, 0.1104, 0.0548, 0.0466, 0.0548, 0.0197, 0.0548, 0.0830,
         0.0709, 0.0588, 0.0147, 0.0246, 0.0304, 0.0456, 0.0176, 0.1822, 0.0472,
         0.0130],
        [0.0409, 0.0360, 0.0835, 0.0574, 0.0475, 0.0574, 0.0305, 0.0574, 0.0600,
         0.0691, 0.0678, 0.0250, 0.0282, 0.0369, 0.0507, 0.0217, 0.1514, 0.0551,
         0.0238],
        [0.0272, 0.0234, 0.1317, 0.0499, 0.0393, 0.0499, 0.0193, 0.0499, 0.0734,
         0.0510, 0.0523, 0.0103, 0.0179, 0.0257, 0.0331, 0.0111, 0.2831, 0.0426,
         0.0090],
        [0.0289, 0.0256, 0.1726, 0.0480, 0.0403, 0.0480, 0.0167, 0.0480, 0.0625,
         0.0670, 0.0461, 0.0104, 0.0188, 0.0244, 0.0381, 0.0125, 0.2366, 0.0426,
         0.0131],
        [0.0428, 0.0357, 0.0875, 0.0463, 0.0465, 0.0463, 0.0182, 0.0463, 0.0730,
         0.0546, 0.0560, 0.0184, 0.0328, 0.0365, 0.0447, 0.0179, 0.2221, 0.0589,
         0.0155],
        [0.0266, 0.0260, 0.1279, 0.0482, 0.0571, 0.0482, 0.0226, 0.0482, 0.0730,
         0.0630, 0.0626, 0.0143, 0.0199, 0.0281, 0.0440, 0.0129, 0.2100, 0.0522,
         0.0152],
        [0.0348, 0.0341, 0.1016, 0.0516, 0.0484, 0.0516, 0.0246, 0.0516, 0.0700,
         0.0601, 0.0628, 0.0161, 0.0188, 0.0367, 0.0439, 0.0177, 0.2125, 0.0455,
         0.0177],
        [0.0376, 0.0375, 0.0970, 0.0587, 0.0444, 0.0587, 0.0245, 0.0587, 0.0822,
         0.0578, 0.0643, 0.0197, 0.0233, 0.0351, 0.0504, 0.0182, 0.1654, 0.0490,
         0.0174],
        [0.0290, 0.0209, 0.1719, 0.0464, 0.0361, 0.0464, 0.0186, 0.0464, 0.0573,
         0.0554, 0.0755, 0.0082, 0.0172, 0.0239, 0.0472, 0.0101, 0.2350, 0.0417,
         0.0129],
        [0.0271, 0.0222, 0.1634, 0.0439, 0.0289, 0.0439, 0.0195, 0.0439, 0.0788,
         0.0703, 0.0631, 0.0085, 0.0167, 0.0228, 0.0386, 0.0096, 0.2514, 0.0380,
         0.0094],
        [0.0268, 0.0365, 0.1649, 0.0491, 0.0519, 0.0491, 0.0188, 0.0491, 0.0674,
         0.0635, 0.0748, 0.0142, 0.0217, 0.0261, 0.0433, 0.0199, 0.1700, 0.0391,
         0.0139]])