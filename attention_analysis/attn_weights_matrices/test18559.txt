18559
Test: public void test044() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test044"); com.google.javascript.rhino.Node node1 = null; com.google.javascript.jscomp.DiagnosticType diagnosticType4 = com.google.javascript.jscomp.DiagnosticType.error(": hi!", "WARNING"); com.google.javascript.jscomp.CheckLevel checkLevel5 = diagnosticType4.defaultLevel; com.google.javascript.jscomp.DiagnosticType diagnosticType8 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!"); boolean boolean10 = diagnosticType8.equals((java.lang.Object) (byte) -1); com.google.javascript.jscomp.DiagnosticType diagnosticType13 = com.google.javascript.jscomp.DiagnosticType.error(": hi!", "WARNING"); com.google.javascript.jscomp.DiagnosticType diagnosticType16 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!"); boolean boolean18 = diagnosticType16.equals((java.lang.Object) (byte) -1); java.lang.String str19 = diagnosticType16.key; com.google.javascript.jscomp.CheckLevel checkLevel23 = com.google.javascript.jscomp.CheckLevel.WARNING; boolean boolean24 = checkLevel23.isOn(); com.google.javascript.jscomp.DiagnosticType diagnosticType27 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!"); java.lang.Object[] objArray28 = null; java.lang.String str29 = diagnosticType27.format(objArray28); java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "" }; com.google.javascript.jscomp.JSError jSError33 = com.google.javascript.jscomp.JSError.make("hi!", 1, (int) (short) 100, checkLevel23, diagnosticType27, strArray32); com.google.javascript.jscomp.JSError jSError34 = com.google.javascript.jscomp.JSError.make(diagnosticType16, strArray32); java.lang.String str35 = diagnosticType13.format((java.lang.Object[]) strArray32); java.lang.String str36 = diagnosticType8.format((java.lang.Object[]) strArray32); java.lang.String str37 = diagnosticType4.format((java.lang.Object[]) strArray32); java.lang.String str38 = diagnosticType4.key; com.google.javascript.jscomp.CheckLevel checkLevel39 = diagnosticType4.level; com.google.javascript.jscomp.DiagnosticType diagnosticType42 = com.google.javascript.jscomp.DiagnosticType.warning(". at : hi! line 1 : 1", ": "); com.google.javascript.jscomp.LightweightMessageFormatter lightweightMessageFormatter43 = com.google.javascript.jscomp.LightweightMessageFormatter.withoutSource(); com.google.javascript.jscomp.CheckLevel checkLevel47 = com.google.javascript.jscomp.CheckLevel.WARNING; com.google.javascript.jscomp.DiagnosticType diagnosticType50 = com.google.javascript.jscomp.DiagnosticType.warning("", ""); java.lang.String[] strArray57 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "", ": hi!" }; com.google.javascript.jscomp.JSError jSError58 = com.google.javascript.jscomp.JSError.make(": hi!", (int) (short) 1, (int) (short) 1, checkLevel47, diagnosticType50, strArray57); com.google.javascript.rhino.Node node59 = jSError58.node; boolean boolean61 = jSError58.equals((java.lang.Object) ": hi!"); com.google.javascript.jscomp.CheckLevel checkLevel62 = jSError58.level; java.lang.String str63 = lightweightMessageFormatter43.getLevelName(checkLevel62); com.google.javascript.jscomp.CheckLevel checkLevel67 = com.google.javascript.jscomp.CheckLevel.WARNING; com.google.javascript.jscomp.DiagnosticType diagnosticType70 = com.google.javascript.jscomp.DiagnosticType.warning("", ""); java.lang.String[] strArray77 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "", ": hi!" }; com.google.javascript.jscomp.JSError jSError78 = com.google.javascript.jscomp.JSError.make(": hi!", (int) (short) 1, (int) (short) 1, checkLevel67, diagnosticType70, strArray77); com.google.javascript.rhino.Node node79 = jSError78.node; java.lang.String str80 = lightweightMessageFormatter43.formatError(jSError78); com.google.javascript.jscomp.CheckLevel checkLevel84 = com.google.javascript.jscomp.CheckLevel.WARNING; boolean boolean85 = checkLevel84.isOn(); com.google.javascript.jscomp.DiagnosticType diagnosticType88 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!"); java.lang.Object[] objArray89 = null; java.lang.String str90 = diagnosticType88.format(objArray89); java.lang.String[] strArray93 = new java.lang.String[] { "hi!", "" }; com.google.javascript.jscomp.JSError jSError94 = com.google.javascript.jscomp.JSError.make("hi!", 1, (int) (short) 100, checkLevel84, diagnosticType88, strArray93); java.lang.String str95 = lightweightMessageFormatter43.formatWarning(jSError94); com.google.javascript.jscomp.CheckLevel checkLevel96 = jSError94.level; diagnosticType42.level = checkLevel96; java.lang.String[] strArray98 = null; try { com.google.javascript.jscomp.JSError jSError99 = com.google.javascript.jscomp.JSError.make(": hi!:1: ERROR - \n: WARNING - hi!\n", node1, checkLevel39, diagnosticType42, strArray98); } catch (java.lang.NullPointerException e) { } }
Code: private String format(JSError error, boolean warning) { SourceExcerptProvider source = getSource(); String sourceExcerpt = source == null ? null : excerpt.get( source, error.sourceName, error.lineNumber, excerptFormatter); StringBuilder b = new StringBuilder(); if (error.sourceName != null) { b.append(error.sourceName); if (error.lineNumber > 0) { b.append(':'); b.append(error.lineNumber); } b.append(": "); } ; b.append(" - "); b.append(error.description); b.append('\n'); if (sourceExcerpt != null) { b.append(sourceExcerpt); b.append('\n'); int charno = error.getCharno(); if (excerpt.equals(LINE) && charno <= sourceExcerpt.length()) { for (int i = -1; i != charno; i++) { char c = sourceExcerpt.charAt(i); if (Character.isWhitespace(c)) { b.append(c); } else { b.append(' '); } } b.append("^\n"); } } return b.toString(); }
tensor([[0.0103, 0.0080, 0.0055,  ..., 0.0071, 0.0176, 0.0033],
        [0.0082, 0.0074, 0.0052,  ..., 0.0069, 0.0131, 0.0028],
        [0.0089, 0.0073, 0.0036,  ..., 0.0059, 0.0149, 0.0021],
        ...,
        [0.0092, 0.0079, 0.0037,  ..., 0.0060, 0.0163, 0.0026],
        [0.0096, 0.0086, 0.0035,  ..., 0.0068, 0.0144, 0.0020],
        [0.0077, 0.0088, 0.0045,  ..., 0.0107, 0.0174, 0.0028]])