39813
Test: public void test17() throws Throwable { DateTimeZone dateTimeZone0 = DateTimeZone.forOffsetHoursMinutes(0, 0); BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance(dateTimeZone0); DateTimeField dateTimeField0 = buddhistChronology0.millisOfDay(); DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.millisOfSecond(); RemainderDateTimeField remainderDateTimeField0 = new RemainderDateTimeField(dateTimeField0, dateTimeFieldType0, 1934); DateTimeField dateTimeField1 = remainderDateTimeField0.getWrappedField(); }
Code: public final DateTimeField getWrappedField() { return iField; }
[[0.11124498 0.08713619 0.19678423 0.15431002 0.1319832  0.12041023
 0.15431002 0.04382106]
[0.09857658 0.06436218 0.18820563 0.16066536 0.15356323 0.142986
 0.16066536 0.03097576]
[0.08772238 0.07050234 0.20148215 0.15802848 0.15852866 0.12928116
 0.15802848 0.03642634]
[0.09263475 0.08367231 0.22336924 0.15812114 0.12745115 0.11192076
 0.15812114 0.04470952]
[0.1064969  0.10399128 0.15878415 0.1459705  0.15675268 0.12445478
 0.1459705  0.0575792 ]
[0.08061069 0.07148122 0.21014996 0.17024367 0.13805763 0.12038708
 0.17024367 0.03882606]
[0.09263475 0.08367231 0.22336924 0.15812114 0.12745115 0.11192076
 0.15812114 0.04470952]
[0.08005418 0.07023413 0.15586185 0.15445706 0.17832303 0.1669172
 0.15445706 0.0396954 ]]