68964
Test: public void test226() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test226"); org.jsoup.select.Evaluator.IsRoot isRoot0 = new org.jsoup.select.Evaluator.IsRoot(); org.jsoup.select.Evaluator.IsEmpty isEmpty1 = new org.jsoup.select.Evaluator.IsEmpty(); org.jsoup.nodes.Element element2 = null; org.jsoup.nodes.Element element3 = org.jsoup.select.Collector.findFirst((org.jsoup.select.Evaluator) isEmpty1, element2); org.jsoup.select.Evaluator.IsOnlyChild isOnlyChild4 = new org.jsoup.select.Evaluator.IsOnlyChild(); java.util.regex.Pattern pattern6 = null; org.jsoup.select.Evaluator.AttributeWithValueMatching attributeWithValueMatching7 = new org.jsoup.select.Evaluator.AttributeWithValueMatching("hi!", pattern6); java.util.regex.Pattern pattern9 = null; org.jsoup.select.Evaluator.AttributeWithValueMatching attributeWithValueMatching10 = new org.jsoup.select.Evaluator.AttributeWithValueMatching("", pattern9); org.jsoup.nodes.Document document12 = org.jsoup.nodes.Document.createShell("hi!"); org.jsoup.nodes.Document document14 = org.jsoup.nodes.Document.createShell("hi!"); boolean boolean15 = attributeWithValueMatching10.matches((org.jsoup.nodes.Element) document12, (org.jsoup.nodes.Element) document14); org.jsoup.nodes.Document document18 = org.jsoup.Jsoup.parseBodyFragment(":last-of-type", ""); boolean boolean19 = attributeWithValueMatching7.matches((org.jsoup.nodes.Element) document12, (org.jsoup.nodes.Element) document18); org.jsoup.nodes.Document document21 = org.jsoup.nodes.Document.createShell("hi!"); boolean boolean22 = isOnlyChild4.matches((org.jsoup.nodes.Element) document12, (org.jsoup.nodes.Element) document21); java.util.regex.Pattern pattern24 = null; org.jsoup.select.Evaluator.AttributeWithValueMatching attributeWithValueMatching25 = new org.jsoup.select.Evaluator.AttributeWithValueMatching("", pattern24); org.jsoup.nodes.Document document27 = org.jsoup.nodes.Document.createShell("hi!"); org.jsoup.nodes.Document document29 = org.jsoup.nodes.Document.createShell("hi!"); boolean boolean30 = attributeWithValueMatching25.matches((org.jsoup.nodes.Element) document27, (org.jsoup.nodes.Element) document29); boolean boolean32 = document27.equals((java.lang.Object) 0L); org.jsoup.select.Elements elements34 = document27.getElementsByClass("hi!"); document27.title("<html>\n <head></head>\n <body></body>\n</html><html>\n <head></head>\n <body>\n hi!\n </body>\n</html>"); org.jsoup.select.Elements elements37 = document27.children(); boolean boolean38 = isEmpty1.matches((org.jsoup.nodes.Element) document21, (org.jsoup.nodes.Element) document27); org.jsoup.select.Evaluator.IsOnlyChild isOnlyChild39 = new org.jsoup.select.Evaluator.IsOnlyChild(); org.jsoup.select.StructuralEvaluator.PreviousSibling previousSibling40 = new org.jsoup.select.StructuralEvaluator.PreviousSibling((org.jsoup.select.Evaluator) isOnlyChild39); org.jsoup.select.StructuralEvaluator.PreviousSibling previousSibling41 = new org.jsoup.select.StructuralEvaluator.PreviousSibling((org.jsoup.select.Evaluator) previousSibling40); java.util.regex.Pattern pattern43 = null; org.jsoup.select.Evaluator.AttributeWithValueMatching attributeWithValueMatching44 = new org.jsoup.select.Evaluator.AttributeWithValueMatching("", pattern43); org.jsoup.nodes.Document document46 = org.jsoup.nodes.Document.createShell("hi!"); org.jsoup.nodes.Document document48 = org.jsoup.nodes.Document.createShell("hi!"); boolean boolean49 = attributeWithValueMatching44.matches((org.jsoup.nodes.Element) document46, (org.jsoup.nodes.Element) document48); boolean boolean51 = document46.equals((java.lang.Object) 0L); org.jsoup.nodes.Node node52 = document46.parent(); org.jsoup.nodes.Element element53 = document46.head(); org.jsoup.nodes.Element element56 = document46.attr("hi!", false); org.jsoup.select.Elements elements57 = org.jsoup.select.Collector.collect((org.jsoup.select.Evaluator) previousSibling41, element56); boolean boolean58 = isRoot0.matches((org.jsoup.nodes.Element) document27, element56); java.lang.String str59 = isRoot0.toString(); org.jsoup.nodes.Document document62 = org.jsoup.parser.Parser.parseBodyFragment(":only-child", "#root"); org.jsoup.nodes.Element element64 = document62.addClass(":containsdata(#doctype)"); org.jsoup.nodes.Document document66 = org.jsoup.Jsoup.parse("hi!"); java.lang.String str67 = document66.baseUri(); java.lang.String str68 = document66.location(); boolean boolean69 = isRoot0.matches(element64, (org.jsoup.nodes.Element) document66); org.jsoup.select.NodeFilter nodeFilter70 = null; try { org.jsoup.nodes.Node node71 = document66.filter(nodeFilter70); } catch (java.lang.IllegalArgumentException e) { } }
Code: public boolean matches(Element root, Element element) { if (element instanceof PseudoTextElement) return true; List<TextNode> textNodes = element.textNodes(); for (TextNode textNode : textNodes) { PseudoTextElement pel = new PseudoTextElement( org.jsoup.parser.Tag.valueOf(element.tagName()), element.baseUri(), element.attributes()); textNode.replaceWith(pel); pel.appendChild(textNode); } return false; }
tensor([[0.0223, 0.0500, 0.0217,  ..., 0.0252, 0.0318, 0.0107],
        [0.0160, 0.0765, 0.0182,  ..., 0.0276, 0.0320, 0.0081],
        [0.0133, 0.0550, 0.0200,  ..., 0.0245, 0.0327, 0.0094],
        ...,
        [0.0150, 0.0634, 0.0166,  ..., 0.0210, 0.0343, 0.0091],
        [0.0218, 0.0551, 0.0202,  ..., 0.0261, 0.0398, 0.0129],
        [0.0154, 0.0516, 0.0192,  ..., 0.0348, 0.0352, 0.0091]])