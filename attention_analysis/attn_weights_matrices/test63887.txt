63887
Test: public void testSingleMatchFilteringWithPathRawBinary() throws Exception { StringWriter w = new StringWriter(); FilteringGeneratorDelegate gen = new FilteringGeneratorDelegate(JSON_F.createGenerator(w), new NameMatchFilter("array"), true, false ); gen.writeStartObject(); gen.writeFieldName("header"); gen.writeStartArray(); gen.writeBinary(new byte[] { 1 }); gen.writeRawValue(new SerializedString("1")); gen.writeRawValue("2"); gen.writeEndArray(); gen.writeFieldName("array"); gen.writeStartArray(); gen.writeBinary(new byte[] { 1 }); gen.writeNumber((short) 1); gen.writeNumber((int) 2); gen.writeNumber((long) 3); gen.writeNumber(BigInteger.valueOf(4)); gen.writeRaw(" "); gen.writeNumber(new BigDecimal("5.0")); gen.writeRaw(new SerializedString(" ")); gen.writeNumber(6.25f); gen.writeNumber(7.5); gen.writeEndArray(); gen.writeArrayFieldStart("extra"); gen.writeNumber((short) 1); gen.writeNumber((int) 2); gen.writeNumber((long) 3); gen.writeNumber(BigInteger.valueOf(4)); gen.writeNumber(new BigDecimal("5.0")); gen.writeNumber(6.25f); gen.writeNumber(7.5); gen.writeEndArray(); gen.writeEndObject(); gen.close(); }
Code: public void writeNumber(BigDecimal value) throws IOException { _verifyValueWrite(WRITE_NUMBER); if (value == null) { _writeNull(); } else if (_cfgNumbersAsStrings) { String raw = isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN) ? value.toPlainString() : value.toString(); _writeQuotedRaw(raw); } else if (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)) { writeRaw(value.toPlainString()); } else { writeRaw(_asString(value)); } }
tensor([[0.0184, 0.0151, 0.0101,  ..., 0.0103, 0.0082, 0.0082],
        [0.0148, 0.0130, 0.0082,  ..., 0.0091, 0.0080, 0.0080],
        [0.0116, 0.0124, 0.0091,  ..., 0.0091, 0.0071, 0.0071],
        ...,
        [0.0138, 0.0132, 0.0088,  ..., 0.0093, 0.0076, 0.0076],
        [0.0129, 0.0118, 0.0083,  ..., 0.0089, 0.0069, 0.0069],
        [0.0129, 0.0118, 0.0083,  ..., 0.0089, 0.0069, 0.0069]])