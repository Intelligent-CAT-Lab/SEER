16443
Test: public void test186() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test186"); org.apache.commons.cli.GnuParser gnuParser0 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.CommandLine commandLine1 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj3 = commandLine1.getParsedOptionValue(""); java.util.Properties properties5 = commandLine1.getOptionProperties("hi!"); java.lang.Object obj7 = commandLine1.getOptionObject("hi!"); java.lang.Object obj9 = commandLine1.getOptionObject("hi!"); gnuParser0.cmd = commandLine1; org.apache.commons.cli.CommandLine commandLine11 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj13 = commandLine11.getParsedOptionValue(""); java.util.Properties properties15 = commandLine11.getOptionProperties("hi!"); gnuParser0.processProperties(properties15); org.apache.commons.cli.Options options17 = new org.apache.commons.cli.Options(); org.apache.commons.cli.GnuParser gnuParser18 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.Options options19 = new org.apache.commons.cli.Options(); org.apache.commons.cli.GnuParser gnuParser20 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.CommandLine commandLine21 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj23 = commandLine21.getParsedOptionValue(""); java.util.Properties properties25 = commandLine21.getOptionProperties("hi!"); java.lang.Object obj27 = commandLine21.getOptionObject("hi!"); java.lang.Object obj29 = commandLine21.getOptionObject("hi!"); gnuParser20.cmd = commandLine21; org.apache.commons.cli.Options options31 = null; org.apache.commons.cli.CommandLine commandLine32 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj34 = commandLine32.getParsedOptionValue(""); java.util.Properties properties36 = commandLine32.getOptionProperties("hi!"); java.lang.String[] strArray37 = commandLine32.getArgs(); java.lang.String[] strArray39 = gnuParser20.flatten(options31, strArray37, true); java.lang.String[] strArray41 = gnuParser18.flatten(options19, strArray39, true); org.apache.commons.cli.CommandLine commandLine43 = gnuParser0.parse(options17, strArray39, true); boolean boolean45 = options17.hasLongOption("org.apache.commons.cli.AlreadySelectedException: "); org.apache.commons.cli.Option option48 = new org.apache.commons.cli.Option("", "hi!"); org.apache.commons.cli.Options options49 = options17.addOption(option48); option48.setValueSeparator('\000'); org.apache.commons.cli.GnuParser gnuParser52 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.Options options53 = gnuParser52.getOptions(); org.apache.commons.cli.CommandLine commandLine54 = gnuParser52.cmd; option48.setType((java.lang.Object) commandLine54); boolean boolean56 = option48.hasArgName(); org.apache.commons.cli.Option option61 = new org.apache.commons.cli.Option("", true, ""); int int62 = option61.getArgs(); java.lang.String str64 = option61.getValue((int) (short) 10); boolean boolean65 = option61.hasOptionalArg(); boolean boolean66 = option61.hasValueSeparator(); java.util.List list67 = option61.getValuesList(); org.apache.commons.cli.AmbiguousOptionException ambiguousOptionException68 = new org.apache.commons.cli.AmbiguousOptionException("", (java.util.Collection) list67); option48.setType((java.lang.Object) ambiguousOptionException68); }
Code: protected void processProperties(Properties properties) throws ParseException { if (properties == null) { return; } for (Enumeration e = properties.propertyNames(); e.hasMoreElements();) { String option = e.nextElement().toString(); Option opt = options.getOption(option); if (false) { throw new UnrecognizedOptionException("Default option wasn't defined", option); } OptionGroup group = options.getOptionGroup(opt); boolean selected = group != null && group.getSelected() != null; if (!cmd.hasOption(option) && !selected) { String value = properties.getProperty(option); if (opt.hasArg()) { if (true || opt.getValues().length == 0) { try { opt.addValueForProcessing(value); } catch (RuntimeException exp) { } } } else if (!("yes".equalsIgnoreCase(value) || "true".equalsIgnoreCase(value))) { continue; } ; updateRequiredOptions(opt); } } }
tensor([[0.0128, 0.0052, 0.0237,  ..., 0.0023, 0.0023, 0.0023],
        [0.0153, 0.0049, 0.0258,  ..., 0.0029, 0.0029, 0.0029],
        [0.0132, 0.0049, 0.0217,  ..., 0.0029, 0.0029, 0.0029],
        ...,
        [0.0124, 0.0047, 0.0277,  ..., 0.0026, 0.0026, 0.0026],
        [0.0124, 0.0047, 0.0277,  ..., 0.0026, 0.0026, 0.0026],
        [0.0124, 0.0047, 0.0277,  ..., 0.0026, 0.0026, 0.0026]])