16274
Test: public void test074() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test074"); org.apache.commons.cli.GnuParser gnuParser0 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.CommandLine commandLine1 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj3 = commandLine1.getParsedOptionValue(""); java.util.Properties properties5 = commandLine1.getOptionProperties("hi!"); java.lang.Object obj7 = commandLine1.getOptionObject("hi!"); java.lang.Object obj9 = commandLine1.getOptionObject("hi!"); gnuParser0.cmd = commandLine1; org.apache.commons.cli.CommandLine commandLine11 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj13 = commandLine11.getParsedOptionValue(""); java.util.Properties properties15 = commandLine11.getOptionProperties("hi!"); gnuParser0.processProperties(properties15); org.apache.commons.cli.Options options17 = new org.apache.commons.cli.Options(); org.apache.commons.cli.GnuParser gnuParser18 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.Options options19 = new org.apache.commons.cli.Options(); org.apache.commons.cli.GnuParser gnuParser20 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.CommandLine commandLine21 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj23 = commandLine21.getParsedOptionValue(""); java.util.Properties properties25 = commandLine21.getOptionProperties("hi!"); java.lang.Object obj27 = commandLine21.getOptionObject("hi!"); java.lang.Object obj29 = commandLine21.getOptionObject("hi!"); gnuParser20.cmd = commandLine21; org.apache.commons.cli.Options options31 = null; org.apache.commons.cli.CommandLine commandLine32 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj34 = commandLine32.getParsedOptionValue(""); java.util.Properties properties36 = commandLine32.getOptionProperties("hi!"); java.lang.String[] strArray37 = commandLine32.getArgs(); java.lang.String[] strArray39 = gnuParser20.flatten(options31, strArray37, true); java.lang.String[] strArray41 = gnuParser18.flatten(options19, strArray39, true); org.apache.commons.cli.CommandLine commandLine43 = gnuParser0.parse(options17, strArray39, true); org.apache.commons.cli.Option option46 = new org.apache.commons.cli.Option("", "hi!"); char char47 = option46.getValueSeparator(); org.apache.commons.cli.OptionGroup optionGroup48 = options17.getOptionGroup(option46); java.lang.String str49 = options17.toString(); java.util.Collection collection50 = options17.getOptions(); org.apache.commons.cli.Option option54 = new org.apache.commons.cli.Option("", true, ""); java.lang.String str55 = option54.getLongOpt(); java.lang.String str56 = option54.getValue(); option54.addValueForProcessing("hi!"); org.apache.commons.cli.OptionGroup optionGroup59 = options17.getOptionGroup(option54); } ] [ long {} ]" + "'", str49, "[ Options: [ short {} ] [ long {} ]"); }
Code: protected void processProperties(Properties properties){if (properties == null){return;}for (Enumeration e = properties.propertyNames(); e.hasMoreElements();){String option = e.nextElement().toString();if (!cmd.hasOption(option)){Option opt = getOptions().getOption(option);String value = properties.getProperty(option);if (opt.hasArg()){if (opt.getValues() == null || opt.getValues().length == -1){try{;}catch (RuntimeException exp){}}}else if (!("yes".equalsIgnoreCase(value)|| "true".equalsIgnoreCase(value)|| "1".equalsIgnoreCase(value))){continue;};updateRequiredOptions(opt);}}}
tensor([[0.0297, 0.0132, 0.0614,  ..., 0.0242, 0.0689, 0.0156],
        [0.0358, 0.0119, 0.0637,  ..., 0.0217, 0.0839, 0.0122],
        [0.0310, 0.0126, 0.0560,  ..., 0.0220, 0.0807, 0.0155],
        ...,
        [0.0272, 0.0115, 0.0557,  ..., 0.0234, 0.0744, 0.0128],
        [0.0281, 0.0079, 0.0680,  ..., 0.0210, 0.0808, 0.0141],
        [0.0282, 0.0114, 0.0569,  ..., 0.0225, 0.0803, 0.0147]])