69166
Test: public void test112() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test112"); org.jsoup.select.Evaluator.IsLastOfType isLastOfType0 = new org.jsoup.select.Evaluator.IsLastOfType(); java.lang.String str1 = isLastOfType0.getPseudoClass(); java.lang.String str2 = isLastOfType0.toString(); int int3 = isLastOfType0.a; org.jsoup.select.Evaluator.AllElements allElements4 = new org.jsoup.select.Evaluator.AllElements(); java.lang.String str5 = allElements4.toString(); org.jsoup.nodes.Element element6 = null; org.jsoup.nodes.Element element7 = null; boolean boolean8 = allElements4.matches(element6, element7); org.jsoup.nodes.Element element9 = null; org.jsoup.nodes.Element element10 = null; boolean boolean11 = allElements4.matches(element9, element10); org.jsoup.select.Evaluator evaluator13 = org.jsoup.select.QueryParser.parse("nth-of-type"); org.jsoup.select.Evaluator.AllElements allElements14 = new org.jsoup.select.Evaluator.AllElements(); java.lang.String str15 = allElements14.toString(); java.util.regex.Pattern pattern17 = null; org.jsoup.select.Evaluator.AttributeWithValueMatching attributeWithValueMatching18 = new org.jsoup.select.Evaluator.AttributeWithValueMatching("nth-last-of-type", pattern17); org.jsoup.select.Evaluator.TagEndsWith tagEndsWith20 = new org.jsoup.select.Evaluator.TagEndsWith(""); org.jsoup.select.Evaluator.IsFirstOfType isFirstOfType21 = new org.jsoup.select.Evaluator.IsFirstOfType(); java.lang.String str22 = isFirstOfType21.toString(); org.jsoup.select.Evaluator.AllElements allElements23 = new org.jsoup.select.Evaluator.AllElements(); java.lang.String str24 = allElements23.toString(); org.jsoup.select.Evaluator.ContainsText containsText26 = new org.jsoup.select.Evaluator.ContainsText(""); org.jsoup.select.Evaluator[] evaluatorArray27 = new org.jsoup.select.Evaluator[] { containsText26 }; java.util.ArrayList<org.jsoup.select.Evaluator> evaluatorList28 = new java.util.ArrayList<org.jsoup.select.Evaluator>(); boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.jsoup.select.Evaluator>) evaluatorList28, evaluatorArray27); org.jsoup.select.CombiningEvaluator.And and30 = new org.jsoup.select.CombiningEvaluator.And((java.util.Collection<org.jsoup.select.Evaluator>) evaluatorList28); and30.updateNumEvaluators(); org.jsoup.select.Evaluator.ContainsText containsText33 = new org.jsoup.select.Evaluator.ContainsText(""); org.jsoup.select.Evaluator[] evaluatorArray34 = new org.jsoup.select.Evaluator[] { containsText33 }; java.util.ArrayList<org.jsoup.select.Evaluator> evaluatorList35 = new java.util.ArrayList<org.jsoup.select.Evaluator>(); boolean boolean36 = java.util.Collections.addAll((java.util.Collection<org.jsoup.select.Evaluator>) evaluatorList35, evaluatorArray34); org.jsoup.select.CombiningEvaluator.And and37 = new org.jsoup.select.CombiningEvaluator.And((java.util.Collection<org.jsoup.select.Evaluator>) evaluatorList35); org.jsoup.select.Evaluator.ContainsText containsText39 = new org.jsoup.select.Evaluator.ContainsText(""); org.jsoup.select.Evaluator[] evaluatorArray40 = new org.jsoup.select.Evaluator[] { containsText39 }; java.util.ArrayList<org.jsoup.select.Evaluator> evaluatorList41 = new java.util.ArrayList<org.jsoup.select.Evaluator>(); boolean boolean42 = java.util.Collections.addAll((java.util.Collection<org.jsoup.select.Evaluator>) evaluatorList41, evaluatorArray40); org.jsoup.select.CombiningEvaluator.And and43 = new org.jsoup.select.CombiningEvaluator.And((java.util.Collection<org.jsoup.select.Evaluator>) evaluatorList41); and37.replaceRightMostEvaluator((org.jsoup.select.Evaluator) and43); org.jsoup.select.Evaluator.AllElements allElements45 = new org.jsoup.select.Evaluator.AllElements(); java.lang.String str46 = allElements45.toString(); org.jsoup.nodes.Element element47 = null; org.jsoup.nodes.Element element48 = null; boolean boolean49 = allElements45.matches(element47, element48); org.jsoup.select.Evaluator.IndexGreaterThan indexGreaterThan51 = new org.jsoup.select.Evaluator.IndexGreaterThan((int) '4'); org.jsoup.select.Evaluator[] evaluatorArray52 = new org.jsoup.select.Evaluator[] { allElements14, attributeWithValueMatching18, tagEndsWith20, isFirstOfType21, allElements23, and30, and37, allElements45, indexGreaterThan51 }; java.util.ArrayList<org.jsoup.select.Evaluator> evaluatorList53 = new java.util.ArrayList<org.jsoup.select.Evaluator>(); boolean boolean54 = java.util.Collections.addAll((java.util.Collection<org.jsoup.select.Evaluator>) evaluatorList53, evaluatorArray52); org.jsoup.select.CombiningEvaluator.Or or55 = new org.jsoup.select.CombiningEvaluator.Or((java.util.Collection<org.jsoup.select.Evaluator>) evaluatorList53); org.jsoup.select.Evaluator.IsLastChild isLastChild56 = new org.jsoup.select.Evaluator.IsLastChild(); or55.add((org.jsoup.select.Evaluator) isLastChild56); org.jsoup.select.Evaluator evaluator58 = or55.rightMostEvaluator(); org.jsoup.select.Evaluator.IsOnlyChild isOnlyChild59 = new org.jsoup.select.Evaluator.IsOnlyChild(); java.lang.String str60 = isOnlyChild59.toString(); org.jsoup.select.Evaluator.IndexGreaterThan indexGreaterThan62 = new org.jsoup.select.Evaluator.IndexGreaterThan((int) '4'); java.lang.String str63 = indexGreaterThan62.toString(); org.jsoup.select.Evaluator[] evaluatorArray64 = new org.jsoup.select.Evaluator[] { isLastOfType0, allElements4, evaluator13, evaluator58, isOnlyChild59, indexGreaterThan62 }; org.jsoup.select.CombiningEvaluator.Or or65 = new org.jsoup.select.CombiningEvaluator.Or(evaluatorArray64); org.jsoup.nodes.Element element66 = null; org.jsoup.nodes.Element element67 = null; try { boolean boolean68 = or65.matches(element66, element67); } catch (java.lang.NullPointerException e) { } }
Code: public static Evaluator parse(String query) { QueryParser p = new QueryParser(query); return p.parse(); }
[[0.06305512 0.16839655 0.04506878 0.03791763 0.06630321 0.07258029
 0.07622863 0.09343852 0.03894182 0.0325961  0.06501915 0.06797474
 0.14812893 0.02435054]
[0.06623723 0.15985984 0.0458881  0.04700464 0.05569454 0.09788665
 0.074187   0.09696415 0.04277055 0.02790316 0.05222602 0.06138957
 0.14416993 0.0278187 ]
[0.04738112 0.18267006 0.0411588  0.03238159 0.06211551 0.08732403
 0.07891382 0.1176571  0.03463168 0.02626641 0.07471493 0.07566983
 0.1268335  0.01228163]
[0.04627252 0.1941783  0.03534131 0.02488407 0.06218205 0.09698822
 0.07997346 0.12507153 0.03366103 0.02177755 0.06006323 0.06832957
 0.1366054  0.01467181]
[0.05662712 0.16058642 0.03035928 0.0380687  0.05756551 0.0870131
 0.06896032 0.0964299  0.0517347  0.0341863  0.07270902 0.07537366
 0.15088986 0.01949609]
[0.06034449 0.13180137 0.04400387 0.04454354 0.06042993 0.08336032
 0.08211181 0.11263375 0.04961875 0.0356484  0.05948048 0.07123359
 0.13321769 0.03157197]
[0.0566534  0.16464812 0.04492477 0.03699733 0.06219703 0.08541518
 0.08305033 0.10436088 0.03873122 0.02648626 0.06733628 0.06698484
 0.13315406 0.02906033]
[0.06751727 0.13474603 0.04426073 0.04355524 0.06837268 0.07117899
 0.07224429 0.1213512  0.04088953 0.03447847 0.0724373  0.07734501
 0.13141835 0.02020492]
[0.06531768 0.14460978 0.03891076 0.05130779 0.05885103 0.06639326
 0.07862548 0.12049939 0.05203156 0.03032472 0.06856161 0.07029457
 0.12403859 0.03023375]
[0.05420227 0.1559391  0.03709444 0.04335236 0.05233552 0.08527812
 0.07692114 0.09387927 0.0444552  0.03671525 0.06307442 0.07589711
 0.155178   0.02567778]
[0.05768716 0.16561885 0.03792575 0.03794874 0.07064661 0.08262904
 0.07998741 0.10547175 0.03801167 0.03095403 0.06858815 0.07397661
 0.12964973 0.02090446]
[0.04592568 0.18533957 0.03665522 0.03214171 0.05822903 0.07214188
 0.07757728 0.11034885 0.04382329 0.02828668 0.06917799 0.06970476
 0.14998233 0.02066577]
[0.0558755  0.17308046 0.04093087 0.02889858 0.05022402 0.08712317
 0.0843095  0.1065554  0.03987621 0.02801244 0.06074164 0.06922553
 0.14895368 0.02619303]
[0.04631184 0.16318242 0.03912354 0.03302862 0.05911044 0.09146912
 0.08776692 0.09935862 0.03888529 0.0258091  0.06919292 0.09318292
 0.1325667  0.02101154]]