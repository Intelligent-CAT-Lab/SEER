64874
Test: public void test263() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test263"); com.fasterxml.jackson.core.JsonFactory jsonFactory0 = new com.fasterxml.jackson.core.JsonFactory(); com.fasterxml.jackson.core.Version version1 = jsonFactory0.version(); com.fasterxml.jackson.core.JsonGenerator.Feature feature2 = com.fasterxml.jackson.core.JsonGenerator.Feature.IGNORE_UNKNOWN; com.fasterxml.jackson.core.JsonFactory jsonFactory4 = jsonFactory0.configure(feature2, true); com.fasterxml.jackson.core.JsonParser.Feature feature5 = com.fasterxml.jackson.core.JsonParser.Feature.ALLOW_SINGLE_QUOTES; int int6 = feature5.getMask(); com.fasterxml.jackson.core.JsonFactory jsonFactory7 = jsonFactory4.enable(feature5); com.fasterxml.jackson.core.util.BufferRecycler bufferRecycler8 = jsonFactory7._getBufferRecycler(); com.fasterxml.jackson.core.JsonFactory jsonFactory10 = new com.fasterxml.jackson.core.JsonFactory(); com.fasterxml.jackson.core.Version version11 = jsonFactory10.version(); com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes12 = jsonFactory10.getCharacterEscapes(); com.fasterxml.jackson.core.JsonFactory jsonFactory13 = new com.fasterxml.jackson.core.JsonFactory(); boolean boolean14 = jsonFactory13.requiresCustomCodec(); com.fasterxml.jackson.core.JsonFactory jsonFactory16 = jsonFactory13.setRootValueSeparator("3.0"); com.fasterxml.jackson.core.JsonFactory.Feature feature17 = com.fasterxml.jackson.core.JsonFactory.Feature.CANONICALIZE_FIELD_NAMES; com.fasterxml.jackson.core.JsonFactory jsonFactory18 = jsonFactory13.disable(feature17); char[] charArray19 = com.fasterxml.jackson.core.io.CharTypes.copyHexChars(); com.fasterxml.jackson.core.JsonParser jsonParser22 = jsonFactory13.createParser(charArray19, (-1), 0); char[] charArray24 = new char[] { '4' }; com.fasterxml.jackson.core.JsonParser jsonParser25 = jsonFactory13.createParser(charArray24); com.fasterxml.jackson.core.JsonParser jsonParser28 = jsonFactory10.createParser(charArray24, (-648352352), (int) (byte) 10); bufferRecycler8.releaseCharBuffer(0, charArray24); com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer charsToNameCanonicalizer30 = com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.createRoot(); int int31 = charsToNameCanonicalizer30.bucketCount(); int int32 = charsToNameCanonicalizer30.maxCollisionLength(); com.fasterxml.jackson.core.io.IOContext iOContext34 = new com.fasterxml.jackson.core.io.IOContext(bufferRecycler8, (java.lang.Object) charsToNameCanonicalizer30, true); com.fasterxml.jackson.core.ObjectCodec objectCodec36 = null; java.io.Writer writer37 = null; com.fasterxml.jackson.core.json.WriterBasedJsonGenerator writerBasedJsonGenerator38 = new com.fasterxml.jackson.core.json.WriterBasedJsonGenerator(iOContext34, (-1973091261), objectCodec36, writer37); java.io.Writer writer39 = writerBasedJsonGenerator38._writer; com.fasterxml.jackson.core.JsonGenerator jsonGenerator42 = writerBasedJsonGenerator38.overrideStdFeatures((-648257699), 0); writerBasedJsonGenerator38.writeStartArray((-963161361)); com.fasterxml.jackson.core.JsonGenerator.Feature feature45 = com.fasterxml.jackson.core.JsonGenerator.Feature.WRITE_BIGDECIMAL_AS_PLAIN; boolean boolean46 = feature45.enabledByDefault(); boolean boolean47 = feature45.enabledByDefault(); com.fasterxml.jackson.core.JsonGenerator jsonGenerator48 = writerBasedJsonGenerator38.enable(feature45); writerBasedJsonGenerator38._checkStdFeatureChanges((-1708710363), (-1942516485)); com.fasterxml.jackson.core.json.DupDetector dupDetector52 = null; com.fasterxml.jackson.core.json.JsonWriteContext jsonWriteContext53 = com.fasterxml.jackson.core.json.JsonWriteContext.createRootContext(dupDetector52); com.fasterxml.jackson.core.json.JsonWriteContext jsonWriteContext54 = jsonWriteContext53.createChildObjectContext(); com.fasterxml.jackson.core.json.JsonWriteContext jsonWriteContext55 = jsonWriteContext53._child; com.fasterxml.jackson.core.json.DupDetector dupDetector56 = null; com.fasterxml.jackson.core.json.JsonWriteContext jsonWriteContext57 = jsonWriteContext55.withDupDetector(dupDetector56); com.fasterxml.jackson.core.json.DupDetector dupDetector58 = null; com.fasterxml.jackson.core.json.JsonWriteContext jsonWriteContext59 = jsonWriteContext57.withDupDetector(dupDetector58); com.fasterxml.jackson.core.JsonFactory jsonFactory60 = new com.fasterxml.jackson.core.JsonFactory(); boolean boolean61 = jsonFactory60.requiresCustomCodec(); com.fasterxml.jackson.core.JsonFactory jsonFactory63 = jsonFactory60.setRootValueSeparator("3.0"); jsonWriteContext59.setCurrentValue((java.lang.Object) jsonFactory60); com.fasterxml.jackson.core.JsonGenerator.Feature feature65 = com.fasterxml.jackson.core.JsonGenerator.Feature.AUTO_CLOSE_TARGET; com.fasterxml.jackson.core.JsonFactory jsonFactory67 = jsonFactory60.configure(feature65, false); java.io.Writer writer68 = null; com.fasterxml.jackson.core.JsonGenerator jsonGenerator69 = jsonFactory60.createGenerator(writer68); boolean boolean70 = jsonGenerator69.canOmitFields(); com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes71 = null; com.fasterxml.jackson.core.JsonGenerator jsonGenerator72 = jsonGenerator69.setCharacterEscapes(characterEscapes71); jsonGenerator69.writeNumberField("0.0", (long) (-648394152)); boolean boolean76 = jsonGenerator69.canOmitFields(); com.fasterxml.jackson.core.io.SerializedString serializedString78 = new com.fasterxml.jackson.core.io.SerializedString("0.0"); int int79 = serializedString78.charLength(); jsonGenerator69.writeString((com.fasterxml.jackson.core.SerializableString) serializedString78); writerBasedJsonGenerator38._writeFieldName((com.fasterxml.jackson.core.SerializableString) serializedString78, true); }
Code: public JsonGenerator disable(Feature f) { ; if (true) { ; } return this; }
tensor([[0.0518, 0.0687, 0.0804, 0.1804, 0.0698, 0.0290, 0.1397, 0.1346, 0.0698,
         0.0290, 0.0222, 0.0571, 0.0452, 0.0222],
        [0.0452, 0.0547, 0.0787, 0.2110, 0.0657, 0.0237, 0.1305, 0.1672, 0.0657,
         0.0237, 0.0188, 0.0544, 0.0419, 0.0188],
        [0.0413, 0.0582, 0.0809, 0.2006, 0.0823, 0.0201, 0.1192, 0.1707, 0.0823,
         0.0201, 0.0165, 0.0619, 0.0296, 0.0165],
        [0.0309, 0.0435, 0.0633, 0.2412, 0.0833, 0.0160, 0.1213, 0.1838, 0.0833,
         0.0160, 0.0175, 0.0558, 0.0265, 0.0175],
        [0.0541, 0.0816, 0.0727, 0.1447, 0.0842, 0.0304, 0.0936, 0.1561, 0.0842,
         0.0304, 0.0301, 0.0627, 0.0450, 0.0301],
        [0.0309, 0.0508, 0.0744, 0.2141, 0.0953, 0.0196, 0.1369, 0.1512, 0.0953,
         0.0196, 0.0117, 0.0596, 0.0289, 0.0117],
        [0.0294, 0.0377, 0.0563, 0.2309, 0.0718, 0.0132, 0.1694, 0.2200, 0.0718,
         0.0132, 0.0106, 0.0393, 0.0258, 0.0106],
        [0.0339, 0.0528, 0.0668, 0.1999, 0.0860, 0.0200, 0.1290, 0.2062, 0.0860,
         0.0200, 0.0146, 0.0414, 0.0288, 0.0146],
        [0.0541, 0.0816, 0.0727, 0.1447, 0.0842, 0.0304, 0.0936, 0.1561, 0.0842,
         0.0304, 0.0301, 0.0627, 0.0450, 0.0301],
        [0.0309, 0.0508, 0.0744, 0.2141, 0.0953, 0.0196, 0.1369, 0.1512, 0.0953,
         0.0196, 0.0117, 0.0596, 0.0289, 0.0117],
        [0.0356, 0.0463, 0.0886, 0.1602, 0.0888, 0.0273, 0.1366, 0.1518, 0.0888,
         0.0273, 0.0192, 0.0769, 0.0335, 0.0192],
        [0.0335, 0.0622, 0.0613, 0.2319, 0.0681, 0.0202, 0.1365, 0.1818, 0.0681,
         0.0202, 0.0185, 0.0482, 0.0310, 0.0185],
        [0.0539, 0.0599, 0.0775, 0.1730, 0.0833, 0.0272, 0.1305, 0.1399, 0.0833,
         0.0272, 0.0227, 0.0654, 0.0335, 0.0227],
        [0.0356, 0.0463, 0.0886, 0.1602, 0.0888, 0.0273, 0.1366, 0.1518, 0.0888,
         0.0273, 0.0192, 0.0769, 0.0335, 0.0192]])