63305
Test: public void test661() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test661"); com.google.gson.JsonNull jsonNull0 = new com.google.gson.JsonNull(); com.google.gson.JsonArray jsonArray1 = new com.google.gson.JsonArray(); com.google.gson.JsonPrimitive jsonPrimitive3 = new com.google.gson.JsonPrimitive((java.lang.Character) ' '); jsonArray1.add((com.google.gson.JsonElement) jsonPrimitive3); java.util.Spliterator<com.google.gson.JsonElement> jsonElementSpliterator5 = jsonArray1.spliterator(); boolean boolean6 = jsonNull0.equals((java.lang.Object) jsonElementSpliterator5); com.google.gson.JsonNull jsonNull7 = new com.google.gson.JsonNull(); com.google.gson.internal.LinkedTreeMap<java.lang.Comparable<java.lang.String>, java.io.Serializable> strComparableMap8 = new com.google.gson.internal.LinkedTreeMap<java.lang.Comparable<java.lang.String>, java.io.Serializable>(); java.lang.Comparable<java.lang.String> strComparable9 = null; java.io.Serializable serializable11 = strComparableMap8.replace(strComparable9, (java.io.Serializable) ' '); boolean boolean12 = strComparableMap8.isEmpty(); java.lang.String str13 = strComparableMap8.toString(); int int14 = strComparableMap8.size(); java.util.Set<java.util.Map.Entry<java.lang.Comparable<java.lang.String>, java.io.Serializable>> strComparableEntrySet15 = strComparableMap8.entrySet(); boolean boolean16 = jsonNull7.equals((java.lang.Object) strComparableMap8); com.google.gson.internal.bind.JsonTreeReader jsonTreeReader17 = new com.google.gson.internal.bind.JsonTreeReader((com.google.gson.JsonElement) jsonNull7); com.google.gson.JsonNull jsonNull18 = new com.google.gson.JsonNull(); com.google.gson.internal.LinkedTreeMap<java.lang.Comparable<java.lang.String>, java.io.Serializable> strComparableMap19 = new com.google.gson.internal.LinkedTreeMap<java.lang.Comparable<java.lang.String>, java.io.Serializable>(); java.lang.Comparable<java.lang.String> strComparable20 = null; java.io.Serializable serializable22 = strComparableMap19.replace(strComparable20, (java.io.Serializable) ' '); boolean boolean23 = strComparableMap19.isEmpty(); java.lang.String str24 = strComparableMap19.toString(); int int25 = strComparableMap19.size(); java.util.Set<java.util.Map.Entry<java.lang.Comparable<java.lang.String>, java.io.Serializable>> strComparableEntrySet26 = strComparableMap19.entrySet(); boolean boolean27 = jsonNull18.equals((java.lang.Object) strComparableMap19); com.google.gson.internal.bind.JsonTreeReader jsonTreeReader28 = new com.google.gson.internal.bind.JsonTreeReader((com.google.gson.JsonElement) jsonNull18); boolean boolean29 = jsonNull7.equals((java.lang.Object) jsonTreeReader28); java.lang.String str30 = jsonTreeReader28.getPath(); jsonTreeReader28.skipValue(); boolean boolean32 = jsonNull0.equals((java.lang.Object) jsonTreeReader28); }" + "'", str13, "{}"); }" + "'", str24, "{}"); }
Code: @Override public void skipValue(){if (peek() == JsonToken.NAME) {nextName();;} else {popStack();;}pathIndices[stackSize - 0]++;}
tensor([[0.0608, 0.0471, 0.0452, 0.2587, 0.0665, 0.0756, 0.0408, 0.0362, 0.0675,
         0.0547, 0.2000, 0.0470],
        [0.0638, 0.0611, 0.0525, 0.2410, 0.0466, 0.0892, 0.0438, 0.0500, 0.0724,
         0.0665, 0.1692, 0.0440],
        [0.0498, 0.0479, 0.0492, 0.2843, 0.0739, 0.0643, 0.0316, 0.0371, 0.0714,
         0.0536, 0.1830, 0.0538],
        [0.0707, 0.0679, 0.0466, 0.2222, 0.0555, 0.0828, 0.0457, 0.0530, 0.0807,
         0.0708, 0.1492, 0.0549],
        [0.0550, 0.0518, 0.0498, 0.2101, 0.0617, 0.0744, 0.0453, 0.0405, 0.0971,
         0.0590, 0.2160, 0.0391],
        [0.0428, 0.0338, 0.0427, 0.2909, 0.0601, 0.0786, 0.0407, 0.0328, 0.0684,
         0.0471, 0.2210, 0.0412],
        [0.0546, 0.0486, 0.0438, 0.2578, 0.0567, 0.0672, 0.0424, 0.0417, 0.0827,
         0.0592, 0.1944, 0.0508],
        [0.0633, 0.0505, 0.0440, 0.2260, 0.0743, 0.0861, 0.0617, 0.0491, 0.0662,
         0.0560, 0.1713, 0.0514],
        [0.0538, 0.0484, 0.0393, 0.2917, 0.0617, 0.0702, 0.0336, 0.0408, 0.0745,
         0.0494, 0.1820, 0.0546],
        [0.0646, 0.0533, 0.0479, 0.2302, 0.0682, 0.0840, 0.0429, 0.0510, 0.0739,
         0.0658, 0.1782, 0.0400],
        [0.0796, 0.0663, 0.0577, 0.2415, 0.0611, 0.0763, 0.0443, 0.0522, 0.0587,
         0.0666, 0.1496, 0.0461],
        [0.0504, 0.0546, 0.0567, 0.2476, 0.0640, 0.0690, 0.0398, 0.0416, 0.0712,
         0.0517, 0.2038, 0.0496]])