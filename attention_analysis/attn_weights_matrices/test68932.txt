68932
Test: public void test23() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test23"); java.nio.ByteBuffer byteBuffer0 = org.jsoup.helper.DataUtil.emptyByteBuffer(); org.jsoup.parser.Parser parser5 = org.jsoup.parser.Parser.xmlParser(); org.jsoup.nodes.Document document6 = org.jsoup.Jsoup.parse(":root", "hi!", parser5); try { org.jsoup.nodes.Document document7 = org.jsoup.helper.DataUtil.parseByteData(byteBuffer0, ":gt(1)", ":eq(100)", parser5); } catch (java.nio.BufferUnderflowException e) { } }
Code: static Document parseByteData(ByteBuffer byteData, String charsetName, String baseUri, Parser parser) { String docData; Document doc = null; if (charsetName == null) { docData = Charset.forName(defaultCharset).decode(byteData).toString(); doc = parser.parseInput(docData, baseUri); Element meta = doc.select("meta[http-equiv=content-type], meta[charset]").first(); if (meta != null) { String foundCharset = null; if (meta.hasAttr("http-equiv")) { foundCharset = getCharsetFromContentType(meta.attr("content")); } if (foundCharset == null && meta.hasAttr("charset")) { try { if (Charset.isSupported(meta.attr("charset"))) { foundCharset = meta.attr("charset"); } } catch (IllegalCharsetNameException e) { foundCharset = null; } } if (foundCharset != null && foundCharset.length() != 0 && !foundCharset.equals(defaultCharset)) { foundCharset = foundCharset.trim().replaceAll("[\"']", ""); charsetName = foundCharset; byteData.rewind(); docData = Charset.forName(foundCharset).decode(byteData).toString(); doc = null; } } } else { Validate.notEmpty(charsetName, "Must set charset arg to character set of file to parse. Set to null to attempt to detect from HTML"); docData = Charset.forName(charsetName).decode(byteData).toString(); } if (docData.length() > 0 && docData.charAt(0) == UNICODE_BOM) { byteData.rewind(); docData = Charset.forName(defaultCharset).decode(byteData).toString(); docData = docData.substring(1); charsetName = defaultCharset; doc = null; } if (doc == null) { doc = parser.parseInput(docData, baseUri); doc.outputSettings().charset(charsetName); } return doc; }
tensor([[0.0125, 0.0171, 0.0051,  ..., 0.0043, 0.0038, 0.0023],
        [0.0114, 0.0168, 0.0049,  ..., 0.0047, 0.0031, 0.0015],
        [0.0131, 0.0147, 0.0049,  ..., 0.0052, 0.0037, 0.0015],
        ...,
        [0.0143, 0.0174, 0.0050,  ..., 0.0044, 0.0032, 0.0017],
        [0.0142, 0.0185, 0.0051,  ..., 0.0056, 0.0036, 0.0013],
        [0.0131, 0.0143, 0.0047,  ..., 0.0070, 0.0041, 0.0017]])