100348
Test: public void testAddSeconds_int_dstOverlapSummer_addZero() { MutableDateTime test = new MutableDateTime(2011, 10, 30, 2, 30, 0, 0, DateTimeZone.forID("Europe/Berlin")); test.addSeconds(0); }
Code: public void addSeconds(final int seconds) { if (seconds != 0) { setMillis(getChronology().seconds().add(getMillis(), seconds)); } }
tensor([[0.0601, 0.0482, 0.0265, 0.0388, 0.0817, 0.0765, 0.1617, 0.1382, 0.0324,
         0.0329, 0.0765, 0.0741, 0.1028, 0.0248, 0.0248],
        [0.0466, 0.0394, 0.0229, 0.0251, 0.0852, 0.0756, 0.1541, 0.1804, 0.0279,
         0.0290, 0.0756, 0.0887, 0.1030, 0.0232, 0.0232],
        [0.0424, 0.0386, 0.0265, 0.0269, 0.0830, 0.0775, 0.1887, 0.1547, 0.0227,
         0.0294, 0.0775, 0.0931, 0.1064, 0.0162, 0.0162],
        [0.0366, 0.0315, 0.0228, 0.0272, 0.0826, 0.0783, 0.2111, 0.1521, 0.0225,
         0.0277, 0.0783, 0.0930, 0.1016, 0.0174, 0.0174],
        [0.0468, 0.0334, 0.0259, 0.0262, 0.0779, 0.0900, 0.1821, 0.1393, 0.0263,
         0.0327, 0.0900, 0.0992, 0.0915, 0.0193, 0.0193],
        [0.0596, 0.0512, 0.0371, 0.0295, 0.0892, 0.0862, 0.1040, 0.1184, 0.0405,
         0.0386, 0.0862, 0.0859, 0.1096, 0.0319, 0.0319],
        [0.0390, 0.0277, 0.0184, 0.0201, 0.0853, 0.0680, 0.2146, 0.1789, 0.0136,
         0.0273, 0.0680, 0.0937, 0.1236, 0.0110, 0.0110],
        [0.0625, 0.0379, 0.0314, 0.0291, 0.0797, 0.0746, 0.1676, 0.1269, 0.0300,
         0.0345, 0.0746, 0.0968, 0.1062, 0.0241, 0.0241],
        [0.0452, 0.0296, 0.0236, 0.0262, 0.0912, 0.0894, 0.1671, 0.1563, 0.0179,
         0.0338, 0.0894, 0.0979, 0.0987, 0.0168, 0.0168],
        [0.0469, 0.0454, 0.0295, 0.0290, 0.0853, 0.0780, 0.1580, 0.1482, 0.0367,
         0.0315, 0.0780, 0.0829, 0.0964, 0.0272, 0.0272],
        [0.0596, 0.0512, 0.0371, 0.0295, 0.0892, 0.0862, 0.1040, 0.1184, 0.0405,
         0.0386, 0.0862, 0.0859, 0.1096, 0.0319, 0.0319],
        [0.0419, 0.0361, 0.0297, 0.0256, 0.0777, 0.0830, 0.1418, 0.1450, 0.0248,
         0.0359, 0.0830, 0.1062, 0.1237, 0.0229, 0.0229],
        [0.0496, 0.0355, 0.0270, 0.0226, 0.0753, 0.0916, 0.1432, 0.1622, 0.0317,
         0.0277, 0.0916, 0.0905, 0.1051, 0.0232, 0.0232],
        [0.0422, 0.0376, 0.0286, 0.0327, 0.0936, 0.0927, 0.1595, 0.1222, 0.0291,
         0.0285, 0.0927, 0.0781, 0.1211, 0.0207, 0.0207],
        [0.0422, 0.0376, 0.0286, 0.0327, 0.0936, 0.0927, 0.1595, 0.1222, 0.0291,
         0.0285, 0.0927, 0.0781, 0.1211, 0.0207, 0.0207]])