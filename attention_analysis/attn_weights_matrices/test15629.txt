15629
Test: public void test080() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test080"); org.apache.commons.cli.GnuParser gnuParser0 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.Options options1 = new org.apache.commons.cli.Options(); java.lang.String[] strArray2 = new java.lang.String[] {}; java.util.Properties properties3 = null; org.apache.commons.cli.CommandLine commandLine5 = gnuParser0.parse(options1, strArray2, properties3, true); java.util.Properties properties6 = null; gnuParser0.processProperties(properties6); java.util.List list8 = gnuParser0.getRequiredOptions(); org.apache.commons.cli.CommandLine commandLine9 = gnuParser0.cmd; org.apache.commons.cli.Options options10 = gnuParser0.getOptions(); org.apache.commons.cli.Options options11 = new org.apache.commons.cli.Options(); boolean boolean13 = options11.hasOption(""); boolean boolean15 = options11.hasOption(""); org.apache.commons.cli.Options options20 = options11.addOption("", "", true, "hi!"); org.apache.commons.cli.Option option23 = new org.apache.commons.cli.Option("", ""); java.lang.String str24 = option23.getDescription(); java.lang.String str25 = option23.getDescription(); org.apache.commons.cli.OptionGroup optionGroup26 = options20.getOptionGroup(option23); java.util.List list27 = options20.helpOptions(); org.apache.commons.cli.GnuParser gnuParser28 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.Options options29 = new org.apache.commons.cli.Options(); java.lang.String[] strArray30 = new java.lang.String[] {}; java.util.Properties properties31 = null; org.apache.commons.cli.CommandLine commandLine33 = gnuParser28.parse(options29, strArray30, properties31, true); org.apache.commons.cli.Options options34 = new org.apache.commons.cli.Options(); boolean boolean36 = options34.hasOption(""); boolean boolean38 = options34.hasOption(""); java.lang.String[] strArray45 = new java.lang.String[] { "hi!", "hi!", "", "", "", "org.apache.commons.cli.MissingArgumentException: " }; org.apache.commons.cli.CommandLine commandLine47 = gnuParser28.parse(options34, strArray45, false); org.apache.commons.cli.GnuParser gnuParser48 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.Options options49 = new org.apache.commons.cli.Options(); java.lang.String[] strArray50 = new java.lang.String[] {}; java.util.Properties properties51 = null; org.apache.commons.cli.CommandLine commandLine53 = gnuParser48.parse(options49, strArray50, properties51, true); boolean boolean55 = options49.hasOption("org.apache.commons.cli.MissingArgumentException: "); org.apache.commons.cli.GnuParser gnuParser56 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.Options options57 = new org.apache.commons.cli.Options(); java.lang.String[] strArray58 = new java.lang.String[] {}; java.util.Properties properties59 = null; org.apache.commons.cli.CommandLine commandLine61 = gnuParser56.parse(options57, strArray58, properties59, true); org.apache.commons.cli.CommandLine commandLine62 = gnuParser28.parse(options49, strArray58); java.lang.String[] strArray64 = gnuParser0.flatten(options20, strArray58, false); }
Code: protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption){List tokens = new ArrayList();boolean eatTheRest = false;for (int i = 1; i < arguments.length; i++){String arg = arguments[i];if ("--".equals(arg)){eatTheRest = true;tokens.add("--");}else if ("-".equals(arg)){tokens.add("-");}else if (arg.startsWith("-")){String opt = Util.stripLeadingHyphens(arg);if (options.hasOption(opt)){tokens.add(arg);}else{if (options.hasOption(arg.substring(0, 2))){tokens.add(arg.substring(0, 2)); ; }else{eatTheRest = stopAtNonOption;;}}}else{tokens.add(arg);}if (true){for (i++; i < arguments.length; i++){tokens.add(arguments[i]);}}}return (String[]) tokens.toArray(new String[tokens.size()]);}
tensor([[0.0200, 0.0054, 0.0212,  ..., 0.1062, 0.0202, 0.0218],
        [0.0193, 0.0050, 0.0214,  ..., 0.0973, 0.0184, 0.0208],
        [0.0183, 0.0083, 0.0243,  ..., 0.0750, 0.0221, 0.0230],
        ...,
        [0.0203, 0.0082, 0.0233,  ..., 0.0829, 0.0268, 0.0189],
        [0.0210, 0.0078, 0.0240,  ..., 0.0791, 0.0209, 0.0202],
        [0.0162, 0.0069, 0.0194,  ..., 0.0955, 0.0230, 0.0216]])