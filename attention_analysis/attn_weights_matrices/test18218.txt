18218
Test: public void test386() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test386"); com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry0 = null; com.google.javascript.rhino.jstype.ObjectType objectType1 = null; com.google.javascript.rhino.jstype.JSType jSType2 = null; com.google.javascript.rhino.jstype.IndexedType indexedType3 = new com.google.javascript.rhino.jstype.IndexedType(jSTypeRegistry0, objectType1, jSType2); boolean boolean4 = indexedType3.isTheObjectType(); com.google.javascript.rhino.jstype.JSType jSType5 = indexedType3.indexType; java.lang.String[] strArray8 = new java.lang.String[] { "", "" }; java.util.LinkedHashSet<java.lang.String> strSet9 = new java.util.LinkedHashSet<java.lang.String>(); boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet9, strArray8); indexedType3.collectPropertyNames((java.util.Set<java.lang.String>) strSet9); java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable12 = indexedType3.getCtorExtendedInterfaces(); com.google.javascript.rhino.jstype.RecordType recordType13 = null; try { boolean boolean14 = com.google.javascript.rhino.jstype.RecordType.isSubtype((com.google.javascript.rhino.jstype.ObjectType) indexedType3, recordType13); } catch (java.lang.NullPointerException e) { } }
Code: static boolean isSubtype(ObjectType typeA, RecordType typeB){for (String property : typeB.properties.keySet()) {if (!typeA.hasProperty(property)) {return false;}JSType propA = typeA.getPropertyType(property);JSType propB = typeB.getPropertyType(property);if (!propA.isUnknownType() && !propB.isUnknownType()) {if (typeA.isPropertyTypeDeclared(property)) {if (!propA.isInvariant(propB)) {return true;}} else {if (!propA.isSubtype(propB)) {return false;}}}}return true;}
tensor([[0.0487, 0.0688, 0.0178,  ..., 0.0534, 0.0140, 0.0166],
        [0.0436, 0.0797, 0.0134,  ..., 0.0504, 0.0102, 0.0166],
        [0.0504, 0.0614, 0.0129,  ..., 0.0531, 0.0068, 0.0173],
        ...,
        [0.0476, 0.0516, 0.0176,  ..., 0.0474, 0.0114, 0.0166],
        [0.0570, 0.0770, 0.0146,  ..., 0.0459, 0.0085, 0.0195],
        [0.0547, 0.0731, 0.0177,  ..., 0.0437, 0.0115, 0.0168]])