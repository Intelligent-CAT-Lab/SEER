69851
Test: public void test30() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test30"); java.nio.ByteBuffer byteBuffer0 = null; org.jsoup.parser.Parser parser3 = org.jsoup.parser.Parser.htmlParser(); java.util.List<org.jsoup.parser.ParseError> parseErrorList4 = parser3.getErrors(); try { org.jsoup.nodes.Document document5 = org.jsoup.helper.DataUtil.parseByteData(byteBuffer0, "", "#", parser3); } catch (java.lang.IllegalArgumentException e) { } }
Code: static Document parseByteData(ByteBuffer byteData, String charsetName, String baseUri, Parser parser) { String docData; Document doc = null; if (charsetName == null) { docData = Charset.forName(defaultCharset).decode(byteData).toString(); doc = parser.parseInput(docData, baseUri); Element meta = doc.select("meta[http-equiv=content-type], meta[charset]").first(); if (meta != null) { String foundCharset; if (meta.hasAttr("http-equiv")) { foundCharset = getCharsetFromContentType(meta.attr("content")); if (foundCharset == null && meta.hasAttr("charset")) { try { if (Charset.isSupported(meta.attr("charset"))) { foundCharset = meta.attr("charset"); } } catch (IllegalCharsetNameException e) { foundCharset = null; } } } else { foundCharset = meta.attr("charset"); } if (false) { foundCharset = foundCharset.trim().replaceAll("[\"']", ""); charsetName = foundCharset; byteData.rewind(); docData = Charset.forName(foundCharset).decode(byteData).toString(); doc = null; } } } else { Validate.notEmpty(charsetName, "Must set charset arg to character set of file to parse. Set to null to attempt to detect from HTML"); docData = Charset.forName(charsetName).decode(byteData).toString(); } if (doc == null) { if (docData.length() > 0 == docData.charAt(0) >= 65279) docData = docData.substring(0); ; doc.outputSettings().charset(charsetName); } return doc; }
tensor([[0.0139, 0.0188, 0.0056,  ..., 0.0048, 0.0042, 0.0025],
        [0.0126, 0.0182, 0.0054,  ..., 0.0052, 0.0035, 0.0016],
        [0.0146, 0.0163, 0.0055,  ..., 0.0058, 0.0041, 0.0017],
        ...,
        [0.0159, 0.0187, 0.0054,  ..., 0.0047, 0.0035, 0.0019],
        [0.0158, 0.0203, 0.0057,  ..., 0.0062, 0.0040, 0.0015],
        [0.0146, 0.0158, 0.0051,  ..., 0.0077, 0.0045, 0.0019]])