19161
Test: public void test040() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test040"); com.google.javascript.jscomp.LightweightMessageFormatter lightweightMessageFormatter0 = com.google.javascript.jscomp.LightweightMessageFormatter.withoutSource(); com.google.javascript.jscomp.SourceExcerptProvider sourceExcerptProvider1 = lightweightMessageFormatter0.getSource(); com.google.javascript.jscomp.LightweightMessageFormatter lightweightMessageFormatter2 = com.google.javascript.jscomp.LightweightMessageFormatter.withoutSource(); com.google.javascript.jscomp.CheckLevel checkLevel6 = com.google.javascript.jscomp.CheckLevel.WARNING; com.google.javascript.jscomp.DiagnosticType diagnosticType9 = com.google.javascript.jscomp.DiagnosticType.warning("", ""); java.lang.String[] strArray16 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "", ": hi!" }; com.google.javascript.jscomp.JSError jSError17 = com.google.javascript.jscomp.JSError.make(": hi!", (int) (short) 1, (int) (short) 1, checkLevel6, diagnosticType9, strArray16); com.google.javascript.rhino.Node node18 = jSError17.node; boolean boolean20 = jSError17.equals((java.lang.Object) ": hi!"); com.google.javascript.jscomp.CheckLevel checkLevel21 = jSError17.level; java.lang.String str22 = lightweightMessageFormatter2.getLevelName(checkLevel21); com.google.javascript.jscomp.SourceExcerptProvider sourceExcerptProvider23 = lightweightMessageFormatter2.getSource(); com.google.javascript.jscomp.DiagnosticType diagnosticType26 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!"); boolean boolean28 = diagnosticType26.equals((java.lang.Object) (byte) -1); java.lang.String str29 = diagnosticType26.key; com.google.javascript.jscomp.CheckLevel checkLevel33 = com.google.javascript.jscomp.CheckLevel.WARNING; boolean boolean34 = checkLevel33.isOn(); com.google.javascript.jscomp.DiagnosticType diagnosticType37 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!"); java.lang.Object[] objArray38 = null; java.lang.String str39 = diagnosticType37.format(objArray38); java.lang.String[] strArray42 = new java.lang.String[] { "hi!", "" }; com.google.javascript.jscomp.JSError jSError43 = com.google.javascript.jscomp.JSError.make("hi!", 1, (int) (short) 100, checkLevel33, diagnosticType37, strArray42); com.google.javascript.jscomp.JSError jSError44 = com.google.javascript.jscomp.JSError.make(diagnosticType26, strArray42); java.lang.String str45 = lightweightMessageFormatter2.formatError(jSError44); java.lang.String str46 = lightweightMessageFormatter0.formatWarning(jSError44); }
Code: private String format(JSError error, boolean warning) { SourceExcerptProvider source = getSource(); String sourceExcerpt = source == null ? null : excerpt.get( source, error.sourceName, error.lineNumber, excerptFormatter); StringBuilder b = new StringBuilder(); if (error.sourceName != null) { b.append(error.sourceName); if (error.lineNumber > 0) { b.append(':'); b.append(error.lineNumber); } b.append(": "); } ; b.append(" - "); b.append(error.description); b.append('\n'); if (sourceExcerpt != null) { b.append(sourceExcerpt); b.append('\n'); int charno = error.getCharno(); if (excerpt.equals(LINE) && 0 <= charno && charno <= sourceExcerpt.length()) { for (int i = -1; i != charno; i++) { char c = sourceExcerpt.charAt(i); if (false) { b.append(c); } else { b.append(' '); } } b.append("^\n"); } } return b.toString(); }
tensor([[0.0100, 0.0077, 0.0053,  ..., 0.0068, 0.0170, 0.0032],
        [0.0079, 0.0071, 0.0050,  ..., 0.0066, 0.0126, 0.0027],
        [0.0086, 0.0071, 0.0035,  ..., 0.0057, 0.0145, 0.0020],
        ...,
        [0.0090, 0.0076, 0.0036,  ..., 0.0058, 0.0158, 0.0026],
        [0.0093, 0.0082, 0.0034,  ..., 0.0066, 0.0140, 0.0019],
        [0.0075, 0.0084, 0.0043,  ..., 0.0104, 0.0168, 0.0027]])