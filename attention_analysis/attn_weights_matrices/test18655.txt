18655
Test: public void test150() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test150"); com.google.javascript.jscomp.CheckLevel checkLevel3 = com.google.javascript.jscomp.CheckLevel.WARNING; com.google.javascript.jscomp.DiagnosticType diagnosticType6 = com.google.javascript.jscomp.DiagnosticType.warning("", ""); java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "", ": hi!" }; com.google.javascript.jscomp.JSError jSError14 = com.google.javascript.jscomp.JSError.make(": hi!", (int) (short) 1, (int) (short) 1, checkLevel3, diagnosticType6, strArray13); com.google.javascript.rhino.Node node15 = jSError14.node; java.lang.String str16 = jSError14.description; com.google.javascript.jscomp.LightweightMessageFormatter lightweightMessageFormatter17 = com.google.javascript.jscomp.LightweightMessageFormatter.withoutSource(); com.google.javascript.jscomp.CheckLevel checkLevel21 = com.google.javascript.jscomp.CheckLevel.WARNING; com.google.javascript.jscomp.DiagnosticType diagnosticType24 = com.google.javascript.jscomp.DiagnosticType.warning("", ""); java.lang.String[] strArray31 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "", ": hi!" }; com.google.javascript.jscomp.JSError jSError32 = com.google.javascript.jscomp.JSError.make(": hi!", (int) (short) 1, (int) (short) 1, checkLevel21, diagnosticType24, strArray31); com.google.javascript.rhino.Node node33 = jSError32.node; boolean boolean35 = jSError32.equals((java.lang.Object) ": hi!"); com.google.javascript.jscomp.CheckLevel checkLevel36 = jSError32.level; java.lang.String str37 = lightweightMessageFormatter17.getLevelName(checkLevel36); com.google.javascript.jscomp.CheckLevel checkLevel41 = com.google.javascript.jscomp.CheckLevel.WARNING; com.google.javascript.jscomp.DiagnosticType diagnosticType44 = com.google.javascript.jscomp.DiagnosticType.warning("", ""); java.lang.String[] strArray51 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "", ": hi!" }; com.google.javascript.jscomp.JSError jSError52 = com.google.javascript.jscomp.JSError.make(": hi!", (int) (short) 1, (int) (short) 1, checkLevel41, diagnosticType44, strArray51); com.google.javascript.rhino.Node node53 = jSError52.node; java.lang.String str54 = lightweightMessageFormatter17.formatError(jSError52); com.google.javascript.jscomp.SourceExcerptProvider sourceExcerptProvider55 = lightweightMessageFormatter17.getSource(); com.google.javascript.jscomp.CheckLevel checkLevel59 = com.google.javascript.jscomp.CheckLevel.WARNING; boolean boolean60 = checkLevel59.isOn(); com.google.javascript.jscomp.DiagnosticType diagnosticType63 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!"); java.lang.Object[] objArray64 = null; java.lang.String str65 = diagnosticType63.format(objArray64); java.lang.String[] strArray68 = new java.lang.String[] { "hi!", "" }; com.google.javascript.jscomp.JSError jSError69 = com.google.javascript.jscomp.JSError.make("hi!", 1, (int) (short) 100, checkLevel59, diagnosticType63, strArray68); java.lang.String str70 = jSError69.toString(); java.lang.String str71 = lightweightMessageFormatter17.formatWarning(jSError69); com.google.javascript.jscomp.CheckLevel checkLevel75 = com.google.javascript.jscomp.CheckLevel.WARNING; boolean boolean76 = checkLevel75.isOn(); com.google.javascript.jscomp.DiagnosticType diagnosticType79 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!"); java.lang.Object[] objArray80 = null; java.lang.String str81 = diagnosticType79.format(objArray80); java.lang.String[] strArray84 = new java.lang.String[] { "hi!", "" }; com.google.javascript.jscomp.JSError jSError85 = com.google.javascript.jscomp.JSError.make("hi!", 1, (int) (short) 100, checkLevel75, diagnosticType79, strArray84); java.lang.String str86 = lightweightMessageFormatter17.getLevelName(checkLevel75); boolean boolean87 = jSError14.equals((java.lang.Object) str86); java.lang.String str88 = jSError14.description; }
Code: private String format(JSError error, boolean warning) { SourceExcerptProvider source = getSource(); String sourceExcerpt = source == null ? null : excerpt.get( source, error.sourceName, error.lineNumber, excerptFormatter); StringBuilder b = new StringBuilder(); if (error.sourceName != null) { b.append(error.sourceName); if (error.lineNumber > 0) { b.append(':'); b.append(error.lineNumber); } b.append(": "); } ; b.append(" - "); b.append(error.description); b.append('\n'); if (sourceExcerpt != null) { b.append(sourceExcerpt); b.append('\n'); int charno = error.getCharno(); if (excerpt.equals(LINE) && charno <= sourceExcerpt.length()) { for (int i = -1; i != charno; i++) { char c = sourceExcerpt.charAt(i); if (Character.isWhitespace(c)) { b.append(c); } else { b.append(' '); } } b.append("^\n"); } } return b.toString(); }
tensor([[0.0103, 0.0080, 0.0055,  ..., 0.0071, 0.0176, 0.0033],
        [0.0082, 0.0074, 0.0052,  ..., 0.0069, 0.0131, 0.0028],
        [0.0089, 0.0073, 0.0036,  ..., 0.0059, 0.0149, 0.0021],
        ...,
        [0.0092, 0.0079, 0.0037,  ..., 0.0060, 0.0163, 0.0026],
        [0.0096, 0.0086, 0.0035,  ..., 0.0068, 0.0144, 0.0020],
        [0.0077, 0.0088, 0.0045,  ..., 0.0107, 0.0174, 0.0028]])