70253
Test: public void test063() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test063"); org.apache.commons.jxpath.ri.compiler.Constant constant1 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant3 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.NameAttributeTest nameAttributeTest4 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest((org.apache.commons.jxpath.ri.compiler.Expression) constant1, (org.apache.commons.jxpath.ri.compiler.Expression) constant3); org.apache.commons.jxpath.ri.compiler.Constant constant6 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant8 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.NameAttributeTest nameAttributeTest9 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest((org.apache.commons.jxpath.ri.compiler.Expression) constant6, (org.apache.commons.jxpath.ri.compiler.Expression) constant8); org.apache.commons.jxpath.ri.EvalContext evalContext10 = null; org.apache.commons.jxpath.ri.compiler.Constant constant12 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant14 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.NameAttributeTest nameAttributeTest15 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest((org.apache.commons.jxpath.ri.compiler.Expression) constant12, (org.apache.commons.jxpath.ri.compiler.Expression) constant14); org.apache.commons.jxpath.ri.compiler.Constant constant17 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant19 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.NameAttributeTest nameAttributeTest20 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest((org.apache.commons.jxpath.ri.compiler.Expression) constant17, (org.apache.commons.jxpath.ri.compiler.Expression) constant19); boolean boolean21 = nameAttributeTest9.equal(evalContext10, (org.apache.commons.jxpath.ri.compiler.Expression) constant12, (org.apache.commons.jxpath.ri.compiler.Expression) nameAttributeTest20); org.apache.commons.jxpath.ri.compiler.NameAttributeTest nameAttributeTest22 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest((org.apache.commons.jxpath.ri.compiler.Expression) constant3, (org.apache.commons.jxpath.ri.compiler.Expression) nameAttributeTest20); boolean boolean23 = nameAttributeTest20.computeContextDependent(); }
Code: protected boolean equal(EvalContext context,Expression left,Expression right){Object l = left.compute(context);Object r = right.compute(context);if (l instanceof InitialContext || l instanceof SelfContext) {;}if (r instanceof InitialContext || r instanceof SelfContext) {r = ((EvalContext) r).getSingleNodePointer();}if (l instanceof Collection) {;}if (r instanceof Collection) {r = ((Collection) r).iterator();}if ((l instanceof Iterator) && !(r instanceof Iterator)) {return contains((Iterator) l, r);}if (!(l instanceof Iterator) && (r instanceof Iterator)) {return contains((Iterator) r, l);}if (l instanceof Iterator && r instanceof Iterator) {return findMatch((Iterator) l, (Iterator) r);}return equal(l, r);}
tensor([[0.0171, 0.0300, 0.0151,  ..., 0.0089, 0.0243, 0.0206],
        [0.0173, 0.0367, 0.0160,  ..., 0.0119, 0.0322, 0.0221],
        [0.0195, 0.0280, 0.0152,  ..., 0.0083, 0.0292, 0.0251],
        ...,
        [0.0153, 0.0256, 0.0171,  ..., 0.0114, 0.0272, 0.0219],
        [0.0177, 0.0250, 0.0185,  ..., 0.0121, 0.0305, 0.0201],
        [0.0153, 0.0305, 0.0158,  ..., 0.0104, 0.0281, 0.0186]])