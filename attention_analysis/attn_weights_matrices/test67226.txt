67226
Test: public void test55() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test55"); com.fasterxml.jackson.core.JsonFactory jsonFactory0 = null; com.fasterxml.jackson.databind.ObjectMapper objectMapper1 = new com.fasterxml.jackson.databind.ObjectMapper(jsonFactory0); com.fasterxml.jackson.core.Base64Variant base64Variant2 = null; com.fasterxml.jackson.databind.ObjectReader objectReader3 = objectMapper1.reader(base64Variant2); com.fasterxml.jackson.core.FormatFeature[] formatFeatureArray4 = new com.fasterxml.jackson.core.FormatFeature[] {}; com.fasterxml.jackson.databind.ObjectReader objectReader5 = objectReader3.withoutFeatures(formatFeatureArray4); com.fasterxml.jackson.databind.type.TypeFactory typeFactory6 = objectReader5.getTypeFactory(); com.fasterxml.jackson.databind.JsonNode jsonNode7 = objectReader5.createArrayNode(); byte[] byteArray8 = new byte[] {}; try { boolean[] booleanArray11 = objectReader5.readValue(byteArray8, (int) (byte) -1, (int) '#'); } catch (java.lang.ArrayIndexOutOfBoundsException e) { } }
Code: public String toString() { return _raw.getName()+"<>"; }
[[0.13834542 0.17783463 0.18243757 0.1829625  0.15206861 0.1077357
 0.05861553]
[0.14027247 0.16313481 0.19822682 0.20153198 0.14112401 0.10420042
 0.05150951]
[0.09933335 0.2509822  0.16754533 0.18024288 0.14969894 0.1048923
 0.04730503]
[0.13405071 0.19984585 0.14149185 0.20822942 0.15522774 0.08656962
 0.07458481]
[0.10619327 0.23889089 0.1522251  0.2052804  0.15457596 0.08645914
 0.05637515]
[0.12711085 0.21111521 0.19533981 0.17745733 0.1284991  0.09503996
 0.06543771]
[0.09307213 0.17065956 0.19357696 0.21423876 0.19606003 0.08508691
 0.0473057 ]]