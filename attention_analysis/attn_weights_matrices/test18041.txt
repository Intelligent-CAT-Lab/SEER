18041
Test: public void test2() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test2"); com.google.javascript.jscomp.AbstractCompiler abstractCompiler0 = null; com.google.javascript.jscomp.CheckDebuggerStatement checkDebuggerStatement1 = new com.google.javascript.jscomp.CheckDebuggerStatement(abstractCompiler0); com.google.javascript.jscomp.NodeTraversal nodeTraversal2 = null; com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.IR.labelName("%="); boolean boolean5 = node4.isBlock(); com.google.javascript.jscomp.AbstractCompiler abstractCompiler6 = null; boolean boolean7 = com.google.javascript.jscomp.NodeUtil.nodeTypeMayHaveSideEffects(node4, abstractCompiler6); java.lang.String str8 = node4.toStringTree(); boolean boolean9 = node4.isVar(); com.google.javascript.rhino.Node node11 = com.google.javascript.rhino.IR.labelName("%="); com.google.javascript.rhino.Node node13 = com.google.javascript.rhino.IR.labelName("%="); boolean boolean14 = node13.isSetterDef(); boolean boolean15 = node13.hasMoreThanOneChild(); boolean boolean16 = node13.isLabel(); com.google.javascript.rhino.Node node18 = com.google.javascript.rhino.IR.labelName("%="); boolean boolean19 = node18.isSetterDef(); boolean boolean20 = node18.hasMoreThanOneChild(); boolean boolean21 = node18.isLabel(); com.google.javascript.jscomp.Scope.Var var22 = null; com.google.javascript.jscomp.JSModule jSModule24 = new com.google.javascript.jscomp.JSModule("%="); com.google.javascript.jscomp.AnalyzePrototypeProperties.LiteralProperty literalProperty25 = new com.google.javascript.jscomp.AnalyzePrototypeProperties.LiteralProperty(node4, node11, node13, node18, var22, jSModule24); com.google.javascript.jscomp.GoogleCodingConvention googleCodingConvention26 = new com.google.javascript.jscomp.GoogleCodingConvention(); boolean boolean28 = googleCodingConvention26.isConstantKey("%="); com.google.javascript.rhino.Node node31 = com.google.javascript.rhino.IR.labelName("%="); boolean boolean32 = node31.isSetterDef(); com.google.javascript.rhino.Node node34 = com.google.javascript.rhino.IR.labelName("%="); node34.setSourceFileForTesting("Unknown class name"); com.google.javascript.rhino.Node node37 = new com.google.javascript.rhino.Node(0, node31, node34); com.google.javascript.rhino.Node node39 = com.google.javascript.rhino.IR.labelName("%="); boolean boolean40 = node39.isBlock(); com.google.javascript.jscomp.AbstractCompiler abstractCompiler41 = null; boolean boolean42 = com.google.javascript.jscomp.NodeUtil.nodeTypeMayHaveSideEffects(node39, abstractCompiler41); java.lang.String str43 = node39.toStringTree(); boolean boolean44 = node39.isVar(); com.google.javascript.rhino.Node node46 = com.google.javascript.rhino.IR.labelName("%="); com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.IR.labelName("%="); boolean boolean49 = node48.isSetterDef(); boolean boolean50 = node48.hasMoreThanOneChild(); boolean boolean51 = node48.isLabel(); com.google.javascript.rhino.Node node53 = com.google.javascript.rhino.IR.labelName("%="); boolean boolean54 = node53.isSetterDef(); boolean boolean55 = node53.hasMoreThanOneChild(); boolean boolean56 = node53.isLabel(); com.google.javascript.jscomp.Scope.Var var57 = null; com.google.javascript.jscomp.JSModule jSModule59 = new com.google.javascript.jscomp.JSModule("%="); com.google.javascript.jscomp.AnalyzePrototypeProperties.LiteralProperty literalProperty60 = new com.google.javascript.jscomp.AnalyzePrototypeProperties.LiteralProperty(node39, node46, node48, node53, var57, jSModule59); java.lang.String str61 = googleCodingConvention26.extractClassNameIfRequire(node31, node53); boolean boolean62 = checkDebuggerStatement1.shouldTraverse(nodeTraversal2, node11, node53); boolean boolean63 = node53.isUnscopedQualifiedName(); com.google.javascript.jscomp.Compiler compiler64 = new com.google.javascript.jscomp.Compiler(); com.google.javascript.jscomp.CodingConvention codingConvention65 = null; compiler64.defaultCodingConvention = codingConvention65; boolean boolean67 = com.google.javascript.jscomp.NodeUtil.mayHaveSideEffects(node53, (com.google.javascript.jscomp.AbstractCompiler) compiler64); com.google.javascript.jscomp.CrossModuleMethodMotion.IdGenerator idGenerator68 = null; com.google.javascript.jscomp.CrossModuleMethodMotion crossModuleMethodMotion70 = new com.google.javascript.jscomp.CrossModuleMethodMotion((com.google.javascript.jscomp.AbstractCompiler) compiler64, idGenerator68, true); try { com.google.javascript.jscomp.Tracer tracer72 = compiler64.newTracer("%="); } catch (java.lang.NullPointerException e) { } }
Code: public boolean shouldTraverse(NodeTraversal t, Node n, Node parent) { String propName = processNonFunctionPrototypeAssign(n, parent); if (propName != null) { symbolStack.push( new NameContext( getNameInfoForName(propName, PROPERTY), null)); } return true; }
tensor([[0.0242, 0.0590, 0.0376, 0.0770, 0.0468, 0.0516, 0.0468, 0.0310, 0.0337,
         0.0309, 0.0758, 0.0153, 0.0567, 0.0383, 0.0654, 0.0284, 0.0134, 0.0128,
         0.0337, 0.0683, 0.0121, 0.0207, 0.0097, 0.0245, 0.0217, 0.0106, 0.0268,
         0.0165, 0.0106],
        [0.0170, 0.0902, 0.0328, 0.1197, 0.0532, 0.0464, 0.0532, 0.0228, 0.0416,
         0.0342, 0.0672, 0.0133, 0.0476, 0.0312, 0.0628, 0.0182, 0.0084, 0.0086,
         0.0416, 0.0633, 0.0075, 0.0210, 0.0063, 0.0203, 0.0137, 0.0078, 0.0278,
         0.0144, 0.0078],
        [0.0185, 0.0831, 0.0442, 0.1051, 0.0417, 0.0426, 0.0417, 0.0223, 0.0334,
         0.0410, 0.0704, 0.0110, 0.0567, 0.0322, 0.0906, 0.0187, 0.0090, 0.0101,
         0.0334, 0.0707, 0.0084, 0.0173, 0.0077, 0.0220, 0.0112, 0.0065, 0.0277,
         0.0164, 0.0065],
        [0.0211, 0.0768, 0.0406, 0.0964, 0.0520, 0.0483, 0.0520, 0.0310, 0.0396,
         0.0323, 0.0606, 0.0187, 0.0502, 0.0342, 0.0588, 0.0212, 0.0094, 0.0093,
         0.0396, 0.0742, 0.0104, 0.0176, 0.0102, 0.0190, 0.0182, 0.0074, 0.0263,
         0.0170, 0.0074],
        [0.0168, 0.0770, 0.0386, 0.0967, 0.0505, 0.0665, 0.0505, 0.0227, 0.0390,
         0.0323, 0.0578, 0.0158, 0.0553, 0.0267, 0.0609, 0.0170, 0.0122, 0.0092,
         0.0390, 0.0726, 0.0092, 0.0207, 0.0104, 0.0259, 0.0203, 0.0073, 0.0263,
         0.0155, 0.0073],
        [0.0202, 0.0668, 0.0441, 0.1015, 0.0441, 0.0624, 0.0441, 0.0190, 0.0427,
         0.0305, 0.0830, 0.0132, 0.0517, 0.0316, 0.0575, 0.0180, 0.0124, 0.0110,
         0.0427, 0.0616, 0.0099, 0.0240, 0.0094, 0.0201, 0.0182, 0.0091, 0.0261,
         0.0161, 0.0091],
        [0.0168, 0.0770, 0.0386, 0.0967, 0.0505, 0.0665, 0.0505, 0.0227, 0.0390,
         0.0323, 0.0578, 0.0158, 0.0553, 0.0267, 0.0609, 0.0170, 0.0122, 0.0092,
         0.0390, 0.0726, 0.0092, 0.0207, 0.0104, 0.0259, 0.0203, 0.0073, 0.0263,
         0.0155, 0.0073],
        [0.0207, 0.0907, 0.0369, 0.0939, 0.0537, 0.0515, 0.0537, 0.0188, 0.0430,
         0.0333, 0.0621, 0.0126, 0.0510, 0.0296, 0.0694, 0.0186, 0.0122, 0.0097,
         0.0430, 0.0680, 0.0096, 0.0176, 0.0072, 0.0180, 0.0192, 0.0088, 0.0243,
         0.0139, 0.0088],
        [0.0257, 0.0566, 0.0461, 0.0672, 0.0427, 0.0539, 0.0427, 0.0228, 0.0415,
         0.0374, 0.0638, 0.0214, 0.0604, 0.0391, 0.0443, 0.0223, 0.0183, 0.0166,
         0.0415, 0.0525, 0.0143, 0.0276, 0.0123, 0.0312, 0.0206, 0.0146, 0.0296,
         0.0184, 0.0146],
        [0.0246, 0.0801, 0.0426, 0.0959, 0.0372, 0.0556, 0.0372, 0.0234, 0.0385,
         0.0281, 0.0622, 0.0166, 0.0478, 0.0363, 0.0714, 0.0210, 0.0146, 0.0110,
         0.0385, 0.0635, 0.0105, 0.0250, 0.0108, 0.0255, 0.0216, 0.0096, 0.0251,
         0.0163, 0.0096],
        [0.0191, 0.1020, 0.0385, 0.0644, 0.0544, 0.0521, 0.0544, 0.0238, 0.0327,
         0.0332, 0.0710, 0.0119, 0.0476, 0.0347, 0.0772, 0.0260, 0.0130, 0.0097,
         0.0327, 0.0676, 0.0099, 0.0184, 0.0078, 0.0245, 0.0193, 0.0080, 0.0198,
         0.0184, 0.0080],
        [0.0283, 0.0590, 0.0376, 0.0527, 0.0429, 0.0541, 0.0429, 0.0316, 0.0316,
         0.0336, 0.0675, 0.0233, 0.0532, 0.0322, 0.0625, 0.0243, 0.0236, 0.0181,
         0.0316, 0.0571, 0.0133, 0.0292, 0.0123, 0.0327, 0.0266, 0.0138, 0.0310,
         0.0198, 0.0138],
        [0.0231, 0.0849, 0.0369, 0.1028, 0.0433, 0.0540, 0.0433, 0.0234, 0.0408,
         0.0331, 0.0658, 0.0132, 0.0441, 0.0323, 0.0657, 0.0203, 0.0135, 0.0111,
         0.0408, 0.0631, 0.0107, 0.0241, 0.0082, 0.0205, 0.0202, 0.0086, 0.0271,
         0.0163, 0.0086],
        [0.0199, 0.0601, 0.0467, 0.0801, 0.0458, 0.0530, 0.0458, 0.0281, 0.0462,
         0.0323, 0.0608, 0.0181, 0.0483, 0.0357, 0.0533, 0.0248, 0.0156, 0.0144,
         0.0462, 0.0518, 0.0114, 0.0263, 0.0144, 0.0261, 0.0230, 0.0118, 0.0259,
         0.0226, 0.0118],
        [0.0135, 0.0800, 0.0384, 0.1442, 0.0498, 0.0589, 0.0498, 0.0148, 0.0309,
         0.0295, 0.0741, 0.0108, 0.0540, 0.0297, 0.0769, 0.0160, 0.0055, 0.0051,
         0.0309, 0.0891, 0.0053, 0.0141, 0.0048, 0.0239, 0.0103, 0.0046, 0.0179,
         0.0127, 0.0046],
        [0.0204, 0.0748, 0.0415, 0.1159, 0.0468, 0.0464, 0.0468, 0.0236, 0.0384,
         0.0371, 0.0662, 0.0156, 0.0502, 0.0342, 0.0722, 0.0168, 0.0119, 0.0094,
         0.0384, 0.0580, 0.0103, 0.0233, 0.0069, 0.0201, 0.0139, 0.0081, 0.0283,
         0.0162, 0.0081],
        [0.0164, 0.0706, 0.0394, 0.1124, 0.0504, 0.0400, 0.0504, 0.0242, 0.0400,
         0.0412, 0.0791, 0.0138, 0.0553, 0.0371, 0.0661, 0.0205, 0.0071, 0.0085,
         0.0400, 0.0653, 0.0077, 0.0196, 0.0061, 0.0222, 0.0127, 0.0070, 0.0230,
         0.0170, 0.0070],
        [0.0176, 0.0942, 0.0400, 0.0764, 0.0436, 0.0571, 0.0436, 0.0294, 0.0406,
         0.0276, 0.0775, 0.0114, 0.0533, 0.0321, 0.0794, 0.0230, 0.0097, 0.0107,
         0.0406, 0.0631, 0.0072, 0.0223, 0.0066, 0.0255, 0.0173, 0.0062, 0.0213,
         0.0166, 0.0062],
        [0.0257, 0.0566, 0.0461, 0.0672, 0.0427, 0.0539, 0.0427, 0.0228, 0.0415,
         0.0374, 0.0638, 0.0214, 0.0604, 0.0391, 0.0443, 0.0223, 0.0183, 0.0166,
         0.0415, 0.0525, 0.0143, 0.0276, 0.0123, 0.0312, 0.0206, 0.0146, 0.0296,
         0.0184, 0.0146],
        [0.0211, 0.0612, 0.0396, 0.0998, 0.0450, 0.0524, 0.0450, 0.0247, 0.0425,
         0.0297, 0.0758, 0.0156, 0.0534, 0.0325, 0.0758, 0.0162, 0.0137, 0.0115,
         0.0425, 0.0591, 0.0097, 0.0213, 0.0076, 0.0235, 0.0173, 0.0082, 0.0315,
         0.0154, 0.0082],
        [0.0215, 0.0743, 0.0461, 0.0871, 0.0371, 0.0473, 0.0371, 0.0284, 0.0403,
         0.0376, 0.0646, 0.0171, 0.0450, 0.0325, 0.0722, 0.0246, 0.0142, 0.0119,
         0.0403, 0.0573, 0.0138, 0.0232, 0.0093, 0.0213, 0.0233, 0.0116, 0.0303,
         0.0193, 0.0116],
        [0.0174, 0.0750, 0.0400, 0.0785, 0.0558, 0.0510, 0.0558, 0.0239, 0.0394,
         0.0292, 0.0536, 0.0134, 0.0589, 0.0409, 0.0585, 0.0244, 0.0123, 0.0130,
         0.0394, 0.0661, 0.0095, 0.0232, 0.0113, 0.0286, 0.0207, 0.0083, 0.0288,
         0.0148, 0.0083],
        [0.0199, 0.0634, 0.0436, 0.1127, 0.0446, 0.0562, 0.0446, 0.0247, 0.0356,
         0.0347, 0.0788, 0.0129, 0.0522, 0.0324, 0.0589, 0.0205, 0.0114, 0.0104,
         0.0356, 0.0626, 0.0100, 0.0224, 0.0100, 0.0189, 0.0174, 0.0098, 0.0275,
         0.0187, 0.0098],
        [0.0210, 0.0885, 0.0391, 0.0797, 0.0455, 0.0505, 0.0455, 0.0261, 0.0377,
         0.0345, 0.0685, 0.0134, 0.0492, 0.0358, 0.0704, 0.0212, 0.0140, 0.0111,
         0.0377, 0.0591, 0.0104, 0.0226, 0.0092, 0.0227, 0.0199, 0.0106, 0.0287,
         0.0167, 0.0106],
        [0.0206, 0.0690, 0.0410, 0.0808, 0.0525, 0.0471, 0.0525, 0.0284, 0.0340,
         0.0347, 0.0567, 0.0186, 0.0478, 0.0372, 0.0564, 0.0251, 0.0125, 0.0122,
         0.0340, 0.0582, 0.0137, 0.0266, 0.0111, 0.0309, 0.0197, 0.0109, 0.0317,
         0.0249, 0.0109],
        [0.0166, 0.0590, 0.0414, 0.0964, 0.0629, 0.0465, 0.0629, 0.0289, 0.0403,
         0.0303, 0.0640, 0.0147, 0.0422, 0.0341, 0.0634, 0.0214, 0.0118, 0.0105,
         0.0403, 0.0494, 0.0093, 0.0262, 0.0091, 0.0221, 0.0211, 0.0088, 0.0355,
         0.0221, 0.0088],
        [0.0162, 0.0793, 0.0432, 0.1084, 0.0392, 0.0592, 0.0392, 0.0247, 0.0332,
         0.0342, 0.0723, 0.0159, 0.0655, 0.0303, 0.0657, 0.0215, 0.0102, 0.0094,
         0.0332, 0.0671, 0.0095, 0.0183, 0.0075, 0.0250, 0.0181, 0.0090, 0.0232,
         0.0127, 0.0090],
        [0.0189, 0.0899, 0.0436, 0.1001, 0.0395, 0.0507, 0.0395, 0.0228, 0.0374,
         0.0326, 0.0649, 0.0141, 0.0485, 0.0385, 0.0634, 0.0198, 0.0145, 0.0127,
         0.0374, 0.0656, 0.0112, 0.0250, 0.0105, 0.0247, 0.0154, 0.0078, 0.0251,
         0.0182, 0.0078],
        [0.0166, 0.0590, 0.0414, 0.0964, 0.0629, 0.0465, 0.0629, 0.0289, 0.0403,
         0.0303, 0.0640, 0.0147, 0.0422, 0.0341, 0.0634, 0.0214, 0.0118, 0.0105,
         0.0403, 0.0494, 0.0093, 0.0262, 0.0091, 0.0221, 0.0211, 0.0088, 0.0355,
         0.0221, 0.0088]])