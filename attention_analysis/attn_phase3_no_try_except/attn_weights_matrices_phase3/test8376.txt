8376
Test: public void test13() throws Throwable { CharRange charRange0 = CharRange.isNotIn(']', 'Y'); CharRange charRange1 = CharRange.isNot(']'); charRange0.contains(charRange1); CharRange charRange2 = CharRange.isNotIn('@', '>'); charRange2.iterator(); CharRange charRange3 = CharRange.is('Y'); Consumer<Character> consumer0 = (Consumer<Character>) mock(Consumer.class, new ViolatedAssumptionAnswer()); charRange3.forEach(consumer0); charRange3.spliterator(); charRange0.equals(charRange2); charRange0.isNegated(); charRange0.contains('&'); Object object0 = new Object(); charRange2.equals(object0); charRange2.contains(charRange1); charRange1.contains('q'); charRange1.getEnd(); CharRange charRange4 = CharRange.isNotIn('d', '&'); charRange4.toString(); charRange0.contains(charRange1); charRange0.spliterator(); charRange4.iterator(); charRange2.isNegated(); charRange0.getEnd(); CharRange.isNot(','); charRange2.iterator(); }
Code: public Iterator<Character> iterator() { return new CharacterIterator(this); }
[[0.1299093  0.18019524 0.10283579 0.14950335 0.14004123 0.06715821
 0.18019524 0.0501616 ]
[0.10591865 0.18082365 0.12924589 0.14557393 0.12796623 0.07856837
 0.18082365 0.05107968]
[0.10599936 0.18660018 0.10455333 0.18563923 0.14657073 0.04393274
 0.18660018 0.04010429]
[0.11933514 0.16409856 0.10500073 0.17445812 0.13961351 0.06910493
 0.16409856 0.06429044]
[0.09375029 0.20237502 0.10768828 0.1515929  0.14154923 0.05751713
 0.20237502 0.0431521 ]
[0.10555284 0.17675194 0.11727166 0.15573482 0.14751248 0.07268658
 0.17675194 0.04773775]
[0.10591865 0.18082365 0.12924589 0.14557393 0.12796623 0.07856837
 0.18082365 0.05107968]
[0.09002746 0.17363407 0.07896717 0.20091718 0.18782139 0.0502948
 0.17363407 0.0447039 ]]