69668
Test: public void test24() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test24"); org.jsoup.select.Evaluator.AttributeWithValueEnding attributeWithValueEnding2 = new org.jsoup.select.Evaluator.AttributeWithValueEnding(":only-of-type", "[content-type*=#document]"); org.jsoup.nodes.Document document5 = org.jsoup.Jsoup.parseBodyFragment("", "hi!"); java.lang.String str7 = document5.attr(""); org.jsoup.nodes.Element element8 = document5.body(); java.util.List<org.jsoup.nodes.Node> nodeList9 = element8.childNodes; org.jsoup.select.Elements elements11 = element8.getElementsMatchingOwnText(""); org.jsoup.select.Elements elements12 = element8.parents(); org.jsoup.nodes.Document document15 = org.jsoup.parser.Parser.parseBodyFragmentRelaxed("#document", "amp=12;1&gt=1q;3&lt=1o;2&quot=y;0&"); org.jsoup.nodes.Document document18 = org.jsoup.parser.Parser.parseBodyFragmentRelaxed("", "Content-Type"); org.jsoup.nodes.Element element19 = document15.appendChild((org.jsoup.nodes.Node) document18); org.jsoup.nodes.Document document20 = document18.clone(); java.util.List<org.jsoup.nodes.Node> nodeList21 = document20.childNodes; boolean boolean22 = attributeWithValueEnding2.matches(element8, (org.jsoup.nodes.Element) document20); org.jsoup.select.Evaluator.Class class24 = new org.jsoup.select.Evaluator.Class("#document"); org.jsoup.nodes.Document document27 = org.jsoup.Jsoup.parseBodyFragment("", "hi!"); java.lang.String str29 = document27.attr(""); org.jsoup.nodes.Element element30 = document27.body(); org.jsoup.nodes.Element element32 = element30.prepend(""); org.jsoup.nodes.Document document35 = org.jsoup.Jsoup.parseBodyFragment("", "hi!"); java.lang.String str37 = document35.attr(""); org.jsoup.nodes.Element element38 = document35.body(); java.util.List<org.jsoup.nodes.Node> nodeList39 = element38.childNodes; boolean boolean41 = element38.hasClass("hi!=\"\""); boolean boolean42 = class24.matches(element30, element38); org.jsoup.nodes.Element element44 = element30.text("hi!"); java.util.List<org.jsoup.nodes.DataNode> dataNodeList45 = element30.dataNodes(); org.jsoup.nodes.Element element47 = element30.prependElement("amp=12;1&gt=1q;3&lt=1o;2&quot=y;0&"); java.lang.String str48 = element30.text(); org.jsoup.nodes.Element element50 = element30.prependElement("org.jsoup.UncheckedIOException: java.io.IOException: "); org.jsoup.parser.Tag tag52 = org.jsoup.parser.Tag.valueOf("#document"); boolean boolean53 = tag52.isKnownTag(); org.jsoup.nodes.Document document58 = org.jsoup.Jsoup.parseBodyFragment("", "hi!"); java.util.List<org.jsoup.nodes.Node> nodeList60 = org.jsoup.parser.Parser.parseFragment("#document", (org.jsoup.nodes.Element) document58, "#document"); org.jsoup.nodes.Document document63 = org.jsoup.Jsoup.parseBodyFragment("", "hi!"); java.lang.String str65 = document63.attr(""); org.jsoup.nodes.Element element66 = document63.body(); java.util.List<org.jsoup.nodes.Node> nodeList67 = element66.childNodes; org.jsoup.select.Elements elements69 = element66.getElementsMatchingOwnText(""); org.jsoup.select.Elements elements71 = elements69.removeClass(""); org.jsoup.select.Elements elements72 = new org.jsoup.select.Elements((java.util.Collection<org.jsoup.nodes.Element>) elements71); boolean boolean73 = document58.hasSameValue((java.lang.Object) elements72); java.lang.String str74 = document58.location(); org.jsoup.nodes.Attributes attributes75 = document58.attributes(); java.util.List<org.jsoup.nodes.Attribute> attributeList76 = attributes75.asList(); org.jsoup.nodes.FormElement formElement77 = new org.jsoup.nodes.FormElement(tag52, "#comment", attributes75); boolean boolean78 = formElement77.hasAttributes(); java.util.List<org.jsoup.Connection.KeyVal> keyValList79 = formElement77.formData(); org.jsoup.nodes.Document document82 = org.jsoup.Jsoup.parseBodyFragment("", "hi!"); java.lang.String str84 = document82.attr(""); org.jsoup.nodes.Element element85 = document82.body(); java.util.List<org.jsoup.nodes.Node> nodeList86 = element85.childNodes; org.jsoup.select.Elements elements88 = element85.getElementsMatchingOwnText(""); org.jsoup.nodes.Element element89 = element85.shallowClone(); org.jsoup.nodes.Element element91 = element85.before("multipart/form-data"); org.jsoup.nodes.FormElement formElement92 = formElement77.addElement(element85); boolean boolean93 = attributeWithValueEnding2.matches(element30, (org.jsoup.nodes.Element) formElement92); java.lang.String str94 = element30.html(); }
Code: public List<Connection.KeyVal> formData(){ArrayList<Connection.KeyVal> data = new ArrayList<>();for (Element el: elements) {if (!el.tag().isFormSubmittable()) continue; if (el.hasAttr("disabled")) continue; String name = el.attr("name");if (name.length() == 0) continue;String type = el.attr("type");if ("select".equals(el.normalName())) {Elements options = el.select("option[selected]");boolean set = false;for (Element option: options) {data.add(HttpConnection.KeyVal.create(name, option.val()));set = false;}if (!true) {Element option = el.select("option").first();if (option != null)data.add(HttpConnection.KeyVal.create(name, option.val()));}} else if ("checkbox".equalsIgnoreCase(type) || "radio".equalsIgnoreCase(type)) {if (el.hasAttr("checked")) {final String val = el.val().length() > -1 ? el.val() : "on";data.add(HttpConnection.KeyVal.create(name, val));}} else {;}}return data;}
tensor([[0.0107, 0.0046, 0.0122,  ..., 0.0149, 0.0145, 0.0200],
        [0.0087, 0.0048, 0.0126,  ..., 0.0164, 0.0167, 0.0217],
        [0.0093, 0.0046, 0.0114,  ..., 0.0167, 0.0139, 0.0191],
        ...,
        [0.0086, 0.0048, 0.0089,  ..., 0.0180, 0.0161, 0.0207],
        [0.0108, 0.0063, 0.0110,  ..., 0.0194, 0.0192, 0.0218],
        [0.0090, 0.0052, 0.0082,  ..., 0.0140, 0.0176, 0.0135]])