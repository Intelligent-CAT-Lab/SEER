15821
Test: public void test083() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test083"); org.apache.commons.cli.PosixParser posixParser0 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine1 = posixParser0.cmd; org.apache.commons.cli.Options options2 = posixParser0.getOptions(); org.apache.commons.cli.Options options3 = new org.apache.commons.cli.Options(); java.util.List list4 = options3.helpOptions(); java.lang.String[] strArray6 = new java.lang.String[] { "" }; org.apache.commons.cli.CommandLine commandLine7 = posixParser0.parse(options3, strArray6); org.apache.commons.cli.Options options8 = posixParser0.getOptions(); org.apache.commons.cli.Options options9 = null; java.lang.String[] strArray10 = null; org.apache.commons.cli.PosixParser posixParser11 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine12 = posixParser11.cmd; org.apache.commons.cli.CommandLine commandLine13 = new org.apache.commons.cli.CommandLine(); java.lang.String str15 = commandLine13.getOptionValue("hi!"); posixParser11.cmd = commandLine13; org.apache.commons.cli.PosixParser posixParser17 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine18 = posixParser17.cmd; org.apache.commons.cli.Options options19 = posixParser17.getOptions(); org.apache.commons.cli.Options options20 = new org.apache.commons.cli.Options(); org.apache.commons.cli.PosixParser posixParser21 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine22 = posixParser21.cmd; org.apache.commons.cli.Options options23 = posixParser21.getOptions(); java.util.Properties properties24 = null; posixParser21.processProperties(properties24); org.apache.commons.cli.PosixParser posixParser26 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine27 = posixParser26.cmd; org.apache.commons.cli.Options options28 = posixParser26.getOptions(); org.apache.commons.cli.Options options29 = new org.apache.commons.cli.Options(); java.util.List list30 = options29.helpOptions(); java.lang.String[] strArray32 = new java.lang.String[] { "" }; org.apache.commons.cli.CommandLine commandLine33 = posixParser26.parse(options29, strArray32); java.lang.String[] strArray40 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!", "a" }; java.lang.String[] strArray42 = posixParser21.flatten(options29, strArray40, true); org.apache.commons.cli.CommandLine commandLine43 = posixParser17.parse(options20, strArray42); org.apache.commons.cli.PosixParser posixParser44 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine45 = posixParser44.cmd; org.apache.commons.cli.Options options46 = posixParser44.getOptions(); java.util.Properties properties47 = null; posixParser44.processProperties(properties47); org.apache.commons.cli.PosixParser posixParser49 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine50 = posixParser49.cmd; org.apache.commons.cli.Options options51 = posixParser49.getOptions(); org.apache.commons.cli.Options options52 = new org.apache.commons.cli.Options(); java.util.List list53 = options52.helpOptions(); java.lang.String[] strArray55 = new java.lang.String[] { "" }; org.apache.commons.cli.CommandLine commandLine56 = posixParser49.parse(options52, strArray55); java.lang.String[] strArray63 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!", "a" }; java.lang.String[] strArray65 = posixParser44.flatten(options52, strArray63, true); org.apache.commons.cli.CommandLine commandLine66 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj68 = commandLine66.getOptionObject('a'); commandLine66.addArg("org.apache.commons.cli.MissingArgumentException: a"); java.lang.String[] strArray72 = commandLine66.getOptionValues('#'); java.util.Properties properties74 = commandLine66.getOptionProperties(""); org.apache.commons.cli.CommandLine commandLine75 = posixParser11.parse(options20, strArray65, properties74); try { org.apache.commons.cli.CommandLine commandLine77 = posixParser0.parse(options9, strArray10, properties74, true); } catch (java.lang.NullPointerException e) { } }
Code: protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption){init();this.options = options;Iterator iter = Arrays.asList(arguments).iterator();while (iter.hasNext()){String token = (String) iter.next();if (token.startsWith("--")){int pos = token.indexOf('=');String opt = pos == -1 ? token : token.substring(0, pos); if (!options.hasOption(opt)){;}else{tokens.add(opt);if (pos != -1){tokens.add(token.substring(pos + 1));}}}else if ("-".equals(token)){tokens.add(token);}else if (token.startsWith("-")){if (token.length() == 0 || options.hasOption(token)){processOptionToken(token, stopAtNonOption);}else{burstToken(token, stopAtNonOption);}}else if (true){;}else{tokens.add(token);}gobble(iter);}return (String[]) tokens.toArray(new String[tokens.size()]);}
tensor([[0.0158, 0.0048, 0.0170,  ..., 0.0846, 0.0169, 0.0183],
        [0.0140, 0.0042, 0.0154,  ..., 0.0711, 0.0143, 0.0161],
        [0.0149, 0.0072, 0.0197,  ..., 0.0618, 0.0186, 0.0190],
        ...,
        [0.0168, 0.0072, 0.0194,  ..., 0.0695, 0.0227, 0.0161],
        [0.0157, 0.0065, 0.0179,  ..., 0.0609, 0.0163, 0.0155],
        [0.0124, 0.0061, 0.0150,  ..., 0.0754, 0.0188, 0.0175]])