27941
Test: public void test16() throws Throwable { TreeSet<ReverseRay> treeSet0 = new TreeSet<ReverseRay>(); LinkedList<ReverseRay> linkedList0 = new LinkedList<ReverseRay>(treeSet0); double[] doubleArray0 = new double[2]; doubleArray0[0] = 1234.0; Vector2D vector2D0 = Vector2D.of(doubleArray0); AffineTransformMatrix2D affineTransformMatrix2D0 = AffineTransformMatrix2D.createScale(vector2D0); Vector2D.Unit vector2D_Unit0 = affineTransformMatrix2D0.applyDirection(vector2D0); Line line0 = new Line(vector2D_Unit0, 0.5, (Precision.DoubleEquivalence) null); ReverseRay reverseRay0 = line0.reverseRayTo((-178.1218)); linkedList0.add(reverseRay0); RegionBSPTree2D regionBSPTree2D0 = RegionBSPTree2D.from((Iterable<? extends LineConvexSubset>) linkedList0, true); // Undeclared exception!  regionBSPTree2D0.getBoundaryPaths();   }
Code: public List<LinePath> getBoundaryPaths() { if (boundaryPaths == null) { boundaryPaths = Collections.unmodifiableList(computeBoundaryPaths()); } return boundaryPaths; }
[[0.05196612 0.07208751 0.07208751 0.06617832 0.13975522 0.07208751
 0.08285488 0.02831573 0.06617832 0.07208751 0.03249954 0.07208751
 0.02146021 0.05680633 0.07208751 0.02146021]
[0.04437857 0.074453   0.074453   0.06823491 0.10863416 0.074453
 0.0845229  0.03153992 0.06823491 0.074453   0.04724504 0.074453
 0.02334215 0.05380732 0.074453   0.02334215]
[0.04437857 0.074453   0.074453   0.06823491 0.10863416 0.074453
 0.0845229  0.03153992 0.06823491 0.074453   0.04724504 0.074453
 0.02334215 0.05380732 0.074453   0.02334215]
[0.05364431 0.07051426 0.07051426 0.0857158  0.09246141 0.07051426
 0.05752259 0.03479622 0.0857158  0.07051426 0.04463508 0.07051426
 0.03030806 0.06180701 0.07051426 0.03030806]
[0.03348725 0.07651044 0.07651044 0.07231048 0.18952885 0.07651044
 0.06792841 0.0127736  0.07231048 0.07651044 0.02636999 0.07651044
 0.01100061 0.04422702 0.07651044 0.01100061]
[0.04437857 0.074453   0.074453   0.06823491 0.10863416 0.074453
 0.0845229  0.03153992 0.06823491 0.074453   0.04724504 0.074453
 0.02334215 0.05380732 0.074453   0.02334215]
[0.03533205 0.05865782 0.05865782 0.08795506 0.19506003 0.05865782
 0.08804341 0.02300843 0.08795506 0.05865782 0.03641569 0.05865782
 0.01816997 0.05794343 0.05865782 0.01816997]
[0.03850243 0.06990942 0.06990942 0.08635233 0.17486906 0.06990942
 0.0722392  0.02388783 0.08635233 0.06990942 0.02489996 0.06990942
 0.01335019 0.04674    0.06990942 0.01335019]
[0.05364431 0.07051426 0.07051426 0.0857158  0.09246141 0.07051426
 0.05752259 0.03479622 0.0857158  0.07051426 0.04463508 0.07051426
 0.03030806 0.06180701 0.07051426 0.03030806]
[0.04437857 0.074453   0.074453   0.06823491 0.10863416 0.074453
 0.0845229  0.03153992 0.06823491 0.074453   0.04724504 0.074453
 0.02334215 0.05380732 0.074453   0.02334215]
[0.05372424 0.07600138 0.07600138 0.06026923 0.11884029 0.07600138
 0.06074136 0.03436548 0.06026923 0.07600138 0.04442589 0.07600138
 0.02623221 0.05889162 0.07600138 0.02623221]
[0.04437857 0.074453   0.074453   0.06823491 0.10863416 0.074453
 0.0845229  0.03153992 0.06823491 0.074453   0.04724504 0.074453
 0.02334215 0.05380732 0.074453   0.02334215]
[0.03605599 0.06755389 0.06755389 0.09194017 0.1389902  0.06755389
 0.0624216  0.02262454 0.09194017 0.06755389 0.03252541 0.06755389
 0.01981983 0.07853886 0.06755389 0.01981983]
[0.03673548 0.07508859 0.07508859 0.06801958 0.15396076 0.07508859
 0.07341392 0.02198312 0.06801958 0.07508859 0.03568284 0.07508859
 0.0188335  0.05398617 0.07508859 0.0188335 ]
[0.04437857 0.074453   0.074453   0.06823491 0.10863416 0.074453
 0.0845229  0.03153992 0.06823491 0.074453   0.04724504 0.074453
 0.02334215 0.05380732 0.074453   0.02334215]
[0.03605599 0.06755389 0.06755389 0.09194017 0.1389902  0.06755389
 0.0624216  0.02262454 0.09194017 0.06755389 0.03252541 0.06755389
 0.01981983 0.07853886 0.06755389 0.01981983]]