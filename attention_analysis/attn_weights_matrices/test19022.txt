19022
Test: public void test109() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test109"); com.google.javascript.rhino.Node node1 = null; com.google.javascript.jscomp.DiagnosticType diagnosticType4 = com.google.javascript.jscomp.DiagnosticType.warning(": hi!:1: ERROR - \n", ". hi! at (unknown source) line (unknown line) : (unknown column)"); com.google.javascript.jscomp.CheckLevel checkLevel5 = diagnosticType4.defaultLevel; com.google.javascript.jscomp.DiagnosticType diagnosticType8 = com.google.javascript.jscomp.DiagnosticType.error("hi!:1: WARNING - hi!\n", ""); com.google.javascript.jscomp.CheckLevel checkLevel15 = com.google.javascript.jscomp.CheckLevel.WARNING; com.google.javascript.jscomp.DiagnosticType diagnosticType18 = com.google.javascript.jscomp.DiagnosticType.warning("", ""); java.lang.String[] strArray25 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "", ": hi!" }; com.google.javascript.jscomp.JSError jSError26 = com.google.javascript.jscomp.JSError.make(": hi!", (int) (short) 1, (int) (short) 1, checkLevel15, diagnosticType18, strArray25); com.google.javascript.rhino.Node node27 = jSError26.node; boolean boolean29 = jSError26.equals((java.lang.Object) ": hi!"); com.google.javascript.jscomp.CheckLevel checkLevel30 = jSError26.level; java.lang.String str31 = jSError26.description; com.google.javascript.jscomp.DiagnosticType diagnosticType34 = com.google.javascript.jscomp.DiagnosticType.error(": hi!", "WARNING"); com.google.javascript.jscomp.CheckLevel checkLevel35 = diagnosticType34.defaultLevel; com.google.javascript.jscomp.LightweightMessageFormatter lightweightMessageFormatter36 = com.google.javascript.jscomp.LightweightMessageFormatter.withoutSource(); com.google.javascript.jscomp.CheckLevel checkLevel40 = com.google.javascript.jscomp.CheckLevel.WARNING; com.google.javascript.jscomp.DiagnosticType diagnosticType43 = com.google.javascript.jscomp.DiagnosticType.warning("", ""); java.lang.String[] strArray50 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "", ": hi!" }; com.google.javascript.jscomp.JSError jSError51 = com.google.javascript.jscomp.JSError.make(": hi!", (int) (short) 1, (int) (short) 1, checkLevel40, diagnosticType43, strArray50); com.google.javascript.rhino.Node node52 = jSError51.node; boolean boolean54 = jSError51.equals((java.lang.Object) ": hi!"); com.google.javascript.jscomp.CheckLevel checkLevel55 = jSError51.level; java.lang.String str56 = lightweightMessageFormatter36.getLevelName(checkLevel55); com.google.javascript.jscomp.CheckLevel checkLevel60 = com.google.javascript.jscomp.CheckLevel.WARNING; com.google.javascript.jscomp.DiagnosticType diagnosticType63 = com.google.javascript.jscomp.DiagnosticType.warning("", ""); java.lang.String[] strArray70 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "", ": hi!" }; com.google.javascript.jscomp.JSError jSError71 = com.google.javascript.jscomp.JSError.make(": hi!", (int) (short) 1, (int) (short) 1, checkLevel60, diagnosticType63, strArray70); com.google.javascript.rhino.Node node72 = jSError71.node; java.lang.String str73 = lightweightMessageFormatter36.formatError(jSError71); com.google.javascript.jscomp.SourceExcerptProvider sourceExcerptProvider74 = lightweightMessageFormatter36.getSource(); java.lang.String str75 = jSError26.format(checkLevel35, (com.google.javascript.jscomp.MessageFormatter) lightweightMessageFormatter36); com.google.javascript.jscomp.DiagnosticType diagnosticType78 = com.google.javascript.jscomp.DiagnosticType.warning(": hi!", "ERROR - hi!\n"); com.google.javascript.jscomp.CheckLevel checkLevel82 = com.google.javascript.jscomp.CheckLevel.WARNING; boolean boolean83 = checkLevel82.isOn(); com.google.javascript.jscomp.DiagnosticType diagnosticType86 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!"); java.lang.Object[] objArray87 = null; java.lang.String str88 = diagnosticType86.format(objArray87); java.lang.String[] strArray91 = new java.lang.String[] { "hi!", "" }; com.google.javascript.jscomp.JSError jSError92 = com.google.javascript.jscomp.JSError.make("hi!", 1, (int) (short) 100, checkLevel82, diagnosticType86, strArray91); com.google.javascript.jscomp.JSError jSError93 = com.google.javascript.jscomp.JSError.make("", (int) ' ', 100, checkLevel35, diagnosticType78, strArray91); try { com.google.javascript.jscomp.JSError jSError94 = com.google.javascript.jscomp.JSError.make(". hi! at (unknown source) line -5 : 17", node1, checkLevel5, diagnosticType8, strArray91); } catch (java.lang.NullPointerException e) { } }
Code: private String format(JSError error, boolean warning) { SourceExcerptProvider source = getSource(); String sourceExcerpt = source == null ? null : excerpt.get( source, error.sourceName, error.lineNumber, excerptFormatter); StringBuilder b = new StringBuilder(); if (error.sourceName != null) { b.append(error.sourceName); if (error.lineNumber > 0) { b.append(':'); b.append(error.lineNumber); } b.append(": "); } ; b.append(" - "); b.append(error.description); b.append('\n'); if (sourceExcerpt != null) { b.append(sourceExcerpt); b.append('\n'); int charno = error.getCharno(); if (false && charno <= sourceExcerpt.length()) { for (int i = -1; i != charno; i++) { char c = sourceExcerpt.charAt(i); if (Character.isWhitespace(c)) { b.append(c); } else { b.append(' '); } } b.append("^\n"); } } return b.toString(); }
tensor([[0.0100, 0.0079, 0.0054,  ..., 0.0069, 0.0172, 0.0032],
        [0.0080, 0.0072, 0.0051,  ..., 0.0067, 0.0127, 0.0027],
        [0.0084, 0.0071, 0.0035,  ..., 0.0057, 0.0142, 0.0020],
        ...,
        [0.0088, 0.0077, 0.0036,  ..., 0.0058, 0.0157, 0.0025],
        [0.0091, 0.0084, 0.0034,  ..., 0.0065, 0.0137, 0.0019],
        [0.0075, 0.0086, 0.0044,  ..., 0.0104, 0.0168, 0.0027]])