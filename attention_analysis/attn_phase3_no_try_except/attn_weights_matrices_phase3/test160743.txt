160743
Test: public void test2() throws Throwable { KeyedPooledObjectFactory<LinkedList<Object>, String> keyedPooledObjectFactory0 = (KeyedPooledObjectFactory<LinkedList<Object>, String>) mock(KeyedPooledObjectFactory.class, new ViolatedAssumptionAnswer()); GenericKeyedObjectPoolConfig<String> genericKeyedObjectPoolConfig0 = new GenericKeyedObjectPoolConfig<String>(); GenericKeyedObjectPoolConfig<Integer> genericKeyedObjectPoolConfig1 = new GenericKeyedObjectPoolConfig<Integer>(); GenericKeyedObjectPoolConfig<Integer> genericKeyedObjectPoolConfig2 = genericKeyedObjectPoolConfig1.clone(); Duration duration0 = genericKeyedObjectPoolConfig2.getMinEvictableIdleDuration(); duration0.compareTo(genericKeyedObjectPoolConfig0.DEFAULT_TIME_BETWEEN_EVICTION_RUNS); genericKeyedObjectPoolConfig0.setMaxTotal(8); genericKeyedObjectPoolConfig0.setMaxWait(duration0); GenericKeyedObjectPool<LinkedList<Object>, String> genericKeyedObjectPool0 = new GenericKeyedObjectPool<LinkedList<Object>, String>(keyedPooledObjectFactory0, genericKeyedObjectPoolConfig0); genericKeyedObjectPool0.updateStatsReturn(genericKeyedObjectPoolConfig0.DEFAULT_MAX_WAIT); genericKeyedObjectPool0.getMinIdlePerKey(); KeyedPooledObjectFactory<Object, Object> keyedPooledObjectFactory1 = (KeyedPooledObjectFactory<Object, Object>) mock(KeyedPooledObjectFactory.class, new ViolatedAssumptionAnswer()); GenericKeyedObjectPool<Object, Object> genericKeyedObjectPool1 = new GenericKeyedObjectPool<Object, Object>(keyedPooledObjectFactory1); genericKeyedObjectPool1.getTestWhileIdle(); genericKeyedObjectPool1.getLifo(); KeyedPooledObjectFactory<String, Object> keyedPooledObjectFactory2 = (KeyedPooledObjectFactory<String, Object>) mock(KeyedPooledObjectFactory.class, new ViolatedAssumptionAnswer()); GenericKeyedObjectPoolConfig<Object> genericKeyedObjectPoolConfig3 = new GenericKeyedObjectPoolConfig<Object>(); GenericKeyedObjectPoolConfig<Object> genericKeyedObjectPoolConfig4 = genericKeyedObjectPoolConfig3.clone(); genericKeyedObjectPoolConfig3.setFairness(false); GenericKeyedObjectPool<String, Object> genericKeyedObjectPool2 = new GenericKeyedObjectPool<String, Object>(keyedPooledObjectFactory2, genericKeyedObjectPoolConfig4); genericKeyedObjectPool2.getTestWhileIdle(); KeyedPooledObjectFactory<Integer, DefaultPooledObjectInfo> keyedPooledObjectFactory3 = (KeyedPooledObjectFactory<Integer, DefaultPooledObjectInfo>) mock(KeyedPooledObjectFactory.class, new ViolatedAssumptionAnswer()); GenericKeyedObjectPool<Integer, DefaultPooledObjectInfo> genericKeyedObjectPool3 = new GenericKeyedObjectPool<Integer, DefaultPooledObjectInfo>(keyedPooledObjectFactory3); genericKeyedObjectPool3.getDestroyedCount(); genericKeyedObjectPool3.clear(); KeyedPooledObjectFactory<Object, Integer> keyedPooledObjectFactory4 = (KeyedPooledObjectFactory<Object, Integer>) mock(KeyedPooledObjectFactory.class, new ViolatedAssumptionAnswer()); AbandonedConfig abandonedConfig0 = new AbandonedConfig(); AbandonedConfig abandonedConfig1 = AbandonedConfig.copy(abandonedConfig0); GenericKeyedObjectPool<Object, Integer> genericKeyedObjectPool4 = new GenericKeyedObjectPool<Object, Integer>(keyedPooledObjectFactory4, genericKeyedObjectPoolConfig2, abandonedConfig1); KeyedPooledObjectFactory<Object, Integer> keyedPooledObjectFactory5 = genericKeyedObjectPool4.getFactory(); GenericKeyedObjectPool<Object, Integer> genericKeyedObjectPool5 = new GenericKeyedObjectPool<Object, Integer>(keyedPooledObjectFactory5); }
Code: long getDestroyedCount(); /** * See {@link GenericKeyedObjectPool#getFairness()}
[[0.13640465 0.12781873 0.12781873 0.05659391 0.2957265  0.12781873
 0.12781873]
[0.12082127 0.12167798 0.12167798 0.07936922 0.31309757 0.12167799
 0.12167799]
[0.12082127 0.12167798 0.12167798 0.07936922 0.31309757 0.12167799
 0.12167799]
[0.13888034 0.11938646 0.11938646 0.12537442 0.25819942 0.11938646
 0.11938646]
[0.12385447 0.11702807 0.11702807 0.07462848 0.33340472 0.11702807
 0.11702807]
[0.12082127 0.12167798 0.12167798 0.07936922 0.31309757 0.12167799
 0.12167799]
[0.12082127 0.12167798 0.12167798 0.07936922 0.31309757 0.12167799
 0.12167799]]