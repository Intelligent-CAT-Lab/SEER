18219
Test: public void test205() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test205"); com.google.javascript.rhino.ErrorReporter errorReporter0 = null; com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true); jSTypeRegistry2.resetForTypeCheck(); com.google.javascript.rhino.Node node5 = com.google.javascript.rhino.IR.breakNode(); com.google.javascript.rhino.Node node6 = com.google.javascript.rhino.IR.breakNode(); com.google.javascript.rhino.Node node7 = null; com.google.javascript.jscomp.CodingConvention.Bind bind8 = new com.google.javascript.jscomp.CodingConvention.Bind(node5, node6, node7); boolean boolean9 = node6.isEmpty(); boolean boolean10 = node6.isNot(); node6.setVarArgs(false); com.google.javascript.rhino.Node node13 = node6.cloneNode(); boolean boolean14 = node13.isNoSideEffectsCall(); com.google.javascript.rhino.Node node15 = com.google.javascript.rhino.IR.breakNode(); com.google.javascript.rhino.Node node16 = com.google.javascript.rhino.IR.breakNode(); com.google.javascript.rhino.Node node17 = null; com.google.javascript.jscomp.CodingConvention.Bind bind18 = new com.google.javascript.jscomp.CodingConvention.Bind(node15, node16, node17); boolean boolean19 = node16.isEmpty(); boolean boolean20 = node16.isNot(); node16.setVarArgs(false); com.google.javascript.rhino.Node node23 = node16.cloneNode(); boolean boolean24 = node23.isNoSideEffectsCall(); com.google.javascript.rhino.Node node25 = node13.clonePropsFrom(node23); com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry26 = null; com.google.javascript.rhino.jstype.ObjectType objectType27 = null; com.google.javascript.rhino.jstype.JSType jSType28 = null; com.google.javascript.rhino.jstype.IndexedType indexedType29 = new com.google.javascript.rhino.jstype.IndexedType(jSTypeRegistry26, objectType27, jSType28); boolean boolean30 = indexedType29.isTheObjectType(); com.google.javascript.rhino.jstype.JSType jSType31 = indexedType29.indexType; com.google.javascript.rhino.jstype.EnumType enumType32 = jSTypeRegistry2.createEnumType("hi!", node23, (com.google.javascript.rhino.jstype.JSType) indexedType29); com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry33 = null; com.google.javascript.rhino.jstype.ObjectType objectType34 = null; com.google.javascript.rhino.jstype.JSType jSType35 = null; com.google.javascript.rhino.jstype.IndexedType indexedType36 = new com.google.javascript.rhino.jstype.IndexedType(jSTypeRegistry33, objectType34, jSType35); boolean boolean37 = indexedType36.isTheObjectType(); com.google.javascript.rhino.jstype.JSType jSType38 = indexedType36.indexType; java.lang.String[] strArray41 = new java.lang.String[] { "", "" }; java.util.LinkedHashSet<java.lang.String> strSet42 = new java.util.LinkedHashSet<java.lang.String>(); boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet42, strArray41); indexedType36.collectPropertyNames((java.util.Set<java.lang.String>) strSet42); try { boolean boolean45 = enumType32.isSubtype((com.google.javascript.rhino.jstype.JSType) indexedType36); } catch (java.lang.NullPointerException e) { } }
Code: static boolean isSubtype(ObjectType typeA, RecordType typeB){for (String property : typeB.properties.keySet()) {if (!typeA.hasProperty(property)) {return false;}JSType propA = typeA.getPropertyType(property);JSType propB = typeB.getPropertyType(property);if (!propA.isUnknownType() && !propB.isUnknownType()) {if (typeA.isPropertyTypeDeclared(property)) {if (!propA.isInvariant(propB)) {return true;}} else {if (!propA.isSubtype(propB)) {return false;}}}}return true;}
tensor([[0.0487, 0.0688, 0.0178,  ..., 0.0534, 0.0140, 0.0166],
        [0.0436, 0.0797, 0.0134,  ..., 0.0504, 0.0102, 0.0166],
        [0.0504, 0.0614, 0.0129,  ..., 0.0531, 0.0068, 0.0173],
        ...,
        [0.0476, 0.0516, 0.0176,  ..., 0.0474, 0.0114, 0.0166],
        [0.0570, 0.0770, 0.0146,  ..., 0.0459, 0.0085, 0.0195],
        [0.0547, 0.0731, 0.0177,  ..., 0.0437, 0.0115, 0.0168]])