63034
Test: public void test500() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test500"); com.google.gson.DefaultDateTypeAdapter defaultDateTypeAdapter2 = new com.google.gson.DefaultDateTypeAdapter((int) (byte) 0, 0); java.util.Date date3 = null; com.google.gson.JsonElement jsonElement4 = defaultDateTypeAdapter2.toJsonTree(date3); com.google.gson.TypeAdapter<java.util.Date> dateTypeAdapter5 = defaultDateTypeAdapter2.nullSafe(); java.util.Date date6 = null; com.google.gson.JsonElement jsonElement7 = defaultDateTypeAdapter2.toJsonTree(date6); com.google.gson.internal.bind.JsonTreeWriter jsonTreeWriter8 = new com.google.gson.internal.bind.JsonTreeWriter(); com.google.gson.stream.JsonWriter jsonWriter10 = jsonTreeWriter8.value(false); com.google.gson.stream.JsonWriter jsonWriter11 = jsonTreeWriter8.nullValue(); com.google.gson.stream.JsonWriter jsonWriter13 = jsonTreeWriter8.value(false); com.google.gson.JsonElement jsonElement14 = jsonTreeWriter8.get(); com.google.gson.internal.bind.JsonTreeReader jsonTreeReader15 = new com.google.gson.internal.bind.JsonTreeReader(jsonElement14); com.google.gson.internal.bind.JsonTreeReader jsonTreeReader16 = new com.google.gson.internal.bind.JsonTreeReader(jsonElement14); java.lang.String str17 = jsonTreeReader16.toString(); try { java.util.Date date18 = defaultDateTypeAdapter2.read((com.google.gson.stream.JsonReader) jsonTreeReader16); } catch (java.lang.IllegalStateException e) { } }
Code: public Date read(JsonReader in) throws IOException { if (in.peek() != JsonToken.STRING) { throw new JsonParseException("The date should be a string value"); } Date date = deserializeToDate(in.nextString()); if (dateType == Date.class) { return date; } else if (dateType == Timestamp.class) { return new Timestamp(date.getTime()); } else if (dateType == java.sql.Date.class) { return new java.sql.Date(date.getTime()); } else { throw new AssertionError(); } }
tensor([[0.0125, 0.0063, 0.0167,  ..., 0.0147, 0.0057, 0.0057],
        [0.0106, 0.0058, 0.0163,  ..., 0.0164, 0.0040, 0.0040],
        [0.0084, 0.0045, 0.0139,  ..., 0.0158, 0.0044, 0.0044],
        ...,
        [0.0122, 0.0061, 0.0202,  ..., 0.0162, 0.0072, 0.0072],
        [0.0084, 0.0039, 0.0201,  ..., 0.0141, 0.0047, 0.0047],
        [0.0084, 0.0039, 0.0201,  ..., 0.0141, 0.0047, 0.0047]])