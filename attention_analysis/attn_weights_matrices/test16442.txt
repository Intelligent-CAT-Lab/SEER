16442
Test: public void test082() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test082"); org.apache.commons.cli.PosixParser posixParser0 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine1 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj3 = commandLine1.getParsedOptionValue(""); java.util.Properties properties5 = commandLine1.getOptionProperties("hi!"); posixParser0.processProperties(properties5); org.apache.commons.cli.GnuParser gnuParser7 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.Options options8 = new org.apache.commons.cli.Options(); org.apache.commons.cli.GnuParser gnuParser9 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.CommandLine commandLine10 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj12 = commandLine10.getParsedOptionValue(""); java.util.Properties properties14 = commandLine10.getOptionProperties("hi!"); java.lang.Object obj16 = commandLine10.getOptionObject("hi!"); java.lang.Object obj18 = commandLine10.getOptionObject("hi!"); gnuParser9.cmd = commandLine10; org.apache.commons.cli.Options options20 = null; org.apache.commons.cli.CommandLine commandLine21 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj23 = commandLine21.getParsedOptionValue(""); java.util.Properties properties25 = commandLine21.getOptionProperties("hi!"); java.lang.String[] strArray26 = commandLine21.getArgs(); java.lang.String[] strArray28 = gnuParser9.flatten(options20, strArray26, true); java.lang.String[] strArray30 = gnuParser7.flatten(options8, strArray28, true); java.util.Collection collection31 = options8.getOptionGroups(); org.apache.commons.cli.Option option33 = options8.getOption("arg"); boolean boolean35 = options8.hasOption("[ option: [ARG] :: hi! ]"); org.apache.commons.cli.GnuParser gnuParser36 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.Options options37 = gnuParser36.getOptions(); org.apache.commons.cli.Options options38 = gnuParser36.getOptions(); org.apache.commons.cli.CommandLine commandLine39 = new org.apache.commons.cli.CommandLine(); gnuParser36.cmd = commandLine39; org.apache.commons.cli.CommandLine commandLine41 = gnuParser36.cmd; org.apache.commons.cli.Options options42 = null; org.apache.commons.cli.GnuParser gnuParser43 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.CommandLine commandLine44 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj46 = commandLine44.getParsedOptionValue(""); java.util.Properties properties48 = commandLine44.getOptionProperties("hi!"); java.lang.Object obj50 = commandLine44.getOptionObject("hi!"); java.lang.Object obj52 = commandLine44.getOptionObject("hi!"); gnuParser43.cmd = commandLine44; org.apache.commons.cli.CommandLine commandLine54 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj56 = commandLine54.getParsedOptionValue(""); java.util.Properties properties58 = commandLine54.getOptionProperties("hi!"); gnuParser43.processProperties(properties58); org.apache.commons.cli.Options options60 = new org.apache.commons.cli.Options(); org.apache.commons.cli.GnuParser gnuParser61 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.Options options62 = new org.apache.commons.cli.Options(); org.apache.commons.cli.GnuParser gnuParser63 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.CommandLine commandLine64 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj66 = commandLine64.getParsedOptionValue(""); java.util.Properties properties68 = commandLine64.getOptionProperties("hi!"); java.lang.Object obj70 = commandLine64.getOptionObject("hi!"); java.lang.Object obj72 = commandLine64.getOptionObject("hi!"); gnuParser63.cmd = commandLine64; org.apache.commons.cli.Options options74 = null; org.apache.commons.cli.CommandLine commandLine75 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj77 = commandLine75.getParsedOptionValue(""); java.util.Properties properties79 = commandLine75.getOptionProperties("hi!"); java.lang.String[] strArray80 = commandLine75.getArgs(); java.lang.String[] strArray82 = gnuParser63.flatten(options74, strArray80, true); java.lang.String[] strArray84 = gnuParser61.flatten(options62, strArray82, true); org.apache.commons.cli.CommandLine commandLine86 = gnuParser43.parse(options60, strArray82, true); java.lang.String[] strArray88 = gnuParser36.flatten(options42, strArray82, false); java.lang.String[] strArray90 = posixParser0.flatten(options8, strArray88, true); org.apache.commons.cli.Options options91 = new org.apache.commons.cli.Options(); org.apache.commons.cli.CommandLine commandLine92 = new org.apache.commons.cli.CommandLine(); org.apache.commons.cli.Option[] optionArray93 = commandLine92.getOptions(); java.lang.String[] strArray94 = commandLine92.getArgs(); java.lang.String[] strArray96 = posixParser0.flatten(options91, strArray94, false); }
Code: protected void processProperties(Properties properties) throws ParseException { if (properties == null) { return; } for (Enumeration e = properties.propertyNames(); e.hasMoreElements();) { String option = e.nextElement().toString(); Option opt = options.getOption(option); if (false) { throw new UnrecognizedOptionException("Default option wasn't defined", option); } OptionGroup group = options.getOptionGroup(opt); boolean selected = group != null && group.getSelected() != null; if (!cmd.hasOption(option) && !selected) { String value = properties.getProperty(option); if (opt.hasArg()) { if (true || opt.getValues().length == 0) { try { opt.addValueForProcessing(value); } catch (RuntimeException exp) { } } } else if (!("yes".equalsIgnoreCase(value) || "true".equalsIgnoreCase(value))) { continue; } ; updateRequiredOptions(opt); } } }
tensor([[0.0128, 0.0052, 0.0237,  ..., 0.0023, 0.0023, 0.0023],
        [0.0153, 0.0049, 0.0258,  ..., 0.0029, 0.0029, 0.0029],
        [0.0132, 0.0049, 0.0217,  ..., 0.0029, 0.0029, 0.0029],
        ...,
        [0.0124, 0.0047, 0.0277,  ..., 0.0026, 0.0026, 0.0026],
        [0.0124, 0.0047, 0.0277,  ..., 0.0026, 0.0026, 0.0026],
        [0.0124, 0.0047, 0.0277,  ..., 0.0026, 0.0026, 0.0026]])