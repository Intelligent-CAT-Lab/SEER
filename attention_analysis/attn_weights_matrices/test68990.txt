68990
Test: public void test647() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test647"); org.jsoup.parser.XmlTreeBuilder xmlTreeBuilder0 = new org.jsoup.parser.XmlTreeBuilder(); org.jsoup.parser.ParseErrorList parseErrorList4 = org.jsoup.parser.ParseErrorList.tracking((int) '\uffff'); xmlTreeBuilder0.initialiseParse("", "[]", parseErrorList4); org.jsoup.parser.Token.EndTag endTag6 = new org.jsoup.parser.Token.EndTag(); boolean boolean7 = endTag6.isCharacter(); boolean boolean8 = endTag6.isStartTag(); xmlTreeBuilder0.currentToken = endTag6; org.jsoup.parser.XmlTreeBuilder xmlTreeBuilder10 = new org.jsoup.parser.XmlTreeBuilder(); org.jsoup.parser.ParseErrorList parseErrorList14 = org.jsoup.parser.ParseErrorList.tracking((int) '\uffff'); xmlTreeBuilder10.initialiseParse("", "[]", parseErrorList14); org.jsoup.parser.Token.EndTag endTag16 = new org.jsoup.parser.Token.EndTag(); boolean boolean17 = endTag16.isCharacter(); boolean boolean18 = endTag16.isStartTag(); xmlTreeBuilder10.currentToken = endTag16; org.jsoup.parser.Token.Character character21 = new org.jsoup.parser.Token.Character(""); java.lang.String str22 = character21.getData(); xmlTreeBuilder10.insert(character21); org.jsoup.parser.Token.Character character25 = new org.jsoup.parser.Token.Character(""); java.lang.String str26 = character25.toString(); xmlTreeBuilder10.insert(character25); xmlTreeBuilder0.insert(character25); org.jsoup.parser.Token.Comment comment29 = new org.jsoup.parser.Token.Comment(); xmlTreeBuilder0.insert(comment29); }
Code: public String toString() { return tagName; }
tensor([[0.1246, 0.1598, 0.1630, 0.1668, 0.1372, 0.1953, 0.0532],
        [0.1302, 0.1510, 0.1822, 0.1896, 0.1313, 0.1675, 0.0483],
        [0.0880, 0.2171, 0.1436, 0.1642, 0.1329, 0.2114, 0.0428],
        [0.1213, 0.1795, 0.1268, 0.1904, 0.1402, 0.1740, 0.0679],
        [0.0931, 0.2009, 0.1262, 0.1875, 0.1342, 0.2069, 0.0511],
        [0.0873, 0.1903, 0.1475, 0.2034, 0.1397, 0.1748, 0.0569],
        [0.0832, 0.1524, 0.1690, 0.2025, 0.1784, 0.1705, 0.0441]])