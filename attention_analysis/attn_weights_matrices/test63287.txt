63287
Test: public void testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter() { Gson gson = new GsonBuilder() .registerTypeAdapter(Part.class, new TypeAdapter<Part>() { @Override public void write(JsonWriter out, Part part) throws IOException { throw new } @Override public Part read(JsonReader in) throws IOException { throw new } }).create(); String json = gson.toJson(new Gadget(new Part("screen"))); Gadget gadget = gson.fromJson("{'part':'screen'}", Gadget.class); }
Code: public void write(JsonWriter out, Boolean value){if (value == null) {;return;}out.value(value);}
[[0.07940458 0.06935117 0.07254662 0.08324997 0.23977616 0.06193627
 0.06471587 0.11351591 0.03706834 0.17843512]
[0.06337457 0.06445881 0.06824028 0.12310605 0.2054679  0.0516493
 0.06223286 0.08537925 0.03173256 0.24435842]
[0.08487006 0.0585017  0.08978671 0.09131131 0.23278911 0.05516144
 0.06804805 0.08710942 0.02985367 0.20256853]
[0.06862506 0.06914006 0.08478597 0.08247018 0.21601163 0.06073229
 0.07754526 0.10471113 0.04383358 0.19214478]
[0.08231638 0.06260218 0.07461619 0.10374318 0.21505952 0.05427212
 0.06960365 0.10503173 0.03945496 0.1933001 ]
[0.07118221 0.05673564 0.07253167 0.10557427 0.2514885  0.05438209
 0.06793038 0.09347507 0.03660511 0.19009513]
[0.0734006  0.0640879  0.08046165 0.09718345 0.21324451 0.05273778
 0.07865813 0.1145227  0.03538123 0.19032207]
[0.04885735 0.06340668 0.05972172 0.07335407 0.25801256 0.04240185
 0.07417759 0.11219581 0.03096525 0.23690712]
[0.06555849 0.04993123 0.06845653 0.08948333 0.2561778  0.04993311
 0.07147677 0.11282355 0.03619625 0.19996291]
[0.07754551 0.0755175  0.07851937 0.0939573  0.19331366 0.05752242
 0.08230612 0.0930872  0.03885502 0.2093759 ]]