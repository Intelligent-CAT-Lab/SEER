18051
Test: public void test115() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test115"); com.google.javascript.rhino.ErrorReporter errorReporter0 = null; com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0); com.google.javascript.rhino.jstype.NoType noType2 = new com.google.javascript.rhino.jstype.NoType(jSTypeRegistry1); com.google.javascript.rhino.ErrorReporter errorReporter4 = null; com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry5 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter4); com.google.javascript.rhino.jstype.NoType noType6 = new com.google.javascript.rhino.jstype.NoType(jSTypeRegistry5); java.lang.String str7 = noType6.toString(); boolean boolean9 = noType6.hasOwnProperty(""); jSTypeRegistry1.registerPropertyOnType("", (com.google.javascript.rhino.jstype.ObjectType) noType6); com.google.javascript.rhino.ErrorReporter errorReporter11 = null; com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry12 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter11); com.google.javascript.rhino.jstype.NoType noType13 = new com.google.javascript.rhino.jstype.NoType(jSTypeRegistry12); com.google.javascript.rhino.ErrorReporter errorReporter14 = null; com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14); com.google.javascript.rhino.jstype.NoType noType16 = new com.google.javascript.rhino.jstype.NoType(jSTypeRegistry15); java.lang.String str17 = noType16.toString(); com.google.javascript.rhino.JSDocInfo jSDocInfo19 = new com.google.javascript.rhino.JSDocInfo(); noType16.setPropertyJSDocInfo("", jSDocInfo19, false); boolean boolean22 = noType13.hasEqualCallType((com.google.javascript.rhino.jstype.FunctionType) noType16); com.google.javascript.rhino.jstype.InstanceObjectType instanceObjectType23 = new com.google.javascript.rhino.jstype.InstanceObjectType(jSTypeRegistry1, (com.google.javascript.rhino.jstype.FunctionType) noType16); com.google.javascript.rhino.JSDocInfo jSDocInfo25 = new com.google.javascript.rhino.JSDocInfo(); java.lang.String str27 = jSDocInfo25.getDescriptionForParameter("error reporter"); boolean boolean28 = jSDocInfo25.isOverride(); instanceObjectType23.setPropertyJSDocInfo(": Unknown class name", jSDocInfo25, false); com.google.javascript.rhino.ErrorReporter errorReporter31 = null; com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry32 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter31); com.google.javascript.rhino.jstype.NoType noType33 = new com.google.javascript.rhino.jstype.NoType(jSTypeRegistry32); java.lang.String str34 = noType33.toString(); com.google.javascript.rhino.JSDocInfo jSDocInfo36 = new com.google.javascript.rhino.JSDocInfo(); noType33.setPropertyJSDocInfo("", jSDocInfo36, false); java.lang.String str39 = noType33.getReferenceName(); boolean boolean40 = instanceObjectType23.isSubtype((com.google.javascript.rhino.jstype.JSType) noType33); int int41 = noType33.getMaxArguments(); com.google.javascript.rhino.JSDocInfo jSDocInfo43 = noType33.getOwnPropertyJSDocInfo("<No stack trace available>"); com.google.javascript.rhino.Node node44 = noType33.getSource(); }
Code: public boolean hasOwnProperty(String name) { return super.hasOwnProperty(name) || "prototype".equals(name); }
tensor([[0.0494, 0.0914, 0.1130, 0.0432, 0.0977, 0.0582, 0.4071, 0.0624, 0.0496,
         0.0280],
        [0.0315, 0.0900, 0.0932, 0.0288, 0.1252, 0.0665, 0.4424, 0.0595, 0.0417,
         0.0214],
        [0.0443, 0.1268, 0.1396, 0.0495, 0.1009, 0.0592, 0.3322, 0.0676, 0.0569,
         0.0229],
        [0.0562, 0.0927, 0.1169, 0.0430, 0.0867, 0.0541, 0.3913, 0.0594, 0.0624,
         0.0373],
        [0.0644, 0.1141, 0.1184, 0.0642, 0.1267, 0.0711, 0.2568, 0.0629, 0.0804,
         0.0410],
        [0.0359, 0.0894, 0.1076, 0.0383, 0.0999, 0.0470, 0.4450, 0.0534, 0.0576,
         0.0259],
        [0.0469, 0.1108, 0.1013, 0.0474, 0.1073, 0.0498, 0.3933, 0.0588, 0.0647,
         0.0197],
        [0.0397, 0.0952, 0.1122, 0.0402, 0.1565, 0.0626, 0.3597, 0.0606, 0.0577,
         0.0156],
        [0.0459, 0.0817, 0.0983, 0.0327, 0.1212, 0.0559, 0.4192, 0.0590, 0.0586,
         0.0275],
        [0.0314, 0.0871, 0.1002, 0.0440, 0.1176, 0.0793, 0.4065, 0.0638, 0.0466,
         0.0235]])