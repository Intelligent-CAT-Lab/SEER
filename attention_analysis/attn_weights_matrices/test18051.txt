18051
Test: public void test115() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test115"); com.google.javascript.rhino.ErrorReporter errorReporter0 = null; com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0); com.google.javascript.rhino.jstype.NoType noType2 = new com.google.javascript.rhino.jstype.NoType(jSTypeRegistry1); com.google.javascript.rhino.ErrorReporter errorReporter4 = null; com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry5 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter4); com.google.javascript.rhino.jstype.NoType noType6 = new com.google.javascript.rhino.jstype.NoType(jSTypeRegistry5); java.lang.String str7 = noType6.toString(); boolean boolean9 = noType6.hasOwnProperty(""); jSTypeRegistry1.registerPropertyOnType("", (com.google.javascript.rhino.jstype.ObjectType) noType6); com.google.javascript.rhino.ErrorReporter errorReporter11 = null; com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry12 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter11); com.google.javascript.rhino.jstype.NoType noType13 = new com.google.javascript.rhino.jstype.NoType(jSTypeRegistry12); com.google.javascript.rhino.ErrorReporter errorReporter14 = null; com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14); com.google.javascript.rhino.jstype.NoType noType16 = new com.google.javascript.rhino.jstype.NoType(jSTypeRegistry15); java.lang.String str17 = noType16.toString(); com.google.javascript.rhino.JSDocInfo jSDocInfo19 = new com.google.javascript.rhino.JSDocInfo(); noType16.setPropertyJSDocInfo("", jSDocInfo19, false); boolean boolean22 = noType13.hasEqualCallType((com.google.javascript.rhino.jstype.FunctionType) noType16); com.google.javascript.rhino.jstype.InstanceObjectType instanceObjectType23 = new com.google.javascript.rhino.jstype.InstanceObjectType(jSTypeRegistry1, (com.google.javascript.rhino.jstype.FunctionType) noType16); com.google.javascript.rhino.JSDocInfo jSDocInfo25 = new com.google.javascript.rhino.JSDocInfo(); java.lang.String str27 = jSDocInfo25.getDescriptionForParameter("error reporter"); boolean boolean28 = jSDocInfo25.isOverride(); instanceObjectType23.setPropertyJSDocInfo(": Unknown class name", jSDocInfo25, false); com.google.javascript.rhino.ErrorReporter errorReporter31 = null; com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry32 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter31); com.google.javascript.rhino.jstype.NoType noType33 = new com.google.javascript.rhino.jstype.NoType(jSTypeRegistry32); java.lang.String str34 = noType33.toString(); com.google.javascript.rhino.JSDocInfo jSDocInfo36 = new com.google.javascript.rhino.JSDocInfo(); noType33.setPropertyJSDocInfo("", jSDocInfo36, false); java.lang.String str39 = noType33.getReferenceName(); boolean boolean40 = instanceObjectType23.isSubtype((com.google.javascript.rhino.jstype.JSType) noType33); int int41 = noType33.getMaxArguments(); com.google.javascript.rhino.JSDocInfo jSDocInfo43 = noType33.getOwnPropertyJSDocInfo("<No stack trace available>"); com.google.javascript.rhino.Node node44 = noType33.getSource(); }
Code: public boolean hasOwnProperty(String name) { return super.hasOwnProperty(name) || "prototype".equals(name); }
[[0.04935311 0.09137212 0.11298812 0.04324066 0.09765556 0.05824852
 0.4071393  0.06236967 0.04963665 0.02799624]
[0.03147939 0.08995432 0.09316564 0.0287636  0.12517251 0.06651296
 0.44241858 0.05945956 0.04167967 0.02139374]
[0.04430859 0.12684815 0.13961805 0.04953307 0.10092854 0.05923697
 0.33222798 0.06755967 0.05686039 0.02287858]
[0.05619995 0.09272486 0.11689518 0.04300144 0.08670048 0.05405875
 0.39127514 0.05941167 0.06241211 0.03732038]
[0.06441695 0.11414164 0.11837792 0.06423284 0.1266879  0.071114
 0.25682408 0.06285249 0.08037098 0.0409812 ]
[0.03589389 0.08943269 0.10762512 0.03829573 0.09993026 0.04700594
 0.44501355 0.05335073 0.05757637 0.02587577]
[0.04686524 0.11082073 0.10134483 0.04738848 0.10730927 0.04979913
 0.3932774  0.05884109 0.06469354 0.01966028]
[0.03972189 0.09519635 0.11216687 0.04020572 0.15646297 0.06261836
 0.35973358 0.06058348 0.05767545 0.01563536]
[0.04585582 0.0816616  0.09832329 0.03271883 0.12115337 0.05592562
 0.41924223 0.05897165 0.05861024 0.02753735]
[0.03141815 0.08713301 0.10023057 0.04395897 0.11756184 0.07926139
 0.40654683 0.06377322 0.04659191 0.02352408]]