69646
Test: public void test69() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test69"); org.jsoup.helper.W3CDom w3CDom0 = new org.jsoup.helper.W3CDom(); org.jsoup.nodes.Document document2 = org.jsoup.Jsoup.parseBodyFragment(""); org.jsoup.nodes.Element element4 = document2.text("\n<!--hi!-->"); org.jsoup.nodes.Element element6 = document2.prependText("\n<!--hi!-->"); java.lang.String str7 = document2.ownText(); org.jsoup.nodes.Element element8 = document2.parent(); org.w3c.dom.Document document9 = w3CDom0.fromJsoup(document2); org.jsoup.helper.W3CDom.W3CBuilder w3CBuilder10 = new org.jsoup.helper.W3CDom.W3CBuilder(document9); org.jsoup.nodes.TextNode textNode12 = new org.jsoup.nodes.TextNode("<?\n<!--hi!-->?>"); java.lang.String str13 = textNode12.getWholeText(); org.jsoup.nodes.Node node14 = textNode12.root(); w3CBuilder10.tail(node14, (int) '#'); org.jsoup.nodes.Node node17 = null; try { w3CBuilder10.head(node17, (int) '#'); } catch (java.util.EmptyStackException e) { } }
Code: public void head(org.jsoup.nodes.Node source, int depth){namespacesStack.push(new HashMap<>(namespacesStack.peek())); if (source instanceof org.jsoup.nodes.Element) {org.jsoup.nodes.Element sourceEl = (org.jsoup.nodes.Element) source;String prefix = updateNamespaces(sourceEl);String namespace = namespacesStack.peek().get(prefix);String tagName = sourceEl.tagName();Element el =doc.createElementNS(namespace, tagName);copyAttributes(sourceEl, el);if (dest == null) { doc.appendChild(el);} else {dest.appendChild(el);}dest = el; } else if (source instanceof org.jsoup.nodes.TextNode) {org.jsoup.nodes.TextNode sourceText = (org.jsoup.nodes.TextNode) source;Text text = doc.createTextNode(sourceText.getWholeText());;} else if (source instanceof org.jsoup.nodes.Comment) {org.jsoup.nodes.Comment sourceComment = (org.jsoup.nodes.Comment) source;Comment comment = doc.createComment(sourceComment.getData());;} else if (source instanceof org.jsoup.nodes.DataNode) {org.jsoup.nodes.DataNode sourceData = (org.jsoup.nodes.DataNode) source;Text node = doc.createTextNode(sourceData.getWholeData());dest.appendChild(node);} else {}}
tensor([[0.0097, 0.0081, 0.0150,  ..., 0.0234, 0.0124, 0.0299],
        [0.0073, 0.0071, 0.0118,  ..., 0.0228, 0.0124, 0.0267],
        [0.0102, 0.0083, 0.0123,  ..., 0.0245, 0.0126, 0.0246],
        ...,
        [0.0100, 0.0060, 0.0140,  ..., 0.0189, 0.0090, 0.0251],
        [0.0076, 0.0061, 0.0132,  ..., 0.0227, 0.0131, 0.0257],
        [0.0105, 0.0094, 0.0156,  ..., 0.0183, 0.0124, 0.0238]])