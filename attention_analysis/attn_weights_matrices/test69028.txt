69028
Test: public void test361() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test361"); org.jsoup.parser.ParseError[] parseErrorArray0 = new org.jsoup.parser.ParseError[] {}; java.util.ArrayList<org.jsoup.parser.ParseError> parseErrorList1 = new java.util.ArrayList<org.jsoup.parser.ParseError>(); boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.jsoup.parser.ParseError>) parseErrorList1, parseErrorArray0); java.lang.Object obj3 = parseErrorList1.clone(); org.jsoup.nodes.Document document5 = org.jsoup.Jsoup.parse(":nth-child(100)"); java.util.List<org.jsoup.nodes.Node> nodeList6 = document5.ensureChildNodes(); boolean boolean7 = parseErrorList1.retainAll((java.util.Collection<org.jsoup.nodes.Node>) nodeList6); org.jsoup.parser.ParseError parseError8 = null; boolean boolean9 = parseErrorList1.add(parseError8); org.jsoup.nodes.Document document11 = org.jsoup.Jsoup.parse(":nth-child(100)"); org.jsoup.nodes.Document document13 = org.jsoup.Jsoup.parse(":nth-child(100)"); org.jsoup.nodes.Document document15 = org.jsoup.Jsoup.parse(":nth-child(100)"); org.jsoup.nodes.Element[] elementArray16 = new org.jsoup.nodes.Element[] { document11, document13, document15 }; java.util.ArrayList<org.jsoup.nodes.Element> elementList17 = new java.util.ArrayList<org.jsoup.nodes.Element>(); boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.jsoup.nodes.Element>) elementList17, elementArray16); java.util.stream.Stream<org.jsoup.nodes.Element> elementStream19 = elementList17.stream(); java.util.ListIterator<org.jsoup.nodes.Element> elementItor20 = elementList17.listIterator(); elementList17.trimToSize(); org.jsoup.nodes.Document document23 = org.jsoup.Jsoup.parse(":nth-child(100)"); java.util.List<org.jsoup.nodes.Node> nodeList24 = document23.ensureChildNodes(); java.lang.String str25 = document23.nodeName(); boolean boolean26 = elementList17.add((org.jsoup.nodes.Element) document23); org.jsoup.select.Elements elements29 = document23.getElementsByAttributeValueEnding("#data", "#data"); org.jsoup.select.Elements elements31 = document23.getElementsByClass("#document"); java.lang.String str32 = document23.title(); java.util.List<org.jsoup.nodes.Node> nodeList33 = document23.childNodes; boolean boolean34 = parseErrorList1.contains((java.lang.Object) document23); }
Code: protected List<Node> ensureChildNodes() { return EmptyNodes; }
[[0.10631927 0.17834586 0.25986713 0.19719082 0.10572856 0.11497666
 0.03757163]
[0.11564331 0.16600251 0.2467686  0.1752703  0.12317083 0.12266788
 0.0504766 ]
[0.09662233 0.14397365 0.2606753  0.18234658 0.12903306 0.13898222
 0.04836683]
[0.15847751 0.12979202 0.2166259  0.18501176 0.10896438 0.1403172
 0.06081124]
[0.13008814 0.14948964 0.29635456 0.17744172 0.09670477 0.10323989
 0.04668127]
[0.11753196 0.14136435 0.2671605  0.17378645 0.10069233 0.15356968
 0.04589469]
[0.12017968 0.13296975 0.236696   0.2099699  0.15276368 0.10444343
 0.04297754]]