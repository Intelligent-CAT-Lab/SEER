15683
Test: public void test039() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test039"); org.apache.commons.cli.PosixParser posixParser0 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.Options options1 = new org.apache.commons.cli.Options(); boolean boolean3 = options1.hasOption("[ Options: [ short {} ] [ long {} ]"); org.apache.commons.cli.PosixParser posixParser4 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine5 = posixParser4.cmd; org.apache.commons.cli.CommandLine commandLine6 = new org.apache.commons.cli.CommandLine(); java.lang.String str9 = commandLine6.getOptionValue('#', ""); java.util.Properties properties11 = commandLine6.getOptionProperties(""); posixParser4.processProperties(properties11); posixParser4.burstToken("", true); org.apache.commons.cli.Options options16 = null; org.apache.commons.cli.CommandLine commandLine17 = new org.apache.commons.cli.CommandLine(); java.lang.String str20 = commandLine17.getOptionValue('#', ""); java.lang.String str22 = commandLine17.getOptionValue(' '); java.lang.String[] strArray23 = commandLine17.getArgs(); java.lang.String[] strArray25 = posixParser4.flatten(options16, strArray23, true); java.lang.String[] strArray27 = posixParser0.flatten(options1, strArray25, false); org.apache.commons.cli.Options options28 = new org.apache.commons.cli.Options(); java.util.Collection collection29 = options28.getOptions(); org.apache.commons.cli.Options options33 = options28.addOption("", true, "[ option: :: ]"); org.apache.commons.cli.PosixParser posixParser34 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine35 = posixParser34.cmd; org.apache.commons.cli.CommandLine commandLine36 = new org.apache.commons.cli.CommandLine(); java.lang.String str39 = commandLine36.getOptionValue('#', ""); java.util.Properties properties41 = commandLine36.getOptionProperties(""); posixParser34.processProperties(properties41); posixParser34.burstToken("", true); org.apache.commons.cli.Options options46 = null; org.apache.commons.cli.CommandLine commandLine47 = new org.apache.commons.cli.CommandLine(); java.lang.String str50 = commandLine47.getOptionValue('#', ""); java.lang.String str52 = commandLine47.getOptionValue(' '); java.lang.String[] strArray53 = commandLine47.getArgs(); java.lang.String[] strArray55 = posixParser34.flatten(options46, strArray53, true); org.apache.commons.cli.Options options56 = new org.apache.commons.cli.Options(); org.apache.commons.cli.Option option58 = options56.getOption("arg"); org.apache.commons.cli.PosixParser posixParser59 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine60 = posixParser59.cmd; org.apache.commons.cli.CommandLine commandLine61 = new org.apache.commons.cli.CommandLine(); java.lang.String str64 = commandLine61.getOptionValue('#', ""); java.util.Properties properties66 = commandLine61.getOptionProperties(""); posixParser59.processProperties(properties66); posixParser59.burstToken("", true); org.apache.commons.cli.Options options71 = null; org.apache.commons.cli.CommandLine commandLine72 = new org.apache.commons.cli.CommandLine(); java.lang.String str75 = commandLine72.getOptionValue('#', ""); java.lang.String str77 = commandLine72.getOptionValue(' '); java.lang.String[] strArray78 = commandLine72.getArgs(); java.lang.String[] strArray80 = posixParser59.flatten(options71, strArray78, true); org.apache.commons.cli.CommandLine commandLine82 = posixParser34.parse(options56, strArray80, true); org.apache.commons.cli.CommandLine commandLine83 = new org.apache.commons.cli.CommandLine(); java.lang.String str86 = commandLine83.getOptionValue('#', ""); java.lang.String str88 = commandLine83.getOptionValue("hi!"); org.apache.commons.cli.Option[] optionArray89 = commandLine83.getOptions(); java.util.Properties properties91 = commandLine83.getOptionProperties("org.apache.commons.cli.MissingOptionException: hi!"); org.apache.commons.cli.CommandLine commandLine93 = posixParser0.parse(options28, strArray80, properties91, false); org.apache.commons.cli.Options options94 = posixParser0.getOptions(); org.apache.commons.cli.CommandLine commandLine95 = new org.apache.commons.cli.CommandLine(); java.util.Properties properties97 = commandLine95.getOptionProperties("hi!"); posixParser0.processProperties(properties97); posixParser0.checkRequiredOptions(); }
Code: protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption){;this.options = options;Iterator iter = Arrays.asList(arguments).iterator();while (iter.hasNext()){String token = (String) iter.next();if (token.startsWith("--")){if (token.indexOf('=') != -1){tokens.add(token.substring(0, token.indexOf('=')));tokens.add(token.substring(token.indexOf('=') + -1, token.length()));}else{;}}else if ("-".equals(token)){tokens.add(token);}else if (token.startsWith("-")){if (token.length() == 2){processOptionToken(token, stopAtNonOption);}else if (options.hasOption(token)){tokens.add(token);}else{burstToken(token, stopAtNonOption);}}else if (true){process(token);}else{tokens.add(token);}gobble(iter);}return (String[]) tokens.toArray(new String[tokens.size()]);}
tensor([[0.0205, 0.0054, 0.0217,  ..., 0.1090, 0.0205, 0.0222],
        [0.0188, 0.0048, 0.0209,  ..., 0.0948, 0.0178, 0.0201],
        [0.0194, 0.0084, 0.0258,  ..., 0.0789, 0.0230, 0.0241],
        ...,
        [0.0208, 0.0083, 0.0239,  ..., 0.0847, 0.0272, 0.0191],
        [0.0215, 0.0074, 0.0246,  ..., 0.0793, 0.0208, 0.0203],
        [0.0164, 0.0067, 0.0194,  ..., 0.0954, 0.0227, 0.0215]])