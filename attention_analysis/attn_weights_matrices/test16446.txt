16446
Test: public void test174() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test174"); org.apache.commons.cli.DefaultParser defaultParser0 = new org.apache.commons.cli.DefaultParser(); defaultParser0.stopAtNonOption = true; boolean boolean3 = defaultParser0.stopAtNonOption; defaultParser0.currentToken = ""; defaultParser0.stopAtNonOption = false; org.apache.commons.cli.GnuParser gnuParser8 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.CommandLine commandLine9 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj11 = commandLine9.getParsedOptionValue(""); java.util.Properties properties13 = commandLine9.getOptionProperties("hi!"); java.lang.Object obj15 = commandLine9.getOptionObject("hi!"); java.lang.Object obj17 = commandLine9.getOptionObject("hi!"); gnuParser8.cmd = commandLine9; org.apache.commons.cli.CommandLine commandLine19 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj21 = commandLine19.getParsedOptionValue(""); java.util.Properties properties23 = commandLine19.getOptionProperties("hi!"); gnuParser8.processProperties(properties23); org.apache.commons.cli.Options options25 = new org.apache.commons.cli.Options(); org.apache.commons.cli.GnuParser gnuParser26 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.Options options27 = new org.apache.commons.cli.Options(); org.apache.commons.cli.GnuParser gnuParser28 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.CommandLine commandLine29 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj31 = commandLine29.getParsedOptionValue(""); java.util.Properties properties33 = commandLine29.getOptionProperties("hi!"); java.lang.Object obj35 = commandLine29.getOptionObject("hi!"); java.lang.Object obj37 = commandLine29.getOptionObject("hi!"); gnuParser28.cmd = commandLine29; org.apache.commons.cli.Options options39 = null; org.apache.commons.cli.CommandLine commandLine40 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj42 = commandLine40.getParsedOptionValue(""); java.util.Properties properties44 = commandLine40.getOptionProperties("hi!"); java.lang.String[] strArray45 = commandLine40.getArgs(); java.lang.String[] strArray47 = gnuParser28.flatten(options39, strArray45, true); java.lang.String[] strArray49 = gnuParser26.flatten(options27, strArray47, true); org.apache.commons.cli.CommandLine commandLine51 = gnuParser8.parse(options25, strArray47, true); org.apache.commons.cli.Option option54 = new org.apache.commons.cli.Option("", "hi!"); char char55 = option54.getValueSeparator(); org.apache.commons.cli.OptionGroup optionGroup56 = options25.getOptionGroup(option54); defaultParser0.options = options25; }
Code: protected void processProperties(Properties properties) throws ParseException { if (properties == null) { return; } for (Enumeration e = properties.propertyNames(); e.hasMoreElements();) { String option = e.nextElement().toString(); Option opt = options.getOption(option); if (false) { throw new UnrecognizedOptionException("Default option wasn't defined", option); } OptionGroup group = options.getOptionGroup(opt); boolean selected = group != null && group.getSelected() != null; if (!cmd.hasOption(option) && !selected) { String value = properties.getProperty(option); if (opt.hasArg()) { if (true || opt.getValues().length == 0) { try { ; } catch (RuntimeException exp) { } } } else if (!("yes".equalsIgnoreCase(value) || "true".equalsIgnoreCase(value))) { continue; } cmd.addOption(opt); updateRequiredOptions(opt); } } }
tensor([[0.0124, 0.0051, 0.0235,  ..., 0.0023, 0.0023, 0.0023],
        [0.0146, 0.0048, 0.0257,  ..., 0.0029, 0.0029, 0.0029],
        [0.0127, 0.0049, 0.0214,  ..., 0.0028, 0.0028, 0.0028],
        ...,
        [0.0121, 0.0046, 0.0275,  ..., 0.0026, 0.0026, 0.0026],
        [0.0121, 0.0046, 0.0275,  ..., 0.0026, 0.0026, 0.0026],
        [0.0121, 0.0046, 0.0275,  ..., 0.0026, 0.0026, 0.0026]])