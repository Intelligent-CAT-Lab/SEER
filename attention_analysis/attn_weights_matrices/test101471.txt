101471
Test: public void test30() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test30"); org.joda.time.DateTimeFieldType dateTimeFieldType0 = org.joda.time.DateTimeFieldType.secondOfMinute(); org.joda.time.DurationFieldType durationFieldType1 = dateTimeFieldType0.getRangeDurationType(); org.joda.time.format.DateTimeFormatterBuilder.FixedNumber fixedNumber4 = new org.joda.time.format.DateTimeFormatterBuilder.FixedNumber(dateTimeFieldType0, 65955, true); int int5 = fixedNumber4.estimateParsedLength(); java.io.Writer writer6 = null; org.joda.time.chrono.ISOChronology iSOChronology8 = org.joda.time.chrono.ISOChronology.getInstanceUTC(); org.joda.time.DateTime dateTime9 = new org.joda.time.DateTime((org.joda.time.Chronology) iSOChronology8); org.joda.time.DateTimeField dateTimeField10 = iSOChronology8.secondOfDay(); org.joda.time.DurationField durationField11 = iSOChronology8.eras(); org.joda.time.DateTimeField dateTimeField12 = iSOChronology8.centuryOfEra(); org.joda.time.DateTimeZone dateTimeZone15 = org.joda.time.DateTimeZone.forOffsetHours((int) (byte) 1); org.joda.time.DateTimeZone dateTimeZone16 = org.joda.time.DateTimeUtils.getZone(dateTimeZone15); boolean boolean18 = dateTimeZone16.isStandardOffset(1940630400000L); org.joda.time.chrono.GregorianChronology gregorianChronology19 = org.joda.time.chrono.GregorianChronology.getInstance(); org.joda.time.DateTimeField dateTimeField20 = gregorianChronology19.minuteOfDay(); org.joda.time.field.OffsetDateTimeField offsetDateTimeField22 = new org.joda.time.field.OffsetDateTimeField(dateTimeField20, (int) ' '); long long24 = offsetDateTimeField22.remainder(100L); java.util.Locale locale25 = null; int int26 = offsetDateTimeField22.getMaximumTextLength(locale25); long long29 = offsetDateTimeField22.getDifferenceAsLong(0L, (long) 2922789); org.joda.time.DateTimeZone dateTimeZone30 = null; org.joda.time.DateTime dateTime31 = new org.joda.time.DateTime(dateTimeZone30); org.joda.time.DateTime.Property property32 = dateTime31.secondOfMinute(); org.joda.time.ReadablePeriod readablePeriod33 = null; org.joda.time.DateTime dateTime34 = dateTime31.plus(readablePeriod33); org.joda.time.DateTime.Property property35 = dateTime34.centuryOfEra(); org.joda.time.format.DateTimeParser[] dateTimeParserArray36 = new org.joda.time.format.DateTimeParser[] {}; org.joda.time.format.DateTimeFormatterBuilder.MatchingParser matchingParser37 = new org.joda.time.format.DateTimeFormatterBuilder.MatchingParser(dateTimeParserArray36); org.joda.time.chrono.ISOChronology iSOChronology39 = org.joda.time.chrono.ISOChronology.getInstanceUTC(); org.joda.time.DateTime dateTime40 = new org.joda.time.DateTime((org.joda.time.Chronology) iSOChronology39); org.joda.time.DateTimeZone dateTimeZone41 = null; org.joda.time.Chronology chronology42 = iSOChronology39.withZone(dateTimeZone41); org.joda.time.DateTimeField dateTimeField43 = iSOChronology39.weekyear(); java.util.Locale locale44 = null; org.joda.time.format.DateTimeParserBucket dateTimeParserBucket45 = new org.joda.time.format.DateTimeParserBucket((long) 100, (org.joda.time.Chronology) iSOChronology39, locale44); int int48 = matchingParser37.parseInto(dateTimeParserBucket45, "713", 1439); org.joda.time.format.DateTimeParserBucket.SavedState savedState49 = dateTimeParserBucket45.new SavedState(); org.joda.time.chrono.ISOChronology iSOChronology51 = org.joda.time.chrono.ISOChronology.getInstanceUTC(); org.joda.time.DateTime dateTime52 = new org.joda.time.DateTime((org.joda.time.Chronology) iSOChronology51); org.joda.time.DateTimeZone dateTimeZone53 = null; org.joda.time.Chronology chronology54 = iSOChronology51.withZone(dateTimeZone53); org.joda.time.DateTimeField dateTimeField55 = iSOChronology51.weekyear(); java.util.Locale locale56 = null; org.joda.time.format.DateTimeParserBucket dateTimeParserBucket57 = new org.joda.time.format.DateTimeParserBucket((long) 100, (org.joda.time.Chronology) iSOChronology51, locale56); java.lang.Integer int58 = dateTimeParserBucket57.getPivotYear(); boolean boolean59 = savedState49.restoreState(dateTimeParserBucket57); org.joda.time.Chronology chronology60 = dateTimeParserBucket57.getChronology(); org.joda.time.chrono.ISOChronology iSOChronology61 = org.joda.time.chrono.ISOChronology.getInstanceUTC(); org.joda.time.DateTimeField dateTimeField62 = iSOChronology61.millisOfSecond(); org.joda.time.DurationField durationField63 = iSOChronology61.hours(); boolean boolean64 = dateTimeParserBucket57.restoreState((java.lang.Object) iSOChronology61); java.util.Locale locale65 = dateTimeParserBucket57.getLocale(); int int66 = property35.getMaximumShortTextLength(locale65); int int67 = offsetDateTimeField22.getMaximumShortTextLength(locale65); try { fixedNumber4.printTo(writer6, (long) 9, (org.joda.time.Chronology) iSOChronology8, 0, dateTimeZone16, locale65); } catch (java.lang.NullPointerException e) { } }
Code: public int parseInto(DateTimeParserBucket bucket, String text, int position){if (position >= text.length()) {return ~position;}char a = text.charAt(position);char b = iValue;if (a != b) {a = Character.toUpperCase(a);b = Character.toUpperCase(b);if (a != b) {a = Character.toLowerCase(a);b = Character.toLowerCase(b);if (a != b) {return ~position;}}}return position + 1;}
tensor([[0.0176, 0.0108, 0.0276,  ..., 0.0165, 0.0143, 0.0465],
        [0.0107, 0.0077, 0.0274,  ..., 0.0093, 0.0127, 0.0473],
        [0.0135, 0.0076, 0.0310,  ..., 0.0094, 0.0166, 0.0505],
        ...,
        [0.0124, 0.0077, 0.0315,  ..., 0.0131, 0.0132, 0.0537],
        [0.0168, 0.0091, 0.0368,  ..., 0.0125, 0.0141, 0.0420],
        [0.0147, 0.0101, 0.0300,  ..., 0.0127, 0.0140, 0.0567]])