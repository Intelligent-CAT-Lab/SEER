67244
Test: public void test201() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test201"); com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer0 = null; com.fasterxml.jackson.databind.ser.std.NumberSerializer numberSerializer1 = new com.fasterxml.jackson.databind.ser.std.NumberSerializer(); com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer typeWrappedSerializer2 = new com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer(typeSerializer0, (com.fasterxml.jackson.databind.JsonSerializer<java.lang.Number>) numberSerializer1); com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer indexedStringListSerializer3 = new com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Number>) numberSerializer1); com.fasterxml.jackson.databind.ser.std.NumberSerializer numberSerializer4 = new com.fasterxml.jackson.databind.ser.std.NumberSerializer(); com.fasterxml.jackson.databind.node.ObjectNode objectNode7 = numberSerializer4.createSchemaNode("hi!", false); com.fasterxml.jackson.databind.node.ObjectNode objectNode9 = objectNode7.with("hi!"); com.fasterxml.jackson.databind.ser.std.NumberSerializer numberSerializer11 = new com.fasterxml.jackson.databind.ser.std.NumberSerializer(); com.fasterxml.jackson.databind.node.ObjectNode objectNode14 = numberSerializer11.createSchemaNode("hi!", false); com.fasterxml.jackson.databind.node.ObjectNode objectNode16 = objectNode14.with("hi!"); com.fasterxml.jackson.databind.ser.std.NumberSerializer numberSerializer17 = new com.fasterxml.jackson.databind.ser.std.NumberSerializer(); com.fasterxml.jackson.databind.node.ObjectNode objectNode20 = numberSerializer17.createSchemaNode("hi!", false); com.fasterxml.jackson.databind.node.ObjectNode objectNode22 = objectNode20.with("hi!"); com.fasterxml.jackson.databind.JsonNode[] jsonNodeArray23 = new com.fasterxml.jackson.databind.JsonNode[] { objectNode16, objectNode20 }; java.util.ArrayList<com.fasterxml.jackson.databind.JsonNode> jsonNodeList24 = new java.util.ArrayList<com.fasterxml.jackson.databind.JsonNode>(); boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.fasterxml.jackson.databind.JsonNode>) jsonNodeList24, jsonNodeArray23); java.util.List<com.fasterxml.jackson.databind.JsonNode> jsonNodeList26 = objectNode7.findValues("", (java.util.List<com.fasterxml.jackson.databind.JsonNode>) jsonNodeList24); com.fasterxml.jackson.databind.node.NumericNode numericNode28 = objectNode7.numberNode((float) (byte) 100); com.fasterxml.jackson.databind.node.NumericNode numericNode30 = objectNode7.numberNode((byte) 1); com.fasterxml.jackson.databind.ser.std.NumberSerializer numberSerializer31 = new com.fasterxml.jackson.databind.ser.std.NumberSerializer(); com.fasterxml.jackson.databind.node.ObjectNode objectNode34 = numberSerializer31.createSchemaNode("hi!", false); com.fasterxml.jackson.databind.node.ObjectNode objectNode36 = objectNode34.with("hi!"); com.fasterxml.jackson.databind.node.ObjectNode objectNode39 = objectNode36.put("", (int) (byte) 10); com.fasterxml.jackson.databind.node.NumericNode numericNode41 = objectNode36.numberNode(5); java.math.BigInteger bigInteger42 = numericNode41.bigIntegerValue(); com.fasterxml.jackson.databind.node.NumericNode numericNode43 = objectNode7.numberNode(bigInteger42); com.fasterxml.jackson.databind.node.BigIntegerNode bigIntegerNode44 = com.fasterxml.jackson.databind.node.BigIntegerNode.valueOf(bigInteger42); com.fasterxml.jackson.core.JsonFactory jsonFactory45 = null; com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider46 = null; com.fasterxml.jackson.databind.deser.DefaultDeserializationContext defaultDeserializationContext47 = null; com.fasterxml.jackson.databind.ObjectMapper objectMapper48 = new com.fasterxml.jackson.databind.ObjectMapper(jsonFactory45, defaultSerializerProvider46, defaultDeserializationContext47); com.fasterxml.jackson.databind.MappingJsonFactory mappingJsonFactory49 = new com.fasterxml.jackson.databind.MappingJsonFactory(objectMapper48); com.fasterxml.jackson.core.JsonFactory jsonFactory50 = objectMapper48.getFactory(); java.io.Writer writer51 = null; com.fasterxml.jackson.core.JsonGenerator jsonGenerator52 = jsonFactory50.createGenerator(writer51); com.fasterxml.jackson.core.FormatSchema formatSchema53 = null; boolean boolean54 = jsonGenerator52.canUseSchema(formatSchema53); com.fasterxml.jackson.core.SerializableString serializableString55 = null; com.fasterxml.jackson.core.JsonGenerator jsonGenerator56 = jsonGenerator52.setRootValueSeparator(serializableString55); com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.Impl impl57 = new com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.Impl(); bigIntegerNode44.serialize(jsonGenerator52, (com.fasterxml.jackson.databind.SerializerProvider) impl57); java.lang.Number number59 = null; boolean boolean60 = numberSerializer1.isEmpty((com.fasterxml.jackson.databind.SerializerProvider) impl57, number59); }
Code: public boolean isEmpty(Object value) { Object delegateValue = convertValue(value); return _delegateSerializer.isEmpty(delegateValue); }
tensor([[0.0583, 0.1268, 0.0898, 0.0591, 0.0965, 0.0454, 0.1450, 0.0379, 0.0737,
         0.0665, 0.1722, 0.0289],
        [0.0384, 0.1608, 0.0688, 0.0411, 0.1203, 0.0305, 0.1805, 0.0305, 0.0521,
         0.0709, 0.1848, 0.0215],
        [0.0533, 0.1467, 0.0662, 0.0479, 0.1442, 0.0499, 0.1493, 0.0414, 0.0642,
         0.0679, 0.1437, 0.0252],
        [0.0488, 0.1182, 0.0778, 0.0468, 0.1044, 0.0323, 0.1757, 0.0337, 0.0637,
         0.0639, 0.2111, 0.0237],
        [0.0568, 0.1095, 0.0925, 0.0546, 0.1045, 0.0338, 0.1370, 0.0479, 0.0826,
         0.0637, 0.1824, 0.0347],
        [0.0478, 0.1385, 0.0617, 0.0380, 0.1260, 0.0319, 0.2006, 0.0364, 0.0616,
         0.0582, 0.1772, 0.0220],
        [0.0452, 0.1420, 0.0686, 0.0465, 0.1219, 0.0337, 0.1860, 0.0363, 0.0736,
         0.0594, 0.1493, 0.0373],
        [0.0672, 0.1267, 0.1004, 0.0686, 0.0845, 0.0457, 0.1305, 0.0582, 0.0760,
         0.0754, 0.1317, 0.0350],
        [0.0458, 0.1521, 0.0823, 0.0437, 0.1057, 0.0332, 0.1558, 0.0364, 0.0692,
         0.0629, 0.1914, 0.0215],
        [0.0370, 0.1430, 0.0937, 0.0440, 0.0877, 0.0354, 0.1722, 0.0372, 0.0555,
         0.0512, 0.2199, 0.0233],
        [0.0438, 0.1621, 0.0876, 0.0407, 0.0926, 0.0279, 0.2191, 0.0301, 0.0534,
         0.0498, 0.1697, 0.0233],
        [0.0373, 0.1167, 0.0681, 0.0415, 0.1180, 0.0405, 0.1725, 0.0362, 0.0720,
         0.0879, 0.1850, 0.0243]])