64044
Test: public void test112() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test112"); com.fasterxml.jackson.core.util.BufferRecycler bufferRecycler0 = null; com.fasterxml.jackson.core.io.IOContext iOContext3 = new com.fasterxml.jackson.core.io.IOContext(bufferRecycler0, (java.lang.Object) 0.0f, true); com.fasterxml.jackson.core.JsonEncoding jsonEncoding4 = com.fasterxml.jackson.core.JsonEncoding.UTF16_BE; java.lang.String str5 = jsonEncoding4.getJavaName(); com.fasterxml.jackson.core.io.IOContext iOContext6 = iOContext3.withEncoding(jsonEncoding4); com.fasterxml.jackson.core.util.BufferRecycler bufferRecycler8 = null; com.fasterxml.jackson.core.io.IOContext iOContext11 = new com.fasterxml.jackson.core.io.IOContext(bufferRecycler8, (java.lang.Object) 0.0f, true); com.fasterxml.jackson.core.JsonEncoding jsonEncoding12 = iOContext11.getEncoding(); java.io.InputStream inputStream13 = null; byte[] byteArray14 = com.fasterxml.jackson.core.json.UTF8JsonGenerator.HEX_CHARS; com.fasterxml.jackson.core.io.MergedStream mergedStream17 = new com.fasterxml.jackson.core.io.MergedStream(iOContext11, inputStream13, byteArray14, (int) '4', (-1)); boolean boolean18 = mergedStream17.markSupported(); int int19 = mergedStream17.available(); com.fasterxml.jackson.core.ObjectCodec objectCodec20 = null; com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer byteQuadsCanonicalizer21 = com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.createRoot(); java.lang.String str22 = byteQuadsCanonicalizer21.toString(); int int23 = byteQuadsCanonicalizer21.totalCount(); int int24 = byteQuadsCanonicalizer21.bucketCount(); byte[] byteArray25 = com.fasterxml.jackson.core.io.CharTypes.copyHexBytes(); com.fasterxml.jackson.core.json.UTF8StreamJsonParser uTF8StreamJsonParser29 = new com.fasterxml.jackson.core.json.UTF8StreamJsonParser(iOContext6, (int) (byte) -17, (java.io.InputStream) mergedStream17, objectCodec20, byteQuadsCanonicalizer21, byteArray25, (-1695542384), 208279835, false); java.lang.String str31 = uTF8StreamJsonParser29.getValueAsString("UTF-8"); int[] intArray32 = com.fasterxml.jackson.core.io.CharTypes.get7BitOutputEscapes(); uTF8StreamJsonParser29._quadBuffer = intArray32; com.fasterxml.jackson.core.Base64Variant base64Variant34 = null; try { byte[] byteArray35 = uTF8StreamJsonParser29.getBinaryValue(base64Variant34); } catch (com.fasterxml.jackson.core.JsonParseException e) { } }
Code: public final String getValueAsString() throws IOException { if (_currToken == JsonToken.VALUE_STRING) { if (_tokenIncomplete) { _tokenIncomplete = false; _finishString(); } return _textBuffer.contentsAsString(); } if (_currToken == JsonToken.FIELD_NAME) { return getCurrentName(); } return super.getValueAsString(null); }
tensor([[0.0206, 0.0167, 0.0263,  ..., 0.0229, 0.0106, 0.0091],
        [0.0184, 0.0122, 0.0290,  ..., 0.0267, 0.0074, 0.0060],
        [0.0213, 0.0161, 0.0248,  ..., 0.0214, 0.0097, 0.0078],
        ...,
        [0.0139, 0.0128, 0.0304,  ..., 0.0201, 0.0072, 0.0076],
        [0.0148, 0.0152, 0.0274,  ..., 0.0228, 0.0067, 0.0080],
        [0.0145, 0.0128, 0.0266,  ..., 0.0305, 0.0094, 0.0073]])