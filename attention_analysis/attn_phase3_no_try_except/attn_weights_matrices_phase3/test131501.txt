131501
Test: public void test1() throws Throwable { Iterator<String> iterator0 = (Iterator<String>) mock(Iterator.class, new ViolatedAssumptionAnswer()); doReturn(false).when(iterator0).hasNext(); doReturn("").when(iterator0).next(); SkippingIterator<String> skippingIterator0 = new SkippingIterator<String>(iterator0, 770L); String string0 = skippingIterator0.next(); }
Code: public E next() { return getIterator().next(); }
[[0.12992898 0.1875467  0.1514234  0.15780489 0.14108494 0.18023042
 0.05198058]
[0.12022819 0.19211811 0.14621681 0.19621047 0.12272268 0.17887224
 0.04363148]
[0.08626181 0.14709784 0.19308056 0.19080688 0.14539856 0.19496694
 0.04238747]
[0.1247436  0.17003155 0.14010713 0.1792367  0.1463498  0.1729309
 0.06660027]
[0.09656981 0.19077286 0.15317689 0.16433983 0.14440122 0.20446114
 0.04627825]
[0.10912427 0.20992431 0.15269463 0.15672994 0.13201721 0.18507522
 0.05443443]
[0.09075472 0.13400474 0.16888785 0.19815333 0.18807054 0.17579633
 0.04433244]]