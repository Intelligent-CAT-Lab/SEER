64051
Test: public void test112() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test112"); com.fasterxml.jackson.core.util.BufferRecycler bufferRecycler0 = null; com.fasterxml.jackson.core.io.IOContext iOContext3 = new com.fasterxml.jackson.core.io.IOContext(bufferRecycler0, (java.lang.Object) 0.0f, true); com.fasterxml.jackson.core.JsonEncoding jsonEncoding4 = com.fasterxml.jackson.core.JsonEncoding.UTF16_BE; java.lang.String str5 = jsonEncoding4.getJavaName(); com.fasterxml.jackson.core.io.IOContext iOContext6 = iOContext3.withEncoding(jsonEncoding4); com.fasterxml.jackson.core.util.BufferRecycler bufferRecycler8 = null; com.fasterxml.jackson.core.io.IOContext iOContext11 = new com.fasterxml.jackson.core.io.IOContext(bufferRecycler8, (java.lang.Object) 0.0f, true); com.fasterxml.jackson.core.JsonEncoding jsonEncoding12 = iOContext11.getEncoding(); java.io.InputStream inputStream13 = null; byte[] byteArray14 = com.fasterxml.jackson.core.json.UTF8JsonGenerator.HEX_CHARS; com.fasterxml.jackson.core.io.MergedStream mergedStream17 = new com.fasterxml.jackson.core.io.MergedStream(iOContext11, inputStream13, byteArray14, (int) '4', (-1)); boolean boolean18 = mergedStream17.markSupported(); int int19 = mergedStream17.available(); com.fasterxml.jackson.core.ObjectCodec objectCodec20 = null; com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer byteQuadsCanonicalizer21 = com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.createRoot(); java.lang.String str22 = byteQuadsCanonicalizer21.toString(); int int23 = byteQuadsCanonicalizer21.totalCount(); int int24 = byteQuadsCanonicalizer21.bucketCount(); byte[] byteArray25 = com.fasterxml.jackson.core.io.CharTypes.copyHexBytes(); com.fasterxml.jackson.core.json.UTF8StreamJsonParser uTF8StreamJsonParser29 = new com.fasterxml.jackson.core.json.UTF8StreamJsonParser(iOContext6, (int) (byte) -17, (java.io.InputStream) mergedStream17, objectCodec20, byteQuadsCanonicalizer21, byteArray25, (-1695542384), 208279835, false); java.lang.String str31 = uTF8StreamJsonParser29.getValueAsString("UTF-8"); int[] intArray32 = com.fasterxml.jackson.core.io.CharTypes.get7BitOutputEscapes(); uTF8StreamJsonParser29._quadBuffer = intArray32; com.fasterxml.jackson.core.Base64Variant base64Variant34 = null; try { byte[] byteArray35 = uTF8StreamJsonParser29.getBinaryValue(base64Variant34); } catch (com.fasterxml.jackson.core.JsonParseException e) { } }
Code: public String getValueAsString() throws IOException { if (_currToken == JsonToken.VALUE_STRING) { if (_tokenIncomplete) { _tokenIncomplete = false; return _finishAndReturnString(); } return _textBuffer.contentsAsString(); } return super.getValueAsString(null); }
tensor([[0.0305, 0.0395, 0.0432, 0.0738, 0.0152, 0.0386, 0.0820, 0.0293, 0.0487,
         0.0192, 0.0386, 0.0820, 0.0297, 0.0386, 0.0969, 0.0191, 0.0422, 0.0333,
         0.0505, 0.0125, 0.0333, 0.0290, 0.0125, 0.0333, 0.0161, 0.0125],
        [0.0307, 0.0362, 0.0527, 0.0832, 0.0165, 0.0417, 0.0895, 0.0313, 0.0398,
         0.0157, 0.0417, 0.0895, 0.0314, 0.0417, 0.0863, 0.0210, 0.0394, 0.0306,
         0.0509, 0.0108, 0.0306, 0.0226, 0.0108, 0.0306, 0.0141, 0.0108],
        [0.0268, 0.0456, 0.0570, 0.0740, 0.0183, 0.0436, 0.0751, 0.0297, 0.0464,
         0.0155, 0.0436, 0.0751, 0.0317, 0.0436, 0.1147, 0.0165, 0.0442, 0.0307,
         0.0345, 0.0110, 0.0307, 0.0260, 0.0110, 0.0307, 0.0129, 0.0110],
        [0.0213, 0.0456, 0.0457, 0.1120, 0.0119, 0.0431, 0.0949, 0.0252, 0.0348,
         0.0110, 0.0431, 0.0949, 0.0338, 0.0431, 0.0815, 0.0183, 0.0385, 0.0332,
         0.0454, 0.0089, 0.0332, 0.0197, 0.0089, 0.0332, 0.0096, 0.0089],
        [0.0246, 0.0435, 0.0336, 0.0965, 0.0123, 0.0370, 0.0981, 0.0254, 0.0487,
         0.0132, 0.0370, 0.0981, 0.0306, 0.0370, 0.1046, 0.0187, 0.0404, 0.0340,
         0.0384, 0.0084, 0.0340, 0.0228, 0.0084, 0.0340, 0.0120, 0.0084],
        [0.0335, 0.0522, 0.0532, 0.0604, 0.0216, 0.0486, 0.0584, 0.0292, 0.0371,
         0.0211, 0.0486, 0.0584, 0.0316, 0.0486, 0.0610, 0.0277, 0.0505, 0.0393,
         0.0387, 0.0180, 0.0393, 0.0304, 0.0180, 0.0393, 0.0172, 0.0180],
        [0.0195, 0.0472, 0.0407, 0.1160, 0.0110, 0.0356, 0.1079, 0.0231, 0.0420,
         0.0075, 0.0356, 0.1079, 0.0282, 0.0356, 0.1412, 0.0148, 0.0356, 0.0253,
         0.0326, 0.0057, 0.0253, 0.0186, 0.0057, 0.0253, 0.0065, 0.0057],
        [0.0282, 0.0367, 0.0436, 0.0899, 0.0144, 0.0402, 0.0948, 0.0293, 0.0374,
         0.0146, 0.0402, 0.0948, 0.0328, 0.0402, 0.0882, 0.0150, 0.0413, 0.0356,
         0.0475, 0.0090, 0.0356, 0.0225, 0.0090, 0.0356, 0.0144, 0.0090],
        [0.0182, 0.0530, 0.0445, 0.0875, 0.0125, 0.0404, 0.1013, 0.0300, 0.0464,
         0.0096, 0.0404, 0.1013, 0.0310, 0.0404, 0.0966, 0.0185, 0.0328, 0.0296,
         0.0475, 0.0086, 0.0296, 0.0243, 0.0086, 0.0296, 0.0095, 0.0086],
        [0.0224, 0.0448, 0.0392, 0.0830, 0.0136, 0.0376, 0.0879, 0.0293, 0.0404,
         0.0181, 0.0376, 0.0879, 0.0304, 0.0376, 0.1006, 0.0211, 0.0384, 0.0343,
         0.0470, 0.0106, 0.0343, 0.0355, 0.0106, 0.0343, 0.0124, 0.0106],
        [0.0335, 0.0522, 0.0532, 0.0604, 0.0216, 0.0486, 0.0584, 0.0292, 0.0371,
         0.0211, 0.0486, 0.0584, 0.0316, 0.0486, 0.0610, 0.0277, 0.0505, 0.0393,
         0.0387, 0.0180, 0.0393, 0.0304, 0.0180, 0.0393, 0.0172, 0.0180],
        [0.0195, 0.0472, 0.0407, 0.1160, 0.0110, 0.0356, 0.1079, 0.0231, 0.0420,
         0.0075, 0.0356, 0.1079, 0.0282, 0.0356, 0.1412, 0.0148, 0.0356, 0.0253,
         0.0326, 0.0057, 0.0253, 0.0186, 0.0057, 0.0253, 0.0065, 0.0057],
        [0.0255, 0.0438, 0.0375, 0.0826, 0.0158, 0.0420, 0.0804, 0.0295, 0.0388,
         0.0155, 0.0420, 0.0804, 0.0346, 0.0420, 0.1072, 0.0188, 0.0478, 0.0369,
         0.0417, 0.0096, 0.0369, 0.0231, 0.0096, 0.0369, 0.0115, 0.0096],
        [0.0335, 0.0522, 0.0532, 0.0604, 0.0216, 0.0486, 0.0584, 0.0292, 0.0371,
         0.0211, 0.0486, 0.0584, 0.0316, 0.0486, 0.0610, 0.0277, 0.0505, 0.0393,
         0.0387, 0.0180, 0.0393, 0.0304, 0.0180, 0.0393, 0.0172, 0.0180],
        [0.0276, 0.0435, 0.0431, 0.0767, 0.0173, 0.0389, 0.0828, 0.0318, 0.0455,
         0.0182, 0.0389, 0.0828, 0.0338, 0.0389, 0.0806, 0.0216, 0.0538, 0.0322,
         0.0517, 0.0116, 0.0322, 0.0257, 0.0116, 0.0322, 0.0158, 0.0116],
        [0.0363, 0.0435, 0.0397, 0.0546, 0.0222, 0.0380, 0.0797, 0.0295, 0.0418,
         0.0276, 0.0380, 0.0797, 0.0341, 0.0380, 0.0619, 0.0292, 0.0463, 0.0393,
         0.0395, 0.0171, 0.0393, 0.0319, 0.0171, 0.0393, 0.0197, 0.0171],
        [0.0322, 0.0474, 0.0412, 0.0681, 0.0189, 0.0395, 0.0661, 0.0293, 0.0445,
         0.0260, 0.0395, 0.0661, 0.0356, 0.0395, 0.0653, 0.0273, 0.0558, 0.0358,
         0.0504, 0.0163, 0.0358, 0.0325, 0.0163, 0.0358, 0.0184, 0.0163],
        [0.0209, 0.0509, 0.0484, 0.0835, 0.0150, 0.0372, 0.0888, 0.0261, 0.0429,
         0.0133, 0.0372, 0.0888, 0.0361, 0.0372, 0.1000, 0.0202, 0.0452, 0.0311,
         0.0416, 0.0104, 0.0311, 0.0315, 0.0104, 0.0311, 0.0107, 0.0104],
        [0.0179, 0.0477, 0.0345, 0.0911, 0.0127, 0.0352, 0.1075, 0.0306, 0.0417,
         0.0108, 0.0352, 0.1075, 0.0304, 0.0352, 0.1104, 0.0155, 0.0389, 0.0319,
         0.0424, 0.0063, 0.0319, 0.0294, 0.0063, 0.0319, 0.0106, 0.0063],
        [0.0214, 0.0394, 0.0333, 0.0911, 0.0151, 0.0445, 0.0804, 0.0231, 0.0363,
         0.0188, 0.0445, 0.0804, 0.0317, 0.0445, 0.1045, 0.0182, 0.0442, 0.0438,
         0.0326, 0.0101, 0.0438, 0.0204, 0.0101, 0.0438, 0.0139, 0.0101],
        [0.0209, 0.0509, 0.0484, 0.0835, 0.0150, 0.0372, 0.0888, 0.0261, 0.0429,
         0.0133, 0.0372, 0.0888, 0.0361, 0.0372, 0.1000, 0.0202, 0.0452, 0.0311,
         0.0416, 0.0104, 0.0311, 0.0315, 0.0104, 0.0311, 0.0107, 0.0104],
        [0.0261, 0.0411, 0.0470, 0.0787, 0.0184, 0.0419, 0.0806, 0.0294, 0.0465,
         0.0153, 0.0419, 0.0806, 0.0274, 0.0419, 0.0767, 0.0151, 0.0408, 0.0453,
         0.0472, 0.0099, 0.0453, 0.0246, 0.0099, 0.0453, 0.0129, 0.0099],
        [0.0214, 0.0394, 0.0333, 0.0911, 0.0151, 0.0445, 0.0804, 0.0231, 0.0363,
         0.0188, 0.0445, 0.0804, 0.0317, 0.0445, 0.1045, 0.0182, 0.0442, 0.0438,
         0.0326, 0.0101, 0.0438, 0.0204, 0.0101, 0.0438, 0.0139, 0.0101],
        [0.0209, 0.0509, 0.0484, 0.0835, 0.0150, 0.0372, 0.0888, 0.0261, 0.0429,
         0.0133, 0.0372, 0.0888, 0.0361, 0.0372, 0.1000, 0.0202, 0.0452, 0.0311,
         0.0416, 0.0104, 0.0311, 0.0315, 0.0104, 0.0311, 0.0107, 0.0104],
        [0.0237, 0.0475, 0.0442, 0.0811, 0.0170, 0.0365, 0.0859, 0.0291, 0.0447,
         0.0137, 0.0365, 0.0859, 0.0301, 0.0365, 0.1078, 0.0186, 0.0482, 0.0350,
         0.0370, 0.0115, 0.0350, 0.0256, 0.0115, 0.0350, 0.0109, 0.0115],
        [0.0214, 0.0394, 0.0333, 0.0911, 0.0151, 0.0445, 0.0804, 0.0231, 0.0363,
         0.0188, 0.0445, 0.0804, 0.0317, 0.0445, 0.1045, 0.0182, 0.0442, 0.0438,
         0.0326, 0.0101, 0.0438, 0.0204, 0.0101, 0.0438, 0.0139, 0.0101]])