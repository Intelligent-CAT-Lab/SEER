61380
Test: public void test20859() throws Throwable { InternalParser[] internalParserArray0 = new InternalParser[7]; DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.clockhourOfHalfday(); DateTimeFormatterBuilder.Fraction dateTimeFormatterBuilder_Fraction0 = new DateTimeFormatterBuilder.Fraction(dateTimeFieldType0, (-1981), (-1981)); internalParserArray0[0] = (InternalParser) dateTimeFormatterBuilder_Fraction0; DateTimeFormatterBuilder.UnpaddedNumber dateTimeFormatterBuilder_UnpaddedNumber0 = new DateTimeFormatterBuilder.UnpaddedNumber(dateTimeFieldType0, (-1981), true); internalParserArray0[1] = (InternalParser) dateTimeFormatterBuilder_UnpaddedNumber0; DateTimeFormatterBuilder.Fraction dateTimeFormatterBuilder_Fraction1 = new DateTimeFormatterBuilder.Fraction(dateTimeFieldType0, (-1981), (-1981)); internalParserArray0[2] = (InternalParser) dateTimeFormatterBuilder_Fraction1; DateTimeFormatterBuilder.PaddedNumber dateTimeFormatterBuilder_PaddedNumber0 = new DateTimeFormatterBuilder.PaddedNumber(dateTimeFieldType0, 1278, true, (-1981)); internalParserArray0[3] = (InternalParser) dateTimeFormatterBuilder_PaddedNumber0; DateTimeFormatterBuilder.TextField dateTimeFormatterBuilder_TextField0 = new DateTimeFormatterBuilder.TextField(dateTimeFieldType0, true); internalParserArray0[4] = (InternalParser) dateTimeFormatterBuilder_TextField0; DateTimeFormatterBuilder.PaddedNumber dateTimeFormatterBuilder_PaddedNumber1 = new DateTimeFormatterBuilder.PaddedNumber(dateTimeFieldType0, 341, true, 1278); internalParserArray0[5] = (InternalParser) dateTimeFormatterBuilder_PaddedNumber1; DateTimeFormatterBuilder.TimeZoneOffset dateTimeFormatterBuilder_TimeZoneOffset0 = new DateTimeFormatterBuilder.TimeZoneOffset("America/Indiana/Indianapolis", "America/Indiana/Indianapolis", true, 442, 442); internalParserArray0[6] = (InternalParser) dateTimeFormatterBuilder_TimeZoneOffset0; DateTimeFormatterBuilder.MatchingParser dateTimeFormatterBuilder_MatchingParser0 = new DateTimeFormatterBuilder.MatchingParser(internalParserArray0); EthiopicChronology ethiopicChronology0 = EthiopicChronology.getInstance((DateTimeZone) null); EthiopicChronology ethiopicChronology1 = (EthiopicChronology)ethiopicChronology0.withZone((DateTimeZone) null); Locale locale0 = new Locale("America/Indiana/Indianapolis", "Europe/U", "America/Indiana/Indianapolis"); DateTimeParserBucket dateTimeParserBucket0 = new DateTimeParserBucket(0L, ethiopicChronology1, locale0, (Integer) 1, (-854)); int int0 = dateTimeFormatterBuilder_MatchingParser0.parseInto(dateTimeParserBucket0, "America/Indiana/Indianapolis", (-854)); DateTimeFormatterBuilder dateTimeFormatterBuilder0 = new DateTimeFormatterBuilder(); InternalParserDateTimeParser internalParserDateTimeParser0 = (InternalParserDateTimeParser)InternalParserDateTimeParser.of(dateTimeFormatterBuilder_Fraction0); DateTimeFormatterBuilder dateTimeFormatterBuilder1 = dateTimeFormatterBuilder0.appendOptional(internalParserDateTimeParser0); }
Code: public DateTimeFormatterBuilder appendOptional(DateTimeParser parser) { checkParser(parser); InternalParser[] parsers = new InternalParser[] {DateTimeParserInternalParser.of(parser), null}; return append0(null, new MatchingParser(parsers)); }
[[0.04888989 0.0678232  0.0678232  0.0526495  0.06544566 0.0678232
 0.0678232  0.0678232  0.03077897 0.02464018 0.0678232  0.0678232
 0.0678232  0.05383692 0.0678232  0.02464018 0.06782322 0.02088667]
[0.03942496 0.06512794 0.06512794 0.06912474 0.06622706 0.06512794
 0.06512794 0.06512794 0.04316561 0.03029468 0.06512794 0.06512794
 0.06512794 0.04794926 0.06512794 0.03029468 0.06512795 0.02223958]
[0.03942496 0.06512794 0.06512794 0.06912474 0.06622706 0.06512794
 0.06512794 0.06512794 0.04316561 0.03029468 0.06512794 0.06512794
 0.06512794 0.04794926 0.06512794 0.03029468 0.06512795 0.02223958]
[0.04590945 0.06102939 0.06102939 0.06464884 0.08476928 0.06102939
 0.06102939 0.06102939 0.04164466 0.02917685 0.06102939 0.06102939
 0.06102939 0.07091796 0.06102939 0.02917685 0.06102942 0.02346226]
[0.04991635 0.06133181 0.06133181 0.06606239 0.08936013 0.06133181
 0.06133181 0.06133181 0.04196782 0.02653138 0.06133181 0.06133181
 0.06133181 0.05625711 0.06133181 0.02653138 0.06133182 0.03005536]
[0.03942496 0.06512794 0.06512794 0.06912474 0.06622706 0.06512794
 0.06512794 0.06512794 0.04316561 0.03029468 0.06512794 0.06512794
 0.06512794 0.04794926 0.06512794 0.03029468 0.06512795 0.02223958]
[0.03942496 0.06512794 0.06512794 0.06912474 0.06622706 0.06512794
 0.06512794 0.06512794 0.04316561 0.03029468 0.06512794 0.06512794
 0.06512794 0.04794926 0.06512794 0.03029468 0.06512795 0.02223958]
[0.03942496 0.06512794 0.06512794 0.06912474 0.06622706 0.06512794
 0.06512794 0.06512794 0.04316561 0.03029468 0.06512794 0.06512794
 0.06512794 0.04794926 0.06512794 0.03029468 0.06512795 0.02223958]
[0.0476228  0.06732647 0.06732647 0.06324021 0.05497106 0.06732647
 0.06732647 0.06732647 0.03982572 0.02247643 0.06732647 0.06732647
 0.06732647 0.05249674 0.06732647 0.02247643 0.06732649 0.02362592]
[0.04266075 0.06472242 0.06472242 0.05924686 0.07893034 0.06472242
 0.06472242 0.06472242 0.03399146 0.02753993 0.06472242 0.06472242
 0.06472242 0.06006585 0.06472242 0.02753993 0.06472243 0.02280072]
[0.03942496 0.06512794 0.06512794 0.06912474 0.06622706 0.06512794
 0.06512794 0.06512794 0.04316561 0.03029468 0.06512794 0.06512794
 0.06512794 0.04794926 0.06512794 0.03029468 0.06512795 0.02223958]
[0.03942496 0.06512794 0.06512794 0.06912474 0.06622706 0.06512794
 0.06512794 0.06512794 0.04316561 0.03029468 0.06512794 0.06512794
 0.06512794 0.04794926 0.06512794 0.03029468 0.06512795 0.02223958]
[0.03942496 0.06512794 0.06512794 0.06912474 0.06622706 0.06512794
 0.06512794 0.06512794 0.04316561 0.03029468 0.06512794 0.06512794
 0.06512794 0.04794926 0.06512794 0.03029468 0.06512795 0.02223958]
[0.03451867 0.06847647 0.06847647 0.06904251 0.06817414 0.06847647
 0.06847647 0.06847647 0.03378931 0.02053255 0.06847647 0.06847647
 0.06847647 0.04999746 0.06847647 0.02053255 0.06847648 0.01864809]
[0.03942496 0.06512794 0.06512794 0.06912474 0.06622706 0.06512794
 0.06512794 0.06512794 0.04316561 0.03029468 0.06512794 0.06512794
 0.06512794 0.04794926 0.06512794 0.03029468 0.06512795 0.02223958]
[0.04266075 0.06472242 0.06472242 0.05924686 0.07893034 0.06472242
 0.06472242 0.06472242 0.03399146 0.02753993 0.06472242 0.06472242
 0.06472242 0.06006585 0.06472242 0.02753993 0.06472243 0.02280072]
[0.03942496 0.06512794 0.06512794 0.06912473 0.06622706 0.06512794
 0.06512794 0.06512794 0.0431656  0.03029468 0.06512794 0.06512794
 0.06512794 0.04794927 0.06512794 0.03029468 0.06512795 0.02223958]
[0.03497161 0.06235246 0.06235246 0.05734786 0.10748169 0.06235246
 0.06235246 0.06235246 0.03353565 0.01969457 0.06235246 0.06235246
 0.06235246 0.08146863 0.06235246 0.01969457 0.06235247 0.02228089]]