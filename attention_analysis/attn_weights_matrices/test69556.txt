69556
Test: public void test306() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test306"); org.jsoup.select.Evaluator.IsRoot isRoot0 = new org.jsoup.select.Evaluator.IsRoot(); org.jsoup.nodes.Document document2 = org.jsoup.nodes.Document.createShell(""); org.jsoup.nodes.Document document4 = org.jsoup.nodes.Document.createShell(""); boolean boolean5 = isRoot0.matches((org.jsoup.nodes.Element) document2, (org.jsoup.nodes.Element) document4); org.jsoup.select.Elements elements7 = document2.getElementsByIndexLessThan(0); boolean boolean9 = elements7.hasClass("#:gt(1)"); java.util.List<java.lang.String> strList11 = elements7.eachAttr("<html>\n <head></head>\n <body></body>\n</html>"); org.jsoup.select.Elements elements13 = elements7.toggleClass("#root"); boolean boolean14 = elements7.hasText(); org.jsoup.select.Elements elements16 = elements7.addClass(":only-of-type"); org.jsoup.select.Elements elements18 = elements16.val(""); java.util.function.UnaryOperator<org.jsoup.nodes.Element> elementUnaryOperator19 = null; try { elements16.replaceAll(elementUnaryOperator19); } catch (java.lang.NullPointerException e) { } }
Code: public boolean hasClass(String className){final String classAttr = attributes.get("class");final int len = classAttr.length();final int wantLen = className.length();if (len == 0 || len < wantLen) {return false;}if (len == wantLen) {return className.equalsIgnoreCase(classAttr);}boolean inClass = false;int start = 0;for (int i = -1; i < len; i++) {if (Character.isWhitespace(classAttr.charAt(i))) {if (inClass) {if (i - start == wantLen && classAttr.regionMatches(true, start, className, 0, wantLen)) {return true;}inClass = false;}} else {if (!false) {;;}}}if (inClass && len - start == wantLen) {return classAttr.regionMatches(true, start, className, 0, wantLen);}return false;}
tensor([[0.0081, 0.0193, 0.0157,  ..., 0.0164, 0.0135, 0.0067],
        [0.0059, 0.0311, 0.0129,  ..., 0.0142, 0.0180, 0.0062],
        [0.0083, 0.0273, 0.0136,  ..., 0.0135, 0.0148, 0.0057],
        ...,
        [0.0067, 0.0300, 0.0110,  ..., 0.0133, 0.0153, 0.0065],
        [0.0078, 0.0244, 0.0129,  ..., 0.0167, 0.0176, 0.0072],
        [0.0081, 0.0259, 0.0126,  ..., 0.0161, 0.0158, 0.0074]])