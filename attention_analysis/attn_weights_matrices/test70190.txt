70190
Test: public void test056() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test056"); org.apache.commons.jxpath.ri.model.NodePointer nodePointer0 = null; org.w3c.dom.Node node1 = null; org.apache.commons.jxpath.ri.model.dom.DOMNodePointer dOMNodePointer2 = new org.apache.commons.jxpath.ri.model.dom.DOMNodePointer(nodePointer0, node1); org.apache.commons.jxpath.ri.QName qName5 = new org.apache.commons.jxpath.ri.QName("hi!", ""); java.util.Locale locale6 = null; org.apache.commons.jxpath.ri.model.beans.NullPointer nullPointer7 = new org.apache.commons.jxpath.ri.model.beans.NullPointer(qName5, locale6); org.apache.commons.jxpath.ri.compiler.NodeNameTest nodeNameTest9 = new org.apache.commons.jxpath.ri.compiler.NodeNameTest(qName5, "http: boolean boolean10 = nodeNameTest9.isWildcard(); java.lang.String str11 = nodeNameTest9.getNamespaceURI(); try { boolean boolean12 = dOMNodePointer2.testNode((org.apache.commons.jxpath.ri.compiler.NodeTest) nodeNameTest9); } catch (java.lang.NullPointerException e) { } }
Code: public static boolean testNode(Node node, NodeTest test) { if (test == null) { return true; } if (test instanceof NodeNameTest) { if (node.getNodeType() != Node.ELEMENT_NODE) { return false; } NodeNameTest nodeNameTest = (NodeNameTest) test; QName testName = nodeNameTest.getNodeName(); String namespaceURI = nodeNameTest.getNamespaceURI(); boolean wildcard = nodeNameTest.isWildcard(); String testPrefix = testName.getPrefix(); if (wildcard && testPrefix == null) { return true; } if (wildcard || testName.getName() .equals(DOMNodePointer.getLocalName(node))) { String nodeNS = DOMNodePointer.getNamespaceURI(node); return equalStrings(namespaceURI, nodeNS) || nodeNS == null && equalStrings(testPrefix, getPrefix(node)); } return false; } if (test instanceof NodeTypeTest) { int nodeType = node.getNodeType(); switch (((NodeTypeTest) test).getNodeType()) { case Compiler.NODE_TYPE_NODE : return nodeType == Node.ELEMENT_NODE || nodeType == Node.DOCUMENT_NODE; case Compiler.NODE_TYPE_TEXT : return nodeType == Node.CDATA_SECTION_NODE || nodeType == Node.TEXT_NODE; case Compiler.NODE_TYPE_COMMENT : return nodeType == Node.COMMENT_NODE; case Compiler.NODE_TYPE_PI : return nodeType == Node.PROCESSING_INSTRUCTION_NODE; } return false; } if (test instanceof ProcessingInstructionTest) { if (node.getNodeType() == Node.PROCESSING_INSTRUCTION_NODE) { String testPI = ((ProcessingInstructionTest) test).getTarget(); String nodePI = ((ProcessingInstruction) node).getTarget(); return testPI.equals(nodePI); } } return false; }
tensor([[0.0047, 0.0140, 0.0117,  ..., 0.0052, 0.0065, 0.0020],
        [0.0047, 0.0127, 0.0145,  ..., 0.0045, 0.0073, 0.0023],
        [0.0035, 0.0124, 0.0199,  ..., 0.0055, 0.0067, 0.0015],
        ...,
        [0.0032, 0.0147, 0.0171,  ..., 0.0047, 0.0070, 0.0017],
        [0.0047, 0.0106, 0.0123,  ..., 0.0054, 0.0083, 0.0026],
        [0.0033, 0.0128, 0.0120,  ..., 0.0069, 0.0070, 0.0017]])