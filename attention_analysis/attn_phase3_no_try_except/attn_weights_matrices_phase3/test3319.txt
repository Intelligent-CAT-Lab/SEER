3319
Test: public void test302() throws Throwable { Service service0 = Service.ignite(); int int0 = 60; service0.threadIdleTimeoutMillis = 60; Service service1 = service0.webSocketIdleTimeoutMillis((-2012)); String string0 = "Must provide a keystore file to run secured"; Service service2 = service1.staticFileLocation(string0); DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>(); Delayed delayed0 = delayQueue0.poll(); service2.embeddedServerIdentifier((Object) delayed0); service2.maxThreads = service0.SPARK_DEFAULT_PORT; String string1 = null; Service service3 = service1.externalStaticFileLocation(string0); Consumer<Exception> consumer0 = null; boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions(); String string2 = "http://xmlns.jcp.org/xml/ns/javaee/web-common_3_1.xsd"; service3.internalServerError(string2); service3.initExceptionHandler(consumer0); }
Code: public void initExceptionHandler(Consumer<Exception> initExceptionHandler) { if (initialized) { throwBeforeRouteMappingException(); } this.initExceptionHandler = initExceptionHandler; }
[[0.06002235 0.04768588 0.08325996 0.08325996 0.07310469 0.16108175
 0.08325996 0.07310469 0.08325996 0.02405788 0.08325996 0.03732514
 0.08325997 0.02405788]
[0.04502753 0.03930042 0.08741739 0.08741739 0.07846771 0.14980349
 0.08741739 0.07846771 0.08741739 0.02388034 0.08741739 0.03666811
 0.08741739 0.02388034]
[0.05143663 0.04405533 0.08688053 0.08688053 0.07584531 0.12509377
 0.08688053 0.07584531 0.08688054 0.02618584 0.08688054 0.05406877
 0.08688055 0.02618583]
[0.05143663 0.04405533 0.08688053 0.08688053 0.07584531 0.12509377
 0.08688053 0.07584531 0.08688054 0.02618584 0.08688054 0.05406877
 0.08688055 0.02618583]
[0.06004835 0.05210543 0.08016552 0.08016552 0.09318333 0.10386316
 0.08016552 0.09318333 0.08016554 0.03339239 0.08016554 0.04983842
 0.08016554 0.03339239]
[0.03718838 0.0279926  0.08595986 0.08595986 0.07816627 0.20967795
 0.08595986 0.07816627 0.08595988 0.01197428 0.08595988 0.02910079
 0.08595988 0.01197428]
[0.05143663 0.04405533 0.08688053 0.08688053 0.07584531 0.12509377
 0.08688053 0.07584531 0.08688054 0.02618584 0.08688054 0.05406877
 0.08688055 0.02618583]
[0.06004835 0.05210543 0.08016552 0.08016552 0.09318333 0.10386316
 0.08016552 0.09318333 0.08016554 0.03339239 0.08016554 0.04983842
 0.08016554 0.03339239]
[0.05143663 0.04405533 0.08688053 0.08688053 0.07584531 0.12509377
 0.08688053 0.07584531 0.08688054 0.02618584 0.08688054 0.05406877
 0.08688055 0.02618583]
[0.0414653  0.03836174 0.07771648 0.07771648 0.10557313 0.15980709
 0.07771648 0.10557313 0.07771648 0.02276652 0.07771648 0.03738762
 0.07771651 0.02276652]
[0.05143663 0.04405533 0.08688053 0.08688053 0.07584531 0.12509377
 0.08688053 0.07584531 0.08688054 0.02618584 0.08688054 0.05406877
 0.08688055 0.02618583]
[0.06066528 0.04906511 0.08586442 0.08586442 0.06649522 0.13388616
 0.08586442 0.06649522 0.08586442 0.02924507 0.08586442 0.04971631
 0.08586443 0.02924506]
[0.05143663 0.04405533 0.08688053 0.08688053 0.07584531 0.12509379
 0.08688053 0.07584531 0.08688053 0.02618584 0.08688053 0.05406876
 0.08688054 0.02618583]
[0.0414653  0.03836174 0.07771648 0.07771648 0.10557315 0.15980706
 0.07771648 0.10557315 0.07771648 0.02276653 0.07771648 0.03738762
 0.07771651 0.02276653]]