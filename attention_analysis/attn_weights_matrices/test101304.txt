101304
Test: public void test217() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test217"); org.joda.time.ReadableInterval readableInterval1 = null; org.joda.time.ReadableInterval readableInterval2 = org.joda.time.DateTimeUtils.getReadableInterval(readableInterval1); org.joda.time.ReadableInstant readableInstant3 = null; boolean boolean4 = readableInterval2.contains(readableInstant3); org.joda.time.DateTime dateTime5 = readableInterval2.getStart(); org.joda.time.ReadableInterval readableInterval6 = null; org.joda.time.ReadableInterval readableInterval7 = org.joda.time.DateTimeUtils.getReadableInterval(readableInterval6); org.joda.time.ReadableInstant readableInstant8 = null; boolean boolean9 = readableInterval7.contains(readableInstant8); org.joda.time.DateTime dateTime10 = readableInterval7.getStart(); java.util.Date date11 = dateTime10.toDate(); boolean boolean12 = dateTime5.isBefore((org.joda.time.ReadableInstant) dateTime10); org.joda.time.DateTimeZone dateTimeZone13 = dateTime5.getZone(); org.joda.time.MutableDateTime mutableDateTime14 = new org.joda.time.MutableDateTime((long) (short) 100, dateTimeZone13); mutableDateTime14.addWeeks(0); org.joda.time.ReadableInterval readableInterval18 = null; org.joda.time.ReadableInterval readableInterval19 = org.joda.time.DateTimeUtils.getReadableInterval(readableInterval18); org.joda.time.ReadableInstant readableInstant20 = null; boolean boolean21 = readableInterval19.contains(readableInstant20); org.joda.time.DateTime dateTime22 = readableInterval19.getStart(); org.joda.time.ReadableInterval readableInterval23 = null; org.joda.time.ReadableInterval readableInterval24 = org.joda.time.DateTimeUtils.getReadableInterval(readableInterval23); org.joda.time.ReadableInstant readableInstant25 = null; boolean boolean26 = readableInterval24.contains(readableInstant25); org.joda.time.DateTime dateTime27 = readableInterval24.getStart(); java.util.Date date28 = dateTime27.toDate(); boolean boolean29 = dateTime22.isBefore((org.joda.time.ReadableInstant) dateTime27); org.joda.time.DateTimeZone dateTimeZone30 = dateTime22.getZone(); org.joda.time.MutableDateTime mutableDateTime31 = new org.joda.time.MutableDateTime((long) (short) 100, dateTimeZone30); java.util.TimeZone timeZone32 = dateTimeZone30.toTimeZone(); mutableDateTime14.setZone(dateTimeZone30); org.joda.time.chrono.ISOChronology iSOChronology34 = org.joda.time.chrono.ISOChronology.getInstance(); org.joda.time.DateTimeField dateTimeField35 = iSOChronology34.millisOfSecond(); org.joda.time.DurationField durationField36 = iSOChronology34.millis(); mutableDateTime14.setChronology((org.joda.time.Chronology) iSOChronology34); int int38 = mutableDateTime14.getSecondOfMinute(); mutableDateTime14.addDays((int) (byte) 16); org.joda.time.ReadableDuration readableDuration41 = null; mutableDateTime14.add(readableDuration41, 0); }
Code: public void addDays(final int days) { if (days != 0) { setMillis(getChronology().days().add(getMillis(), days)); } }
tensor([[0.0485, 0.0394, 0.1394, 0.0304, 0.1929, 0.0662, 0.1309, 0.1001, 0.0267,
         0.0276, 0.0662, 0.0589, 0.0307, 0.0210, 0.0210],
        [0.0345, 0.0317, 0.1182, 0.0178, 0.2997, 0.0673, 0.1159, 0.0933, 0.0231,
         0.0247, 0.0673, 0.0464, 0.0198, 0.0202, 0.0202],
        [0.0420, 0.0335, 0.1296, 0.0228, 0.2184, 0.0797, 0.1194, 0.1046, 0.0225,
         0.0332, 0.0797, 0.0513, 0.0242, 0.0195, 0.0195],
        [0.0333, 0.0289, 0.1184, 0.0244, 0.1893, 0.0731, 0.1918, 0.0895, 0.0206,
         0.0256, 0.0731, 0.0739, 0.0263, 0.0160, 0.0160],
        [0.0538, 0.0451, 0.1084, 0.0215, 0.2130, 0.0667, 0.1199, 0.1083, 0.0340,
         0.0272, 0.0667, 0.0617, 0.0339, 0.0200, 0.0200],
        [0.0515, 0.0445, 0.1198, 0.0252, 0.1487, 0.0778, 0.0894, 0.1403, 0.0356,
         0.0340, 0.0778, 0.0593, 0.0396, 0.0282, 0.0282],
        [0.0279, 0.0218, 0.1159, 0.0135, 0.3276, 0.0650, 0.1598, 0.0941, 0.0115,
         0.0255, 0.0650, 0.0387, 0.0143, 0.0097, 0.0097],
        [0.0403, 0.0308, 0.1283, 0.0223, 0.2176, 0.0756, 0.1442, 0.0783, 0.0238,
         0.0374, 0.0756, 0.0629, 0.0297, 0.0165, 0.0165],
        [0.0355, 0.0244, 0.1163, 0.0203, 0.2389, 0.0820, 0.1396, 0.1181, 0.0150,
         0.0303, 0.0820, 0.0482, 0.0200, 0.0146, 0.0146],
        [0.0410, 0.0403, 0.1168, 0.0252, 0.2034, 0.0700, 0.1384, 0.0939, 0.0323,
         0.0280, 0.0700, 0.0627, 0.0293, 0.0243, 0.0243],
        [0.0515, 0.0445, 0.1198, 0.0252, 0.1487, 0.0778, 0.0894, 0.1403, 0.0356,
         0.0340, 0.0778, 0.0593, 0.0396, 0.0282, 0.0282],
        [0.0410, 0.0370, 0.1105, 0.0235, 0.2188, 0.0916, 0.1175, 0.0978, 0.0225,
         0.0296, 0.0916, 0.0578, 0.0250, 0.0179, 0.0179],
        [0.0408, 0.0284, 0.1281, 0.0276, 0.1926, 0.0689, 0.1644, 0.1181, 0.0209,
         0.0228, 0.0689, 0.0608, 0.0277, 0.0150, 0.0150],
        [0.0377, 0.0342, 0.1205, 0.0289, 0.1889, 0.0892, 0.1438, 0.0975, 0.0267,
         0.0266, 0.0892, 0.0552, 0.0223, 0.0196, 0.0196],
        [0.0377, 0.0342, 0.1205, 0.0289, 0.1889, 0.0892, 0.1438, 0.0975, 0.0267,
         0.0266, 0.0892, 0.0552, 0.0223, 0.0196, 0.0196]])