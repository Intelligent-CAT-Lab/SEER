69422
Test: public void test20() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test20"); java.nio.ByteBuffer byteBuffer0 = null; org.jsoup.parser.Parser parser3 = org.jsoup.parser.Parser.xmlParser(); try { org.jsoup.nodes.Document document4 = org.jsoup.helper.DataUtil.parseByteData(byteBuffer0, "[#doctype$=[]]", ":matches(null", parser3); } catch (java.nio.charset.IllegalCharsetNameException e) { } }
Code: static Document parseByteData(ByteBuffer byteData, String charsetName, String baseUri, Parser parser){String docData;Document doc = null;if (charsetName == null) { docData = Charset.forName(defaultCharset).decode(byteData).toString();doc = parser.parseInput(docData, baseUri);Element meta = doc.select("meta[http-equiv=content-type], meta[charset]").first();if (meta != null) { String foundCharset = meta.hasAttr("http-equiv") ? getCharsetFromContentType(meta.attr("content")) : meta.attr("charset");if (foundCharset != null && foundCharset.length() != 1 && !foundCharset.equals(defaultCharset)) { ;;docData = Charset.forName(foundCharset).decode(byteData).toString();doc = null;}}} else { Validate.notEmpty(charsetName, "Must set charset arg to character set of file to parse. Set to null to attempt to detect from HTML");docData = Charset.forName(charsetName).decode(byteData).toString();}if (doc == null) {doc = parser.parseInput(docData, baseUri);doc.outputSettings().charset(charsetName);}return doc;}
tensor([[0.0249, 0.0324, 0.0099,  ..., 0.0153, 0.0136, 0.0168],
        [0.0230, 0.0305, 0.0093,  ..., 0.0167, 0.0116, 0.0172],
        [0.0254, 0.0270, 0.0093,  ..., 0.0160, 0.0127, 0.0131],
        ...,
        [0.0249, 0.0359, 0.0090,  ..., 0.0175, 0.0125, 0.0189],
        [0.0233, 0.0317, 0.0094,  ..., 0.0141, 0.0112, 0.0135],
        [0.0265, 0.0261, 0.0084,  ..., 0.0203, 0.0115, 0.0141]])