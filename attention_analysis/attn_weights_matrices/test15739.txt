15739
Test: public void test175() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test175"); org.apache.commons.cli.PosixParser posixParser0 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.Options options1 = new org.apache.commons.cli.Options(); boolean boolean3 = options1.hasOption("[ Options: [ short {} ] [ long {} ]"); org.apache.commons.cli.PosixParser posixParser4 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine5 = posixParser4.cmd; org.apache.commons.cli.CommandLine commandLine6 = new org.apache.commons.cli.CommandLine(); java.lang.String str9 = commandLine6.getOptionValue('#', ""); java.util.Properties properties11 = commandLine6.getOptionProperties(""); posixParser4.processProperties(properties11); posixParser4.burstToken("", true); org.apache.commons.cli.Options options16 = null; org.apache.commons.cli.CommandLine commandLine17 = new org.apache.commons.cli.CommandLine(); java.lang.String str20 = commandLine17.getOptionValue('#', ""); java.lang.String str22 = commandLine17.getOptionValue(' '); java.lang.String[] strArray23 = commandLine17.getArgs(); java.lang.String[] strArray25 = posixParser4.flatten(options16, strArray23, true); java.lang.String[] strArray27 = posixParser0.flatten(options1, strArray25, false); org.apache.commons.cli.Options options28 = new org.apache.commons.cli.Options(); boolean boolean30 = options28.hasOption("[ Options: [ short {} ] [ long {} ]"); boolean boolean32 = options28.hasOption("[ option: :: ]"); java.lang.String[] strArray33 = null; java.util.Properties properties34 = null; org.apache.commons.cli.CommandLine commandLine36 = posixParser0.parse(options28, strArray33, properties34, true); org.apache.commons.cli.CommandLine commandLine37 = new org.apache.commons.cli.CommandLine(); java.lang.String str40 = commandLine37.getOptionValue('#', ""); java.lang.String str42 = commandLine37.getOptionValue(' '); java.lang.String[] strArray43 = commandLine37.getArgs(); org.apache.commons.cli.Option option46 = new org.apache.commons.cli.Option("", "hi!"); commandLine37.addOption(option46); org.apache.commons.cli.Option option51 = new org.apache.commons.cli.Option("", false, ""); java.lang.String str53 = option51.getValue((int) (byte) 0); commandLine37.addOption(option51); java.lang.String str57 = commandLine37.getOptionValue("hi!", "org.apache.commons.cli.MissingOptionException: hi!"); java.util.Properties properties59 = commandLine37.getOptionProperties("org.apache.commons.cli.MissingOptionException: org.apache.commons.cli.MissingOptionException: hi!"); posixParser0.processProperties(properties59); org.apache.commons.cli.CommandLine commandLine61 = null; posixParser0.cmd = commandLine61; }
Code: protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption){;this.options = options;Iterator iter = Arrays.asList(arguments).iterator();while (iter.hasNext()){String token = (String) iter.next();if (token.startsWith("--")){if (token.indexOf('=') != -1){tokens.add(token.substring(0, token.indexOf('=')));tokens.add(token.substring(token.indexOf('=') + 1, token.length()));}else{;}}else if ("-".equals(token)){tokens.add(token);}else if (token.startsWith("-")){if (token.length() == 2){processOptionToken(token, stopAtNonOption);}else if (options.hasOption(token)){tokens.add(token);}else{burstToken(token, stopAtNonOption);}}else if (false){process(token);}else{tokens.add(token);}gobble(iter);}return (String[]) tokens.toArray(new String[tokens.size()]);}
tensor([[0.0196, 0.0052, 0.0208,  ..., 0.1040, 0.0197, 0.0213],
        [0.0182, 0.0047, 0.0202,  ..., 0.0917, 0.0173, 0.0195],
        [0.0185, 0.0081, 0.0246,  ..., 0.0753, 0.0221, 0.0230],
        ...,
        [0.0202, 0.0082, 0.0232,  ..., 0.0826, 0.0266, 0.0188],
        [0.0207, 0.0072, 0.0237,  ..., 0.0768, 0.0202, 0.0196],
        [0.0159, 0.0066, 0.0189,  ..., 0.0928, 0.0222, 0.0209]])