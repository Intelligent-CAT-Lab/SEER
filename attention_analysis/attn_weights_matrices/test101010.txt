101010
Test: public void test0311() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0311"); org.joda.time.chrono.ISOChronology iSOChronology0 = org.joda.time.chrono.ISOChronology.getInstance(); org.joda.time.DateTimeField dateTimeField1 = iSOChronology0.yearOfEra(); org.joda.time.DateTime dateTime2 = org.joda.time.DateTime.now((org.joda.time.Chronology) iSOChronology0); org.joda.time.DateTimeField dateTimeField3 = iSOChronology0.minuteOfHour(); org.joda.time.chrono.GJChronology gJChronology4 = org.joda.time.chrono.GJChronology.getInstanceUTC(); org.joda.time.DateTimeField dateTimeField5 = gJChronology4.yearOfCentury(); org.joda.time.DateTime dateTime6 = new org.joda.time.DateTime((org.joda.time.Chronology) gJChronology4); int int7 = dateTime6.getEra(); int int8 = dateTime6.getMillisOfSecond(); org.joda.time.DateTime.Property property9 = dateTime6.year(); org.joda.time.ReadableDuration readableDuration10 = null; org.joda.time.DateTime dateTime11 = dateTime6.plus(readableDuration10); int int12 = dateTime11.getMillisOfDay(); org.joda.time.DateTimeFieldType dateTimeFieldType13 = org.joda.time.DateTimeFieldType.millisOfDay(); int int14 = dateTime11.get(dateTimeFieldType13); org.joda.time.field.DelegatedDateTimeField delegatedDateTimeField15 = new org.joda.time.field.DelegatedDateTimeField(dateTimeField3, dateTimeFieldType13); java.util.Locale locale16 = null; int int17 = delegatedDateTimeField15.getMaximumShortTextLength(locale16); long long19 = delegatedDateTimeField15.roundHalfCeiling((long) 392); java.lang.String str21 = delegatedDateTimeField15.getAsShortText(1L); long long24 = delegatedDateTimeField15.add((long) 54, 74); long long27 = delegatedDateTimeField15.getDifferenceAsLong((long) 2760477, (long) (-292269055)); int int30 = delegatedDateTimeField15.getDifference((long) 969, 31557600000L); }
Code: public long add(long instant, int value) { if (instant >= iCutover) { instant = iGregorianField.add(instant, value); if (instant < iCutover) { if (instant + iGapDuration < iCutover) { instant = gregorianToJulian(instant); } } } else { instant = iJulianField.add(instant, value); if (instant >= iCutover) { if (instant - iGapDuration >= iCutover) { instant = julianToGregorian(instant); } } } return instant; }
tensor([[0.0123, 0.0201, 0.0151,  ..., 0.0137, 0.0126, 0.0055],
        [0.0082, 0.0163, 0.0198,  ..., 0.0120, 0.0118, 0.0049],
        [0.0095, 0.0154, 0.0148,  ..., 0.0158, 0.0115, 0.0037],
        ...,
        [0.0082, 0.0217, 0.0175,  ..., 0.0117, 0.0139, 0.0045],
        [0.0101, 0.0171, 0.0141,  ..., 0.0148, 0.0134, 0.0036],
        [0.0091, 0.0148, 0.0133,  ..., 0.0197, 0.0141, 0.0049]])