62829
Test: public void testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter() { Gson gson = new GsonBuilder() .registerTypeAdapter(Part.class, new TypeAdapter<Part>() { @Override public void write(JsonWriter out, Part part) throws IOException { throw new } @Override public Part read(JsonReader in) throws IOException { throw new } }).create(); String json = gson.toJson(new Gadget(new Part("screen"))); Gadget gadget = gson.fromJson("{'part':'screen'}", Gadget.class); }
Code: public void write(JsonWriter out, Boolean value) throws IOException { if (value == null) { out.nullValue(); return; } out.value(value); }
tensor([[0.0405, 0.0335, 0.0418, 0.0412, 0.1378, 0.0450, 0.0916, 0.0224, 0.0599,
         0.1097, 0.0386, 0.0622, 0.0209, 0.0599, 0.0411, 0.0407, 0.0185, 0.0761,
         0.0185],
        [0.0337, 0.0294, 0.0392, 0.0528, 0.1193, 0.0492, 0.1200, 0.0189, 0.0585,
         0.1122, 0.0398, 0.0489, 0.0170, 0.0585, 0.0406, 0.0346, 0.0178, 0.0916,
         0.0178],
        [0.0397, 0.0258, 0.0502, 0.0387, 0.1315, 0.0459, 0.1152, 0.0226, 0.0716,
         0.1108, 0.0424, 0.0472, 0.0146, 0.0716, 0.0351, 0.0337, 0.0124, 0.0785,
         0.0124],
        [0.0379, 0.0335, 0.0493, 0.0406, 0.1197, 0.0618, 0.0866, 0.0265, 0.0629,
         0.1094, 0.0494, 0.0609, 0.0261, 0.0629, 0.0388, 0.0329, 0.0154, 0.0702,
         0.0154],
        [0.0400, 0.0292, 0.0402, 0.0442, 0.1158, 0.0465, 0.1030, 0.0225, 0.0684,
         0.1241, 0.0415, 0.0565, 0.0202, 0.0684, 0.0335, 0.0375, 0.0154, 0.0777,
         0.0154],
        [0.0384, 0.0275, 0.0436, 0.0437, 0.1260, 0.0454, 0.1193, 0.0214, 0.0646,
         0.1137, 0.0442, 0.0565, 0.0180, 0.0646, 0.0357, 0.0355, 0.0159, 0.0702,
         0.0159],
        [0.0274, 0.0265, 0.0438, 0.0495, 0.1273, 0.0541, 0.1343, 0.0174, 0.0658,
         0.1225, 0.0375, 0.0426, 0.0166, 0.0658, 0.0336, 0.0309, 0.0129, 0.0785,
         0.0129],
        [0.0321, 0.0255, 0.0376, 0.0471, 0.1302, 0.0425, 0.1231, 0.0185, 0.0591,
         0.1328, 0.0337, 0.0627, 0.0138, 0.0591, 0.0425, 0.0371, 0.0124, 0.0778,
         0.0124],
        [0.0443, 0.0385, 0.0480, 0.0456, 0.0925, 0.0490, 0.0790, 0.0293, 0.0687,
         0.0767, 0.0512, 0.0481, 0.0292, 0.0687, 0.0485, 0.0449, 0.0246, 0.0886,
         0.0246],
        [0.0256, 0.0195, 0.0296, 0.0343, 0.1763, 0.0338, 0.1493, 0.0166, 0.0559,
         0.1450, 0.0407, 0.0516, 0.0097, 0.0559, 0.0333, 0.0348, 0.0085, 0.0710,
         0.0085],
        [0.0374, 0.0302, 0.0460, 0.0466, 0.1191, 0.0467, 0.0936, 0.0259, 0.0635,
         0.1167, 0.0523, 0.0630, 0.0204, 0.0635, 0.0436, 0.0343, 0.0167, 0.0639,
         0.0167],
        [0.0247, 0.0264, 0.0357, 0.0331, 0.1480, 0.0487, 0.1156, 0.0188, 0.0635,
         0.1359, 0.0506, 0.0610, 0.0160, 0.0635, 0.0308, 0.0310, 0.0130, 0.0706,
         0.0130],
        [0.0308, 0.0232, 0.0364, 0.0387, 0.1329, 0.0444, 0.1074, 0.0212, 0.0689,
         0.1401, 0.0446, 0.0579, 0.0192, 0.0689, 0.0318, 0.0312, 0.0107, 0.0812,
         0.0107],
        [0.0443, 0.0385, 0.0480, 0.0456, 0.0925, 0.0490, 0.0790, 0.0293, 0.0687,
         0.0767, 0.0512, 0.0481, 0.0292, 0.0687, 0.0485, 0.0449, 0.0246, 0.0886,
         0.0246],
        [0.0328, 0.0240, 0.0432, 0.0352, 0.1200, 0.0444, 0.1047, 0.0210, 0.0783,
         0.1210, 0.0541, 0.0638, 0.0168, 0.0783, 0.0368, 0.0320, 0.0129, 0.0676,
         0.0129],
        [0.0310, 0.0220, 0.0393, 0.0408, 0.1467, 0.0364, 0.1192, 0.0212, 0.0612,
         0.1278, 0.0481, 0.0569, 0.0152, 0.0612, 0.0420, 0.0381, 0.0141, 0.0648,
         0.0141],
        [0.0294, 0.0270, 0.0417, 0.0509, 0.1074, 0.0351, 0.1238, 0.0232, 0.0735,
         0.1129, 0.0577, 0.0507, 0.0185, 0.0735, 0.0370, 0.0326, 0.0159, 0.0734,
         0.0159],
        [0.0286, 0.0279, 0.0411, 0.0450, 0.1287, 0.0374, 0.1101, 0.0211, 0.0691,
         0.1091, 0.0655, 0.0470, 0.0188, 0.0691, 0.0373, 0.0378, 0.0177, 0.0711,
         0.0177],
        [0.0294, 0.0270, 0.0417, 0.0509, 0.1074, 0.0351, 0.1238, 0.0232, 0.0735,
         0.1129, 0.0577, 0.0507, 0.0185, 0.0735, 0.0370, 0.0326, 0.0159, 0.0734,
         0.0159]])