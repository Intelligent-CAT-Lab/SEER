101427
Test: public void test_getOffsetFromLocal_Guatemata_Autumn() { doTest_getOffsetFromLocal( 2006, 9,30,23, 0, "2006-09-30T23:00:00.000-05:00", ZONE_GUATEMALA); doTest_getOffsetFromLocal( 2006, 9,30,23,30, "2006-09-30T23:30:00.000-05:00", ZONE_GUATEMALA); doTest_getOffsetFromLocal( 2006, 9,30,23, 0, "2006-09-30T23:00:00.000-05:00", ZONE_GUATEMALA); doTest_getOffsetFromLocal( 2006, 9,30,23,30, "2006-09-30T23:30:00.000-05:00", ZONE_GUATEMALA); doTest_getOffsetFromLocal( 2006,10, 1, 0, 0, "2006-10-01T00:00:00.000-06:00", ZONE_GUATEMALA); doTest_getOffsetFromLocal( 2006,10, 1, 0,30, "2006-10-01T00:30:00.000-06:00", ZONE_GUATEMALA); doTest_getOffsetFromLocal( 2006,10, 1, 1, 0, "2006-10-01T01:00:00.000-06:00", ZONE_GUATEMALA); doTest_getOffsetFromLocal( 2006,10, 1, 1,30, "2006-10-01T01:30:00.000-06:00", ZONE_GUATEMALA); doTest_getOffsetFromLocal( 2006,10, 1, 2, 0, "2006-10-01T02:00:00.000-06:00", ZONE_GUATEMALA); doTest_getOffsetFromLocal( 2006,10, 1, 2,30, "2006-10-01T02:30:00.000-06:00", ZONE_GUATEMALA); doTest_getOffsetFromLocal( 2006,10, 1, 3, 0, "2006-10-01T03:00:00.000-06:00", ZONE_GUATEMALA); doTest_getOffsetFromLocal( 2006,10, 1, 3,30, "2006-10-01T03:30:00.000-06:00", ZONE_GUATEMALA); doTest_getOffsetFromLocal( 2006,10, 1, 4, 0, "2006-10-01T04:00:00.000-06:00", ZONE_GUATEMALA); doTest_getOffsetFromLocal( 2006,10, 1, 4,30, "2006-10-01T04:30:00.000-06:00", ZONE_GUATEMALA); doTest_getOffsetFromLocal( 2006,10, 1, 5, 0, "2006-10-01T05:00:00.000-06:00", ZONE_GUATEMALA); doTest_getOffsetFromLocal( 2006,10, 1, 5,30, "2006-10-01T05:30:00.000-06:00", ZONE_GUATEMALA); doTest_getOffsetFromLocal( 2006,10, 1, 6, 0, "2006-10-01T06:00:00.000-06:00", ZONE_GUATEMALA); doTest_getOffsetFromLocal( 2006,10, 1, 6,30, "2006-10-01T06:30:00.000-06:00", ZONE_GUATEMALA); }
Code: public int getOffsetFromLocal(long instantLocal){final int offsetLocal = getOffset(instantLocal);final long instantAdjusted = instantLocal - offsetLocal;final int offsetAdjusted = getOffset(instantAdjusted);if (offsetLocal != offsetAdjusted) {if ((offsetLocal - offsetAdjusted) < -1) {long nextLocal = nextTransition(instantAdjusted);long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);if (nextLocal != nextAdjusted) {return offsetLocal;}}} else if (offsetLocal > -1) {long prev = previousTransition(instantAdjusted);if (prev < instantAdjusted) {int offsetPrev = getOffset(prev);int diff = offsetPrev - offsetLocal;if (instantAdjusted - prev <= diff) {return offsetPrev;}}}return offsetAdjusted;}
tensor([[0.0095, 0.0055, 0.0195,  ..., 0.0322, 0.0092, 0.0102],
        [0.0065, 0.0044, 0.0171,  ..., 0.0371, 0.0081, 0.0089],
        [0.0103, 0.0041, 0.0215,  ..., 0.0249, 0.0101, 0.0103],
        ...,
        [0.0070, 0.0042, 0.0164,  ..., 0.0328, 0.0102, 0.0115],
        [0.0075, 0.0049, 0.0177,  ..., 0.0321, 0.0087, 0.0106],
        [0.0088, 0.0045, 0.0190,  ..., 0.0329, 0.0088, 0.0104]])