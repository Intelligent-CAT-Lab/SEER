68963
Test: public void test226() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test226"); org.jsoup.select.Evaluator.IsRoot isRoot0 = new org.jsoup.select.Evaluator.IsRoot(); org.jsoup.select.Evaluator.IsEmpty isEmpty1 = new org.jsoup.select.Evaluator.IsEmpty(); org.jsoup.nodes.Element element2 = null; org.jsoup.nodes.Element element3 = org.jsoup.select.Collector.findFirst((org.jsoup.select.Evaluator) isEmpty1, element2); org.jsoup.select.Evaluator.IsOnlyChild isOnlyChild4 = new org.jsoup.select.Evaluator.IsOnlyChild(); java.util.regex.Pattern pattern6 = null; org.jsoup.select.Evaluator.AttributeWithValueMatching attributeWithValueMatching7 = new org.jsoup.select.Evaluator.AttributeWithValueMatching("hi!", pattern6); java.util.regex.Pattern pattern9 = null; org.jsoup.select.Evaluator.AttributeWithValueMatching attributeWithValueMatching10 = new org.jsoup.select.Evaluator.AttributeWithValueMatching("", pattern9); org.jsoup.nodes.Document document12 = org.jsoup.nodes.Document.createShell("hi!"); org.jsoup.nodes.Document document14 = org.jsoup.nodes.Document.createShell("hi!"); boolean boolean15 = attributeWithValueMatching10.matches((org.jsoup.nodes.Element) document12, (org.jsoup.nodes.Element) document14); org.jsoup.nodes.Document document18 = org.jsoup.Jsoup.parseBodyFragment(":last-of-type", ""); boolean boolean19 = attributeWithValueMatching7.matches((org.jsoup.nodes.Element) document12, (org.jsoup.nodes.Element) document18); org.jsoup.nodes.Document document21 = org.jsoup.nodes.Document.createShell("hi!"); boolean boolean22 = isOnlyChild4.matches((org.jsoup.nodes.Element) document12, (org.jsoup.nodes.Element) document21); java.util.regex.Pattern pattern24 = null; org.jsoup.select.Evaluator.AttributeWithValueMatching attributeWithValueMatching25 = new org.jsoup.select.Evaluator.AttributeWithValueMatching("", pattern24); org.jsoup.nodes.Document document27 = org.jsoup.nodes.Document.createShell("hi!"); org.jsoup.nodes.Document document29 = org.jsoup.nodes.Document.createShell("hi!"); boolean boolean30 = attributeWithValueMatching25.matches((org.jsoup.nodes.Element) document27, (org.jsoup.nodes.Element) document29); boolean boolean32 = document27.equals((java.lang.Object) 0L); org.jsoup.select.Elements elements34 = document27.getElementsByClass("hi!"); document27.title("<html>\n <head></head>\n <body></body>\n</html><html>\n <head></head>\n <body>\n hi!\n </body>\n</html>"); org.jsoup.select.Elements elements37 = document27.children(); boolean boolean38 = isEmpty1.matches((org.jsoup.nodes.Element) document21, (org.jsoup.nodes.Element) document27); org.jsoup.select.Evaluator.IsOnlyChild isOnlyChild39 = new org.jsoup.select.Evaluator.IsOnlyChild(); org.jsoup.select.StructuralEvaluator.PreviousSibling previousSibling40 = new org.jsoup.select.StructuralEvaluator.PreviousSibling((org.jsoup.select.Evaluator) isOnlyChild39); org.jsoup.select.StructuralEvaluator.PreviousSibling previousSibling41 = new org.jsoup.select.StructuralEvaluator.PreviousSibling((org.jsoup.select.Evaluator) previousSibling40); java.util.regex.Pattern pattern43 = null; org.jsoup.select.Evaluator.AttributeWithValueMatching attributeWithValueMatching44 = new org.jsoup.select.Evaluator.AttributeWithValueMatching("", pattern43); org.jsoup.nodes.Document document46 = org.jsoup.nodes.Document.createShell("hi!"); org.jsoup.nodes.Document document48 = org.jsoup.nodes.Document.createShell("hi!"); boolean boolean49 = attributeWithValueMatching44.matches((org.jsoup.nodes.Element) document46, (org.jsoup.nodes.Element) document48); boolean boolean51 = document46.equals((java.lang.Object) 0L); org.jsoup.nodes.Node node52 = document46.parent(); org.jsoup.nodes.Element element53 = document46.head(); org.jsoup.nodes.Element element56 = document46.attr("hi!", false); org.jsoup.select.Elements elements57 = org.jsoup.select.Collector.collect((org.jsoup.select.Evaluator) previousSibling41, element56); boolean boolean58 = isRoot0.matches((org.jsoup.nodes.Element) document27, element56); java.lang.String str59 = isRoot0.toString(); org.jsoup.nodes.Document document62 = org.jsoup.parser.Parser.parseBodyFragment(":only-child", "#root"); org.jsoup.nodes.Element element64 = document62.addClass(":containsdata(#doctype)"); org.jsoup.nodes.Document document66 = org.jsoup.Jsoup.parse("hi!"); java.lang.String str67 = document66.baseUri(); java.lang.String str68 = document66.location(); boolean boolean69 = isRoot0.matches(element64, (org.jsoup.nodes.Element) document66); org.jsoup.select.NodeFilter nodeFilter70 = null; try { org.jsoup.nodes.Node node71 = document66.filter(nodeFilter70); } catch (java.lang.IllegalArgumentException e) { } }
Code: public String toString() { return String.format(":matchesOwn(%s)", pattern); }
tensor([[0.1304, 0.1684, 0.1750, 0.1676, 0.1428, 0.0834, 0.0782, 0.0542],
        [0.1319, 0.1535, 0.1868, 0.1891, 0.1327, 0.0858, 0.0719, 0.0484],
        [0.0944, 0.2417, 0.1621, 0.1688, 0.1422, 0.0882, 0.0581, 0.0444],
        [0.1210, 0.1809, 0.1282, 0.1870, 0.1402, 0.0831, 0.0924, 0.0671],
        [0.0990, 0.2299, 0.1480, 0.1851, 0.1452, 0.0652, 0.0763, 0.0512],
        [0.0853, 0.1450, 0.1688, 0.2071, 0.1744, 0.1074, 0.0666, 0.0453],
        [0.0988, 0.1765, 0.1691, 0.2085, 0.1507, 0.0720, 0.0724, 0.0519],
        [0.0875, 0.1604, 0.1813, 0.2032, 0.1848, 0.0888, 0.0493, 0.0448]])