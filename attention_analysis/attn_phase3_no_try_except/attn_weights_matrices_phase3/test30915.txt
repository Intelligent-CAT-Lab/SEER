30915
Test: public void test0() throws Throwable { Object[] objectArray0 = new Object[2]; ConcurrentHashMap<Object, Object> concurrentHashMap0 = new ConcurrentHashMap<Object, Object>(); MutableLong mutableLong0 = new MutableLong((-1L)); BiFunction<Object, Object, Integer> biFunction0 = (BiFunction<Object, Object, Integer>) mock(BiFunction.class, new ViolatedAssumptionAnswer()); concurrentHashMap0.reduce((-1L), (BiFunction<? super Object, ? super Object, ? extends Integer>) biFunction0, (BiFunction<? super Integer, ? super Integer, ? extends Integer>) biFunction0); Object object0 = MapUtil.putIfAbsentWithFinalValue((ConcurrentMap<Object, Object>) concurrentHashMap0, (Object) mutableLong0, (Object) concurrentHashMap0); objectArray0[0] = object0; MutableInt mutableInt0 = new MutableInt(mutableLong0); ConcurrentHashMap concurrentHashMap1 = new ConcurrentHashMap<MutableInt, MutableInt>(); Object object1 = new Object(); objectArray0[1] = object1; // Undeclared exception!  MapUtil.newHashMap(objectArray0, objectArray0);   }
Code: public static <K, V> HashMap<K, V> newHashMap() { return new HashMap<K, V>(); }
[[0.06006238 0.16515128 0.08331423 0.08331423 0.08331423 0.08331423
 0.08331423 0.07185212 0.06508403 0.03086142 0.08331423 0.08331423
 0.0237892 ]
[0.05976554 0.15924288 0.0805509  0.0805509  0.0805509  0.0805509
 0.0805509  0.10595625 0.05659974 0.0258362  0.08055089 0.08055089
 0.02874313]
[0.04937284 0.17149076 0.08245258 0.08245258 0.08245258 0.08245258
 0.08245258 0.07801047 0.05991801 0.03750911 0.08245258 0.08245258
 0.02653082]
[0.04937284 0.17149076 0.08245258 0.08245258 0.08245258 0.08245258
 0.08245258 0.07801047 0.05991801 0.03750911 0.08245258 0.08245258
 0.02653082]
[0.04937284 0.17149076 0.08245258 0.08245258 0.08245258 0.08245258
 0.08245258 0.07801047 0.05991801 0.03750911 0.08245258 0.08245258
 0.02653082]
[0.04937284 0.17149076 0.08245258 0.08245258 0.08245258 0.08245258
 0.08245258 0.07801047 0.05991801 0.03750911 0.08245258 0.08245258
 0.02653082]
[0.04937284 0.17149076 0.08245258 0.08245258 0.08245258 0.08245258
 0.08245258 0.07801047 0.05991801 0.03750911 0.08245258 0.08245258
 0.02653082]
[0.06118599 0.14603469 0.07895637 0.07895637 0.07895637 0.07895637
 0.07895637 0.10106509 0.07006517 0.03374863 0.07895637 0.07895637
 0.03520582]
[0.04119669 0.17990704 0.08556607 0.08556607 0.08556607 0.08556607
 0.08556607 0.07349913 0.06101955 0.02491533 0.08556607 0.08556607
 0.0204997 ]
[0.05196894 0.15348338 0.08163001 0.08163001 0.08163001 0.08163001
 0.08163001 0.08951917 0.07298645 0.03431122 0.08163001 0.08163001
 0.02632072]
[0.04937284 0.17149076 0.08245258 0.08245258 0.08245258 0.08245258
 0.08245258 0.07801047 0.05991801 0.03750911 0.08245258 0.08245258
 0.02653082]
[0.04937284 0.17149076 0.08245258 0.08245258 0.08245258 0.08245258
 0.08245258 0.07801047 0.05991801 0.03750911 0.08245258 0.08245258
 0.02653082]
[0.04121399 0.17677857 0.07661681 0.07661681 0.07661681 0.07661681
 0.07661681 0.10856394 0.09077768 0.02311328 0.07661681 0.07661681
 0.02323485]]