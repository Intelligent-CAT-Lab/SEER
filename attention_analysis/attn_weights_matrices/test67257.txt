67257
Test: public void test3() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test3"); com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer stringArrayDeserializer0 = new com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer(); com.fasterxml.jackson.databind.JsonDeserializer<java.lang.String> strJsonDeserializer1 = null; stringArrayDeserializer0._elementDeserializer = strJsonDeserializer1; boolean boolean3 = stringArrayDeserializer0.isCachable(); com.fasterxml.jackson.databind.util.NameTransformer nameTransformer4 = null; com.fasterxml.jackson.databind.JsonDeserializer<java.lang.String[]> strArrayJsonDeserializer5 = stringArrayDeserializer0.unwrappingDeserializer(nameTransformer4); com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer nullifyingDeserializer6 = com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer.instance; com.fasterxml.jackson.databind.node.NullNode nullNode7 = com.fasterxml.jackson.databind.node.NullNode.instance; boolean boolean8 = nullNode7.isNumber(); java.util.List<com.fasterxml.jackson.databind.JsonNode> jsonNodeList10 = nullNode7.findValues("READ_DATE_TIMESTAMPS_AS_NANOSECONDS"); com.fasterxml.jackson.databind.node.TreeTraversingParser treeTraversingParser11 = new com.fasterxml.jackson.databind.node.TreeTraversingParser((com.fasterxml.jackson.databind.JsonNode) nullNode7); com.fasterxml.jackson.core.Base64Variant base64Variant12 = null; java.io.OutputStream outputStream13 = null; int int14 = treeTraversingParser11.readBinaryValue(base64Variant12, outputStream13); java.lang.Object obj15 = treeTraversingParser11.getEmbeddedObject(); com.fasterxml.jackson.databind.DeserializationContext deserializationContext16 = null; java.lang.Object obj17 = nullifyingDeserializer6.deserialize((com.fasterxml.jackson.core.JsonParser) treeTraversingParser11, deserializationContext16); com.fasterxml.jackson.core.FormatSchema formatSchema18 = treeTraversingParser11.getSchema(); com.fasterxml.jackson.databind.DeserializationContext deserializationContext19 = null; try { java.util.Date date20 = stringArrayDeserializer0._parseDate((com.fasterxml.jackson.core.JsonParser) treeTraversingParser11, deserializationContext19); } catch (java.lang.NullPointerException e) { } }
Code: public Object deserialize(JsonParser p, DeserializationContext ctxt) throws IOException { p.skipChildren(); return null; }
tensor([[0.0598, 0.0461, 0.1059, 0.0867, 0.0439, 0.0603, 0.1435, 0.0302, 0.0771,
         0.1298, 0.0655, 0.1263, 0.0249],
        [0.0501, 0.0355, 0.1007, 0.1052, 0.0452, 0.0521, 0.1744, 0.0279, 0.0949,
         0.1113, 0.0614, 0.1232, 0.0181],
        [0.0426, 0.0378, 0.1230, 0.1024, 0.0403, 0.0505, 0.1570, 0.0257, 0.0914,
         0.1061, 0.0616, 0.1458, 0.0159],
        [0.0417, 0.0359, 0.1036, 0.0804, 0.0487, 0.0443, 0.1870, 0.0271, 0.0832,
         0.0958, 0.0658, 0.1654, 0.0210],
        [0.0424, 0.0355, 0.0981, 0.0962, 0.0424, 0.0486, 0.1728, 0.0289, 0.0711,
         0.1232, 0.0622, 0.1534, 0.0253],
        [0.0465, 0.0300, 0.0980, 0.0861, 0.0462, 0.0522, 0.1621, 0.0276, 0.1013,
         0.1318, 0.0736, 0.1218, 0.0226],
        [0.0396, 0.0365, 0.1025, 0.1037, 0.0439, 0.0460, 0.2034, 0.0233, 0.0857,
         0.1044, 0.0629, 0.1308, 0.0174],
        [0.0522, 0.0434, 0.0962, 0.0822, 0.0422, 0.0553, 0.2031, 0.0275, 0.0846,
         0.0971, 0.0734, 0.1243, 0.0186],
        [0.0609, 0.0363, 0.0999, 0.0928, 0.0548, 0.0619, 0.1098, 0.0392, 0.0880,
         0.1168, 0.0714, 0.1356, 0.0326],
        [0.0448, 0.0336, 0.1117, 0.0895, 0.0479, 0.0528, 0.1412, 0.0244, 0.1204,
         0.1085, 0.0639, 0.1427, 0.0186],
        [0.0407, 0.0382, 0.1011, 0.1133, 0.0392, 0.0517, 0.1602, 0.0297, 0.0738,
         0.1177, 0.0601, 0.1539, 0.0205],
        [0.0598, 0.0408, 0.1266, 0.0763, 0.0468, 0.0558, 0.1721, 0.0307, 0.0813,
         0.0999, 0.0706, 0.1135, 0.0258],
        [0.0389, 0.0383, 0.1115, 0.0878, 0.0353, 0.0516, 0.1648, 0.0289, 0.0882,
         0.1208, 0.0816, 0.1328, 0.0196]])