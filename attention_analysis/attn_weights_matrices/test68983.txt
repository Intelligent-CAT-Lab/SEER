68983
Test: public void test539() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test539"); org.jsoup.nodes.XmlDeclaration xmlDeclaration2 = new org.jsoup.nodes.XmlDeclaration("hi!hi!", false); boolean boolean4 = xmlDeclaration2.hasAttr("org.jsoup.SerializationException: \n<!--hi!-->"); org.jsoup.nodes.BooleanAttribute booleanAttribute6 = new org.jsoup.nodes.BooleanAttribute("[]"); java.lang.StringBuilder stringBuilder7 = org.jsoup.helper.StringUtil.stringBuilder(); org.jsoup.select.Evaluator.IndexEquals indexEquals9 = new org.jsoup.select.Evaluator.IndexEquals((-1)); org.jsoup.nodes.Document document12 = org.jsoup.parser.Parser.parseBodyFragment("", ""); java.lang.String str13 = document12.text(); org.jsoup.nodes.Document document16 = org.jsoup.parser.Parser.parseBodyFragment("", ""); boolean boolean17 = indexEquals9.matches((org.jsoup.nodes.Element) document12, (org.jsoup.nodes.Element) document16); org.jsoup.nodes.Element element19 = document16.appendText("<!hi!!>"); org.jsoup.nodes.Document.OutputSettings outputSettings20 = document16.outputSettings(); org.jsoup.nodes.Document.OutputSettings.Syntax syntax21 = outputSettings20.syntax(); org.jsoup.nodes.Document.OutputSettings outputSettings22 = outputSettings20.clone(); booleanAttribute6.html((java.lang.Appendable) stringBuilder7, outputSettings20); org.jsoup.select.Evaluator.IndexEquals indexEquals26 = new org.jsoup.select.Evaluator.IndexEquals((-1)); org.jsoup.nodes.Document document29 = org.jsoup.parser.Parser.parseBodyFragment("", ""); java.lang.String str30 = document29.text(); org.jsoup.nodes.Document document33 = org.jsoup.parser.Parser.parseBodyFragment("", ""); boolean boolean34 = indexEquals26.matches((org.jsoup.nodes.Element) document29, (org.jsoup.nodes.Element) document33); org.jsoup.nodes.Element element36 = document33.appendText("<!hi!!>"); org.jsoup.nodes.Document.OutputSettings outputSettings37 = document33.outputSettings(); org.jsoup.nodes.Document.OutputSettings.Syntax syntax38 = outputSettings37.syntax(); org.jsoup.nodes.Document.OutputSettings outputSettings39 = outputSettings37.clone(); org.jsoup.select.Evaluator.IndexEquals indexEquals41 = new org.jsoup.select.Evaluator.IndexEquals((-1)); org.jsoup.nodes.Document document44 = org.jsoup.parser.Parser.parseBodyFragment("", ""); java.lang.String str45 = document44.text(); org.jsoup.nodes.Document document48 = org.jsoup.parser.Parser.parseBodyFragment("", ""); boolean boolean49 = indexEquals41.matches((org.jsoup.nodes.Element) document44, (org.jsoup.nodes.Element) document48); org.jsoup.select.Elements elements51 = document48.getElementsByAttribute("hi!hi!hi!hi!hi!hi!"); java.lang.String[] strArray57 = new java.lang.String[] { "hi!hi!hi!hi!hi!hi!", "hi!hi!hi!hi!hi!hi!", ":nth-last-child(-1n-1)", "hi!", "hi!hi!hi!hi!hi!hi!" }; java.util.LinkedHashSet<java.lang.String> strSet58 = new java.util.LinkedHashSet<java.lang.String>(); boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet58, strArray57); org.jsoup.nodes.Element element60 = document48.classNames((java.util.Set<java.lang.String>) strSet58); org.jsoup.select.Elements elements62 = document48.getElementsMatchingOwnText("\n<!--hi!-->"); java.lang.String str63 = document48.nodeName(); org.jsoup.select.Elements elements64 = document48.siblingElements(); org.jsoup.select.Elements elements65 = document48.parents(); org.jsoup.nodes.Document document68 = org.jsoup.parser.Parser.parseBodyFragment("", ""); int int69 = document68.elementSiblingIndex(); org.jsoup.nodes.Element element70 = document68.head(); java.util.List<org.jsoup.nodes.Node> nodeList71 = document68.ensureChildNodes(); org.jsoup.nodes.Element element72 = document48.doClone((org.jsoup.nodes.Node) document68); java.nio.charset.Charset charset73 = document68.charset(); org.jsoup.nodes.Document.OutputSettings outputSettings74 = outputSettings37.charset(charset73); java.nio.charset.CharsetEncoder charsetEncoder75 = outputSettings74.prepareEncoder(); java.nio.charset.Charset charset76 = outputSettings74.charset(); xmlDeclaration2.outerHtmlHead((java.lang.Appendable) stringBuilder7, 10, outputSettings74); }
Code: final void html(final Appendable accum, final Document.OutputSettings out) throws IOException { final int sz = size; for (int i = 0; i < sz; i++) { final String key = keys[i]; final String val = vals[i]; accum.append(' ').append(key); if (!Attribute.shouldCollapseAttribute(key, val, out)) { accum.append("=\""); Entities.escape(accum, val == null ? EmptyString : val, out, true, false, false); accum.append('"'); } } }
tensor([[0.0091, 0.0100, 0.0210,  ..., 0.0043, 0.0043, 0.0043],
        [0.0102, 0.0103, 0.0209,  ..., 0.0057, 0.0057, 0.0057],
        [0.0095, 0.0085, 0.0189,  ..., 0.0043, 0.0043, 0.0043],
        ...,
        [0.0094, 0.0096, 0.0214,  ..., 0.0053, 0.0053, 0.0053],
        [0.0094, 0.0096, 0.0214,  ..., 0.0053, 0.0053, 0.0053],
        [0.0094, 0.0096, 0.0214,  ..., 0.0053, 0.0053, 0.0053]])