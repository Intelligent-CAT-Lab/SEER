15794
Test: public void test068() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test068"); org.apache.commons.cli.PosixParser posixParser0 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine1 = posixParser0.cmd; org.apache.commons.cli.CommandLine commandLine2 = new org.apache.commons.cli.CommandLine(); posixParser0.cmd = commandLine2; org.apache.commons.cli.PosixParser posixParser4 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine5 = posixParser4.cmd; org.apache.commons.cli.Options options6 = posixParser4.getOptions(); java.util.Properties properties7 = null; posixParser4.processProperties(properties7); org.apache.commons.cli.PosixParser posixParser9 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine10 = posixParser9.cmd; org.apache.commons.cli.Options options11 = posixParser9.getOptions(); org.apache.commons.cli.Options options12 = new org.apache.commons.cli.Options(); java.util.List list13 = options12.helpOptions(); java.lang.String[] strArray15 = new java.lang.String[] { "" }; org.apache.commons.cli.CommandLine commandLine16 = posixParser9.parse(options12, strArray15); java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!", "a" }; java.lang.String[] strArray25 = posixParser4.flatten(options12, strArray23, true); org.apache.commons.cli.PosixParser posixParser26 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine27 = posixParser26.cmd; org.apache.commons.cli.Options options28 = posixParser26.getOptions(); org.apache.commons.cli.Options options29 = new org.apache.commons.cli.Options(); java.util.List list30 = options29.helpOptions(); java.lang.String[] strArray32 = new java.lang.String[] { "" }; org.apache.commons.cli.CommandLine commandLine33 = posixParser26.parse(options29, strArray32); org.apache.commons.cli.CommandLine commandLine35 = posixParser0.parse(options12, strArray32, false); org.apache.commons.cli.CommandLine commandLine36 = new org.apache.commons.cli.CommandLine(); java.lang.String str38 = commandLine36.getOptionValue("hi!"); org.apache.commons.cli.Option option40 = org.apache.commons.cli.OptionBuilder.create('a'); option40.setValueSeparator('4'); option40.setDescription("hi!"); option40.setArgName("hi!"); commandLine36.addOption(option40); org.apache.commons.cli.OptionGroup optionGroup48 = options12.getOptionGroup(option40); java.lang.String str50 = option40.getValue("[ Options: [ short {} ] [ long {} ]"); option40.setOptionalArg(true); java.lang.String str53 = option40.getKey(); } ] [ long {} ]" + "'", str50, "[ Options: [ short {} ] [ long {} ]"); }
Code: protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption){init();this.options = options;Iterator iter = Arrays.asList(arguments).iterator();while (iter.hasNext()){String token = (String) iter.next();if (token.startsWith("--")){int pos = token.indexOf('=');String opt = pos == -1 ? token : token.substring(1, pos); if (!options.hasOption(opt)){;}else{tokens.add(opt);if (pos != -1){tokens.add(token.substring(pos + 1));}}}else if ("-".equals(token)){tokens.add(token);}else if (token.startsWith("-")){if (token.length() == 2 || options.hasOption(token)){processOptionToken(token, stopAtNonOption);}else{burstToken(token, stopAtNonOption);}}else if (true){;}else{tokens.add(token);}gobble(iter);}return (String[]) tokens.toArray(new String[tokens.size()]);}
tensor([[0.0154, 0.0047, 0.0165,  ..., 0.0825, 0.0165, 0.0178],
        [0.0136, 0.0040, 0.0150,  ..., 0.0690, 0.0138, 0.0156],
        [0.0146, 0.0070, 0.0193,  ..., 0.0604, 0.0182, 0.0186],
        ...,
        [0.0166, 0.0070, 0.0191,  ..., 0.0684, 0.0223, 0.0158],
        [0.0154, 0.0063, 0.0176,  ..., 0.0599, 0.0160, 0.0153],
        [0.0122, 0.0059, 0.0148,  ..., 0.0742, 0.0185, 0.0172]])