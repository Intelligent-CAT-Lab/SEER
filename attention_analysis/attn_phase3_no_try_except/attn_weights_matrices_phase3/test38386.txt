38386
Test: public void test8() throws Throwable { DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.millisOfDay(); IslamicChronology islamicChronology0 = IslamicChronology.getInstanceUTC(); DateTimeZone dateTimeZone0 = DateTimeZone.forOffsetHours(1); IslamicChronology.getInstance(dateTimeZone0, islamicChronology0.LEAP_YEAR_INDIAN); dateTimeFieldType0.getField(islamicChronology0); EthiopicChronology ethiopicChronology0 = EthiopicChronology.getInstance(); DateTimeZone dateTimeZone1 = DateTimeZone.forOffsetMillis(1); Chronology chronology0 = ethiopicChronology0.withZone(dateTimeZone1); dateTimeFieldType0.isSupported(chronology0); DateTimeFieldType dateTimeFieldType1 = DateTimeFieldType.hourOfDay(); dateTimeFieldType1.isSupported(islamicChronology0); dateTimeFieldType1.toString(); DateTimeFieldType dateTimeFieldType2 = DateTimeFieldType.millisOfSecond(); DateTimeFieldType dateTimeFieldType3 = DateTimeFieldType.weekyear(); }
Code: public static DateTimeFieldType weekyear() { return WEEKYEAR_TYPE; }
[[0.10464048 0.23875345 0.1239631  0.14512302 0.09715526 0.10992792
 0.14512302 0.0353137 ]
[0.10147803 0.23280314 0.11432514 0.14145213 0.1357339  0.09307605
 0.14145213 0.03967948]
[0.10117568 0.23409806 0.09998775 0.13814501 0.13180543 0.12392664
 0.13814501 0.03271645]
[0.08200554 0.2528486  0.14675565 0.14250897 0.09883334 0.09870932
 0.14250897 0.03582959]
[0.098382   0.209097   0.11268559 0.14226115 0.12818658 0.11714366
 0.14226115 0.04998284]
[0.07017209 0.2596685  0.11685806 0.16045506 0.09509223 0.10910286
 0.16045506 0.02819613]
[0.08200554 0.2528486  0.14675565 0.14250897 0.09883334 0.09870932
 0.14250897 0.03582959]
[0.07097162 0.23154011 0.1199457  0.1427975  0.1242225  0.13818926
 0.1427975  0.02953577]]