17972
Test: public void test193() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test193"); com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry0 = null; com.google.javascript.rhino.jstype.ObjectType objectType1 = null; com.google.javascript.rhino.jstype.JSType jSType2 = null; com.google.javascript.rhino.jstype.IndexedType indexedType3 = new com.google.javascript.rhino.jstype.IndexedType(jSTypeRegistry0, objectType1, jSType2); com.google.javascript.rhino.jstype.ObjectType.Property property5 = indexedType3.getOwnSlot("Not declared as a type name"); com.google.javascript.rhino.jstype.ObjectType objectType6 = indexedType3.getImplicitPrototype(); com.google.javascript.jscomp.ClosureCodingConvention. com.google.javascript.rhino.Node node9 = com.google.javascript.rhino.IR.breakNode(); com.google.javascript.rhino.Node node10 = com.google.javascript.rhino.IR.breakNode(); com.google.javascript.rhino.Node node11 = null; com.google.javascript.jscomp.CodingConvention.Bind bind12 = new com.google.javascript.jscomp.CodingConvention.Bind(node9, node10, node11); boolean boolean13 = node10.isEmpty(); boolean boolean14 = node10.isNot(); node10.setVarArgs(false); com.google.javascript.rhino.Node node17 = node10.cloneNode(); boolean boolean18 = node17.isNoSideEffectsCall(); com.google.javascript.rhino.ErrorReporter errorReporter19 = null; com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry21 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter19, true); boolean boolean23 = jSTypeRegistry21.isForwardDeclaredType("goog.abstractMethod"); com.google.javascript.rhino.jstype.JSType jSType24 = try { com.google.javascript.rhino.jstype.JSType.TypePair typePair25 = indexedType3.getTypesUnderEquality(jSType24); } catch (java.lang.NullPointerException e) { } }
Code: public ObjectType getImplicitPrototype() { return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE); }
tensor([[0.1125, 0.1006, 0.2374, 0.1523, 0.1241, 0.2247, 0.0484],
        [0.0908, 0.1028, 0.2757, 0.1404, 0.1457, 0.2146, 0.0301],
        [0.0966, 0.1316, 0.2306, 0.1648, 0.1247, 0.2164, 0.0353],
        [0.1255, 0.1004, 0.1968, 0.1771, 0.1477, 0.1860, 0.0664],
        [0.0836, 0.1026, 0.2914, 0.1580, 0.1223, 0.1985, 0.0436],
        [0.0892, 0.1190, 0.2104, 0.2020, 0.1531, 0.1853, 0.0411],
        [0.0880, 0.0892, 0.2170, 0.1716, 0.1765, 0.2181, 0.0396]])