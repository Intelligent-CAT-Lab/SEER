15781
Test: public void test052() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test052"); org.apache.commons.cli.PosixParser posixParser0 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine1 = posixParser0.cmd; org.apache.commons.cli.Options options2 = posixParser0.getOptions(); org.apache.commons.cli.Options options3 = new org.apache.commons.cli.Options(); java.util.List list4 = options3.helpOptions(); java.lang.String[] strArray6 = new java.lang.String[] { "" }; org.apache.commons.cli.CommandLine commandLine7 = posixParser0.parse(options3, strArray6); org.apache.commons.cli.PosixParser posixParser8 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine9 = posixParser8.cmd; org.apache.commons.cli.Options options10 = posixParser8.getOptions(); org.apache.commons.cli.Options options11 = new org.apache.commons.cli.Options(); org.apache.commons.cli.PosixParser posixParser12 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine13 = posixParser12.cmd; org.apache.commons.cli.Options options14 = posixParser12.getOptions(); java.util.Properties properties15 = null; posixParser12.processProperties(properties15); org.apache.commons.cli.PosixParser posixParser17 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine18 = posixParser17.cmd; org.apache.commons.cli.Options options19 = posixParser17.getOptions(); org.apache.commons.cli.Options options20 = new org.apache.commons.cli.Options(); java.util.List list21 = options20.helpOptions(); java.lang.String[] strArray23 = new java.lang.String[] { "" }; org.apache.commons.cli.CommandLine commandLine24 = posixParser17.parse(options20, strArray23); java.lang.String[] strArray31 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!", "a" }; java.lang.String[] strArray33 = posixParser12.flatten(options20, strArray31, true); org.apache.commons.cli.CommandLine commandLine34 = posixParser8.parse(options11, strArray33); java.lang.String[] strArray35 = null; java.util.Properties properties36 = null; org.apache.commons.cli.CommandLine commandLine37 = posixParser0.parse(options11, strArray35, properties36); org.apache.commons.cli.Option option39 = options11.getOption(""); boolean boolean41 = options11.hasOption(""); java.util.Collection collection42 = options11.getOptions(); }
Code: protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption){init();this.options = options;Iterator iter = Arrays.asList(arguments).iterator();while (iter.hasNext()){String token = (String) iter.next();if (token.startsWith("--")){int pos = token.indexOf('=');String opt = pos == 1 ? token : token.substring(0, pos); if (!options.hasOption(opt)){;}else{tokens.add(opt);if (pos != -1){tokens.add(token.substring(pos + 1));}}}else if ("-".equals(token)){tokens.add(token);}else if (token.startsWith("-")){if (token.length() == 2 || options.hasOption(token)){processOptionToken(token, stopAtNonOption);}else{burstToken(token, stopAtNonOption);}}else if (true){;}else{tokens.add(token);}gobble(iter);}return (String[]) tokens.toArray(new String[tokens.size()]);}
tensor([[0.0158, 0.0048, 0.0170,  ..., 0.0848, 0.0169, 0.0183],
        [0.0141, 0.0042, 0.0155,  ..., 0.0713, 0.0143, 0.0161],
        [0.0150, 0.0072, 0.0198,  ..., 0.0621, 0.0187, 0.0191],
        ...,
        [0.0169, 0.0072, 0.0195,  ..., 0.0699, 0.0228, 0.0162],
        [0.0158, 0.0065, 0.0180,  ..., 0.0614, 0.0164, 0.0157],
        [0.0125, 0.0061, 0.0151,  ..., 0.0758, 0.0189, 0.0176]])