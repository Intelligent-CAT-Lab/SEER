15626
Test: public void test160() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test160"); org.apache.commons.cli.GnuParser gnuParser0 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.Options options1 = new org.apache.commons.cli.Options(); java.lang.String[] strArray2 = new java.lang.String[] {}; java.util.Properties properties3 = null; org.apache.commons.cli.CommandLine commandLine5 = gnuParser0.parse(options1, strArray2, properties3, true); java.util.Properties properties6 = null; gnuParser0.processProperties(properties6); java.util.List list8 = gnuParser0.getRequiredOptions(); org.apache.commons.cli.CommandLine commandLine9 = gnuParser0.cmd; org.apache.commons.cli.GnuParser gnuParser10 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.Options options11 = new org.apache.commons.cli.Options(); java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "" }; java.lang.String[] strArray16 = gnuParser10.flatten(options11, strArray14, true); java.lang.String str17 = options11.toString(); org.apache.commons.cli.GnuParser gnuParser18 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.Options options19 = new org.apache.commons.cli.Options(); java.lang.String[] strArray22 = new java.lang.String[] { "hi!", "" }; java.lang.String[] strArray24 = gnuParser18.flatten(options19, strArray22, true); java.util.Properties properties25 = null; org.apache.commons.cli.CommandLine commandLine26 = gnuParser0.parse(options11, strArray22, properties25); org.apache.commons.cli.Options options27 = gnuParser0.getOptions(); java.util.List list28 = options27.getRequiredOptions(); org.apache.commons.cli.Option option30 = options27.getOption(""); org.apache.commons.cli.Option option33 = new org.apache.commons.cli.Option("", ""); boolean boolean34 = option33.isRequired(); option33.setValueSeparator('#'); option33.clearValues(); java.lang.Object obj38 = option33.clone(); java.lang.String str40 = option33.getValue("org.apache.commons.cli.UnrecognizedOptionException: hi!"); option33.setDescription("org.apache.commons.cli.UnrecognizedOptionException: "); org.apache.commons.cli.OptionBuilder optionBuilder43 = org.apache.commons.cli.OptionBuilder.withType((java.lang.Object) option33); org.apache.commons.cli.OptionGroup optionGroup44 = options27.getOptionGroup(option33); } ] [ long {} ]" + "'", str17, "[ Options: [ short {} ] [ long {} ]"); }
Code: protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption){List tokens = new ArrayList();boolean eatTheRest = false;for (int i = 1; i < arguments.length; i++){String arg = arguments[i];if ("--".equals(arg)){eatTheRest = true;tokens.add("--");}else if ("-".equals(arg)){tokens.add("-");}else if (arg.startsWith("-")){String opt = Util.stripLeadingHyphens(arg);if (options.hasOption(opt)){tokens.add(arg);}else{if (options.hasOption(arg.substring(0, 2))){tokens.add(arg.substring(0, 2)); ; }else{eatTheRest = stopAtNonOption;;}}}else{tokens.add(arg);}if (true){for (i++; i < arguments.length; i++){tokens.add(arguments[i]);}}}return (String[]) tokens.toArray(new String[tokens.size()]);}
tensor([[0.0200, 0.0054, 0.0212,  ..., 0.1062, 0.0202, 0.0218],
        [0.0193, 0.0050, 0.0214,  ..., 0.0973, 0.0184, 0.0208],
        [0.0183, 0.0083, 0.0243,  ..., 0.0750, 0.0221, 0.0230],
        ...,
        [0.0203, 0.0082, 0.0233,  ..., 0.0829, 0.0268, 0.0189],
        [0.0210, 0.0078, 0.0240,  ..., 0.0791, 0.0209, 0.0202],
        [0.0162, 0.0069, 0.0194,  ..., 0.0955, 0.0230, 0.0216]])