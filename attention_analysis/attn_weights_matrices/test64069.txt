64069
Test: public void test0473() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0473"); com.fasterxml.jackson.core.util.BufferRecycler bufferRecycler0 = null; com.fasterxml.jackson.core.io.IOContext iOContext3 = new com.fasterxml.jackson.core.io.IOContext(bufferRecycler0, (java.lang.Object) 0.0f, true); char[] charArray6 = new char[] { 'a', 'a' }; char[] charArray8 = new char[] { '#' }; iOContext3._verifyRelease(charArray6, charArray8); com.fasterxml.jackson.core.util.BufferRecycler bufferRecycler10 = iOContext3._bufferRecycler; byte[] byteArray11 = iOContext3._readIOBuffer; char[] charArray12 = iOContext3._tokenCBuffer; com.fasterxml.jackson.core.JsonEncoding jsonEncoding13 = null; iOContext3.setEncoding(jsonEncoding13); char[] charArray15 = null; iOContext3._concatCBuffer = charArray15; java.lang.Object obj17 = iOContext3.getSourceReference(); com.fasterxml.jackson.core.JsonEncoding jsonEncoding18 = null; com.fasterxml.jackson.core.io.IOContext iOContext19 = iOContext3.withEncoding(jsonEncoding18); com.fasterxml.jackson.core.ObjectCodec objectCodec20 = null; com.fasterxml.jackson.core.JsonFactory jsonFactory21 = new com.fasterxml.jackson.core.JsonFactory(objectCodec20); com.fasterxml.jackson.core.JsonParser.Feature feature22 = com.fasterxml.jackson.core.JsonParser.Feature.ALLOW_YAML_COMMENTS; com.fasterxml.jackson.core.JsonFactory jsonFactory24 = jsonFactory21.configure(feature22, false); com.fasterxml.jackson.core.util.BufferRecycler bufferRecycler25 = null; com.fasterxml.jackson.core.io.IOContext iOContext28 = new com.fasterxml.jackson.core.io.IOContext(bufferRecycler25, (java.lang.Object) 0.0f, true); byte[] byteArray35 = new byte[] { (byte) 100, (byte) 100, (byte) -1, (byte) 100, (byte) 0, (byte) 10 }; iOContext28._writeEncodingBuffer = byteArray35; com.fasterxml.jackson.core.JsonParser jsonParser39 = jsonFactory21.createJsonParser(byteArray35, (int) (byte) 100, (-1)); com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes40 = jsonFactory21.getCharacterEscapes(); java.io.InputStream inputStream41 = null; com.fasterxml.jackson.core.JsonParser jsonParser42 = jsonFactory21.createJsonParser(inputStream41); com.fasterxml.jackson.core.ObjectCodec objectCodec43 = null; com.fasterxml.jackson.core.JsonFactory jsonFactory44 = new com.fasterxml.jackson.core.JsonFactory(objectCodec43); com.fasterxml.jackson.core.JsonParser.Feature feature45 = com.fasterxml.jackson.core.JsonParser.Feature.ALLOW_YAML_COMMENTS; com.fasterxml.jackson.core.JsonFactory jsonFactory47 = jsonFactory44.configure(feature45, false); com.fasterxml.jackson.core.JsonFactory.Feature feature48 = com.fasterxml.jackson.core.JsonFactory.Feature.FAIL_ON_SYMBOL_HASH_OVERFLOW; com.fasterxml.jackson.core.JsonFactory jsonFactory50 = jsonFactory47.configure(feature48, false); com.fasterxml.jackson.core.util.BufferRecycler bufferRecycler51 = null; com.fasterxml.jackson.core.io.IOContext iOContext54 = new com.fasterxml.jackson.core.io.IOContext(bufferRecycler51, (java.lang.Object) 0.0f, true); byte[] byteArray61 = new byte[] { (byte) 100, (byte) 100, (byte) -1, (byte) 100, (byte) 0, (byte) 10 }; iOContext54._writeEncodingBuffer = byteArray61; com.fasterxml.jackson.core.JsonParser jsonParser63 = jsonFactory50.createJsonParser(byteArray61); com.fasterxml.jackson.core.JsonParser jsonParser64 = jsonFactory21.createParser(byteArray61); com.fasterxml.jackson.core.ObjectCodec objectCodec65 = null; com.fasterxml.jackson.core.JsonFactory jsonFactory66 = new com.fasterxml.jackson.core.JsonFactory(objectCodec65); com.fasterxml.jackson.core.JsonParser.Feature feature67 = com.fasterxml.jackson.core.JsonParser.Feature.ALLOW_YAML_COMMENTS; com.fasterxml.jackson.core.JsonFactory jsonFactory69 = jsonFactory66.configure(feature67, false); boolean boolean70 = jsonFactory69.requiresPropertyOrdering(); boolean boolean71 = jsonFactory69.canUseCharArrays(); com.fasterxml.jackson.core.ObjectCodec objectCodec72 = null; com.fasterxml.jackson.core.JsonFactory jsonFactory73 = new com.fasterxml.jackson.core.JsonFactory(objectCodec72); com.fasterxml.jackson.core.JsonParser.Feature feature74 = com.fasterxml.jackson.core.JsonParser.Feature.ALLOW_YAML_COMMENTS; com.fasterxml.jackson.core.JsonFactory jsonFactory76 = jsonFactory73.configure(feature74, false); com.fasterxml.jackson.core.JsonFactory.Feature feature77 = com.fasterxml.jackson.core.JsonFactory.Feature.FAIL_ON_SYMBOL_HASH_OVERFLOW; com.fasterxml.jackson.core.JsonFactory jsonFactory79 = jsonFactory76.configure(feature77, false); com.fasterxml.jackson.core.util.BufferRecycler bufferRecycler80 = null; com.fasterxml.jackson.core.io.IOContext iOContext83 = new com.fasterxml.jackson.core.io.IOContext(bufferRecycler80, (java.lang.Object) 0.0f, true); byte[] byteArray90 = new byte[] { (byte) 100, (byte) 100, (byte) -1, (byte) 100, (byte) 0, (byte) 10 }; iOContext83._writeEncodingBuffer = byteArray90; com.fasterxml.jackson.core.JsonParser jsonParser92 = jsonFactory79.createJsonParser(byteArray90); com.fasterxml.jackson.core.JsonParser jsonParser95 = jsonFactory69.createParser(byteArray90, (int) '4', (int) (byte) -1); iOContext3._verifyRelease(byteArray61, byteArray90); try { char[] charArray98 = iOContext3.allocTokenBuffer(15); } catch (java.lang.NullPointerException e) { } }
Code: protected final void _verifyRelease(byte[] toRelease, byte[] src) { if ((toRelease != src) && (toRelease.length < src.length)) { throw wrongBuf(); } }
tensor([[0.0713, 0.0266, 0.0265, 0.0519, 0.0963, 0.0490, 0.0370, 0.0545, 0.1070,
         0.0195, 0.0174, 0.0370, 0.0237, 0.0210, 0.0230, 0.0751, 0.0545, 0.0342,
         0.1512, 0.0115, 0.0115],
        [0.0477, 0.0228, 0.0253, 0.0481, 0.0777, 0.0446, 0.0535, 0.0558, 0.1162,
         0.0215, 0.0156, 0.0535, 0.0259, 0.0216, 0.0227, 0.0789, 0.0558, 0.0371,
         0.1533, 0.0111, 0.0111],
        [0.0741, 0.0239, 0.0240, 0.0499, 0.1171, 0.0494, 0.0308, 0.0465, 0.0930,
         0.0152, 0.0170, 0.0308, 0.0172, 0.0138, 0.0199, 0.0757, 0.0465, 0.0322,
         0.1947, 0.0142, 0.0142],
        [0.0936, 0.0239, 0.0260, 0.0447, 0.1352, 0.0508, 0.0348, 0.0555, 0.1044,
         0.0165, 0.0148, 0.0348, 0.0197, 0.0147, 0.0188, 0.0688, 0.0555, 0.0289,
         0.1386, 0.0101, 0.0101],
        [0.0548, 0.0193, 0.0260, 0.0393, 0.0884, 0.0363, 0.0405, 0.0633, 0.1068,
         0.0205, 0.0151, 0.0405, 0.0191, 0.0227, 0.0253, 0.0872, 0.0633, 0.0307,
         0.1799, 0.0105, 0.0105],
        [0.0466, 0.0301, 0.0261, 0.0546, 0.1120, 0.0458, 0.0434, 0.0463, 0.0983,
         0.0171, 0.0208, 0.0434, 0.0225, 0.0230, 0.0253, 0.0797, 0.0463, 0.0323,
         0.1594, 0.0135, 0.0135],
        [0.0602, 0.0259, 0.0225, 0.0653, 0.1231, 0.0398, 0.0389, 0.0485, 0.0992,
         0.0186, 0.0144, 0.0389, 0.0190, 0.0163, 0.0198, 0.0871, 0.0485, 0.0306,
         0.1626, 0.0104, 0.0104],
        [0.0901, 0.0386, 0.0339, 0.0520, 0.0792, 0.0540, 0.0452, 0.0568, 0.0691,
         0.0259, 0.0268, 0.0452, 0.0334, 0.0309, 0.0309, 0.0599, 0.0568, 0.0359,
         0.0932, 0.0211, 0.0211],
        [0.0675, 0.0161, 0.0164, 0.0555, 0.1294, 0.0422, 0.0289, 0.0434, 0.1244,
         0.0122, 0.0082, 0.0289, 0.0112, 0.0129, 0.0132, 0.0750, 0.0434, 0.0211,
         0.2366, 0.0068, 0.0068],
        [0.0644, 0.0216, 0.0204, 0.0438, 0.1405, 0.0471, 0.0403, 0.0477, 0.0899,
         0.0184, 0.0175, 0.0403, 0.0201, 0.0193, 0.0245, 0.0615, 0.0477, 0.0313,
         0.1782, 0.0127, 0.0127],
        [0.0791, 0.0275, 0.0180, 0.0698, 0.1209, 0.0410, 0.0387, 0.0524, 0.1010,
         0.0152, 0.0108, 0.0387, 0.0159, 0.0141, 0.0178, 0.0751, 0.0524, 0.0274,
         0.1643, 0.0100, 0.0100],
        [0.0602, 0.0259, 0.0225, 0.0653, 0.1231, 0.0398, 0.0389, 0.0485, 0.0992,
         0.0186, 0.0144, 0.0389, 0.0190, 0.0163, 0.0198, 0.0871, 0.0485, 0.0306,
         0.1626, 0.0104, 0.0104],
        [0.0681, 0.0219, 0.0241, 0.0472, 0.0993, 0.0551, 0.0492, 0.0496, 0.0828,
         0.0149, 0.0176, 0.0492, 0.0180, 0.0169, 0.0205, 0.0796, 0.0496, 0.0359,
         0.1683, 0.0161, 0.0161],
        [0.0556, 0.0290, 0.0231, 0.0632, 0.1094, 0.0521, 0.0444, 0.0488, 0.1058,
         0.0188, 0.0184, 0.0444, 0.0248, 0.0180, 0.0247, 0.0849, 0.0488, 0.0331,
         0.1225, 0.0152, 0.0152],
        [0.0459, 0.0299, 0.0239, 0.0681, 0.1062, 0.0413, 0.0464, 0.0499, 0.0831,
         0.0248, 0.0175, 0.0464, 0.0186, 0.0228, 0.0255, 0.0735, 0.0499, 0.0436,
         0.1515, 0.0156, 0.0156],
        [0.0565, 0.0258, 0.0232, 0.0527, 0.1321, 0.0417, 0.0347, 0.0489, 0.1130,
         0.0194, 0.0155, 0.0347, 0.0193, 0.0147, 0.0207, 0.0859, 0.0489, 0.0327,
         0.1560, 0.0117, 0.0117],
        [0.0901, 0.0386, 0.0339, 0.0520, 0.0792, 0.0540, 0.0452, 0.0568, 0.0691,
         0.0259, 0.0268, 0.0452, 0.0334, 0.0309, 0.0309, 0.0599, 0.0568, 0.0359,
         0.0932, 0.0211, 0.0211],
        [0.0787, 0.0237, 0.0217, 0.0550, 0.1260, 0.0472, 0.0413, 0.0613, 0.0937,
         0.0160, 0.0131, 0.0413, 0.0198, 0.0161, 0.0212, 0.0704, 0.0613, 0.0323,
         0.1382, 0.0109, 0.0109],
        [0.0732, 0.0362, 0.0263, 0.0596, 0.0937, 0.0448, 0.0505, 0.0453, 0.0846,
         0.0196, 0.0204, 0.0505, 0.0263, 0.0272, 0.0254, 0.0611, 0.0453, 0.0318,
         0.1417, 0.0182, 0.0182],
        [0.0694, 0.0241, 0.0244, 0.0602, 0.1294, 0.0350, 0.0390, 0.0557, 0.1046,
         0.0190, 0.0186, 0.0390, 0.0220, 0.0172, 0.0235, 0.0815, 0.0557, 0.0348,
         0.1215, 0.0128, 0.0128],
        [0.0694, 0.0241, 0.0244, 0.0602, 0.1294, 0.0350, 0.0390, 0.0557, 0.1046,
         0.0190, 0.0186, 0.0390, 0.0220, 0.0172, 0.0235, 0.0815, 0.0557, 0.0348,
         0.1215, 0.0128, 0.0128]])