15469
Test: public void test549() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test549"); java.util.Set set5 = null; java.util.Set set6 = null; org.apache.commons.cli2.Argument argument8 = null; org.apache.commons.cli2.Group group9 = null; org.apache.commons.cli2.option.DefaultOption defaultOption11 = new org.apache.commons.cli2.option.DefaultOption("hi!", "", true, "hi!", "", set5, set6, true, argument8, group9, (int) (short) 100); java.util.Set set12 = defaultOption11.getPrefixes(); org.apache.commons.cli2.Group group13 = defaultOption11.getChildren(); org.apache.commons.cli2.validation.Validator validator20 = null; java.util.List list22 = null; org.apache.commons.cli2.option.ArgumentImpl argumentImpl24 = new org.apache.commons.cli2.option.ArgumentImpl("", "", 0, (int) (byte) 10, ' ', '#', validator20, "", list22, 0); java.util.List list25 = null; org.apache.commons.cli2.commandline.WriteableCommandLineImpl writeableCommandLineImpl26 = new org.apache.commons.cli2.commandline.WriteableCommandLineImpl((org.apache.commons.cli2.Option) argumentImpl24, list25); java.util.Set set27 = writeableCommandLineImpl26.getProperties(); defaultOption11.defaults((org.apache.commons.cli2.WriteableCommandLine) writeableCommandLineImpl26); java.util.List list30 = writeableCommandLineImpl26.getValues("org.apache.commons.cli2.OptionException: "); org.apache.commons.cli2.option.GroupImpl groupImpl35 = new org.apache.commons.cli2.option.GroupImpl(list30, "org.apache.commons.cli2.resource.CLIMessageBundle_en_US", "DISPLAY_GROUP_NAME", (int) (byte) -1, (int) (short) 100); java.util.List list36 = groupImpl35.getOptions(); java.util.Set set38 = org.apache.commons.cli2.DisplaySetting.ALL; java.util.Comparator comparator39 = null; java.util.List list40 = groupImpl35.helpLines((int) (short) 1, set38, comparator39); java.util.Set set41 = groupImpl35.getPrefixes(); java.util.List list42 = groupImpl35.getAnonymous(); org.apache.commons.cli2.commandline.Parser parser43 = new org.apache.commons.cli2.commandline.Parser(); org.apache.commons.cli2.validation.Validator validator50 = null; java.util.List list52 = null; org.apache.commons.cli2.option.ArgumentImpl argumentImpl54 = new org.apache.commons.cli2.option.ArgumentImpl("", "", 0, (int) (byte) 10, ' ', '#', validator50, "", list52, 0); java.util.Set set55 = argumentImpl54.getTriggers(); char char56 = argumentImpl54.getSubsequentSeparator(); org.apache.commons.cli2.validation.Validator validator64 = null; java.util.List list66 = null; org.apache.commons.cli2.option.ArgumentImpl argumentImpl68 = new org.apache.commons.cli2.option.ArgumentImpl("", "", 0, (int) (byte) 10, ' ', '#', validator64, "", list66, 0); java.util.Set set69 = argumentImpl68.getTriggers(); java.util.Comparator comparator70 = null; java.util.List list71 = argumentImpl54.helpLines((int) ' ', set69, comparator70); int int72 = argumentImpl54.getId(); parser43.setHelpOption((org.apache.commons.cli2.Option) argumentImpl54); org.apache.commons.cli2.commandline.Parser parser74 = new org.apache.commons.cli2.commandline.Parser(); org.apache.commons.cli2.util.HelpFormatter helpFormatter75 = null; parser74.setHelpFormatter(helpFormatter75); org.apache.commons.cli2.util.HelpFormatter helpFormatter81 = new org.apache.commons.cli2.util.HelpFormatter("", "", " ", (int) '\000'); java.lang.String str82 = helpFormatter81.getFooter(); parser74.setHelpFormatter(helpFormatter81); helpFormatter81.setHeader(" "); parser43.setHelpFormatter(helpFormatter81); java.lang.String str87 = helpFormatter81.getHeader(); java.util.Set set88 = helpFormatter81.getDisplaySettings(); org.apache.commons.cli2.OptionException optionException89 = helpFormatter81.getException(); java.io.PrintWriter printWriter90 = helpFormatter81.getPrintWriter(); boolean boolean91 = groupImpl35.equals((java.lang.Object) helpFormatter81); }
Code: public List getValues(final Option option, List defaultValues) { List valueList = (List) values.get(option); if (defaultValues == null || defaultValues.isEmpty()) { defaultValues = (List) this.defaultValues.get(option); } if (defaultValues != null && !defaultValues.isEmpty()) { if (valueList == null || valueList.isEmpty()) { valueList = defaultValues; } else { if (defaultValues.size() > valueList.size()) { valueList = new ArrayList(valueList); for (int i=valueList.size(); i<defaultValues.size(); i++) { valueList.add(defaultValues.get(i)); } } } } return valueList == null ? Collections.EMPTY_LIST : valueList; }
tensor([[0.0090, 0.0117, 0.0205,  ..., 0.0090, 0.0143, 0.0042],
        [0.0062, 0.0092, 0.0201,  ..., 0.0063, 0.0113, 0.0032],
        [0.0068, 0.0114, 0.0176,  ..., 0.0070, 0.0091, 0.0031],
        ...,
        [0.0093, 0.0128, 0.0206,  ..., 0.0067, 0.0113, 0.0052],
        [0.0058, 0.0081, 0.0174,  ..., 0.0054, 0.0110, 0.0032],
        [0.0060, 0.0101, 0.0190,  ..., 0.0061, 0.0110, 0.0037]])