16294
Test: public void test086() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test086"); org.apache.commons.cli.PosixParser posixParser0 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine1 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj3 = commandLine1.getParsedOptionValue(""); java.util.Properties properties5 = commandLine1.getOptionProperties("hi!"); posixParser0.processProperties(properties5); org.apache.commons.cli.Options options7 = new org.apache.commons.cli.Options(); java.util.Collection collection8 = options7.getOptionGroups(); boolean boolean10 = options7.hasLongOption("[ Options: [ short {} ] [ long {} ]"); org.apache.commons.cli.Option option15 = new org.apache.commons.cli.Option("", "", true, "hi!"); java.lang.String[] strArray16 = option15.getValues(); option15.clearValues(); int int18 = option15.getArgs(); java.lang.String str19 = option15.getOpt(); org.apache.commons.cli.Options options20 = options7.addOption(option15); org.apache.commons.cli.Options options24 = options20.addOption("arg", true, "hi!"); org.apache.commons.cli.Option option27 = new org.apache.commons.cli.Option("", "hi!"); char char28 = option27.getValueSeparator(); java.lang.String str29 = option27.getValue(); java.lang.String str30 = option27.getArgName(); java.lang.String str31 = option27.getValue(); org.apache.commons.cli.CommandLine commandLine32 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj34 = commandLine32.getParsedOptionValue(""); java.util.Properties properties36 = commandLine32.getOptionProperties("hi!"); java.lang.Object obj38 = commandLine32.getOptionObject("hi!"); org.apache.commons.cli.Option option42 = new org.apache.commons.cli.Option("", true, ""); commandLine32.addOption(option42); java.lang.String str45 = commandLine32.getOptionValue(""); java.lang.String[] strArray46 = commandLine32.getArgs(); java.lang.String str48 = commandLine32.getOptionValue("hi!"); java.util.Iterator iterator49 = commandLine32.iterator(); java.lang.String[] strArray50 = commandLine32.getArgs(); boolean boolean51 = option27.equals((java.lang.Object) strArray50); java.lang.String[] strArray53 = posixParser0.flatten(options20, strArray50, true); }
Code: protected void processProperties(Properties properties){if (properties == null){return;}for (Enumeration e = properties.propertyNames(); e.hasMoreElements();){String option = e.nextElement().toString();if (!cmd.hasOption(option)){Option opt = getOptions().getOption(option);String value = properties.getProperty(option);if (opt.hasArg()){if (opt.getValues() == null || opt.getValues().length == -1){try{;}catch (RuntimeException exp){}}}else if (!("yes".equalsIgnoreCase(value)|| "true".equalsIgnoreCase(value)|| "1".equalsIgnoreCase(value))){continue;}cmd.addOption(opt);;}}}
tensor([[0.0296, 0.0131, 0.0610,  ..., 0.0240, 0.0687, 0.0208],
        [0.0354, 0.0118, 0.0630,  ..., 0.0214, 0.0831, 0.0226],
        [0.0308, 0.0125, 0.0556,  ..., 0.0218, 0.0801, 0.0216],
        ...,
        [0.0269, 0.0114, 0.0553,  ..., 0.0232, 0.0736, 0.0215],
        [0.0279, 0.0079, 0.0676,  ..., 0.0208, 0.0802, 0.0201],
        [0.0328, 0.0132, 0.0575,  ..., 0.0238, 0.0449, 0.0263]])