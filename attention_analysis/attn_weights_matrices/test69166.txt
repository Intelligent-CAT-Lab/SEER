69166
Test: public void test112() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test112"); org.jsoup.select.Evaluator.IsLastOfType isLastOfType0 = new org.jsoup.select.Evaluator.IsLastOfType(); java.lang.String str1 = isLastOfType0.getPseudoClass(); java.lang.String str2 = isLastOfType0.toString(); int int3 = isLastOfType0.a; org.jsoup.select.Evaluator.AllElements allElements4 = new org.jsoup.select.Evaluator.AllElements(); java.lang.String str5 = allElements4.toString(); org.jsoup.nodes.Element element6 = null; org.jsoup.nodes.Element element7 = null; boolean boolean8 = allElements4.matches(element6, element7); org.jsoup.nodes.Element element9 = null; org.jsoup.nodes.Element element10 = null; boolean boolean11 = allElements4.matches(element9, element10); org.jsoup.select.Evaluator evaluator13 = org.jsoup.select.QueryParser.parse("nth-of-type"); org.jsoup.select.Evaluator.AllElements allElements14 = new org.jsoup.select.Evaluator.AllElements(); java.lang.String str15 = allElements14.toString(); java.util.regex.Pattern pattern17 = null; org.jsoup.select.Evaluator.AttributeWithValueMatching attributeWithValueMatching18 = new org.jsoup.select.Evaluator.AttributeWithValueMatching("nth-last-of-type", pattern17); org.jsoup.select.Evaluator.TagEndsWith tagEndsWith20 = new org.jsoup.select.Evaluator.TagEndsWith(""); org.jsoup.select.Evaluator.IsFirstOfType isFirstOfType21 = new org.jsoup.select.Evaluator.IsFirstOfType(); java.lang.String str22 = isFirstOfType21.toString(); org.jsoup.select.Evaluator.AllElements allElements23 = new org.jsoup.select.Evaluator.AllElements(); java.lang.String str24 = allElements23.toString(); org.jsoup.select.Evaluator.ContainsText containsText26 = new org.jsoup.select.Evaluator.ContainsText(""); org.jsoup.select.Evaluator[] evaluatorArray27 = new org.jsoup.select.Evaluator[] { containsText26 }; java.util.ArrayList<org.jsoup.select.Evaluator> evaluatorList28 = new java.util.ArrayList<org.jsoup.select.Evaluator>(); boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.jsoup.select.Evaluator>) evaluatorList28, evaluatorArray27); org.jsoup.select.CombiningEvaluator.And and30 = new org.jsoup.select.CombiningEvaluator.And((java.util.Collection<org.jsoup.select.Evaluator>) evaluatorList28); and30.updateNumEvaluators(); org.jsoup.select.Evaluator.ContainsText containsText33 = new org.jsoup.select.Evaluator.ContainsText(""); org.jsoup.select.Evaluator[] evaluatorArray34 = new org.jsoup.select.Evaluator[] { containsText33 }; java.util.ArrayList<org.jsoup.select.Evaluator> evaluatorList35 = new java.util.ArrayList<org.jsoup.select.Evaluator>(); boolean boolean36 = java.util.Collections.addAll((java.util.Collection<org.jsoup.select.Evaluator>) evaluatorList35, evaluatorArray34); org.jsoup.select.CombiningEvaluator.And and37 = new org.jsoup.select.CombiningEvaluator.And((java.util.Collection<org.jsoup.select.Evaluator>) evaluatorList35); org.jsoup.select.Evaluator.ContainsText containsText39 = new org.jsoup.select.Evaluator.ContainsText(""); org.jsoup.select.Evaluator[] evaluatorArray40 = new org.jsoup.select.Evaluator[] { containsText39 }; java.util.ArrayList<org.jsoup.select.Evaluator> evaluatorList41 = new java.util.ArrayList<org.jsoup.select.Evaluator>(); boolean boolean42 = java.util.Collections.addAll((java.util.Collection<org.jsoup.select.Evaluator>) evaluatorList41, evaluatorArray40); org.jsoup.select.CombiningEvaluator.And and43 = new org.jsoup.select.CombiningEvaluator.And((java.util.Collection<org.jsoup.select.Evaluator>) evaluatorList41); and37.replaceRightMostEvaluator((org.jsoup.select.Evaluator) and43); org.jsoup.select.Evaluator.AllElements allElements45 = new org.jsoup.select.Evaluator.AllElements(); java.lang.String str46 = allElements45.toString(); org.jsoup.nodes.Element element47 = null; org.jsoup.nodes.Element element48 = null; boolean boolean49 = allElements45.matches(element47, element48); org.jsoup.select.Evaluator.IndexGreaterThan indexGreaterThan51 = new org.jsoup.select.Evaluator.IndexGreaterThan((int) '4'); org.jsoup.select.Evaluator[] evaluatorArray52 = new org.jsoup.select.Evaluator[] { allElements14, attributeWithValueMatching18, tagEndsWith20, isFirstOfType21, allElements23, and30, and37, allElements45, indexGreaterThan51 }; java.util.ArrayList<org.jsoup.select.Evaluator> evaluatorList53 = new java.util.ArrayList<org.jsoup.select.Evaluator>(); boolean boolean54 = java.util.Collections.addAll((java.util.Collection<org.jsoup.select.Evaluator>) evaluatorList53, evaluatorArray52); org.jsoup.select.CombiningEvaluator.Or or55 = new org.jsoup.select.CombiningEvaluator.Or((java.util.Collection<org.jsoup.select.Evaluator>) evaluatorList53); org.jsoup.select.Evaluator.IsLastChild isLastChild56 = new org.jsoup.select.Evaluator.IsLastChild(); or55.add((org.jsoup.select.Evaluator) isLastChild56); org.jsoup.select.Evaluator evaluator58 = or55.rightMostEvaluator(); org.jsoup.select.Evaluator.IsOnlyChild isOnlyChild59 = new org.jsoup.select.Evaluator.IsOnlyChild(); java.lang.String str60 = isOnlyChild59.toString(); org.jsoup.select.Evaluator.IndexGreaterThan indexGreaterThan62 = new org.jsoup.select.Evaluator.IndexGreaterThan((int) '4'); java.lang.String str63 = indexGreaterThan62.toString(); org.jsoup.select.Evaluator[] evaluatorArray64 = new org.jsoup.select.Evaluator[] { isLastOfType0, allElements4, evaluator13, evaluator58, isOnlyChild59, indexGreaterThan62 }; org.jsoup.select.CombiningEvaluator.Or or65 = new org.jsoup.select.CombiningEvaluator.Or(evaluatorArray64); org.jsoup.nodes.Element element66 = null; org.jsoup.nodes.Element element67 = null; try { boolean boolean68 = or65.matches(element66, element67); } catch (java.lang.NullPointerException e) { } }
Code: public static Evaluator parse(String query) { QueryParser p = new QueryParser(query); return p.parse(); }
tensor([[0.0631, 0.1684, 0.0451, 0.0379, 0.0663, 0.0726, 0.0762, 0.0934, 0.0389,
         0.0326, 0.0650, 0.0680, 0.1481, 0.0244],
        [0.0662, 0.1599, 0.0459, 0.0470, 0.0557, 0.0979, 0.0742, 0.0970, 0.0428,
         0.0279, 0.0522, 0.0614, 0.1442, 0.0278],
        [0.0474, 0.1827, 0.0412, 0.0324, 0.0621, 0.0873, 0.0789, 0.1177, 0.0346,
         0.0263, 0.0747, 0.0757, 0.1268, 0.0123],
        [0.0463, 0.1942, 0.0353, 0.0249, 0.0622, 0.0970, 0.0800, 0.1251, 0.0337,
         0.0218, 0.0601, 0.0683, 0.1366, 0.0147],
        [0.0566, 0.1606, 0.0304, 0.0381, 0.0576, 0.0870, 0.0690, 0.0964, 0.0517,
         0.0342, 0.0727, 0.0754, 0.1509, 0.0195],
        [0.0603, 0.1318, 0.0440, 0.0445, 0.0604, 0.0834, 0.0821, 0.1126, 0.0496,
         0.0356, 0.0595, 0.0712, 0.1332, 0.0316],
        [0.0567, 0.1646, 0.0449, 0.0370, 0.0622, 0.0854, 0.0831, 0.1044, 0.0387,
         0.0265, 0.0673, 0.0670, 0.1332, 0.0291],
        [0.0675, 0.1347, 0.0443, 0.0436, 0.0684, 0.0712, 0.0722, 0.1214, 0.0409,
         0.0345, 0.0724, 0.0773, 0.1314, 0.0202],
        [0.0653, 0.1446, 0.0389, 0.0513, 0.0589, 0.0664, 0.0786, 0.1205, 0.0520,
         0.0303, 0.0686, 0.0703, 0.1240, 0.0302],
        [0.0542, 0.1559, 0.0371, 0.0434, 0.0523, 0.0853, 0.0769, 0.0939, 0.0445,
         0.0367, 0.0631, 0.0759, 0.1552, 0.0257],
        [0.0577, 0.1656, 0.0379, 0.0379, 0.0706, 0.0826, 0.0800, 0.1055, 0.0380,
         0.0310, 0.0686, 0.0740, 0.1296, 0.0209],
        [0.0459, 0.1853, 0.0367, 0.0321, 0.0582, 0.0721, 0.0776, 0.1103, 0.0438,
         0.0283, 0.0692, 0.0697, 0.1500, 0.0207],
        [0.0559, 0.1731, 0.0409, 0.0289, 0.0502, 0.0871, 0.0843, 0.1066, 0.0399,
         0.0280, 0.0607, 0.0692, 0.1490, 0.0262],
        [0.0463, 0.1632, 0.0391, 0.0330, 0.0591, 0.0915, 0.0878, 0.0994, 0.0389,
         0.0258, 0.0692, 0.0932, 0.1326, 0.0210]])