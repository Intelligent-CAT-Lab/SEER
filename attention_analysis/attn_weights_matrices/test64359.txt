64359
Test: public void testParsingOfLongerSequencesWithNonNumeric() throws Exception { JsonFactory factory = new JsonFactory(); factory.enable(JsonParser.Feature.ALLOW_NON_NUMERIC_NUMBERS); double[] values = new double[] { 0.01, -10.5, 2.1e9, 4.0e-8, Double.NaN, Double.NEGATIVE_INFINITY, Double.POSITIVE_INFINITY }; for (int i = 0; i < values.length; ++i) { int COUNT = 4096; int VCOUNT = 2 * COUNT; String arrayJson = toJsonArray(values[i], VCOUNT); StringBuilder sb = new StringBuilder(COUNT + arrayJson.length() + 20); for (int j = 0; j < COUNT; ++j) { sb.append(' '); } sb.append(arrayJson); String DOC = sb.toString(); for (int input = 0; input < 2; ++input) { JsonParser jp; if (input == 0) { jp = createParserUsingStream(factory, DOC, "UTF-8"); } else { jp = factory.createParser(DOC); } for (int j = 0; j < VCOUNT; ++j) { } jp.close(); } } }
Code: public final JsonToken nextToken(){if (_currToken == JsonToken.FIELD_NAME) {return _nextAfterName();}_numTypesValid = NR_UNKNOWN;if (_tokenIncomplete) {_skipString(); }int i = _skipWSOrEnd();if (i < 0) { close();return (_currToken = null);}_binaryValue = null;if (i == INT_RBRACKET) {;if (!_parsingContext.inArray()) {_reportMismatchedEndMarker(i, '}');}_parsingContext = _parsingContext.getParent();return (_currToken = JsonToken.END_ARRAY);}
tensor([[0.0219, 0.0175, 0.0325,  ..., 0.0213, 0.0138, 0.0274],
        [0.0210, 0.0137, 0.0328,  ..., 0.0202, 0.0163, 0.0282],
        [0.0186, 0.0139, 0.0315,  ..., 0.0219, 0.0128, 0.0275],
        ...,
        [0.0212, 0.0155, 0.0362,  ..., 0.0224, 0.0113, 0.0236],
        [0.0248, 0.0208, 0.0342,  ..., 0.0205, 0.0202, 0.0261],
        [0.0214, 0.0198, 0.0369,  ..., 0.0205, 0.0150, 0.0244]])