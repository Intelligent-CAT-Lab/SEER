67108
Test: public void testWithMultipleJsonParserSequences() throws IOException { TokenBuffer buf1 = new TokenBuffer(null, false); buf1.writeStartArray(); TokenBuffer buf2 = new TokenBuffer(null, false); buf2.writeString("a"); TokenBuffer buf3 = new TokenBuffer(null, false); buf3.writeNumber(13); TokenBuffer buf4 = new TokenBuffer(null, false); buf4.writeEndArray(); JsonParserSequence seq1 = JsonParserSequence.createFlattened(false, buf1.asParser(), buf2.asParser()); JsonParserSequence seq2 = JsonParserSequence.createFlattened(false, buf3.asParser(), buf4.asParser()); JsonParserSequence combo = JsonParserSequence.createFlattened(false, seq1, seq2); buf1.close(); buf2.close(); buf3.close(); buf4.close(); }
Code: public int getIntValue() throws IOException { final NumericNode node = (NumericNode) currentNumericNode(); return node.intValue(); }
tensor([[0.0460, 0.0263, 0.1069, 0.0988, 0.0274, 0.0753, 0.0388, 0.1463, 0.2154,
         0.0298, 0.0155, 0.0444, 0.0523, 0.0541, 0.0226],
        [0.0305, 0.0199, 0.1306, 0.0960, 0.0266, 0.0813, 0.0446, 0.1600, 0.2147,
         0.0256, 0.0111, 0.0434, 0.0507, 0.0487, 0.0163],
        [0.0467, 0.0220, 0.1144, 0.0923, 0.0277, 0.0855, 0.0475, 0.1310, 0.1831,
         0.0350, 0.0179, 0.0526, 0.0623, 0.0577, 0.0243],
        [0.0281, 0.0136, 0.1141, 0.1139, 0.0223, 0.0904, 0.0249, 0.1436, 0.2832,
         0.0263, 0.0081, 0.0357, 0.0501, 0.0294, 0.0162],
        [0.0322, 0.0163, 0.1069, 0.1190, 0.0231, 0.0785, 0.0322, 0.1483, 0.2553,
         0.0271, 0.0106, 0.0379, 0.0512, 0.0463, 0.0151],
        [0.0467, 0.0215, 0.1057, 0.0805, 0.0328, 0.0839, 0.0462, 0.1249, 0.2153,
         0.0393, 0.0187, 0.0450, 0.0525, 0.0588, 0.0282],
        [0.0393, 0.0160, 0.1402, 0.0921, 0.0275, 0.0782, 0.0275, 0.1648, 0.2131,
         0.0302, 0.0098, 0.0388, 0.0575, 0.0502, 0.0148],
        [0.0371, 0.0194, 0.1132, 0.1152, 0.0260, 0.0844, 0.0364, 0.1468, 0.2336,
         0.0249, 0.0160, 0.0434, 0.0433, 0.0400, 0.0202],
        [0.0302, 0.0200, 0.1317, 0.1288, 0.0273, 0.0763, 0.0288, 0.1536, 0.2193,
         0.0284, 0.0117, 0.0322, 0.0450, 0.0505, 0.0162],
        [0.0571, 0.0343, 0.1075, 0.0867, 0.0372, 0.0662, 0.0482, 0.1276, 0.1413,
         0.0478, 0.0287, 0.0627, 0.0630, 0.0633, 0.0284],
        [0.0296, 0.0216, 0.1140, 0.1159, 0.0243, 0.0802, 0.0352, 0.1669, 0.2189,
         0.0239, 0.0116, 0.0345, 0.0586, 0.0512, 0.0136],
        [0.0449, 0.0203, 0.1036, 0.1094, 0.0315, 0.0630, 0.0404, 0.1641, 0.2115,
         0.0305, 0.0132, 0.0444, 0.0483, 0.0503, 0.0246],
        [0.0284, 0.0143, 0.1271, 0.0876, 0.0265, 0.0694, 0.0279, 0.1601, 0.2727,
         0.0286, 0.0095, 0.0442, 0.0389, 0.0464, 0.0183],
        [0.0418, 0.0201, 0.1220, 0.1042, 0.0346, 0.0736, 0.0326, 0.1464, 0.2115,
         0.0362, 0.0161, 0.0419, 0.0429, 0.0548, 0.0213],
        [0.0291, 0.0214, 0.1269, 0.1215, 0.0260, 0.0884, 0.0273, 0.1568, 0.2012,
         0.0278, 0.0104, 0.0350, 0.0675, 0.0423, 0.0184]])