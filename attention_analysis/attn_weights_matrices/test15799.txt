15799
Test: public void test078() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test078"); org.apache.commons.cli.PosixParser posixParser0 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine1 = posixParser0.cmd; org.apache.commons.cli.Options options2 = posixParser0.getOptions(); org.apache.commons.cli.Options options3 = new org.apache.commons.cli.Options(); java.util.List list4 = options3.helpOptions(); java.lang.String[] strArray6 = new java.lang.String[] { "" }; org.apache.commons.cli.CommandLine commandLine7 = posixParser0.parse(options3, strArray6); org.apache.commons.cli.Options options8 = posixParser0.getOptions(); org.apache.commons.cli.PosixParser posixParser9 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine10 = posixParser9.cmd; org.apache.commons.cli.Options options11 = posixParser9.getOptions(); org.apache.commons.cli.Options options12 = new org.apache.commons.cli.Options(); java.util.List list13 = options12.helpOptions(); java.lang.String[] strArray15 = new java.lang.String[] { "" }; org.apache.commons.cli.CommandLine commandLine16 = posixParser9.parse(options12, strArray15); org.apache.commons.cli.PosixParser posixParser17 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.PosixParser posixParser18 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine19 = posixParser18.cmd; org.apache.commons.cli.Options options20 = posixParser18.getOptions(); org.apache.commons.cli.Options options21 = new org.apache.commons.cli.Options(); java.util.List list22 = options21.helpOptions(); java.lang.String[] strArray24 = new java.lang.String[] { "" }; org.apache.commons.cli.CommandLine commandLine25 = posixParser18.parse(options21, strArray24); java.lang.String[] strArray26 = null; org.apache.commons.cli.CommandLine commandLine27 = posixParser17.parse(options21, strArray26); org.apache.commons.cli.PosixParser posixParser28 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine29 = posixParser28.cmd; org.apache.commons.cli.Options options30 = posixParser28.getOptions(); java.util.Properties properties31 = null; posixParser28.processProperties(properties31); org.apache.commons.cli.PosixParser posixParser33 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine34 = posixParser33.cmd; org.apache.commons.cli.Options options35 = posixParser33.getOptions(); org.apache.commons.cli.Options options36 = new org.apache.commons.cli.Options(); java.util.List list37 = options36.helpOptions(); java.lang.String[] strArray39 = new java.lang.String[] { "" }; org.apache.commons.cli.CommandLine commandLine40 = posixParser33.parse(options36, strArray39); java.lang.String[] strArray47 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!", "a" }; java.lang.String[] strArray49 = posixParser28.flatten(options36, strArray47, true); org.apache.commons.cli.CommandLine commandLine50 = posixParser9.parse(options21, strArray49); org.apache.commons.cli.Options options54 = options21.addOption("a", false, "arg"); org.apache.commons.cli.PosixParser posixParser55 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine56 = posixParser55.cmd; org.apache.commons.cli.CommandLine commandLine57 = new org.apache.commons.cli.CommandLine(); posixParser55.cmd = commandLine57; org.apache.commons.cli.PosixParser posixParser59 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine60 = posixParser59.cmd; org.apache.commons.cli.Options options61 = posixParser59.getOptions(); java.util.Properties properties62 = null; posixParser59.processProperties(properties62); org.apache.commons.cli.PosixParser posixParser64 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine65 = posixParser64.cmd; org.apache.commons.cli.Options options66 = posixParser64.getOptions(); org.apache.commons.cli.Options options67 = new org.apache.commons.cli.Options(); java.util.List list68 = options67.helpOptions(); java.lang.String[] strArray70 = new java.lang.String[] { "" }; org.apache.commons.cli.CommandLine commandLine71 = posixParser64.parse(options67, strArray70); java.lang.String[] strArray78 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!", "a" }; java.lang.String[] strArray80 = posixParser59.flatten(options67, strArray78, true); org.apache.commons.cli.PosixParser posixParser81 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine82 = posixParser81.cmd; org.apache.commons.cli.Options options83 = posixParser81.getOptions(); org.apache.commons.cli.Options options84 = new org.apache.commons.cli.Options(); java.util.List list85 = options84.helpOptions(); java.lang.String[] strArray87 = new java.lang.String[] { "" }; org.apache.commons.cli.CommandLine commandLine88 = posixParser81.parse(options84, strArray87); org.apache.commons.cli.CommandLine commandLine90 = posixParser55.parse(options67, strArray87, false); java.lang.String[] strArray91 = commandLine90.getArgs(); java.util.Properties properties92 = null; org.apache.commons.cli.CommandLine commandLine94 = posixParser0.parse(options21, strArray91, properties92, false); org.apache.commons.cli.CommandLine commandLine95 = posixParser0.cmd; }
Code: protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption){init();this.options = options;Iterator iter = Arrays.asList(arguments).iterator();while (iter.hasNext()){String token = (String) iter.next();if (token.startsWith("--")){int pos = token.indexOf('=');String opt = pos == -1 ? token : token.substring(1, pos); if (!options.hasOption(opt)){;}else{tokens.add(opt);if (pos != -1){tokens.add(token.substring(pos + 1));}}}else if ("-".equals(token)){tokens.add(token);}else if (token.startsWith("-")){if (token.length() == 2 || options.hasOption(token)){processOptionToken(token, stopAtNonOption);}else{burstToken(token, stopAtNonOption);}}else if (true){;}else{tokens.add(token);}gobble(iter);}return (String[]) tokens.toArray(new String[tokens.size()]);}
tensor([[0.0154, 0.0047, 0.0165,  ..., 0.0825, 0.0165, 0.0178],
        [0.0136, 0.0040, 0.0150,  ..., 0.0690, 0.0138, 0.0156],
        [0.0146, 0.0070, 0.0193,  ..., 0.0604, 0.0182, 0.0186],
        ...,
        [0.0166, 0.0070, 0.0191,  ..., 0.0684, 0.0223, 0.0158],
        [0.0154, 0.0063, 0.0176,  ..., 0.0599, 0.0160, 0.0153],
        [0.0122, 0.0059, 0.0148,  ..., 0.0742, 0.0185, 0.0172]])