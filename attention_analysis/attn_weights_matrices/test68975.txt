68975
Test: public void test588() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test588"); org.jsoup.select.CombiningEvaluator.Or or0 = new org.jsoup.select.CombiningEvaluator.Or(); java.util.regex.Pattern pattern2 = null; org.jsoup.select.Evaluator.AttributeWithValueMatching attributeWithValueMatching3 = new org.jsoup.select.Evaluator.AttributeWithValueMatching("", pattern2); org.jsoup.nodes.Document document5 = org.jsoup.nodes.Document.createShell("hi!"); org.jsoup.nodes.Document document7 = org.jsoup.nodes.Document.createShell("hi!"); boolean boolean8 = attributeWithValueMatching3.matches((org.jsoup.nodes.Element) document5, (org.jsoup.nodes.Element) document7); boolean boolean10 = document5.equals((java.lang.Object) 0L); org.jsoup.nodes.Element element11 = document5.empty(); org.jsoup.nodes.Element element13 = document5.addClass("hi!"); org.jsoup.select.Elements elements15 = document5.getElementsMatchingOwnText(""); org.jsoup.nodes.Element element18 = document5.attr("SYSTEM", ":last-of-type"); org.jsoup.select.Elements elements19 = org.jsoup.select.Collector.collect((org.jsoup.select.Evaluator) or0, (org.jsoup.nodes.Element) document5); org.jsoup.select.Evaluator.IndexGreaterThan indexGreaterThan21 = new org.jsoup.select.Evaluator.IndexGreaterThan((int) '4'); org.jsoup.nodes.Document document23 = org.jsoup.nodes.Document.createShell("hi!"); java.util.List<org.jsoup.nodes.TextNode> textNodeList24 = document23.textNodes(); org.jsoup.nodes.Document document26 = org.jsoup.nodes.Document.createShell("hi!"); boolean boolean27 = indexGreaterThan21.matches((org.jsoup.nodes.Element) document23, (org.jsoup.nodes.Element) document26); or0.add((org.jsoup.select.Evaluator) indexGreaterThan21); org.jsoup.select.StructuralEvaluator.PreviousSibling previousSibling29 = new org.jsoup.select.StructuralEvaluator.PreviousSibling((org.jsoup.select.Evaluator) indexGreaterThan21); java.lang.String str30 = indexGreaterThan21.toString(); }
Code: public String toString() { return String.format(":matchesOwn(%s)", pattern); }
tensor([[0.1304, 0.1684, 0.1750, 0.1676, 0.1428, 0.0834, 0.0782, 0.0542],
        [0.1319, 0.1535, 0.1868, 0.1891, 0.1327, 0.0858, 0.0719, 0.0484],
        [0.0944, 0.2417, 0.1621, 0.1688, 0.1422, 0.0882, 0.0581, 0.0444],
        [0.1210, 0.1809, 0.1282, 0.1870, 0.1402, 0.0831, 0.0924, 0.0671],
        [0.0990, 0.2299, 0.1480, 0.1851, 0.1452, 0.0652, 0.0763, 0.0512],
        [0.0853, 0.1450, 0.1688, 0.2071, 0.1744, 0.1074, 0.0666, 0.0453],
        [0.0988, 0.1765, 0.1691, 0.2085, 0.1507, 0.0720, 0.0724, 0.0519],
        [0.0875, 0.1604, 0.1813, 0.2032, 0.1848, 0.0888, 0.0493, 0.0448]])