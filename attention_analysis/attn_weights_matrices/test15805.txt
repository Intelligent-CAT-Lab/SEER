15805
Test: public void test096() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test096"); org.apache.commons.cli.PosixParser posixParser0 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.PosixParser posixParser1 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine2 = posixParser1.cmd; org.apache.commons.cli.Options options3 = posixParser1.getOptions(); org.apache.commons.cli.Options options4 = new org.apache.commons.cli.Options(); java.util.List list5 = options4.helpOptions(); java.lang.String[] strArray7 = new java.lang.String[] { "" }; org.apache.commons.cli.CommandLine commandLine8 = posixParser1.parse(options4, strArray7); java.lang.String[] strArray9 = null; org.apache.commons.cli.CommandLine commandLine10 = posixParser0.parse(options4, strArray9); org.apache.commons.cli.PosixParser posixParser11 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine12 = posixParser11.cmd; org.apache.commons.cli.Options options13 = posixParser11.getOptions(); org.apache.commons.cli.Options options14 = new org.apache.commons.cli.Options(); java.util.List list15 = options14.helpOptions(); java.lang.String[] strArray17 = new java.lang.String[] { "" }; org.apache.commons.cli.CommandLine commandLine18 = posixParser11.parse(options14, strArray17); org.apache.commons.cli.PosixParser posixParser19 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine20 = posixParser19.cmd; org.apache.commons.cli.Options options21 = posixParser19.getOptions(); org.apache.commons.cli.Options options22 = new org.apache.commons.cli.Options(); org.apache.commons.cli.PosixParser posixParser23 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine24 = posixParser23.cmd; org.apache.commons.cli.Options options25 = posixParser23.getOptions(); java.util.Properties properties26 = null; posixParser23.processProperties(properties26); org.apache.commons.cli.PosixParser posixParser28 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine29 = posixParser28.cmd; org.apache.commons.cli.Options options30 = posixParser28.getOptions(); org.apache.commons.cli.Options options31 = new org.apache.commons.cli.Options(); java.util.List list32 = options31.helpOptions(); java.lang.String[] strArray34 = new java.lang.String[] { "" }; org.apache.commons.cli.CommandLine commandLine35 = posixParser28.parse(options31, strArray34); java.lang.String[] strArray42 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!", "a" }; java.lang.String[] strArray44 = posixParser23.flatten(options31, strArray42, true); org.apache.commons.cli.CommandLine commandLine45 = posixParser19.parse(options22, strArray44); java.lang.String[] strArray46 = null; java.util.Properties properties47 = null; org.apache.commons.cli.CommandLine commandLine48 = posixParser11.parse(options22, strArray46, properties47); org.apache.commons.cli.Option option50 = options22.getOption(""); java.lang.String str51 = options22.toString(); org.apache.commons.cli.PosixParser posixParser52 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine53 = posixParser52.cmd; org.apache.commons.cli.Options options54 = posixParser52.getOptions(); org.apache.commons.cli.Options options55 = new org.apache.commons.cli.Options(); org.apache.commons.cli.PosixParser posixParser56 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine57 = posixParser56.cmd; org.apache.commons.cli.Options options58 = posixParser56.getOptions(); java.util.Properties properties59 = null; posixParser56.processProperties(properties59); org.apache.commons.cli.PosixParser posixParser61 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine62 = posixParser61.cmd; org.apache.commons.cli.Options options63 = posixParser61.getOptions(); org.apache.commons.cli.Options options64 = new org.apache.commons.cli.Options(); java.util.List list65 = options64.helpOptions(); java.lang.String[] strArray67 = new java.lang.String[] { "" }; org.apache.commons.cli.CommandLine commandLine68 = posixParser61.parse(options64, strArray67); java.lang.String[] strArray75 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!", "a" }; java.lang.String[] strArray77 = posixParser56.flatten(options64, strArray75, true); org.apache.commons.cli.CommandLine commandLine78 = posixParser52.parse(options55, strArray77); org.apache.commons.cli.CommandLine commandLine79 = posixParser0.parse(options22, strArray77); org.apache.commons.cli.Options options80 = posixParser0.getOptions(); org.apache.commons.cli.Option option83 = new org.apache.commons.cli.Option("", ""); option83.setArgs((int) (byte) 10); option83.setLongOpt("[ option: a :: null ]"); org.apache.commons.cli.OptionGroup optionGroup88 = options80.getOptionGroup(option83); java.util.List list89 = options80.getRequiredOptions(); } ] [ long {} ]" + "'", str51, "[ Options: [ short {} ] [ long {} ]"); }
Code: protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption){init();this.options = options;Iterator iter = Arrays.asList(arguments).iterator();while (iter.hasNext()){String token = (String) iter.next();if (token.startsWith("--")){int pos = token.indexOf('=');String opt = pos == -1 ? token : token.substring(1, pos); if (!options.hasOption(opt)){;}else{tokens.add(opt);if (pos != -1){tokens.add(token.substring(pos + 1));}}}else if ("-".equals(token)){tokens.add(token);}else if (token.startsWith("-")){if (token.length() == 2 || options.hasOption(token)){processOptionToken(token, stopAtNonOption);}else{burstToken(token, stopAtNonOption);}}else if (true){;}else{tokens.add(token);}gobble(iter);}return (String[]) tokens.toArray(new String[tokens.size()]);}
tensor([[0.0154, 0.0047, 0.0165,  ..., 0.0825, 0.0165, 0.0178],
        [0.0136, 0.0040, 0.0150,  ..., 0.0690, 0.0138, 0.0156],
        [0.0146, 0.0070, 0.0193,  ..., 0.0604, 0.0182, 0.0186],
        ...,
        [0.0166, 0.0070, 0.0191,  ..., 0.0684, 0.0223, 0.0158],
        [0.0154, 0.0063, 0.0176,  ..., 0.0599, 0.0160, 0.0153],
        [0.0122, 0.0059, 0.0148,  ..., 0.0742, 0.0185, 0.0172]])