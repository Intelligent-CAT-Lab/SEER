69358
Test: public void test465() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test465"); org.jsoup.select.Evaluator.IsRoot isRoot0 = new org.jsoup.select.Evaluator.IsRoot(); org.jsoup.nodes.Document document2 = org.jsoup.nodes.Document.createShell(""); org.jsoup.nodes.Document document4 = org.jsoup.nodes.Document.createShell(""); boolean boolean5 = isRoot0.matches((org.jsoup.nodes.Element) document2, (org.jsoup.nodes.Element) document4); org.jsoup.select.Elements elements7 = document2.getElementsByIndexLessThan(0); boolean boolean9 = elements7.hasClass("#:gt(1)"); java.util.List<java.lang.String> strList11 = elements7.eachAttr("<html>\n <head></head>\n <body></body>\n</html>"); org.jsoup.select.Elements elements13 = elements7.toggleClass("#root"); boolean boolean14 = elements7.hasText(); org.jsoup.select.Elements elements16 = elements7.addClass(":only-of-type"); java.util.Collection<org.jsoup.parser.ParseError> parseErrorCollection17 = null; try { boolean boolean18 = elements7.removeAll(parseErrorCollection17); } catch (java.lang.NullPointerException e) { } }
Code: public boolean hasClass(String className) { final String classAttr = attributes.get("class"); final int len = classAttr.length(); final int wantLen = className.length(); if (len == 0 || len < wantLen) { return false; } if (len == wantLen) { return className.equalsIgnoreCase(classAttr); } boolean inClass = false; int start = 0; for (int i = 0; i < len; i++) { if (Character.isWhitespace(classAttr.charAt(i))) { if (inClass) { if (i - start == wantLen && classAttr.regionMatches(true, start, className, 0, wantLen)) { return true; } inClass = false; } } else { if (!inClass) { inClass = true; start = i; } } } if (inClass && len - start == wantLen) { return classAttr.regionMatches(true, start, className, 0, wantLen); } return false; }
tensor([[0.0061, 0.0149, 0.0120,  ..., 0.0067, 0.0085, 0.0026],
        [0.0044, 0.0252, 0.0099,  ..., 0.0068, 0.0083, 0.0018],
        [0.0060, 0.0210, 0.0101,  ..., 0.0060, 0.0066, 0.0016],
        ...,
        [0.0040, 0.0212, 0.0084,  ..., 0.0058, 0.0088, 0.0021],
        [0.0062, 0.0164, 0.0097,  ..., 0.0071, 0.0109, 0.0033],
        [0.0044, 0.0160, 0.0082,  ..., 0.0091, 0.0092, 0.0022]])