66875
Test: public void testBigDecimalAsPlain() throws Exception { ObjectMapper mapper = new ObjectMapper() .enable(DeserializationFeature.USE_BIG_DECIMAL_FOR_FLOATS) .enable(JsonGenerator.Feature.WRITE_BIGDECIMAL_AS_PLAIN); final String INPUT = "{\"x\":1e2}"; final JsonNode node = mapper.readTree(INPUT); String result = mapper.writeValueAsString(node); BigDecimal bigDecimal = new BigDecimal(100); JsonNode tree = mapper.valueToTree(bigDecimal); }
Code: public <T extends JsonNode> T valueToTree(Object fromValue) throws IllegalArgumentException { if (fromValue == null) return null; TokenBuffer buf = new TokenBuffer(this, false); JsonNode result; try { writeValue(buf, fromValue); JsonParser jp = buf.asParser(); result = readTree(jp); jp.close(); } catch (IOException e) { throw new IllegalArgumentException(e.getMessage(), e); } return (T) result; }
tensor([[0.0148, 0.0128, 0.0117,  ..., 0.0151, 0.0255, 0.0069],
        [0.0109, 0.0144, 0.0125,  ..., 0.0126, 0.0291, 0.0045],
        [0.0146, 0.0116, 0.0117,  ..., 0.0154, 0.0256, 0.0078],
        ...,
        [0.0150, 0.0125, 0.0133,  ..., 0.0142, 0.0273, 0.0067],
        [0.0134, 0.0130, 0.0150,  ..., 0.0165, 0.0270, 0.0056],
        [0.0105, 0.0142, 0.0130,  ..., 0.0164, 0.0206, 0.0060]])