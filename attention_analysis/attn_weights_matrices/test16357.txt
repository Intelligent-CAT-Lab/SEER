16357
Test: public void test068() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test068"); org.apache.commons.cli.PosixParser posixParser0 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine1 = posixParser0.cmd; org.apache.commons.cli.CommandLine commandLine2 = new org.apache.commons.cli.CommandLine(); posixParser0.cmd = commandLine2; org.apache.commons.cli.PosixParser posixParser4 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine5 = posixParser4.cmd; org.apache.commons.cli.Options options6 = posixParser4.getOptions(); java.util.Properties properties7 = null; posixParser4.processProperties(properties7); org.apache.commons.cli.PosixParser posixParser9 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine10 = posixParser9.cmd; org.apache.commons.cli.Options options11 = posixParser9.getOptions(); org.apache.commons.cli.Options options12 = new org.apache.commons.cli.Options(); java.util.List list13 = options12.helpOptions(); java.lang.String[] strArray15 = new java.lang.String[] { "" }; org.apache.commons.cli.CommandLine commandLine16 = posixParser9.parse(options12, strArray15); java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!", "a" }; java.lang.String[] strArray25 = posixParser4.flatten(options12, strArray23, true); org.apache.commons.cli.PosixParser posixParser26 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine27 = posixParser26.cmd; org.apache.commons.cli.Options options28 = posixParser26.getOptions(); org.apache.commons.cli.Options options29 = new org.apache.commons.cli.Options(); java.util.List list30 = options29.helpOptions(); java.lang.String[] strArray32 = new java.lang.String[] { "" }; org.apache.commons.cli.CommandLine commandLine33 = posixParser26.parse(options29, strArray32); org.apache.commons.cli.CommandLine commandLine35 = posixParser0.parse(options12, strArray32, false); org.apache.commons.cli.CommandLine commandLine36 = new org.apache.commons.cli.CommandLine(); java.lang.String str38 = commandLine36.getOptionValue("hi!"); org.apache.commons.cli.Option option40 = org.apache.commons.cli.OptionBuilder.create('a'); option40.setValueSeparator('4'); option40.setDescription("hi!"); option40.setArgName("hi!"); commandLine36.addOption(option40); org.apache.commons.cli.OptionGroup optionGroup48 = options12.getOptionGroup(option40); java.lang.String str50 = option40.getValue("[ Options: [ short {} ] [ long {} ]"); option40.setOptionalArg(true); java.lang.String str53 = option40.getKey(); } ] [ long {} ]" + "'", str50, "[ Options: [ short {} ] [ long {} ]"); }
Code: protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption) { init(); this.options = options; Iterator iter = Arrays.asList(arguments).iterator(); while (iter.hasNext()) { String token = (String) iter.next(); if (false) { int pos = token.indexOf('='); String opt = pos <= 1 ? token : token.substring(0, pos); if (!options.hasOption(opt)) { processNonOptionToken(token, stopAtNonOption); } else { currentOption = options.getOption(opt); tokens.add(opt); if (pos != -1) { ; } } } else if ("-".equals(token)) { tokens.add(token); } else if (token.startsWith("-")) { if (token.length() == 2 || options.hasOption(token)) { ; } else { burstToken(token, stopAtNonOption); } } else { processNonOptionToken(token, stopAtNonOption); } gobble(iter); } return (String[]) tokens.toArray(new String[tokens.size()]); }
tensor([[0.0102, 0.0026, 0.0108,  ..., 0.0101, 0.0068, 0.0022],
        [0.0094, 0.0024, 0.0104,  ..., 0.0089, 0.0073, 0.0024],
        [0.0091, 0.0040, 0.0121,  ..., 0.0108, 0.0071, 0.0031],
        ...,
        [0.0101, 0.0036, 0.0116,  ..., 0.0099, 0.0069, 0.0027],
        [0.0103, 0.0020, 0.0145,  ..., 0.0125, 0.0084, 0.0019],
        [0.0100, 0.0024, 0.0103,  ..., 0.0131, 0.0077, 0.0025]])