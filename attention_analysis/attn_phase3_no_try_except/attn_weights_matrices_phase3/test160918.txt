160918
Test: public void test23() throws Throwable { PooledObjectFactory<String> pooledObjectFactory0 = (PooledObjectFactory<String>) mock(PooledObjectFactory.class, new ViolatedAssumptionAnswer()); SoftReferenceObjectPool<String> softReferenceObjectPool0 = new SoftReferenceObjectPool<String>(pooledObjectFactory0); int int0 = softReferenceObjectPool0.getNumIdle(); }
Code: public synchronized int getNumIdle() { pruneClearedReferences(); return idleReferences.size(); }
[[0.0947471  0.18130164 0.06015637 0.13143773 0.12522094 0.13143773
 0.10413536 0.13143773 0.0401253 ]
[0.08920397 0.20167094 0.04712524 0.13290332 0.10973954 0.13290332
 0.11825502 0.13290332 0.03529532]
[0.05744121 0.20976132 0.03994618 0.14381239 0.13862015 0.14381239
 0.09376177 0.14381239 0.02903222]
[0.07929027 0.20542917 0.05101456 0.13171467 0.12915055 0.13171467
 0.09632739 0.13171467 0.0436441 ]
[0.09731305 0.15091226 0.04636765 0.1264058  0.15887783 0.1264058
 0.11167808 0.1264058  0.05563374]
[0.07929027 0.20542917 0.05101456 0.13171467 0.12915055 0.13171467
 0.09632739 0.13171467 0.0436441 ]
[0.06628993 0.23479205 0.0399865  0.13347775 0.12687972 0.13347775
 0.09670924 0.13347775 0.03490924]
[0.07929027 0.20542917 0.05101456 0.13171467 0.12915055 0.13171467
 0.09632739 0.13171467 0.0436441 ]
[0.0630697  0.1973468  0.04758997 0.11731216 0.16575654 0.11731216
 0.13880748 0.11731216 0.03549302]]