60689
Test: public void testIteratorSequenceBreaking() throws IOException { final String fiveRows = "1\n2\n3\n4\n5\n"; CSVParser parser = CSVFormat.DEFAULT.parse(new StringReader(fiveRows)); int recordNumber = 0; Iterator<CSVRecord> iter = parser.iterator(); recordNumber = 0; while (iter.hasNext()) { CSVRecord record = iter.next(); recordNumber++; if (recordNumber >= 2) { break; } } iter.hasNext(); while (iter.hasNext()) { CSVRecord record = iter.next(); recordNumber++; } parser = CSVFormat.DEFAULT.parse(new StringReader(fiveRows)); recordNumber = 0; for (CSVRecord record : parser) { recordNumber++; if (recordNumber >= 2) { break; } } for (CSVRecord record : parser) { recordNumber++; } parser = CSVFormat.DEFAULT.parse(new StringReader(fiveRows)); recordNumber = 0; for (CSVRecord record : parser) { recordNumber++; if (recordNumber >= 2) { break; } } parser.iterator().hasNext(); for (CSVRecord record : parser) { recordNumber++; } }
Code: public Iterator<CSVRecord> iterator() { return csvRecordIterator; }
[[0.11845476 0.20236246 0.10609203 0.16552065 0.13129963 0.22414304
 0.05212738]
[0.11886081 0.20615399 0.09613518 0.17421097 0.11679919 0.23644674
 0.05139316]
[0.09543014 0.22257982 0.10484302 0.19083947 0.1371927  0.20953318
 0.03958159]
[0.11079223 0.24270508 0.10391996 0.17967555 0.12730502 0.17249577
 0.06310635]
[0.08782303 0.20396264 0.11270989 0.16367167 0.12888242 0.25768906
 0.04526129]
[0.10201287 0.17902681 0.09632866 0.20712999 0.113167   0.25175604
 0.0505787 ]
[0.08687779 0.21699919 0.08085278 0.21191637 0.18646175 0.17074148
 0.04615059]]