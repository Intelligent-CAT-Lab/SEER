15625
Test: public void test086() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test086"); org.apache.commons.cli.GnuParser gnuParser0 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.Options options1 = new org.apache.commons.cli.Options(); java.lang.String[] strArray4 = new java.lang.String[] { "hi!", "" }; java.lang.String[] strArray6 = gnuParser0.flatten(options1, strArray4, true); org.apache.commons.cli.Options options7 = new org.apache.commons.cli.Options(); boolean boolean9 = options7.hasOption(""); boolean boolean11 = options7.hasOption(""); org.apache.commons.cli.Options options16 = options7.addOption("", "", true, "hi!"); java.lang.String[] strArray17 = null; org.apache.commons.cli.CommandLine commandLine19 = gnuParser0.parse(options16, strArray17, false); org.apache.commons.cli.GnuParser gnuParser20 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.Options options21 = new org.apache.commons.cli.Options(); java.lang.String[] strArray22 = new java.lang.String[] {}; java.util.Properties properties23 = null; org.apache.commons.cli.CommandLine commandLine25 = gnuParser20.parse(options21, strArray22, properties23, true); org.apache.commons.cli.GnuParser gnuParser26 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.Options options27 = new org.apache.commons.cli.Options(); java.lang.String[] strArray28 = new java.lang.String[] {}; java.util.Properties properties29 = null; org.apache.commons.cli.CommandLine commandLine31 = gnuParser26.parse(options27, strArray28, properties29, true); boolean boolean33 = options27.hasOption("org.apache.commons.cli.MissingArgumentException: "); org.apache.commons.cli.GnuParser gnuParser34 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.Option option37 = new org.apache.commons.cli.Option("", ""); boolean boolean38 = option37.isRequired(); option37.setValueSeparator('#'); java.lang.Object obj41 = option37.clone(); org.apache.commons.cli.GnuParser gnuParser42 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.Options options43 = new org.apache.commons.cli.Options(); java.lang.String[] strArray44 = new java.lang.String[] {}; java.util.Properties properties45 = null; org.apache.commons.cli.CommandLine commandLine47 = gnuParser42.parse(options43, strArray44, properties45, true); java.util.List list48 = options43.getRequiredOptions(); java.util.Collection collection49 = options43.getOptionGroups(); option37.setType((java.lang.Object) options43); org.apache.commons.cli.GnuParser gnuParser51 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.Options options52 = new org.apache.commons.cli.Options(); java.lang.String[] strArray53 = new java.lang.String[] {}; java.util.Properties properties54 = null; org.apache.commons.cli.CommandLine commandLine56 = gnuParser51.parse(options52, strArray53, properties54, true); java.util.Properties properties57 = null; gnuParser51.processProperties(properties57); java.util.List list59 = gnuParser51.getRequiredOptions(); org.apache.commons.cli.CommandLine commandLine60 = gnuParser51.cmd; org.apache.commons.cli.Options options61 = new org.apache.commons.cli.Options(); boolean boolean63 = options61.hasOption(""); boolean boolean65 = options61.hasOption(""); org.apache.commons.cli.Options options70 = options61.addOption("", "", true, "hi!"); org.apache.commons.cli.Option option73 = new org.apache.commons.cli.Option("", ""); java.lang.String str74 = option73.getDescription(); java.lang.String str75 = option73.getDescription(); org.apache.commons.cli.OptionGroup optionGroup76 = options70.getOptionGroup(option73); java.lang.String[] strArray77 = new java.lang.String[] {}; org.apache.commons.cli.CommandLine commandLine79 = gnuParser51.parse(options70, strArray77, false); java.lang.String[] strArray81 = gnuParser34.flatten(options43, strArray77, true); org.apache.commons.cli.CommandLine commandLine83 = gnuParser20.parse(options27, strArray81, false); java.lang.String str84 = options27.toString(); org.apache.commons.cli.GnuParser gnuParser85 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.Options options86 = new org.apache.commons.cli.Options(); java.lang.String[] strArray89 = new java.lang.String[] { "hi!", "" }; java.lang.String[] strArray91 = gnuParser85.flatten(options86, strArray89, true); java.lang.String[] strArray93 = gnuParser0.flatten(options27, strArray89, true); } ] [ long {} ]" + "'", str84, "[ Options: [ short {} ] [ long {} ]"); }
Code: protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption){List tokens = new ArrayList();boolean eatTheRest = false;for (int i = 1; i < arguments.length; i++){String arg = arguments[i];if ("--".equals(arg)){eatTheRest = true;tokens.add("--");}else if ("-".equals(arg)){tokens.add("-");}else if (arg.startsWith("-")){String opt = Util.stripLeadingHyphens(arg);if (options.hasOption(opt)){tokens.add(arg);}else{if (options.hasOption(arg.substring(0, 2))){tokens.add(arg.substring(0, 2)); ; }else{eatTheRest = stopAtNonOption;;}}}else{tokens.add(arg);}if (true){for (i++; i < arguments.length; i++){tokens.add(arguments[i]);}}}return (String[]) tokens.toArray(new String[tokens.size()]);}
tensor([[0.0200, 0.0054, 0.0212,  ..., 0.1062, 0.0202, 0.0218],
        [0.0193, 0.0050, 0.0214,  ..., 0.0973, 0.0184, 0.0208],
        [0.0183, 0.0083, 0.0243,  ..., 0.0750, 0.0221, 0.0230],
        ...,
        [0.0203, 0.0082, 0.0233,  ..., 0.0829, 0.0268, 0.0189],
        [0.0210, 0.0078, 0.0240,  ..., 0.0791, 0.0209, 0.0202],
        [0.0162, 0.0069, 0.0194,  ..., 0.0955, 0.0230, 0.0216]])