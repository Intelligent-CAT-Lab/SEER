18633
Test: public void test124() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test124"); com.google.javascript.jscomp.CheckLevel checkLevel7 = com.google.javascript.jscomp.CheckLevel.WARNING; com.google.javascript.jscomp.DiagnosticType diagnosticType10 = com.google.javascript.jscomp.DiagnosticType.warning("", ""); java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "", ": hi!" }; com.google.javascript.jscomp.JSError jSError18 = com.google.javascript.jscomp.JSError.make(": hi!", (int) (short) 1, (int) (short) 1, checkLevel7, diagnosticType10, strArray17); com.google.javascript.rhino.Node node19 = jSError18.node; boolean boolean21 = jSError18.equals((java.lang.Object) ": hi!"); com.google.javascript.jscomp.CheckLevel checkLevel22 = com.google.javascript.jscomp.CheckLevel.WARNING; com.google.javascript.jscomp.LightweightMessageFormatter lightweightMessageFormatter23 = com.google.javascript.jscomp.LightweightMessageFormatter.withoutSource(); com.google.javascript.jscomp.CheckLevel checkLevel27 = com.google.javascript.jscomp.CheckLevel.WARNING; com.google.javascript.jscomp.DiagnosticType diagnosticType30 = com.google.javascript.jscomp.DiagnosticType.warning("", ""); java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "", ": hi!" }; com.google.javascript.jscomp.JSError jSError38 = com.google.javascript.jscomp.JSError.make(": hi!", (int) (short) 1, (int) (short) 1, checkLevel27, diagnosticType30, strArray37); com.google.javascript.rhino.Node node39 = jSError38.node; boolean boolean41 = jSError38.equals((java.lang.Object) ": hi!"); com.google.javascript.jscomp.CheckLevel checkLevel42 = jSError38.level; java.lang.String str43 = lightweightMessageFormatter23.getLevelName(checkLevel42); com.google.javascript.jscomp.CheckLevel checkLevel47 = com.google.javascript.jscomp.CheckLevel.WARNING; com.google.javascript.jscomp.DiagnosticType diagnosticType50 = com.google.javascript.jscomp.DiagnosticType.warning("", ""); java.lang.String[] strArray57 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "", ": hi!" }; com.google.javascript.jscomp.JSError jSError58 = com.google.javascript.jscomp.JSError.make(": hi!", (int) (short) 1, (int) (short) 1, checkLevel47, diagnosticType50, strArray57); com.google.javascript.rhino.Node node59 = jSError58.node; java.lang.String str60 = lightweightMessageFormatter23.formatError(jSError58); java.lang.String str61 = jSError18.format(checkLevel22, (com.google.javascript.jscomp.MessageFormatter) lightweightMessageFormatter23); com.google.javascript.jscomp.CheckLevel checkLevel62 = jSError18.level; com.google.javascript.jscomp.CheckLevel checkLevel63 = jSError18.level; com.google.javascript.jscomp.DiagnosticType diagnosticType65 = com.google.javascript.jscomp.DiagnosticType.make("", checkLevel63, ""); com.google.javascript.jscomp.DiagnosticType diagnosticType68 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!"); java.lang.Object[] objArray69 = null; java.lang.String str70 = diagnosticType68.format(objArray69); com.google.javascript.jscomp.DiagnosticType diagnosticType73 = com.google.javascript.jscomp.DiagnosticType.error(": hi!", "WARNING"); com.google.javascript.jscomp.DiagnosticType diagnosticType76 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!"); boolean boolean78 = diagnosticType76.equals((java.lang.Object) (byte) -1); java.lang.String str79 = diagnosticType76.key; com.google.javascript.jscomp.CheckLevel checkLevel83 = com.google.javascript.jscomp.CheckLevel.WARNING; boolean boolean84 = checkLevel83.isOn(); com.google.javascript.jscomp.DiagnosticType diagnosticType87 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!"); java.lang.Object[] objArray88 = null; java.lang.String str89 = diagnosticType87.format(objArray88); java.lang.String[] strArray92 = new java.lang.String[] { "hi!", "" }; com.google.javascript.jscomp.JSError jSError93 = com.google.javascript.jscomp.JSError.make("hi!", 1, (int) (short) 100, checkLevel83, diagnosticType87, strArray92); com.google.javascript.jscomp.JSError jSError94 = com.google.javascript.jscomp.JSError.make(diagnosticType76, strArray92); java.lang.String str95 = diagnosticType73.format((java.lang.Object[]) strArray92); com.google.javascript.jscomp.JSError jSError96 = com.google.javascript.jscomp.JSError.make("", (int) (byte) 100, (int) (byte) 0, checkLevel63, diagnosticType68, strArray92); com.google.javascript.jscomp.DiagnosticType diagnosticType97 = jSError96.getType(); int int98 = jSError96.getCharno(); java.lang.String str99 = jSError96.description; }
Code: private String format(JSError error, boolean warning) { SourceExcerptProvider source = getSource(); String sourceExcerpt = source == null ? null : excerpt.get( source, error.sourceName, error.lineNumber, excerptFormatter); StringBuilder b = new StringBuilder(); if (error.sourceName != null) { b.append(error.sourceName); if (error.lineNumber > 0) { b.append(':'); b.append(error.lineNumber); } b.append(": "); } ; b.append(" - "); b.append(error.description); b.append('\n'); if (sourceExcerpt != null) { b.append(sourceExcerpt); b.append('\n'); int charno = error.getCharno(); if (excerpt.equals(LINE) && charno <= sourceExcerpt.length()) { for (int i = -1; i != charno; i++) { char c = sourceExcerpt.charAt(i); if (Character.isWhitespace(c)) { b.append(c); } else { b.append(' '); } } b.append("^\n"); } } return b.toString(); }
tensor([[0.0103, 0.0080, 0.0055,  ..., 0.0071, 0.0176, 0.0033],
        [0.0082, 0.0074, 0.0052,  ..., 0.0069, 0.0131, 0.0028],
        [0.0089, 0.0073, 0.0036,  ..., 0.0059, 0.0149, 0.0021],
        ...,
        [0.0092, 0.0079, 0.0037,  ..., 0.0060, 0.0163, 0.0026],
        [0.0096, 0.0086, 0.0035,  ..., 0.0068, 0.0144, 0.0020],
        [0.0077, 0.0088, 0.0045,  ..., 0.0107, 0.0174, 0.0028]])