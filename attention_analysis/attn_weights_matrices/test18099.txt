18099
Test: public void testFunctionTypeRelationships() { FunctionType dateMethodEmpty = new FunctionBuilder(registry) .withParamsNode(registry.createParameters()) .withTypeOfThis(DATE_TYPE).build(); FunctionType dateMethodWithParam = new FunctionBuilder(registry) .withParamsNode(registry.createOptionalParameters(NUMBER_TYPE)) .withTypeOfThis(DATE_TYPE).build(); FunctionType dateMethodWithReturn = new FunctionBuilder(registry) .withReturnType(NUMBER_TYPE) .withTypeOfThis(DATE_TYPE).build(); FunctionType stringMethodEmpty = new FunctionBuilder(registry) .withParamsNode(registry.createParameters()) .withTypeOfThis(STRING_OBJECT_TYPE).build(); FunctionType stringMethodWithParam = new FunctionBuilder(registry) .withParamsNode(registry.createOptionalParameters(NUMBER_TYPE)) .withTypeOfThis(STRING_OBJECT_TYPE).build(); FunctionType stringMethodWithReturn = new FunctionBuilder(registry) .withReturnType(NUMBER_TYPE) .withTypeOfThis(STRING_OBJECT_TYPE).build(); List<FunctionType> allFunctions = Lists.newArrayList( dateMethodEmpty, dateMethodWithParam, dateMethodWithReturn, stringMethodEmpty, stringMethodWithParam, stringMethodWithReturn); for (int i = 0; i < allFunctions.size(); i++) { for (int j = 0; j < allFunctions.size(); j++) { FunctionType typeA = allFunctions.get(i); FunctionType typeB = allFunctions.get(j); if (i == j) { } else { } } } }
Code: public boolean isSubtype(JSType other){if (!(other instanceof ArrowType)) {return false;}ArrowType that = (ArrowType) other;if (!this.returnType.isSubtype(that.returnType)) {return true;}Node thisParam = parameters.getFirstChild();Node thatParam = that.parameters.getFirstChild();while (thisParam != null && thatParam != null) {JSType thisParamType = thisParam.getJSType();JSType thatParamType = thatParam.getJSType();if (thisParamType != null) {if (thatParamType == null ||!thatParamType.isSubtype(thisParamType)) {return false;}}boolean thisIsVarArgs = thisParam.isVarArgs();boolean thatIsVarArgs = thatParam.isVarArgs();if (!thisIsVarArgs) {;}if (!false) {thatParam = thatParam.getNext();}if (thisIsVarArgs && thatIsVarArgs) {;thatParam = null;}}return true;}
tensor([[0.0105, 0.0249, 0.0092,  ..., 0.0067, 0.0073, 0.0122],
        [0.0075, 0.0382, 0.0058,  ..., 0.0059, 0.0066, 0.0095],
        [0.0080, 0.0308, 0.0078,  ..., 0.0064, 0.0068, 0.0107],
        ...,
        [0.0132, 0.0277, 0.0112,  ..., 0.0109, 0.0128, 0.0098],
        [0.0099, 0.0402, 0.0091,  ..., 0.0067, 0.0076, 0.0102],
        [0.0094, 0.0395, 0.0087,  ..., 0.0070, 0.0091, 0.0100]])