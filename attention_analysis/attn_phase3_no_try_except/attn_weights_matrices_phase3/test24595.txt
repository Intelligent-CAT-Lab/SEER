24595
Test: public void test64() throws Throwable { Precision.DoubleEquivalence precision_DoubleEquivalence0 = mock(Precision.DoubleEquivalence.class, new ViolatedAssumptionAnswer()); doReturn(false, false, false, false, true).when(precision_DoubleEquivalence0).eqZero(anyDouble()); AngularInterval angularInterval0 = AngularInterval.of(6.283185307179586, 6.283185307179586, precision_DoubleEquivalence0); Transform1S transform1S0 = Transform1S.createNegation(); AngularInterval angularInterval1 = angularInterval0.transform(transform1S0); CutAngle cutAngle0 = angularInterval1.getMaxBoundary(); CutAngle cutAngle1 = cutAngle0.reverse(); Precision.DoubleEquivalence precision_DoubleEquivalence1 = mock(Precision.DoubleEquivalence.class, new ViolatedAssumptionAnswer()); doReturn(52, (-1), (-1868), 52).when(precision_DoubleEquivalence1).compare(anyDouble() , anyDouble()); doReturn(false, false, false).when(precision_DoubleEquivalence1).eqZero(anyDouble()); doReturn(true, true).when(precision_DoubleEquivalence1).lte(anyDouble() , anyDouble()); AngularInterval.Convex angularInterval_Convex0 = AngularInterval.Convex.of(34.0, 6.283185307179586, precision_DoubleEquivalence1); angularInterval_Convex0.splitDiameter(cutAngle0); Split<AngularInterval.Convex> split0 = angularInterval_Convex0.splitDiameter(cutAngle1); }
Code: public static AngularInterval of(final double min, final double max, final Precision.DoubleEquivalence precision) { return of(Point1S.of(min), Point1S.of(max), precision); }
[[0.04276777 0.11961587 0.05932549 0.05932549 0.07428398 0.04697394
 0.03370726 0.07428398 0.04338535 0.03370726 0.05932549 0.05932549
 0.05231808 0.04648615 0.05932549 0.05932549 0.0593255  0.01719202]
[0.04343173 0.11629343 0.05846531 0.05846531 0.06693837 0.04578502
 0.032052   0.06693837 0.04737822 0.032052   0.05846531 0.05846531
 0.07767016 0.04117715 0.05846531 0.05846531 0.05846532 0.0210264 ]
[0.03572258 0.12261303 0.05991131 0.05991131 0.06708756 0.05622707
 0.03398876 0.06708756 0.04673712 0.03398876 0.05991131 0.05991131
 0.0550348  0.04331514 0.05991131 0.05991131 0.05991132 0.0188185 ]
[0.03572258 0.12261303 0.05991131 0.05991131 0.06708756 0.05622707
 0.03398876 0.06708756 0.04673712 0.03398876 0.05991131 0.05991131
 0.0550348  0.04331514 0.05991131 0.05991131 0.05991132 0.0188185 ]
[0.03367531 0.13644472 0.06125331 0.06125331 0.07448228 0.03823746
 0.02786343 0.07448228 0.03883481 0.02786343 0.06125331 0.06125331
 0.05458472 0.05003416 0.06125331 0.06125331 0.06125331 0.01472427]
[0.04140438 0.11441709 0.0596837  0.0596837  0.0580493  0.05480905
 0.03269546 0.0580493  0.05214866 0.03269546 0.0596837  0.0596837
 0.06506071 0.04875487 0.0596837  0.0596837  0.05968371 0.02412985]
[0.03849947 0.11402517 0.05975281 0.05975281 0.07433641 0.05184483
 0.02563429 0.07433641 0.04403055 0.02563429 0.05975281 0.05975281
 0.06464192 0.0559715  0.05975281 0.05975281 0.05975282 0.01277553]
[0.03367531 0.13644472 0.06125331 0.06125331 0.07448228 0.03823746
 0.02786343 0.07448228 0.03883481 0.02786343 0.06125331 0.06125331
 0.05458472 0.05003416 0.06125331 0.06125331 0.06125331 0.01472427]
[0.04033551 0.11615095 0.0619338  0.0619338  0.05830801 0.05398075
 0.0342792  0.05830801 0.0509543  0.0342792  0.0619338  0.0619338
 0.05789986 0.04482521 0.0619338  0.0619338  0.06193381 0.01714236]
[0.03849947 0.11402517 0.05975281 0.05975281 0.07433641 0.05184483
 0.02563429 0.07433641 0.04403055 0.02563429 0.05975281 0.05975281
 0.06464192 0.0559715  0.05975281 0.05975281 0.05975282 0.01277553]
[0.03572258 0.12261303 0.05991131 0.05991131 0.06708756 0.05622707
 0.03398876 0.06708756 0.04673712 0.03398876 0.05991131 0.05991131
 0.0550348  0.04331514 0.05991131 0.05991131 0.05991132 0.0188185 ]
[0.03572258 0.12261303 0.05991131 0.05991131 0.06708756 0.05622707
 0.03398876 0.06708756 0.04673712 0.03398876 0.05991131 0.05991131
 0.0550348  0.04331514 0.05991131 0.05991131 0.05991132 0.0188185 ]
[0.04332852 0.10140018 0.05711096 0.05711096 0.05866956 0.05860608
 0.04251187 0.05866956 0.05126455 0.04251187 0.05711096 0.05711096
 0.06888161 0.04996741 0.05711096 0.05711096 0.05711097 0.02441205]
[0.03046395 0.13291413 0.06331262 0.06331262 0.06705409 0.04896469
 0.02729066 0.06705409 0.04123017 0.02729066 0.06331262 0.06331262
 0.05427182 0.04513602 0.06331262 0.06331262 0.06331263 0.01514139]
[0.03572258 0.12261303 0.05991131 0.05991131 0.06708756 0.05622707
 0.03398876 0.06708756 0.04673712 0.03398876 0.05991131 0.05991131
 0.0550348  0.04331514 0.05991131 0.05991131 0.05991132 0.0188185 ]
[0.03572258 0.12261303 0.05991131 0.05991131 0.06708756 0.05622707
 0.03398876 0.06708756 0.04673712 0.03398876 0.05991131 0.05991131
 0.0550348  0.04331514 0.05991131 0.05991131 0.05991132 0.0188185 ]
[0.03572259 0.12261303 0.05991131 0.05991131 0.06708756 0.05622707
 0.03398876 0.06708756 0.04673712 0.03398876 0.05991131 0.05991131
 0.05503481 0.04331514 0.05991131 0.05991131 0.05991132 0.01881851]
[0.03030577 0.1233617  0.05732629 0.05732629 0.06745288 0.04844856
 0.02710019 0.06745288 0.05213446 0.02710019 0.05732629 0.05732629
 0.07412479 0.06510212 0.05732629 0.05732629 0.05732629 0.01613246]]