62606
Test: public void testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter() { Gson gson = new GsonBuilder() .registerTypeAdapter(Part.class, new TypeAdapter<Part>() { @Override public void write(JsonWriter out, Part part) throws IOException { throw new } @Override public Part read(JsonReader in) throws IOException { throw new } }).create(); String json = gson.toJson(new Gadget(new Part("screen"))); Gadget gadget = gson.fromJson("{'part':'screen'}", Gadget.class); }
Code: public Number read(JsonReader in) throws IOException { JsonToken jsonToken = in.peek(); switch (jsonToken) { case NULL: in.nextNull(); return null; case NUMBER: case STRING: return new LazilyParsedNumber(in.nextString()); default: throw new JsonSyntaxException("Expecting number, got: " + jsonToken); } }
tensor([[0.0196, 0.0150, 0.0247,  ..., 0.0203, 0.0083, 0.0083],
        [0.0190, 0.0117, 0.0238,  ..., 0.0222, 0.0071, 0.0071],
        [0.0142, 0.0099, 0.0224,  ..., 0.0190, 0.0072, 0.0072],
        ...,
        [0.0152, 0.0114, 0.0243,  ..., 0.0143, 0.0063, 0.0063],
        [0.0135, 0.0085, 0.0286,  ..., 0.0199, 0.0068, 0.0068],
        [0.0135, 0.0085, 0.0286,  ..., 0.0199, 0.0068, 0.0068]])