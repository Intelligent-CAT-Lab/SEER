68980
Test: public void test468() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test468"); org.jsoup.nodes.TextNode textNode2 = new org.jsoup.nodes.TextNode("<html>\n <head></head>\n <body></body>\n</html><html>\n <head></head>\n <body>\n hi!\n </body>\n</html>", "nth-last-child"); java.lang.String str3 = textNode2.getWholeText(); java.lang.String str4 = textNode2.getWholeText(); boolean boolean6 = textNode2.hasAttr("nth-last-of-type"); org.jsoup.nodes.Node node8 = textNode2.removeAttr(""); java.lang.String str9 = textNode2.baseUri(); org.jsoup.nodes.Node node11 = textNode2.removeAttr("<#root>\n <html>\n <head></head>\n <body>\n :last-of-type\n </body>\n </html>\n</#root>"); java.util.regex.Pattern pattern13 = null; org.jsoup.select.Evaluator.AttributeWithValueMatching attributeWithValueMatching14 = new org.jsoup.select.Evaluator.AttributeWithValueMatching("", pattern13); org.jsoup.nodes.Document document16 = org.jsoup.nodes.Document.createShell("hi!"); org.jsoup.nodes.Document document18 = org.jsoup.nodes.Document.createShell("hi!"); boolean boolean19 = attributeWithValueMatching14.matches((org.jsoup.nodes.Element) document16, (org.jsoup.nodes.Element) document18); boolean boolean21 = document16.equals((java.lang.Object) 0L); org.jsoup.nodes.Element element22 = document16.empty(); org.jsoup.select.Elements elements24 = element22.getElementsMatchingText("nth-last-child"); org.jsoup.select.Elements elements26 = element22.getElementsByIndexLessThan(1); org.jsoup.nodes.Node node27 = element22.clone(); try { org.jsoup.nodes.Node node28 = node11.before(node27); } catch (java.lang.IllegalArgumentException e) { } }
Code: public boolean matches(Element root, Element element) { if (element instanceof PseudoTextElement) return true; List<TextNode> textNodes = element.textNodes(); for (TextNode textNode : textNodes) { PseudoTextElement pel = new PseudoTextElement( org.jsoup.parser.Tag.valueOf(element.tagName()), element.baseUri(), element.attributes()); textNode.replaceWith(pel); pel.appendChild(textNode); } return false; }
tensor([[0.0223, 0.0500, 0.0217,  ..., 0.0252, 0.0318, 0.0107],
        [0.0160, 0.0765, 0.0182,  ..., 0.0276, 0.0320, 0.0081],
        [0.0133, 0.0550, 0.0200,  ..., 0.0245, 0.0327, 0.0094],
        ...,
        [0.0150, 0.0634, 0.0166,  ..., 0.0210, 0.0343, 0.0091],
        [0.0218, 0.0551, 0.0202,  ..., 0.0261, 0.0398, 0.0129],
        [0.0154, 0.0516, 0.0192,  ..., 0.0348, 0.0352, 0.0091]])