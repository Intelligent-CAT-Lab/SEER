18674
Test: public void test171() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test171"); com.google.javascript.jscomp.LightweightMessageFormatter lightweightMessageFormatter0 = com.google.javascript.jscomp.LightweightMessageFormatter.withoutSource(); com.google.javascript.jscomp.CheckLevel checkLevel4 = com.google.javascript.jscomp.CheckLevel.WARNING; com.google.javascript.jscomp.DiagnosticType diagnosticType7 = com.google.javascript.jscomp.DiagnosticType.warning("", ""); java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "", ": hi!" }; com.google.javascript.jscomp.JSError jSError15 = com.google.javascript.jscomp.JSError.make(": hi!", (int) (short) 1, (int) (short) 1, checkLevel4, diagnosticType7, strArray14); com.google.javascript.rhino.Node node16 = jSError15.node; boolean boolean18 = jSError15.equals((java.lang.Object) ": hi!"); com.google.javascript.jscomp.CheckLevel checkLevel19 = jSError15.level; java.lang.String str20 = lightweightMessageFormatter0.getLevelName(checkLevel19); com.google.javascript.jscomp.SourceExcerptProvider sourceExcerptProvider21 = lightweightMessageFormatter0.getSource(); com.google.javascript.jscomp.SourceExcerptProvider sourceExcerptProvider22 = lightweightMessageFormatter0.getSource(); lightweightMessageFormatter0.setColorize(false); com.google.javascript.jscomp.DiagnosticType diagnosticType27 = com.google.javascript.jscomp.DiagnosticType.error("hi!:1: WARNING - hi!\n", ""); com.google.javascript.jscomp.LightweightMessageFormatter lightweightMessageFormatter28 = com.google.javascript.jscomp.LightweightMessageFormatter.withoutSource(); com.google.javascript.jscomp.CheckLevel checkLevel32 = com.google.javascript.jscomp.CheckLevel.WARNING; com.google.javascript.jscomp.DiagnosticType diagnosticType35 = com.google.javascript.jscomp.DiagnosticType.warning("", ""); java.lang.String[] strArray42 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "", ": hi!" }; com.google.javascript.jscomp.JSError jSError43 = com.google.javascript.jscomp.JSError.make(": hi!", (int) (short) 1, (int) (short) 1, checkLevel32, diagnosticType35, strArray42); com.google.javascript.rhino.Node node44 = jSError43.node; boolean boolean46 = jSError43.equals((java.lang.Object) ": hi!"); com.google.javascript.jscomp.CheckLevel checkLevel47 = jSError43.level; java.lang.String str48 = lightweightMessageFormatter28.getLevelName(checkLevel47); com.google.javascript.jscomp.CheckLevel checkLevel52 = com.google.javascript.jscomp.CheckLevel.WARNING; com.google.javascript.jscomp.DiagnosticType diagnosticType55 = com.google.javascript.jscomp.DiagnosticType.warning("", ""); java.lang.String[] strArray62 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "", ": hi!" }; com.google.javascript.jscomp.JSError jSError63 = com.google.javascript.jscomp.JSError.make(": hi!", (int) (short) 1, (int) (short) 1, checkLevel52, diagnosticType55, strArray62); com.google.javascript.rhino.Node node64 = jSError63.node; java.lang.String str65 = lightweightMessageFormatter28.formatError(jSError63); com.google.javascript.jscomp.CheckLevel checkLevel69 = com.google.javascript.jscomp.CheckLevel.WARNING; boolean boolean70 = checkLevel69.isOn(); com.google.javascript.jscomp.DiagnosticType diagnosticType73 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!"); java.lang.Object[] objArray74 = null; java.lang.String str75 = diagnosticType73.format(objArray74); java.lang.String[] strArray78 = new java.lang.String[] { "hi!", "" }; com.google.javascript.jscomp.JSError jSError79 = com.google.javascript.jscomp.JSError.make("hi!", 1, (int) (short) 100, checkLevel69, diagnosticType73, strArray78); java.lang.String str80 = lightweightMessageFormatter28.formatWarning(jSError79); com.google.javascript.jscomp.CheckLevel checkLevel81 = jSError79.level; diagnosticType27.level = checkLevel81; java.lang.String str83 = lightweightMessageFormatter0.getLevelName(checkLevel81); com.google.javascript.jscomp.SourceExcerptProvider sourceExcerptProvider84 = lightweightMessageFormatter0.getSource(); com.google.javascript.jscomp.JSError jSError85 = null; try { java.lang.String str86 = lightweightMessageFormatter0.formatError(jSError85); } catch (java.lang.NullPointerException e) { } }
Code: private String format(JSError error, boolean warning) { SourceExcerptProvider source = getSource(); String sourceExcerpt = source == null ? null : excerpt.get( source, error.sourceName, error.lineNumber, excerptFormatter); StringBuilder b = new StringBuilder(); if (error.sourceName != null) { b.append(error.sourceName); if (error.lineNumber > 0) { b.append(':'); b.append(error.lineNumber); } b.append(": "); } ; b.append(" - "); b.append(error.description); b.append('\n'); if (sourceExcerpt != null) { b.append(sourceExcerpt); b.append('\n'); int charno = error.getCharno(); if (excerpt.equals(LINE) && charno <= sourceExcerpt.length()) { for (int i = -1; i != charno; i++) { char c = sourceExcerpt.charAt(i); if (Character.isWhitespace(c)) { b.append(c); } else { b.append(' '); } } b.append("^\n"); } } return b.toString(); }
tensor([[0.0103, 0.0080, 0.0055,  ..., 0.0071, 0.0176, 0.0033],
        [0.0082, 0.0074, 0.0052,  ..., 0.0069, 0.0131, 0.0028],
        [0.0089, 0.0073, 0.0036,  ..., 0.0059, 0.0149, 0.0021],
        ...,
        [0.0092, 0.0079, 0.0037,  ..., 0.0060, 0.0163, 0.0026],
        [0.0096, 0.0086, 0.0035,  ..., 0.0068, 0.0144, 0.0020],
        [0.0077, 0.0088, 0.0045,  ..., 0.0107, 0.0174, 0.0028]])