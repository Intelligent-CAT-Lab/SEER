63014
Test: public void test547() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test547"); com.google.gson.DefaultDateTypeAdapter defaultDateTypeAdapter2 = new com.google.gson.DefaultDateTypeAdapter((int) (byte) 0, 0); com.google.gson.internal.bind.JsonTreeWriter jsonTreeWriter3 = new com.google.gson.internal.bind.JsonTreeWriter(); com.google.gson.stream.JsonWriter jsonWriter5 = jsonTreeWriter3.value(false); com.google.gson.stream.JsonWriter jsonWriter7 = jsonWriter5.value(true); java.util.Date date8 = null; defaultDateTypeAdapter2.write(jsonWriter7, date8); com.google.gson.DefaultDateTypeAdapter defaultDateTypeAdapter12 = new com.google.gson.DefaultDateTypeAdapter((int) (byte) 0, 0); com.google.gson.TypeAdapter<java.util.Date> dateTypeAdapter13 = defaultDateTypeAdapter12.nullSafe(); com.google.gson.TypeAdapter<java.util.Date> dateTypeAdapter14 = dateTypeAdapter13.nullSafe(); java.util.Date date15 = null; com.google.gson.JsonElement jsonElement16 = dateTypeAdapter13.toJsonTree(date15); com.google.gson.internal.bind.JsonTreeReader jsonTreeReader17 = new com.google.gson.internal.bind.JsonTreeReader(jsonElement16); com.google.gson.internal.bind.JsonTreeReader jsonTreeReader18 = new com.google.gson.internal.bind.JsonTreeReader(jsonElement16); java.util.Date date19 = defaultDateTypeAdapter2.read((com.google.gson.stream.JsonReader) jsonTreeReader18); java.util.Date date20 = null; java.lang.String str21 = defaultDateTypeAdapter2.toJson(date20); java.util.Date date22 = null; java.lang.String str23 = defaultDateTypeAdapter2.toJson(date22); com.google.gson.DefaultDateTypeAdapter defaultDateTypeAdapter26 = new com.google.gson.DefaultDateTypeAdapter((int) (byte) 0, 0); com.google.gson.internal.bind.JsonTreeWriter jsonTreeWriter27 = new com.google.gson.internal.bind.JsonTreeWriter(); com.google.gson.stream.JsonWriter jsonWriter29 = jsonTreeWriter27.value(false); com.google.gson.stream.JsonWriter jsonWriter31 = jsonWriter29.value(true); java.util.Date date32 = null; defaultDateTypeAdapter26.write(jsonWriter31, date32); com.google.gson.internal.bind.JsonTreeWriter jsonTreeWriter34 = new com.google.gson.internal.bind.JsonTreeWriter(); com.google.gson.stream.JsonWriter jsonWriter36 = jsonTreeWriter34.value(false); com.google.gson.stream.JsonWriter jsonWriter37 = jsonTreeWriter34.beginArray(); com.google.gson.stream.JsonWriter jsonWriter39 = jsonTreeWriter34.value(true); com.google.gson.stream.JsonWriter jsonWriter41 = jsonTreeWriter34.value((java.lang.Number) (-1.0f)); com.google.gson.stream.JsonWriter jsonWriter42 = jsonTreeWriter34.nullValue(); com.google.gson.stream.JsonWriter jsonWriter43 = jsonTreeWriter34.beginArray(); java.util.Date date44 = null; defaultDateTypeAdapter26.write(jsonWriter43, date44); com.google.gson.DefaultDateTypeAdapter defaultDateTypeAdapter48 = new com.google.gson.DefaultDateTypeAdapter((int) (byte) 0, 0); com.google.gson.TypeAdapter<java.util.Date> dateTypeAdapter49 = defaultDateTypeAdapter48.nullSafe(); com.google.gson.TypeAdapter<java.util.Date> dateTypeAdapter50 = dateTypeAdapter49.nullSafe(); java.util.Date date51 = null; com.google.gson.JsonElement jsonElement52 = dateTypeAdapter49.toJsonTree(date51); java.util.Date date53 = defaultDateTypeAdapter26.fromJsonTree(jsonElement52); java.lang.String str54 = defaultDateTypeAdapter26.toString(); com.google.gson.TypeAdapter<java.util.Date> dateTypeAdapter55 = defaultDateTypeAdapter26.nullSafe(); java.util.Date date56 = null; com.google.gson.JsonElement jsonElement57 = defaultDateTypeAdapter26.toJsonTree(date56); com.google.gson.TypeAdapter<java.util.Date> dateTypeAdapter58 = defaultDateTypeAdapter26.nullSafe(); com.google.gson.internal.bind.JsonTreeWriter jsonTreeWriter59 = new com.google.gson.internal.bind.JsonTreeWriter(); com.google.gson.stream.JsonWriter jsonWriter61 = jsonTreeWriter59.value(false); com.google.gson.stream.JsonWriter jsonWriter62 = jsonTreeWriter59.nullValue(); com.google.gson.stream.JsonWriter jsonWriter64 = jsonTreeWriter59.value((double) (short) 1); jsonTreeWriter59.setSerializeNulls(false); com.google.gson.stream.JsonWriter jsonWriter68 = jsonTreeWriter59.value((java.lang.Boolean) false); boolean boolean69 = jsonTreeWriter59.getSerializeNulls(); java.util.Date date70 = null; defaultDateTypeAdapter26.write((com.google.gson.stream.JsonWriter) jsonTreeWriter59, date70); com.google.gson.stream.JsonWriter jsonWriter72 = jsonTreeWriter59.nullValue(); java.util.Date date73 = null; defaultDateTypeAdapter2.write((com.google.gson.stream.JsonWriter) jsonTreeWriter59, date73); }
Code: public Date read(JsonReader in) throws IOException { if (in.peek() != JsonToken.STRING) { throw new JsonParseException("The date should be a string value"); } Date date = deserializeToDate(in.nextString()); if (dateType == Date.class) { return date; } else if (dateType == Timestamp.class) { return new Timestamp(date.getTime()); } else if (dateType == java.sql.Date.class) { return new java.sql.Date(date.getTime()); } else { throw new AssertionError(); } }
tensor([[0.0125, 0.0063, 0.0167,  ..., 0.0147, 0.0057, 0.0057],
        [0.0106, 0.0058, 0.0163,  ..., 0.0164, 0.0040, 0.0040],
        [0.0084, 0.0045, 0.0139,  ..., 0.0158, 0.0044, 0.0044],
        ...,
        [0.0122, 0.0061, 0.0202,  ..., 0.0162, 0.0072, 0.0072],
        [0.0084, 0.0039, 0.0201,  ..., 0.0141, 0.0047, 0.0047],
        [0.0084, 0.0039, 0.0201,  ..., 0.0141, 0.0047, 0.0047]])