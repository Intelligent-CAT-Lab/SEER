64609
Test: public void test102() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test102"); com.fasterxml.jackson.core.JsonFactory jsonFactory0 = new com.fasterxml.jackson.core.JsonFactory(); java.io.Reader reader1 = null; com.fasterxml.jackson.core.JsonParser jsonParser2 = jsonFactory0.createParser(reader1); com.fasterxml.jackson.core.util.BufferRecycler bufferRecycler3 = jsonFactory0._getBufferRecycler(); com.fasterxml.jackson.core.JsonGenerator jsonGenerator5 = null; com.fasterxml.jackson.core.JsonGenerationException jsonGenerationException6 = new com.fasterxml.jackson.core.JsonGenerationException("/", jsonGenerator5); com.fasterxml.jackson.core.JsonGenerator jsonGenerator7 = null; com.fasterxml.jackson.core.JsonGenerationException jsonGenerationException8 = jsonGenerationException6.withGenerator(jsonGenerator7); com.fasterxml.jackson.core.io.IOContext iOContext10 = new com.fasterxml.jackson.core.io.IOContext(bufferRecycler3, (java.lang.Object) jsonGenerationException6, true); com.fasterxml.jackson.core.ObjectCodec objectCodec12 = null; java.io.DataOutput dataOutput13 = null; com.fasterxml.jackson.core.io.DataOutputAsStream dataOutputAsStream14 = new com.fasterxml.jackson.core.io.DataOutputAsStream(dataOutput13); com.fasterxml.jackson.core.json.UTF8JsonGenerator uTF8JsonGenerator15 = new com.fasterxml.jackson.core.json.UTF8JsonGenerator(iOContext10, 0, objectCodec12, (java.io.OutputStream) dataOutputAsStream14); byte[] byteArray16 = iOContext10.allocBase64Buffer(); com.fasterxml.jackson.core.util.TextBuffer textBuffer17 = iOContext10.constructTextBuffer(); char[] charArray19 = iOContext10.allocNameCopyBuffer((-1972002151)); java.io.Reader reader21 = null; com.fasterxml.jackson.core.ObjectCodec objectCodec22 = null; com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer charsToNameCanonicalizer23 = com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.createRoot(); char[] charArray24 = new char[] {}; int int27 = charsToNameCanonicalizer23.calcHash(charArray24, (int) (byte) -1, (int) (byte) -1); com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer charsToNameCanonicalizer29 = charsToNameCanonicalizer23.makeChild(33); int int30 = charsToNameCanonicalizer29.bucketCount(); int int31 = charsToNameCanonicalizer29.maxCollisionLength(); com.fasterxml.jackson.core.json.ReaderBasedJsonParser readerBasedJsonParser32 = new com.fasterxml.jackson.core.json.ReaderBasedJsonParser(iOContext10, (int) (short) 0, reader21, objectCodec22, charsToNameCanonicalizer29); int int33 = readerBasedJsonParser32.getTextOffset(); java.lang.String str35 = readerBasedJsonParser32.getValueAsString(""); com.fasterxml.jackson.core.JsonToken jsonToken36 = readerBasedJsonParser32.nextToken(); double double38 = readerBasedJsonParser32.getValueAsDouble((double) (-1971997803)); com.fasterxml.jackson.core.JsonFactory jsonFactory39 = new com.fasterxml.jackson.core.JsonFactory(); com.fasterxml.jackson.core.JsonParser jsonParser40 = null; com.fasterxml.jackson.core.util.JsonParserDelegate jsonParserDelegate41 = new com.fasterxml.jackson.core.util.JsonParserDelegate(jsonParser40); boolean boolean42 = jsonParserDelegate41.canParseAsync(); com.fasterxml.jackson.core.io.SerializedString serializedString43 = com.fasterxml.jackson.core.PrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR; char[] charArray45 = new char[] { '4' }; int int47 = serializedString43.appendQuoted(charArray45, (int) (byte) 0); byte[] byteArray49 = new byte[] { (byte) 0 }; int int51 = serializedString43.appendUnquotedUTF8(byteArray49, (int) (short) 1); jsonParserDelegate41.setRequestPayloadOnError(byteArray49, "-1.0"); com.fasterxml.jackson.core.JsonParser jsonParser54 = jsonFactory39.createJsonParser(byteArray49); java.lang.Object obj55 = jsonParser54.getInputSource(); com.fasterxml.jackson.core.filter.TokenFilterContext tokenFilterContext57 = null; com.fasterxml.jackson.core.filter.TokenFilter tokenFilter58 = new com.fasterxml.jackson.core.filter.TokenFilter(); com.fasterxml.jackson.core.filter.TokenFilterContext tokenFilterContext60 = new com.fasterxml.jackson.core.filter.TokenFilterContext(55296, tokenFilterContext57, tokenFilter58, true); com.fasterxml.jackson.core.filter.TokenFilter tokenFilter61 = new com.fasterxml.jackson.core.filter.TokenFilter(); boolean boolean62 = tokenFilter61.includeNull(); com.fasterxml.jackson.core.filter.TokenFilter tokenFilter63 = tokenFilterContext60.checkValue(tokenFilter61); com.fasterxml.jackson.core.filter.TokenFilter tokenFilter64 = tokenFilter61.filterStartArray(); com.fasterxml.jackson.core.filter.FilteringParserDelegate filteringParserDelegate67 = new com.fasterxml.jackson.core.filter.FilteringParserDelegate(jsonParser54, tokenFilter61, false, true); readerBasedJsonParser32.setCurrentValue((java.lang.Object) filteringParserDelegate67); com.fasterxml.jackson.core.Version version69 = filteringParserDelegate67.version(); }
Code: public JsonToken nextToken(){if (!_allowMultipleMatches && (_currToken != null) && (_exposedContext == null)) {if (_currToken.isScalarValue() && !_headContext.isStartHandled() && !_includePath&& (_itemFilter == TokenFilter.INCLUDE_ALL)) {return (_currToken = null);}}TokenFilterContext ctxt = _exposedContext;if (ctxt != null) {while (true) {JsonToken t = ctxt.nextTokenToRead();if (t != null) {_currToken = t;return t;}if (ctxt == _headContext) {;if (ctxt.inArray()) {t = delegate.getCurrentToken();_currToken = t;return t;}break;}ctxt = _headContext.findChildOf(ctxt);_exposedContext = ctxt;if (ctxt == null) { throw _constructError("Unexpected problem: chain of filtered context broken");}}}JsonToken t = delegate.nextToken();if (t == null) {_currToken = t;return t;}TokenFilter f;switch (t.id()) {case ID_START_ARRAY:f = _itemFilter;if (f == TokenFilter.INCLUDE_ALL) {_headContext = _headContext.createChildArrayContext(f, true);return (_currToken = t);}if (f == null) { delegate.skipChildren();break;}f = _headContext.checkValue(f);if (f == null) {delegate.skipChildren();break;}if (f != TokenFilter.INCLUDE_ALL) {f = f.filterStartArray();}_itemFilter = f;if (f == TokenFilter.INCLUDE_ALL) {_headContext = _headContext.createChildArrayContext(f, true);return (_currToken = t);}_headContext = _headContext.createChildArrayContext(f, true);if (_includePath) {t = _nextTokenWithBuffering(_headContext);if (t != null) {_currToken = t;return t;}}break;case ID_START_OBJECT:f = _itemFilter;if (f == TokenFilter.INCLUDE_ALL) {_headContext = _headContext.createChildObjectContext(f, true);return (_currToken = t);}if (f == null) { delegate.skipChildren();break;}f = _headContext.checkValue(f);if (f == null) {delegate.skipChildren();break;}if (f != TokenFilter.INCLUDE_ALL) {f = f.filterStartObject();}_itemFilter = f;if (f == TokenFilter.INCLUDE_ALL) {;return (_currToken = t);}_headContext = _headContext.createChildObjectContext(f, false);if (_includePath) {t = _nextTokenWithBuffering(_headContext);if (t != null) {_currToken = t;return t;}}break;case ID_END_ARRAY:case ID_END_OBJECT:{boolean returnEnd = _headContext.isStartHandled();f = _headContext.getFilter();if ((f != null) && (f != TokenFilter.INCLUDE_ALL)) {f.filterFinishArray();}_headContext = _headContext.getParent();_itemFilter = _headContext.getFilter();if (returnEnd) {return (_currToken = t);}}break;case ID_FIELD_NAME:{final String name = delegate.getCurrentName();f = _headContext.setFieldName(name);if (f == TokenFilter.INCLUDE_ALL) {_itemFilter = f;if (!false) {if (_includeImmediateParent && !_headContext.isStartHandled()) {t = _headContext.nextTokenToRead(); _exposedContext = _headContext;}}return (_currToken = t);}if (f == null) {delegate.nextToken();delegate.skipChildren();break;}f = f.includeProperty(name);if (f == null) {delegate.nextToken();delegate.skipChildren();break;}_itemFilter = f;if (f == TokenFilter.INCLUDE_ALL) {if (_includePath) {return (_currToken = t);}}if (_includePath) {t = _nextTokenWithBuffering(_headContext);if (t != null) {_currToken = t;return t;}}break;}default: f = _itemFilter;if (f == TokenFilter.INCLUDE_ALL) {return (_currToken = t);}if (f != null) {f = _headContext.checkValue(f);if ((f == TokenFilter.INCLUDE_ALL)|| ((f != null) && f.includeValue(delegate))) {return (_currToken = t);}}break;}return _nextToken2();}
tensor([[0.0023, 0.0036, 0.0042,  ..., 0.0015, 0.0041, 0.0014],
        [0.0017, 0.0030, 0.0035,  ..., 0.0012, 0.0030, 0.0009],
        [0.0022, 0.0036, 0.0042,  ..., 0.0017, 0.0035, 0.0014],
        ...,
        [0.0028, 0.0038, 0.0040,  ..., 0.0023, 0.0038, 0.0017],
        [0.0018, 0.0038, 0.0033,  ..., 0.0015, 0.0031, 0.0011],
        [0.0019, 0.0032, 0.0037,  ..., 0.0015, 0.0027, 0.0011]])