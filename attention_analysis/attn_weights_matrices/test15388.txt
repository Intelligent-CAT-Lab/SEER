15388
Test: public void test158() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test158"); org.apache.commons.cli.GnuParser gnuParser0 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.Options options1 = gnuParser0.getOptions(); org.apache.commons.cli.Options options2 = gnuParser0.getOptions(); org.apache.commons.cli.GnuParser gnuParser3 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.CommandLine commandLine4 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj6 = commandLine4.getParsedOptionValue(""); java.util.Properties properties8 = commandLine4.getOptionProperties("hi!"); java.lang.Object obj10 = commandLine4.getOptionObject("hi!"); java.lang.Object obj12 = commandLine4.getOptionObject("hi!"); gnuParser3.cmd = commandLine4; org.apache.commons.cli.CommandLine commandLine14 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj16 = commandLine14.getParsedOptionValue(""); java.util.Properties properties18 = commandLine14.getOptionProperties("hi!"); gnuParser3.processProperties(properties18); org.apache.commons.cli.Options options20 = new org.apache.commons.cli.Options(); org.apache.commons.cli.GnuParser gnuParser21 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.Options options22 = new org.apache.commons.cli.Options(); org.apache.commons.cli.GnuParser gnuParser23 = new org.apache.commons.cli.GnuParser(); org.apache.commons.cli.CommandLine commandLine24 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj26 = commandLine24.getParsedOptionValue(""); java.util.Properties properties28 = commandLine24.getOptionProperties("hi!"); java.lang.Object obj30 = commandLine24.getOptionObject("hi!"); java.lang.Object obj32 = commandLine24.getOptionObject("hi!"); gnuParser23.cmd = commandLine24; org.apache.commons.cli.Options options34 = null; org.apache.commons.cli.CommandLine commandLine35 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj37 = commandLine35.getParsedOptionValue(""); java.util.Properties properties39 = commandLine35.getOptionProperties("hi!"); java.lang.String[] strArray40 = commandLine35.getArgs(); java.lang.String[] strArray42 = gnuParser23.flatten(options34, strArray40, true); java.lang.String[] strArray44 = gnuParser21.flatten(options22, strArray42, true); org.apache.commons.cli.CommandLine commandLine46 = gnuParser3.parse(options20, strArray42, true); org.apache.commons.cli.Option option49 = new org.apache.commons.cli.Option("", "hi!"); char char50 = option49.getValueSeparator(); org.apache.commons.cli.OptionGroup optionGroup51 = options20.getOptionGroup(option49); java.lang.String str52 = options20.toString(); java.util.Collection collection53 = options20.getOptions(); org.apache.commons.cli.CommandLine commandLine54 = new org.apache.commons.cli.CommandLine(); java.lang.Object obj56 = commandLine54.getParsedOptionValue(""); java.util.Properties properties58 = commandLine54.getOptionProperties("hi!"); java.lang.Object obj60 = commandLine54.getOptionObject("hi!"); org.apache.commons.cli.Option option64 = new org.apache.commons.cli.Option("", true, ""); commandLine54.addOption(option64); java.lang.String str67 = commandLine54.getOptionValue(""); java.lang.String[] strArray68 = commandLine54.getArgs(); java.lang.String str70 = commandLine54.getOptionValue("hi!"); java.util.Iterator iterator71 = commandLine54.iterator(); java.lang.String[] strArray72 = commandLine54.getArgs(); org.apache.commons.cli.CommandLine commandLine73 = gnuParser0.parse(options20, strArray72); } ] [ long {} ]" + "'", str52, "[ Options: [ short {} ] [ long {} ]"); }
Code: protected void processProperties(Properties properties) throws ParseException { if (properties == null) { return; } for (Enumeration e = properties.propertyNames(); e.hasMoreElements();) { String option = e.nextElement().toString(); if (!cmd.hasOption(option)) { Option opt = getOptions().getOption(option); String value = properties.getProperty(option); if (opt.hasArg()) { if (opt.getValues() == null || opt.getValues().length == 0) { try { opt.addValueForProcessing(value); } catch (RuntimeException exp) { } } } else if (!("yes".equalsIgnoreCase(value) || "true".equalsIgnoreCase(value) || "1".equalsIgnoreCase(value))) { continue; } cmd.addOption(opt); updateRequiredOptions(opt); } } }
tensor([[0.0175, 0.0067, 0.0304,  ..., 0.0029, 0.0029, 0.0029],
        [0.0204, 0.0063, 0.0325,  ..., 0.0036, 0.0036, 0.0036],
        [0.0168, 0.0062, 0.0272,  ..., 0.0036, 0.0036, 0.0036],
        ...,
        [0.0163, 0.0060, 0.0346,  ..., 0.0032, 0.0032, 0.0032],
        [0.0163, 0.0060, 0.0346,  ..., 0.0032, 0.0032, 0.0032],
        [0.0163, 0.0060, 0.0346,  ..., 0.0032, 0.0032, 0.0032]])