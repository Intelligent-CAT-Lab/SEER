101467
Test: public void test22() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test22"); org.joda.time.DateTimeFieldType dateTimeFieldType0 = org.joda.time.DateTimeFieldType.dayOfMonth(); org.joda.time.format.DateTimeFormatterBuilder.FixedNumber fixedNumber3 = new org.joda.time.format.DateTimeFormatterBuilder.FixedNumber(dateTimeFieldType0, 642, true); org.joda.time.format.DateTimeParser[] dateTimeParserArray4 = new org.joda.time.format.DateTimeParser[] {}; org.joda.time.format.DateTimeFormatterBuilder.MatchingParser matchingParser5 = new org.joda.time.format.DateTimeFormatterBuilder.MatchingParser(dateTimeParserArray4); org.joda.time.chrono.ISOChronology iSOChronology7 = org.joda.time.chrono.ISOChronology.getInstanceUTC(); org.joda.time.DateTime dateTime8 = new org.joda.time.DateTime((org.joda.time.Chronology) iSOChronology7); org.joda.time.DateTimeZone dateTimeZone9 = null; org.joda.time.Chronology chronology10 = iSOChronology7.withZone(dateTimeZone9); org.joda.time.DateTimeField dateTimeField11 = iSOChronology7.weekyear(); java.util.Locale locale12 = null; org.joda.time.format.DateTimeParserBucket dateTimeParserBucket13 = new org.joda.time.format.DateTimeParserBucket((long) 100, (org.joda.time.Chronology) iSOChronology7, locale12); int int16 = matchingParser5.parseInto(dateTimeParserBucket13, "713", 1439); int int19 = fixedNumber3.parseInto(dateTimeParserBucket13, "secondOfMinute", 0); java.lang.StringBuffer stringBuffer20 = null; org.joda.time.chrono.GregorianChronology gregorianChronology22 = org.joda.time.chrono.GregorianChronology.getInstance(); org.joda.time.DateTimeField dateTimeField23 = gregorianChronology22.minuteOfDay(); org.joda.time.tz.FixedDateTimeZone fixedDateTimeZone28 = new org.joda.time.tz.FixedDateTimeZone("minuteOfDay", "35", 100, (int) (short) 10); org.joda.time.chrono.ZonedChronology zonedChronology29 = org.joda.time.chrono.ZonedChronology.getInstance((org.joda.time.Chronology) gregorianChronology22, (org.joda.time.DateTimeZone) fixedDateTimeZone28); java.lang.String str30 = zonedChronology29.toString(); org.joda.time.chrono.ISOChronology iSOChronology31 = org.joda.time.chrono.ISOChronology.getInstanceUTC(); org.joda.time.DateTime dateTime32 = new org.joda.time.DateTime((org.joda.time.Chronology) iSOChronology31); org.joda.time.DateTimeZone dateTimeZone33 = iSOChronology31.getZone(); java.lang.String str35 = dateTimeZone33.getName(0L); java.util.TimeZone timeZone36 = dateTimeZone33.toTimeZone(); int int38 = dateTimeZone33.getOffset((long) 308); java.util.Locale locale40 = null; java.lang.String str41 = dateTimeZone33.getName((long) (byte) 10, locale40); java.lang.String str42 = dateTimeZone33.getID(); org.joda.time.Chronology chronology43 = zonedChronology29.withZone(dateTimeZone33); org.joda.time.chrono.ISOChronology iSOChronology45 = org.joda.time.chrono.ISOChronology.getInstanceUTC(); org.joda.time.DateTime dateTime46 = new org.joda.time.DateTime((org.joda.time.Chronology) iSOChronology45); org.joda.time.DateTimeField dateTimeField47 = iSOChronology45.secondOfDay(); org.joda.time.DurationField durationField48 = iSOChronology45.years(); org.joda.time.DateTimeZone dateTimeZone49 = iSOChronology45.getZone(); java.util.Locale locale50 = null; try { fixedNumber3.printTo(stringBuffer20, (long) 4, chronology43, 644, dateTimeZone49, locale50); } catch (java.lang.NullPointerException e) { } }
Code: public int parseInto(DateTimeParserBucket bucket, String text, int position){if (position >= text.length()) {return ~position;}char a = text.charAt(position);char b = iValue;if (a != b) {a = Character.toUpperCase(a);b = Character.toUpperCase(b);if (a != b) {a = Character.toLowerCase(a);b = Character.toLowerCase(b);if (a != b) {return ~position;}}}return position + 1;}
tensor([[0.0176, 0.0108, 0.0276,  ..., 0.0165, 0.0143, 0.0465],
        [0.0107, 0.0077, 0.0274,  ..., 0.0093, 0.0127, 0.0473],
        [0.0135, 0.0076, 0.0310,  ..., 0.0094, 0.0166, 0.0505],
        ...,
        [0.0124, 0.0077, 0.0315,  ..., 0.0131, 0.0132, 0.0537],
        [0.0168, 0.0091, 0.0368,  ..., 0.0125, 0.0141, 0.0420],
        [0.0147, 0.0101, 0.0300,  ..., 0.0127, 0.0140, 0.0567]])