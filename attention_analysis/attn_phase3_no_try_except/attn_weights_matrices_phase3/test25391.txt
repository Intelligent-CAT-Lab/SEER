25391
Test: public void test8() throws Throwable { Vector3D.Unit vector3D_Unit0 = Vector3D.Unit.MINUS_Y; Vector3D.Unit vector3D_Unit1 = vector3D_Unit0.normalize(); Vector3D vector3D0 = vector3D_Unit0.subtract(0.0, (Vector3D) vector3D_Unit1); Vector3D vector3D1 = Vector3D.of((-1519.96533209), (-1519.96533209), Double.POSITIVE_INFINITY); AffineTransformMatrix3D affineTransformMatrix3D0 = AffineTransformMatrix3D.fromColumnVectors((Vector3D) vector3D_Unit1, (Vector3D) vector3D_Unit1, (Vector3D) vector3D_Unit1); AffineTransformMatrix3D.createTranslation((Vector3D) vector3D_Unit0); AffineTransformMatrix3D.createTranslation((-1.0), (-230.388), (-1519.96533209)); Vector3D.Unit vector3D_Unit2 = affineTransformMatrix3D0.applyDirection((Vector3D) vector3D_Unit1); StlUtils.pointsAreCounterClockwise(vector3D_Unit2, vector3D_Unit2, vector3D_Unit2, vector3D_Unit0); Vector3D[] vector3DArray0 = new Vector3D[7]; vector3DArray0[0] = (Vector3D) vector3D_Unit0; vector3DArray0[1] = (Vector3D) vector3D_Unit1; vector3DArray0[2] = (Vector3D) vector3D_Unit1; vector3DArray0[3] = (Vector3D) vector3D_Unit1; vector3DArray0[4] = (Vector3D) vector3D_Unit0; vector3DArray0[5] = vector3D1; vector3DArray0[6] = vector3D1; Vector3D vector3D2 = Vector3D.centroid(vector3D0, vector3DArray0); Vector3D vector3D3 = StlUtils.determineNormal(vector3D_Unit0, vector3D2, vector3DArray0[1], vector3D1); StlUtils.determineNormal(vector3D2, vector3D3, vector3D1, vector3D2); StlUtils.determineNormal(vector3DArray0[0], vector3DArray0[3], vector3DArray0[0], vector3D_Unit0); AxisReferenceFrame axisReferenceFrame0 = AxisReferenceFrame.ABSOLUTE; AxisSequence axisSequence0 = AxisSequence.YXZ; AxisAngleSequence axisAngleSequence0 = new AxisAngleSequence(axisReferenceFrame0, axisSequence0, (-924.52), 1.0, 0.0); QuaternionRotation quaternionRotation0 = QuaternionRotation.fromAxisAngleSequence(axisAngleSequence0); AffineTransformMatrix3D affineTransformMatrix3D1 = AffineTransformMatrix3D.createRotation(vector3DArray0[1], quaternionRotation0); Vector3D.Unit vector3D_Unit3 = Vector3D.Unit.PLUS_X; Vector3D.Unit vector3D_Unit4 = affineTransformMatrix3D1.applyDirection((Vector3D) vector3D_Unit3); boolean boolean0 = StlUtils.pointsAreCounterClockwise(vector3D_Unit4, vector3D1, vector3D1, vector3D_Unit4); ByteBuffer byteBuffer0 = StlUtils.byteBuffer(857); }
Code: static ByteBuffer byteBuffer(final int capacity) { return ByteBuffer.allocate(capacity) .order(StlConstants.BINARY_BYTE_ORDER); }
[[0.2081489  0.05580059 0.11137678 0.04336531 0.11137678 0.13357213
 0.07663684 0.11137678 0.11137681 0.03696904]
[0.18110628 0.05740869 0.11690705 0.03690088 0.11690705 0.13789925
 0.09059213 0.11690705 0.11690707 0.02846449]
[0.22774148 0.05742354 0.11349948 0.04417413 0.11349948 0.10050543
 0.08155257 0.11349948 0.11349951 0.03460489]
[0.2578207  0.0485744  0.11911669 0.03393759 0.11911669 0.09144118
 0.07101353 0.11911669 0.11911674 0.02074579]
[0.22774148 0.05742354 0.11349948 0.04417413 0.11349948 0.10050543
 0.08155257 0.11349948 0.11349951 0.03460489]
[0.18806414 0.07277551 0.10851944 0.03939138 0.10851944 0.1262837
 0.09416904 0.10851944 0.10851946 0.04523849]
[0.2320025  0.06350562 0.11687767 0.03554559 0.11687767 0.09283841
 0.08240761 0.11687767 0.11687769 0.02618961]
[0.22774148 0.05742354 0.11349948 0.04417413 0.11349948 0.10050543
 0.08155257 0.11349948 0.11349951 0.03460489]
[0.22774148 0.05742354 0.11349948 0.04417413 0.11349948 0.10050544
 0.08155257 0.11349948 0.11349949 0.0346049 ]
[0.21460716 0.0625473  0.10280159 0.04133643 0.10280159 0.12765048
 0.11465222 0.10280159 0.10280161 0.02800005]]