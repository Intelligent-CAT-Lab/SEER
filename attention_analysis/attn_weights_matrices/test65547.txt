65547
Test: public void testInvalidFormat() throws Exception { try { MAPPER.readValue(quote("foobar"), Date.class); fail("Should have failed with an exception"); } catch (InvalidFormatException e) { verifyException(e, "Can not construct instance"); } catch (Exception e) { fail("Wrong type of exception ("+e.getClass().getName()+"), should get " +InvalidFormatException.class.getName()); } }
Code: if (!staticTyping && type.useStaticType()) { if (!type.isContainerType() || type.getContentType().getRawClass() != Object.class) { staticTyping = true; } }
tensor([[0.1863, 0.0156, 0.0167, 0.1659, 0.0640, 0.1863, 0.0197, 0.0592, 0.0662,
         0.0123, 0.0611, 0.0640, 0.0077, 0.0256, 0.0293, 0.0101, 0.0101],
        [0.1450, 0.0291, 0.0330, 0.1414, 0.0542, 0.1450, 0.0341, 0.0478, 0.0690,
         0.0292, 0.0851, 0.0542, 0.0145, 0.0372, 0.0394, 0.0208, 0.0208],
        [0.1297, 0.0245, 0.0281, 0.1516, 0.0754, 0.1297, 0.0286, 0.0474, 0.0725,
         0.0275, 0.0730, 0.0754, 0.0157, 0.0372, 0.0344, 0.0247, 0.0247],
        [0.1502, 0.0228, 0.0255, 0.1553, 0.0728, 0.1502, 0.0236, 0.0508, 0.0486,
         0.0185, 0.0880, 0.0728, 0.0112, 0.0334, 0.0406, 0.0179, 0.0179],
        [0.0963, 0.0378, 0.0472, 0.1215, 0.0821, 0.0963, 0.0403, 0.0471, 0.0657,
         0.0380, 0.0735, 0.0821, 0.0266, 0.0458, 0.0398, 0.0301, 0.0301],
        [0.1863, 0.0156, 0.0167, 0.1659, 0.0640, 0.1863, 0.0197, 0.0592, 0.0662,
         0.0123, 0.0611, 0.0640, 0.0077, 0.0256, 0.0293, 0.0101, 0.0101],
        [0.1481, 0.0241, 0.0306, 0.1129, 0.0770, 0.1481, 0.0308, 0.0554, 0.0594,
         0.0260, 0.0755, 0.0770, 0.0147, 0.0408, 0.0464, 0.0166, 0.0166],
        [0.1616, 0.0255, 0.0311, 0.1294, 0.0873, 0.1616, 0.0266, 0.0410, 0.0607,
         0.0210, 0.0632, 0.0873, 0.0142, 0.0304, 0.0357, 0.0117, 0.0117],
        [0.1474, 0.0207, 0.0220, 0.1762, 0.0770, 0.1474, 0.0307, 0.0469, 0.0633,
         0.0182, 0.0727, 0.0770, 0.0119, 0.0290, 0.0335, 0.0130, 0.0130],
        [0.1472, 0.0232, 0.0232, 0.1354, 0.0808, 0.1472, 0.0264, 0.0516, 0.0892,
         0.0158, 0.0691, 0.0808, 0.0102, 0.0315, 0.0384, 0.0149, 0.0149],
        [0.1212, 0.0292, 0.0383, 0.1051, 0.0818, 0.1212, 0.0350, 0.0447, 0.0809,
         0.0281, 0.0787, 0.0818, 0.0187, 0.0331, 0.0543, 0.0240, 0.0240],
        [0.0963, 0.0378, 0.0472, 0.1215, 0.0821, 0.0963, 0.0403, 0.0471, 0.0657,
         0.0380, 0.0735, 0.0821, 0.0266, 0.0458, 0.0398, 0.0301, 0.0301],
        [0.1498, 0.0216, 0.0294, 0.1438, 0.0788, 0.1498, 0.0312, 0.0451, 0.0751,
         0.0230, 0.0568, 0.0788, 0.0121, 0.0327, 0.0397, 0.0162, 0.0162],
        [0.1290, 0.0317, 0.0494, 0.0904, 0.0649, 0.1290, 0.0390, 0.0446, 0.0653,
         0.0487, 0.0693, 0.0649, 0.0280, 0.0481, 0.0409, 0.0284, 0.0284],
        [0.1426, 0.0231, 0.0379, 0.1333, 0.0731, 0.1426, 0.0317, 0.0417, 0.0869,
         0.0303, 0.0646, 0.0731, 0.0155, 0.0315, 0.0400, 0.0161, 0.0161],
        [0.1427, 0.0337, 0.0308, 0.0948, 0.0853, 0.1427, 0.0302, 0.0495, 0.0679,
         0.0262, 0.0737, 0.0853, 0.0169, 0.0328, 0.0497, 0.0189, 0.0189],
        [0.1427, 0.0337, 0.0308, 0.0948, 0.0853, 0.1427, 0.0302, 0.0495, 0.0679,
         0.0262, 0.0737, 0.0853, 0.0169, 0.0328, 0.0497, 0.0189, 0.0189]])