18606
Test: public void test094() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test094"); com.google.javascript.jscomp.LightweightMessageFormatter lightweightMessageFormatter0 = com.google.javascript.jscomp.LightweightMessageFormatter.withoutSource(); com.google.javascript.jscomp.CheckLevel checkLevel4 = com.google.javascript.jscomp.CheckLevel.WARNING; com.google.javascript.jscomp.DiagnosticType diagnosticType7 = com.google.javascript.jscomp.DiagnosticType.warning("", ""); java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "", ": hi!" }; com.google.javascript.jscomp.JSError jSError15 = com.google.javascript.jscomp.JSError.make(": hi!", (int) (short) 1, (int) (short) 1, checkLevel4, diagnosticType7, strArray14); com.google.javascript.rhino.Node node16 = jSError15.node; boolean boolean18 = jSError15.equals((java.lang.Object) ": hi!"); com.google.javascript.jscomp.CheckLevel checkLevel19 = jSError15.level; java.lang.String str20 = lightweightMessageFormatter0.getLevelName(checkLevel19); com.google.javascript.jscomp.SourceExcerptProvider sourceExcerptProvider21 = lightweightMessageFormatter0.getSource(); com.google.javascript.jscomp.CheckLevel checkLevel28 = com.google.javascript.jscomp.CheckLevel.WARNING; boolean boolean29 = checkLevel28.isOn(); com.google.javascript.jscomp.DiagnosticType diagnosticType32 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!"); java.lang.Object[] objArray33 = null; java.lang.String str34 = diagnosticType32.format(objArray33); java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "" }; com.google.javascript.jscomp.JSError jSError38 = com.google.javascript.jscomp.JSError.make("hi!", 1, (int) (short) 100, checkLevel28, diagnosticType32, strArray37); com.google.javascript.jscomp.DiagnosticType diagnosticType44 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!"); boolean boolean46 = diagnosticType44.equals((java.lang.Object) (byte) -1); java.lang.String str47 = diagnosticType44.key; com.google.javascript.jscomp.CheckLevel checkLevel51 = com.google.javascript.jscomp.CheckLevel.WARNING; boolean boolean52 = checkLevel51.isOn(); com.google.javascript.jscomp.DiagnosticType diagnosticType55 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!"); java.lang.Object[] objArray56 = null; java.lang.String str57 = diagnosticType55.format(objArray56); java.lang.String[] strArray60 = new java.lang.String[] { "hi!", "" }; com.google.javascript.jscomp.JSError jSError61 = com.google.javascript.jscomp.JSError.make("hi!", 1, (int) (short) 100, checkLevel51, diagnosticType55, strArray60); com.google.javascript.jscomp.JSError jSError62 = com.google.javascript.jscomp.JSError.make(diagnosticType44, strArray60); java.lang.String[] strArray63 = null; com.google.javascript.jscomp.JSError jSError64 = com.google.javascript.jscomp.JSError.make("", (int) '4', 1, diagnosticType44, strArray63); com.google.javascript.jscomp.DiagnosticType diagnosticType67 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!"); boolean boolean69 = diagnosticType67.equals((java.lang.Object) (byte) -1); com.google.javascript.jscomp.DiagnosticType diagnosticType72 = com.google.javascript.jscomp.DiagnosticType.error(": hi!", "WARNING"); com.google.javascript.jscomp.DiagnosticType diagnosticType75 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!"); boolean boolean77 = diagnosticType75.equals((java.lang.Object) (byte) -1); java.lang.String str78 = diagnosticType75.key; com.google.javascript.jscomp.CheckLevel checkLevel82 = com.google.javascript.jscomp.CheckLevel.WARNING; boolean boolean83 = checkLevel82.isOn(); com.google.javascript.jscomp.DiagnosticType diagnosticType86 = com.google.javascript.jscomp.DiagnosticType.warning("", "hi!"); java.lang.Object[] objArray87 = null; java.lang.String str88 = diagnosticType86.format(objArray87); java.lang.String[] strArray91 = new java.lang.String[] { "hi!", "" }; com.google.javascript.jscomp.JSError jSError92 = com.google.javascript.jscomp.JSError.make("hi!", 1, (int) (short) 100, checkLevel82, diagnosticType86, strArray91); com.google.javascript.jscomp.JSError jSError93 = com.google.javascript.jscomp.JSError.make(diagnosticType75, strArray91); java.lang.String str94 = diagnosticType72.format((java.lang.Object[]) strArray91); java.lang.String str95 = diagnosticType67.format((java.lang.Object[]) strArray91); com.google.javascript.jscomp.JSError jSError96 = com.google.javascript.jscomp.JSError.make("WARNING", (int) (short) 100, (int) 'a', checkLevel28, diagnosticType44, strArray91); java.lang.String str97 = lightweightMessageFormatter0.formatError(jSError96); com.google.javascript.jscomp.DiagnosticType diagnosticType98 = jSError96.getType(); com.google.javascript.rhino.Node node99 = jSError96.node; }
Code: private String format(JSError error, boolean warning) { SourceExcerptProvider source = getSource(); String sourceExcerpt = source == null ? null : excerpt.get( source, error.sourceName, error.lineNumber, excerptFormatter); StringBuilder b = new StringBuilder(); if (error.sourceName != null) { b.append(error.sourceName); if (error.lineNumber > 0) { b.append(':'); b.append(error.lineNumber); } b.append(": "); } ; b.append(" - "); b.append(error.description); b.append('\n'); if (sourceExcerpt != null) { b.append(sourceExcerpt); b.append('\n'); int charno = error.getCharno(); if (excerpt.equals(LINE) && charno <= sourceExcerpt.length()) { for (int i = -1; i != charno; i++) { char c = sourceExcerpt.charAt(i); if (Character.isWhitespace(c)) { b.append(c); } else { b.append(' '); } } b.append("^\n"); } } return b.toString(); }
tensor([[0.0103, 0.0080, 0.0055,  ..., 0.0071, 0.0176, 0.0033],
        [0.0082, 0.0074, 0.0052,  ..., 0.0069, 0.0131, 0.0028],
        [0.0089, 0.0073, 0.0036,  ..., 0.0059, 0.0149, 0.0021],
        ...,
        [0.0092, 0.0079, 0.0037,  ..., 0.0060, 0.0163, 0.0026],
        [0.0096, 0.0086, 0.0035,  ..., 0.0068, 0.0144, 0.0020],
        [0.0077, 0.0088, 0.0045,  ..., 0.0107, 0.0174, 0.0028]])