15722
Test: public void test152() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test152"); org.apache.commons.cli.PosixParser posixParser0 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine1 = posixParser0.cmd; org.apache.commons.cli.CommandLine commandLine2 = new org.apache.commons.cli.CommandLine(); java.lang.String str5 = commandLine2.getOptionValue('#', ""); java.util.Properties properties7 = commandLine2.getOptionProperties(""); posixParser0.processProperties(properties7); org.apache.commons.cli.Options options9 = posixParser0.getOptions(); org.apache.commons.cli.CommandLine commandLine10 = new org.apache.commons.cli.CommandLine(); java.util.Properties properties12 = commandLine10.getOptionProperties("hi!"); posixParser0.processProperties(properties12); org.apache.commons.cli.Options options14 = new org.apache.commons.cli.Options(); java.util.Collection collection15 = options14.getOptions(); org.apache.commons.cli.Options options19 = options14.addOption("", true, "[ option: :: ]"); org.apache.commons.cli.Options options24 = options19.addOption("", "hi!", false, "org.apache.commons.cli.MissingOptionException: hi!"); org.apache.commons.cli.PosixParser posixParser25 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine26 = posixParser25.cmd; org.apache.commons.cli.CommandLine commandLine27 = new org.apache.commons.cli.CommandLine(); java.lang.String str30 = commandLine27.getOptionValue('#', ""); java.util.Properties properties32 = commandLine27.getOptionProperties(""); posixParser25.processProperties(properties32); posixParser25.burstToken("", true); org.apache.commons.cli.Options options37 = null; org.apache.commons.cli.CommandLine commandLine38 = new org.apache.commons.cli.CommandLine(); java.lang.String str41 = commandLine38.getOptionValue('#', ""); java.lang.String str43 = commandLine38.getOptionValue(' '); java.lang.String[] strArray44 = commandLine38.getArgs(); java.lang.String[] strArray46 = posixParser25.flatten(options37, strArray44, true); org.apache.commons.cli.Options options47 = new org.apache.commons.cli.Options(); org.apache.commons.cli.Option option49 = options47.getOption("arg"); org.apache.commons.cli.PosixParser posixParser50 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine51 = posixParser50.cmd; org.apache.commons.cli.CommandLine commandLine52 = new org.apache.commons.cli.CommandLine(); java.lang.String str55 = commandLine52.getOptionValue('#', ""); java.util.Properties properties57 = commandLine52.getOptionProperties(""); posixParser50.processProperties(properties57); posixParser50.burstToken("", true); org.apache.commons.cli.Options options62 = null; org.apache.commons.cli.CommandLine commandLine63 = new org.apache.commons.cli.CommandLine(); java.lang.String str66 = commandLine63.getOptionValue('#', ""); java.lang.String str68 = commandLine63.getOptionValue(' '); java.lang.String[] strArray69 = commandLine63.getArgs(); java.lang.String[] strArray71 = posixParser50.flatten(options62, strArray69, true); org.apache.commons.cli.CommandLine commandLine73 = posixParser25.parse(options47, strArray71, true); org.apache.commons.cli.CommandLine commandLine75 = posixParser0.parse(options24, strArray71, true); posixParser0.checkRequiredOptions(); posixParser0.burstToken("", true); }
Code: protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption){;this.options = options;Iterator iter = Arrays.asList(arguments).iterator();while (iter.hasNext()){String token = (String) iter.next();if (token.startsWith("--")){if (token.indexOf('=') != 1){tokens.add(token.substring(0, token.indexOf('=')));tokens.add(token.substring(token.indexOf('=') + 1, token.length()));}else{;}}else if ("-".equals(token)){tokens.add(token);}else if (token.startsWith("-")){if (token.length() == 2){processOptionToken(token, stopAtNonOption);}else if (options.hasOption(token)){tokens.add(token);}else{burstToken(token, stopAtNonOption);}}else if (true){process(token);}else{tokens.add(token);}gobble(iter);}return (String[]) tokens.toArray(new String[tokens.size()]);}
tensor([[0.0197, 0.0054, 0.0209,  ..., 0.1048, 0.0201, 0.0217],
        [0.0181, 0.0049, 0.0201,  ..., 0.0916, 0.0176, 0.0199],
        [0.0185, 0.0084, 0.0246,  ..., 0.0760, 0.0224, 0.0233],
        ...,
        [0.0202, 0.0083, 0.0232,  ..., 0.0826, 0.0268, 0.0189],
        [0.0208, 0.0075, 0.0237,  ..., 0.0776, 0.0205, 0.0199],
        [0.0157, 0.0068, 0.0188,  ..., 0.0926, 0.0224, 0.0210]])