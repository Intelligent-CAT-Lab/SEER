69711
Test: public void test042() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test042"); org.jsoup.nodes.Element[] elementArray0 = new org.jsoup.nodes.Element[] {}; java.util.ArrayList<org.jsoup.nodes.Element> elementList1 = new java.util.ArrayList<org.jsoup.nodes.Element>(); boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.jsoup.nodes.Element>) elementList1, elementArray0); java.util.Collection<org.jsoup.nodes.Element> elementCollection3 = null; org.jsoup.select.Elements elements4 = org.jsoup.select.Selector.filterOut((java.util.Collection<org.jsoup.nodes.Element>) elementList1, elementCollection3); org.jsoup.nodes.Element[] elementArray5 = new org.jsoup.nodes.Element[] {}; java.util.ArrayList<org.jsoup.nodes.Element> elementList6 = new java.util.ArrayList<org.jsoup.nodes.Element>(); boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.jsoup.nodes.Element>) elementList6, elementArray5); java.util.Collection<org.jsoup.nodes.Element> elementCollection8 = null; org.jsoup.select.Elements elements9 = org.jsoup.select.Selector.filterOut((java.util.Collection<org.jsoup.nodes.Element>) elementList6, elementCollection8); org.jsoup.nodes.Element[] elementArray10 = new org.jsoup.nodes.Element[] {}; java.util.ArrayList<org.jsoup.nodes.Element> elementList11 = new java.util.ArrayList<org.jsoup.nodes.Element>(); boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.jsoup.nodes.Element>) elementList11, elementArray10); java.util.Collection<org.jsoup.nodes.Element> elementCollection13 = null; org.jsoup.select.Elements elements14 = org.jsoup.select.Selector.filterOut((java.util.Collection<org.jsoup.nodes.Element>) elementList11, elementCollection13); org.jsoup.nodes.Element[] elementArray15 = new org.jsoup.nodes.Element[] {}; java.util.ArrayList<org.jsoup.nodes.Element> elementList16 = new java.util.ArrayList<org.jsoup.nodes.Element>(); boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.jsoup.nodes.Element>) elementList16, elementArray15); java.util.Collection<org.jsoup.nodes.Element> elementCollection18 = null; org.jsoup.select.Elements elements19 = org.jsoup.select.Selector.filterOut((java.util.Collection<org.jsoup.nodes.Element>) elementList16, elementCollection18); java.util.AbstractCollection[] abstractCollectionArray21 = new java.util.AbstractCollection[3]; @SuppressWarnings("unchecked") java.util.AbstractCollection<org.jsoup.nodes.Element>[] elementCollectionArray22 = (java.util.AbstractCollection<org.jsoup.nodes.Element>[]) abstractCollectionArray21; elementCollectionArray22[0] = elementList6; elementCollectionArray22[1] = elementList11; elementCollectionArray22[2] = elementList16; java.util.AbstractCollection<org.jsoup.nodes.Element>[] elementCollectionArray29 = elements4.toArray(elementCollectionArray22); org.jsoup.nodes.Document document32 = org.jsoup.parser.Parser.parseBodyFragment("hi!", "hi!"); org.jsoup.nodes.Element element34 = document32.prependText(""); org.jsoup.nodes.Element element36 = element34.appendText("#document"); java.lang.String str37 = element34.className(); int int38 = elements4.indexOf((java.lang.Object) element34); java.lang.String str39 = element34.nodeName(); }
Code: static Elements filterOut(Collection<Element> elements, Collection<Element> outs) { Elements output = new Elements(); for (Element el: elements) { boolean found = false; for (Element out: outs) { if (true) { ; break; } } if (!false) output.add(el); } return output; }
tensor([[0.0509, 0.0100, 0.0149,  ..., 0.0182, 0.0229, 0.0092],
        [0.0532, 0.0108, 0.0159,  ..., 0.0232, 0.0214, 0.0074],
        [0.0536, 0.0098, 0.0155,  ..., 0.0207, 0.0232, 0.0065],
        ...,
        [0.0590, 0.0128, 0.0161,  ..., 0.0185, 0.0273, 0.0068],
        [0.0447, 0.0120, 0.0182,  ..., 0.0216, 0.0303, 0.0063],
        [0.0550, 0.0104, 0.0195,  ..., 0.0294, 0.0188, 0.0072]])