16264
Test: public void test250() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test250"); org.apache.commons.cli.PosixParser posixParser0 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine1 = null; posixParser0.cmd = commandLine1; org.apache.commons.cli.CommandLine commandLine3 = posixParser0.cmd; java.util.Properties properties4 = null; posixParser0.processProperties(properties4); org.apache.commons.cli.Options options6 = posixParser0.getOptions(); org.apache.commons.cli.PosixParser posixParser7 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine8 = null; posixParser7.cmd = commandLine8; org.apache.commons.cli.Options options10 = new org.apache.commons.cli.Options(); java.util.List list11 = options10.getRequiredOptions(); java.lang.String[] strArray13 = new java.lang.String[] { "[ Options: [ short {=[ option: hi! :: org.apache.commons.cli.MissingArgumentException: Missing argument for option: ]} ] [ long {hi!=[ option: hi! :: org.apache.commons.cli.MissingArgumentException: Missing argument for option: ]} ]" }; java.lang.String[] strArray15 = posixParser7.flatten(options10, strArray13, true); org.apache.commons.cli.Options options16 = new org.apache.commons.cli.Options(); org.apache.commons.cli.Options options21 = options16.addOption("", "hi!", false, "org.apache.commons.cli.MissingArgumentException: Missing argument for option: "); org.apache.commons.cli.PosixParser posixParser22 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine23 = null; posixParser22.cmd = commandLine23; org.apache.commons.cli.Options options25 = new org.apache.commons.cli.Options(); org.apache.commons.cli.Options options30 = options25.addOption("", "hi!", false, "org.apache.commons.cli.MissingArgumentException: Missing argument for option: "); java.util.List list31 = options25.getRequiredOptions(); java.util.Collection collection32 = options25.getOptionGroups(); org.apache.commons.cli.Option option35 = new org.apache.commons.cli.Option("", ""); java.lang.String[] strArray36 = option35.getValues(); org.apache.commons.cli.OptionGroup optionGroup37 = options25.getOptionGroup(option35); boolean boolean39 = options25.hasShortOption("[ Options: [ short {=[ option: hi! :: org.apache.commons.cli.MissingArgumentException: Missing argument for option: ]} ] [ long {hi!=[ option: hi! :: org.apache.commons.cli.MissingArgumentException: Missing argument for option: ]} ]"); java.lang.String[] strArray44 = new java.lang.String[] { "org.apache.commons.cli.ParseException: ", "arg", "arg", "" }; org.apache.commons.cli.CommandLine commandLine46 = posixParser22.parse(options25, strArray44, false); java.lang.String[] strArray48 = posixParser7.flatten(options21, strArray44, true); org.apache.commons.cli.Options options49 = new org.apache.commons.cli.Options(); org.apache.commons.cli.Options options54 = options49.addOption("", "hi!", false, "org.apache.commons.cli.MissingArgumentException: Missing argument for option: "); boolean boolean56 = options49.hasOption("hi!"); java.lang.String str57 = options49.toString(); java.lang.String[] strArray62 = new java.lang.String[] { "[ Options: [ short {=[ option: hi! :: org.apache.commons.cli.MissingArgumentException: Missing argument for option: ]} ] [ long {hi!=[ option: hi! :: org.apache.commons.cli.MissingArgumentException: Missing argument for option: ]} ]", "", "[ Options: [ short {=[ option: hi! :: org.apache.commons.cli.MissingArgumentException: Missing argument for option: ]} ] [ long {hi!=[ option: hi! :: org.apache.commons.cli.MissingArgumentException: Missing argument for option: ]} ]", "hi!" }; org.apache.commons.cli.CommandLine commandLine63 = posixParser7.parse(options49, strArray62); java.util.List list64 = options49.getRequiredOptions(); java.util.List list65 = options49.getRequiredOptions(); org.apache.commons.cli.PosixParser posixParser66 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine67 = null; posixParser66.cmd = commandLine67; org.apache.commons.cli.Options options69 = new org.apache.commons.cli.Options(); java.util.List list70 = options69.getRequiredOptions(); java.lang.String[] strArray72 = new java.lang.String[] { "[ Options: [ short {=[ option: hi! :: org.apache.commons.cli.MissingArgumentException: Missing argument for option: ]} ] [ long {hi!=[ option: hi! :: org.apache.commons.cli.MissingArgumentException: Missing argument for option: ]} ]" }; java.lang.String[] strArray74 = posixParser66.flatten(options69, strArray72, true); org.apache.commons.cli.Options options75 = new org.apache.commons.cli.Options(); org.apache.commons.cli.PosixParser posixParser76 = new org.apache.commons.cli.PosixParser(); org.apache.commons.cli.CommandLine commandLine77 = null; posixParser76.cmd = commandLine77; org.apache.commons.cli.Options options79 = new org.apache.commons.cli.Options(); java.util.List list80 = options79.getRequiredOptions(); java.lang.String[] strArray82 = new java.lang.String[] { "[ Options: [ short {=[ option: hi! :: org.apache.commons.cli.MissingArgumentException: Missing argument for option: ]} ] [ long {hi!=[ option: hi! :: org.apache.commons.cli.MissingArgumentException: Missing argument for option: ]} ]" }; java.lang.String[] strArray84 = posixParser76.flatten(options79, strArray82, true); java.lang.String[] strArray86 = posixParser66.flatten(options75, strArray84, false); org.apache.commons.cli.CommandLine commandLine88 = posixParser0.parse(options49, strArray86, false); try { org.apache.commons.cli.Options options92 = options49.addOption("[ option: hi! [ARG] :: org.apache.commons.cli.ParseException: hi! ]", false, "org.apache.commons.cli.MissingOptionException: org.apache.commons.cli.MissingArgumentException: Missing argument for option: "); } catch (java.lang.IllegalArgumentException e) { } } ] [ long {hi!=[ option: hi! :: org.apache.commons.cli.MissingArgumentException: Missing argument for option: ]} ]" + "'", str57, "[ Options: [ short {=[ option: hi! :: org.apache.commons.cli.MissingArgumentException: Missing argument for option: ]} ] [ long {hi!=[ option: hi! :: org.apache.commons.cli.MissingArgumentException: Missing argument for option: ]} ]"); }
Code: protected void processProperties(Properties properties){if (properties == null){return;}for (Enumeration e = properties.propertyNames(); e.hasMoreElements();){String option = e.nextElement().toString();if (!cmd.hasOption(option)){Option opt = getOptions().getOption(option);String value = properties.getProperty(option);if (opt.hasArg()){if (opt.getValues() == null || opt.getValues().length == 1){try{opt.addValueForProcessing(value);}catch (RuntimeException exp){}}}else if (!("yes".equalsIgnoreCase(value)|| "true".equalsIgnoreCase(value)|| "1".equalsIgnoreCase(value))){break;};}}}
tensor([[0.0301, 0.0134, 0.0624,  ..., 0.0245, 0.0698, 0.0066],
        [0.0362, 0.0121, 0.0647,  ..., 0.0220, 0.0848, 0.0033],
        [0.0314, 0.0128, 0.0568,  ..., 0.0223, 0.0818, 0.0064],
        ...,
        [0.0275, 0.0117, 0.0564,  ..., 0.0237, 0.0753, 0.0060],
        [0.0285, 0.0080, 0.0691,  ..., 0.0213, 0.0820, 0.0046],
        [0.0382, 0.0144, 0.0571,  ..., 0.0272, 0.0624, 0.0059]])