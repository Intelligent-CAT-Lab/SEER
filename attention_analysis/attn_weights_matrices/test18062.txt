18062
Test: public void test7() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test7"); com.google.javascript.jscomp.Compiler compiler0 = new com.google.javascript.jscomp.Compiler(); com.google.javascript.rhino.Node node1 = null; com.google.javascript.rhino.Node node2 = com.google.javascript.jscomp.NodeUtil.newUndefinedNode(node1); java.util.Set<java.lang.String> strSet3 = node2.getSuppressions(); boolean boolean4 = com.google.javascript.jscomp.NodeUtil.isThis(node2); boolean boolean5 = com.google.javascript.jscomp.NodeUtil.isFunction(node2); java.lang.Object obj7 = node2.getProp((int) ' '); compiler0.jsRoot = node2; com.google.javascript.jscomp.CodeChangeHandler.RecentChange recentChange9 = new com.google.javascript.jscomp.CodeChangeHandler.RecentChange(); compiler0.addChangeHandler((com.google.javascript.jscomp.CodeChangeHandler) recentChange9); boolean boolean11 = compiler0.precheck(); com.google.javascript.rhino.Node node12 = null; com.google.javascript.rhino.Node node13 = com.google.javascript.jscomp.NodeUtil.newUndefinedNode(node12); java.util.Set<java.lang.String> strSet14 = node13.getSuppressions(); boolean boolean15 = com.google.javascript.jscomp.NodeUtil.isFunction(node13); com.google.javascript.rhino.Node node16 = node13.removeChildren(); node16.setWasEmptyNode(true); com.google.javascript.rhino.Node node19 = node16.getFirstChild(); compiler0.jsRoot = node16; com.google.javascript.jscomp.Compiler compiler21 = new com.google.javascript.jscomp.Compiler(); com.google.javascript.rhino.Node node22 = null; com.google.javascript.rhino.Node node23 = com.google.javascript.jscomp.NodeUtil.newUndefinedNode(node22); java.util.Set<java.lang.String> strSet24 = node23.getSuppressions(); boolean boolean25 = com.google.javascript.jscomp.NodeUtil.isThis(node23); boolean boolean26 = com.google.javascript.jscomp.NodeUtil.isFunction(node23); java.lang.Object obj28 = node23.getProp((int) ' '); compiler21.jsRoot = node23; compiler21.initCompilerOptionsIfTesting(); boolean boolean31 = compiler21.hasRegExpGlobalReferences(); com.google.javascript.jscomp.CodingConvention codingConvention32 = compiler21.getCodingConvention(); compiler21.addToDebugLog(""); boolean boolean35 = compiler21.isNormalized(); com.google.javascript.jscomp.CompilerOptions compilerOptions36 = new com.google.javascript.jscomp.CompilerOptions(); compilerOptions36.runtimeTypeCheck = false; com.google.javascript.jscomp.CheckLevel checkLevel39 = compilerOptions36.checkRequires; com.google.javascript.jscomp.CheckGlobalThis checkGlobalThis40 = new com.google.javascript.jscomp.CheckGlobalThis((com.google.javascript.jscomp.AbstractCompiler) compiler21, checkLevel39); com.google.javascript.jscomp.AbstractCompiler abstractCompiler41 = null; com.google.javascript.jscomp.AbstractCompiler abstractCompiler42 = null; com.google.javascript.jscomp.VarCheck varCheck44 = new com.google.javascript.jscomp.VarCheck(abstractCompiler42, false); com.google.javascript.jscomp.NodeTraversal nodeTraversal45 = new com.google.javascript.jscomp.NodeTraversal(abstractCompiler41, (com.google.javascript.jscomp.NodeTraversal.Callback) varCheck44); int int46 = nodeTraversal45.getScopeDepth(); int int47 = nodeTraversal45.getLineNumber(); com.google.javascript.rhino.Node node48 = nodeTraversal45.getEnclosingFunction(); com.google.javascript.rhino.Node node49 = null; com.google.javascript.rhino.Node node50 = com.google.javascript.jscomp.NodeUtil.newUndefinedNode(node49); java.util.Set<java.lang.String> strSet51 = node50.getSuppressions(); boolean boolean52 = com.google.javascript.jscomp.NodeUtil.isFunction(node50); com.google.javascript.rhino.Node node53 = node50.removeChildren(); com.google.javascript.rhino.Node node54 = null; com.google.javascript.rhino.Node node55 = com.google.javascript.jscomp.NodeUtil.newUndefinedNode(node54); java.util.Set<java.lang.String> strSet56 = node55.getSuppressions(); boolean boolean57 = com.google.javascript.jscomp.NodeUtil.isFunction(node55); com.google.javascript.rhino.Node node58 = null; com.google.javascript.rhino.Node node59 = com.google.javascript.jscomp.NodeUtil.newUndefinedNode(node58); java.util.Set<java.lang.String> strSet60 = node59.getSuppressions(); boolean boolean61 = com.google.javascript.jscomp.NodeUtil.isFunction(node59); com.google.javascript.rhino.Node node62 = null; com.google.javascript.rhino.Node node63 = com.google.javascript.jscomp.NodeUtil.newUndefinedNode(node62); com.google.javascript.jscomp.NodeUtil.setDebugInformation(node59, node63, "hi!"); com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy66 = com.google.javascript.jscomp.PropertyRenamingPolicy.ALL_UNQUOTED; java.lang.RuntimeException runtimeException68 = com.google.javascript.rhino.ScriptRuntime.undefWriteError((java.lang.Object) node63, (java.lang.Object) propertyRenamingPolicy66, (java.lang.Object) 26); node53.addChildAfter(node55, node63); com.google.javascript.rhino.Node node70 = null; com.google.javascript.rhino.Node node71 = com.google.javascript.jscomp.NodeUtil.newUndefinedNode(node70); java.util.Set<java.lang.String> strSet72 = node71.getSuppressions(); boolean boolean73 = com.google.javascript.jscomp.NodeUtil.isFunction(node71); com.google.javascript.rhino.Node node74 = null; com.google.javascript.rhino.Node node75 = com.google.javascript.jscomp.NodeUtil.newUndefinedNode(node74); com.google.javascript.jscomp.NodeUtil.setDebugInformation(node71, node75, "hi!"); boolean boolean78 = node75.isVarArgs(); boolean boolean79 = checkGlobalThis40.shouldTraverse(nodeTraversal45, node55, node75); com.google.javascript.jscomp.Compiler compiler80 = new com.google.javascript.jscomp.Compiler(); com.google.javascript.rhino.Node node81 = null; com.google.javascript.rhino.Node node82 = com.google.javascript.jscomp.NodeUtil.newUndefinedNode(node81); java.util.Set<java.lang.String> strSet83 = node82.getSuppressions(); boolean boolean84 = com.google.javascript.jscomp.NodeUtil.isThis(node82); boolean boolean85 = com.google.javascript.jscomp.NodeUtil.isFunction(node82); java.lang.Object obj87 = node82.getProp((int) ' '); compiler80.jsRoot = node82; compiler80.initCompilerOptionsIfTesting(); com.google.javascript.jscomp.SourceExcerptProvider.SourceExcerpt sourceExcerpt90 = com.google.javascript.jscomp.SourceExcerptProvider.SourceExcerpt.REGION; com.google.javascript.jscomp.LightweightMessageFormatter lightweightMessageFormatter91 = new com.google.javascript.jscomp.LightweightMessageFormatter((com.google.javascript.jscomp.SourceExcerptProvider) compiler80, sourceExcerpt90); com.google.javascript.jscomp.Scope scope92 = compiler80.getTopScope(); com.google.javascript.jscomp.SyntacticScopeCreator.RedeclarationHandler redeclarationHandler93 = null; com.google.javascript.jscomp.SyntacticScopeCreator syntacticScopeCreator94 = new com.google.javascript.jscomp.SyntacticScopeCreator((com.google.javascript.jscomp.AbstractCompiler) compiler80, redeclarationHandler93); com.google.javascript.jscomp.NodeTraversal nodeTraversal95 = new com.google.javascript.jscomp.NodeTraversal((com.google.javascript.jscomp.AbstractCompiler) compiler0, (com.google.javascript.jscomp.NodeTraversal.Callback) checkGlobalThis40, (com.google.javascript.jscomp.ScopeCreator) syntacticScopeCreator94); }
Code: public boolean shouldTraverse(NodeTraversal t, Node n, Node parent) { if (n.getType() == Token.FUNCTION) { JSDocInfo jsDoc = getFunctionJsDocInfo(n); if (jsDoc != null && (jsDoc.isConstructor() || jsDoc.hasThisType())) { return false; } int pType = parent.getType(); if (!(pType == Token.BLOCK || pType == Token.SCRIPT || pType == Token.NAME || pType == Token.ASSIGN)) { return false; } } if (parent != null && parent.getType() == Token.ASSIGN) { Node lhs = parent.getFirstChild(); Node rhs = lhs.getNext(); if (n == lhs) { if (assignLhsChild == null) { assignLhsChild = lhs; } } else { if (lhs.getType() == Token.GETPROP) { if (lhs.getLastChild().getString().equals("prototype")) { return false; } String leftName = lhs.getQualifiedName(); if (leftName != null && leftName.contains(".prototype.")) { return false; } } } } return true; }
tensor([[0.0057, 0.0134, 0.0088,  ..., 0.0063, 0.0038, 0.0026],
        [0.0038, 0.0195, 0.0073,  ..., 0.0064, 0.0033, 0.0018],
        [0.0041, 0.0177, 0.0098,  ..., 0.0062, 0.0037, 0.0015],
        ...,
        [0.0037, 0.0168, 0.0096,  ..., 0.0052, 0.0029, 0.0022],
        [0.0046, 0.0218, 0.0105,  ..., 0.0060, 0.0044, 0.0019],
        [0.0039, 0.0140, 0.0099,  ..., 0.0085, 0.0053, 0.0021]])