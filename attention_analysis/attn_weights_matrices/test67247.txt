67247
Test: public void test52() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test52"); com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig deserializerFactoryConfig0 = null; com.fasterxml.jackson.databind.deser.BeanDeserializerFactory beanDeserializerFactory1 = new com.fasterxml.jackson.databind.deser.BeanDeserializerFactory(deserializerFactoryConfig0); com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl impl2 = new com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl((com.fasterxml.jackson.databind.deser.DeserializerFactory) beanDeserializerFactory1); com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig deserializerFactoryConfig3 = null; com.fasterxml.jackson.databind.deser.BeanDeserializerFactory beanDeserializerFactory4 = new com.fasterxml.jackson.databind.deser.BeanDeserializerFactory(deserializerFactoryConfig3); com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl impl5 = new com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.Impl((com.fasterxml.jackson.databind.deser.DeserializerFactory) beanDeserializerFactory4); com.fasterxml.jackson.databind.deser.DefaultDeserializationContext defaultDeserializationContext6 = impl2.with((com.fasterxml.jackson.databind.deser.DeserializerFactory) beanDeserializerFactory4); com.fasterxml.jackson.databind.ser.std.SqlTimeSerializer sqlTimeSerializer7 = new com.fasterxml.jackson.databind.ser.std.SqlTimeSerializer(); java.text.DateFormat dateFormat9 = null; com.fasterxml.jackson.databind.ser.std.DateSerializer dateSerializer10 = new com.fasterxml.jackson.databind.ser.std.DateSerializer((java.lang.Boolean) true, dateFormat9); java.lang.Class<java.util.Date> dateClass11 = dateSerializer10.handledType(); java.util.Date date12 = null; long long13 = dateSerializer10._timestamp(date12); com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = sqlTimeSerializer7.withFilterId((java.lang.Object) date12); com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper15 = null; com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder stdTypeResolverBuilder16 = com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.noTypeInfoBuilder(); com.fasterxml.jackson.databind.DeserializationConfig deserializationConfig17 = null; com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer inetSocketAddressSerializer18 = new com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer(); java.lang.Class<java.net.InetSocketAddress> inetSocketAddressClass19 = inetSocketAddressSerializer18.handledType(); boolean boolean20 = com.fasterxml.jackson.databind.util.ClassUtil.isNonStaticInnerClass(inetSocketAddressClass19); com.fasterxml.jackson.databind.type.SimpleType simpleType21 = com.fasterxml.jackson.databind.type.SimpleType.construct(inetSocketAddressClass19); com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray22 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {}; java.util.ArrayList<com.fasterxml.jackson.databind.jsontype.NamedType> namedTypeList23 = new java.util.ArrayList<com.fasterxml.jackson.databind.jsontype.NamedType>(); boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.fasterxml.jackson.databind.jsontype.NamedType>) namedTypeList23, namedTypeArray22); com.fasterxml.jackson.databind.jsontype.TypeDeserializer typeDeserializer25 = stdTypeResolverBuilder16.buildTypeDeserializer(deserializationConfig17, (com.fasterxml.jackson.databind.JavaType) simpleType21, (java.util.Collection<com.fasterxml.jackson.databind.jsontype.NamedType>) namedTypeList23); sqlTimeSerializer7.acceptJsonFormatVisitor(jsonFormatVisitorWrapper15, (com.fasterxml.jackson.databind.JavaType) simpleType21); com.fasterxml.jackson.databind.jsontype.TypeDeserializer typeDeserializer27 = null; com.fasterxml.jackson.databind.JavaType javaType28 = null; com.fasterxml.jackson.databind.JavaType javaType29 = null; com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer untypedObjectDeserializer30 = new com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer(javaType28, javaType29); java.lang.Object obj31 = untypedObjectDeserializer30.getNullValue(); java.lang.Object obj32 = untypedObjectDeserializer30.getEmptyValue(); com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer atomicReferenceDeserializer33 = new com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer((com.fasterxml.jackson.databind.JavaType) simpleType21, typeDeserializer27, (com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>) untypedObjectDeserializer30); com.fasterxml.jackson.databind.ObjectMapper objectMapper34 = null; com.fasterxml.jackson.databind.MappingJsonFactory mappingJsonFactory35 = new com.fasterxml.jackson.databind.MappingJsonFactory(objectMapper34); com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider36 = null; com.fasterxml.jackson.databind.deser.DefaultDeserializationContext defaultDeserializationContext37 = null; com.fasterxml.jackson.databind.ObjectMapper objectMapper38 = new com.fasterxml.jackson.databind.ObjectMapper((com.fasterxml.jackson.core.JsonFactory) mappingJsonFactory35, defaultSerializerProvider36, defaultDeserializationContext37); com.fasterxml.jackson.databind.MapperFeature[] mapperFeatureArray39 = new com.fasterxml.jackson.databind.MapperFeature[] {}; com.fasterxml.jackson.databind.ObjectMapper objectMapper40 = objectMapper38.enable(mapperFeatureArray39); com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory42 = new com.fasterxml.jackson.databind.node.JsonNodeFactory(true); com.fasterxml.jackson.databind.ObjectMapper objectMapper43 = objectMapper40.setNodeFactory(jsonNodeFactory42); com.fasterxml.jackson.databind.DeserializationContext deserializationContext44 = objectMapper43.getDeserializationContext(); com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer inetSocketAddressSerializer45 = new com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer(); java.lang.Class<java.net.InetSocketAddress> inetSocketAddressClass46 = inetSocketAddressSerializer45.handledType(); com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer stdKeyDeserializer47 = com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.forType(inetSocketAddressClass46); boolean boolean48 = com.fasterxml.jackson.databind.util.ClassUtil.isJacksonStdImpl(inetSocketAddressClass46); java.lang.Class<?> wildcardClass49 = com.fasterxml.jackson.databind.util.ClassUtil.getEnclosingClass(inetSocketAddressClass46); java.lang.Class<?> wildcardClass50 = com.fasterxml.jackson.databind.util.ClassUtil.getOuterClass(inetSocketAddressClass46); java.lang.String str51 = com.fasterxml.jackson.databind.util.ClassUtil.getPackageName(inetSocketAddressClass46); com.fasterxml.jackson.databind.JsonMappingException jsonMappingException53 = deserializationContext44.instantiationException(inetSocketAddressClass46, "hi!"); com.fasterxml.jackson.databind.BeanProperty beanProperty54 = null; com.fasterxml.jackson.databind.JsonDeserializer<?> wildcardJsonDeserializer55 = atomicReferenceDeserializer33.createContextual(deserializationContext44, beanProperty54); com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder stdTypeResolverBuilder56 = com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.noTypeInfoBuilder(); com.fasterxml.jackson.databind.DeserializationConfig deserializationConfig57 = null; com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer inetSocketAddressSerializer58 = new com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer(); java.lang.Class<java.net.InetSocketAddress> inetSocketAddressClass59 = inetSocketAddressSerializer58.handledType(); boolean boolean60 = com.fasterxml.jackson.databind.util.ClassUtil.isNonStaticInnerClass(inetSocketAddressClass59); com.fasterxml.jackson.databind.type.SimpleType simpleType61 = com.fasterxml.jackson.databind.type.SimpleType.construct(inetSocketAddressClass59); com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray62 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {}; java.util.ArrayList<com.fasterxml.jackson.databind.jsontype.NamedType> namedTypeList63 = new java.util.ArrayList<com.fasterxml.jackson.databind.jsontype.NamedType>(); boolean boolean64 = java.util.Collections.addAll((java.util.Collection<com.fasterxml.jackson.databind.jsontype.NamedType>) namedTypeList63, namedTypeArray62); com.fasterxml.jackson.databind.jsontype.TypeDeserializer typeDeserializer65 = stdTypeResolverBuilder56.buildTypeDeserializer(deserializationConfig57, (com.fasterxml.jackson.databind.JavaType) simpleType61, (java.util.Collection<com.fasterxml.jackson.databind.jsontype.NamedType>) namedTypeList63); java.lang.String str66 = simpleType61.toCanonical(); com.fasterxml.jackson.databind.type.TypeBindings typeBindings67 = null; com.fasterxml.jackson.databind.type.ArrayType arrayType68 = com.fasterxml.jackson.databind.type.ArrayType.construct((com.fasterxml.jackson.databind.JavaType) simpleType61, typeBindings67); com.fasterxml.jackson.databind.BeanDescription beanDescription69 = null; try { com.fasterxml.jackson.databind.JsonDeserializer<?> wildcardJsonDeserializer70 = beanDeserializerFactory4.createArrayDeserializer(deserializationContext44, arrayType68, beanDescription69); } catch (java.lang.NullPointerException e) { } }
Code: public JsonSerializer<?> createContextual(SerializerProvider serializers, BeanProperty property) throws JsonMappingException { if (property == null) { return this; } JsonFormat.Value format = findFormatOverrides(serializers, property, handledType()); if (format == null) { return this; } JsonFormat.Shape shape = format.getShape(); if (shape.isNumeric()) { return withFormat(Boolean.TRUE, null); } if ((shape == JsonFormat.Shape.STRING) || format.hasPattern() || format.hasLocale() || format.hasTimeZone()) { TimeZone tz = format.getTimeZone(); final String pattern = format.hasPattern() ? format.getPattern() : StdDateFormat.DATE_FORMAT_STR_ISO8601; final Locale loc = format.hasLocale() ? format.getLocale() : serializers.getLocale(); SimpleDateFormat df = new SimpleDateFormat(pattern, loc); if (tz == null) { tz = serializers.getTimeZone(); } df.setTimeZone(tz); return withFormat(Boolean.FALSE, df); } return this; }
tensor([[0.0079, 0.0358, 0.0047,  ..., 0.0088, 0.0071, 0.0035],
        [0.0080, 0.0387, 0.0050,  ..., 0.0093, 0.0063, 0.0042],
        [0.0065, 0.0551, 0.0049,  ..., 0.0085, 0.0060, 0.0031],
        ...,
        [0.0054, 0.0600, 0.0036,  ..., 0.0079, 0.0050, 0.0030],
        [0.0085, 0.0306, 0.0053,  ..., 0.0103, 0.0054, 0.0037],
        [0.0057, 0.0379, 0.0054,  ..., 0.0122, 0.0053, 0.0030]])