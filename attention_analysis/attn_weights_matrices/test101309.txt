101309
Test: public void test222() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test222"); org.joda.time.ReadableInterval readableInterval1 = null; org.joda.time.ReadableInterval readableInterval2 = org.joda.time.DateTimeUtils.getReadableInterval(readableInterval1); org.joda.time.ReadableInstant readableInstant3 = null; boolean boolean4 = readableInterval2.contains(readableInstant3); org.joda.time.DateTime dateTime5 = readableInterval2.getStart(); org.joda.time.ReadableInterval readableInterval6 = null; org.joda.time.ReadableInterval readableInterval7 = org.joda.time.DateTimeUtils.getReadableInterval(readableInterval6); org.joda.time.ReadableInstant readableInstant8 = null; boolean boolean9 = readableInterval7.contains(readableInstant8); org.joda.time.DateTime dateTime10 = readableInterval7.getStart(); java.util.Date date11 = dateTime10.toDate(); boolean boolean12 = dateTime5.isBefore((org.joda.time.ReadableInstant) dateTime10); org.joda.time.DateTimeZone dateTimeZone13 = dateTime5.getZone(); org.joda.time.MutableDateTime mutableDateTime14 = new org.joda.time.MutableDateTime((long) (short) 100, dateTimeZone13); mutableDateTime14.addWeeks(0); org.joda.time.ReadableInterval readableInterval18 = null; org.joda.time.ReadableInterval readableInterval19 = org.joda.time.DateTimeUtils.getReadableInterval(readableInterval18); org.joda.time.ReadableInstant readableInstant20 = null; boolean boolean21 = readableInterval19.contains(readableInstant20); org.joda.time.DateTime dateTime22 = readableInterval19.getStart(); org.joda.time.ReadableInterval readableInterval23 = null; org.joda.time.ReadableInterval readableInterval24 = org.joda.time.DateTimeUtils.getReadableInterval(readableInterval23); org.joda.time.ReadableInstant readableInstant25 = null; boolean boolean26 = readableInterval24.contains(readableInstant25); org.joda.time.DateTime dateTime27 = readableInterval24.getStart(); java.util.Date date28 = dateTime27.toDate(); boolean boolean29 = dateTime22.isBefore((org.joda.time.ReadableInstant) dateTime27); org.joda.time.DateTimeZone dateTimeZone30 = dateTime22.getZone(); org.joda.time.MutableDateTime mutableDateTime31 = new org.joda.time.MutableDateTime((long) (short) 100, dateTimeZone30); java.util.TimeZone timeZone32 = dateTimeZone30.toTimeZone(); mutableDateTime14.setZone(dateTimeZone30); org.joda.time.ReadablePeriod readablePeriod34 = null; mutableDateTime14.add(readablePeriod34, 0); java.util.Locale locale37 = null; java.util.Calendar calendar38 = mutableDateTime14.toCalendar(locale37); }
Code: public void add(DurationFieldType type, int amount) { if (type == null) { throw new IllegalArgumentException("Field must not be null"); } setMillis(type.getField(getChronology()).add(getMillis(), amount)); }
tensor([[0.0397, 0.0321, 0.0674, 0.0400, 0.0250, 0.0688, 0.0534, 0.1070, 0.0158,
         0.0624, 0.0212, 0.0534, 0.0400, 0.0200, 0.0131, 0.0928, 0.0370, 0.0345,
         0.0599, 0.0170, 0.0487, 0.0338, 0.0170],
        [0.0348, 0.0293, 0.0779, 0.0390, 0.0188, 0.0596, 0.0558, 0.1151, 0.0122,
         0.0512, 0.0176, 0.0558, 0.0397, 0.0157, 0.0098, 0.1287, 0.0276, 0.0391,
         0.0448, 0.0172, 0.0564, 0.0365, 0.0172],
        [0.0287, 0.0262, 0.0754, 0.0503, 0.0165, 0.0706, 0.0518, 0.1084, 0.0128,
         0.0566, 0.0148, 0.0518, 0.0423, 0.0184, 0.0132, 0.1345, 0.0329, 0.0374,
         0.0406, 0.0125, 0.0580, 0.0338, 0.0125],
        [0.0299, 0.0208, 0.0794, 0.0457, 0.0166, 0.0795, 0.0664, 0.1529, 0.0103,
         0.0577, 0.0175, 0.0664, 0.0349, 0.0178, 0.0093, 0.0898, 0.0230, 0.0419,
         0.0450, 0.0099, 0.0466, 0.0288, 0.0099],
        [0.0265, 0.0226, 0.0702, 0.0509, 0.0199, 0.0655, 0.0557, 0.1527, 0.0091,
         0.0689, 0.0164, 0.0557, 0.0344, 0.0143, 0.0123, 0.1026, 0.0194, 0.0402,
         0.0484, 0.0125, 0.0625, 0.0269, 0.0125],
        [0.0354, 0.0248, 0.0779, 0.0440, 0.0219, 0.0744, 0.0668, 0.1147, 0.0150,
         0.0558, 0.0225, 0.0668, 0.0364, 0.0204, 0.0127, 0.1007, 0.0262, 0.0412,
         0.0372, 0.0127, 0.0469, 0.0330, 0.0127],
        [0.0412, 0.0355, 0.0741, 0.0477, 0.0203, 0.0803, 0.0609, 0.0718, 0.0187,
         0.0454, 0.0277, 0.0609, 0.0374, 0.0238, 0.0204, 0.0906, 0.0361, 0.0414,
         0.0520, 0.0223, 0.0397, 0.0293, 0.0223],
        [0.0269, 0.0196, 0.1009, 0.0443, 0.0137, 0.0907, 0.0512, 0.1498, 0.0063,
         0.0571, 0.0104, 0.0512, 0.0253, 0.0102, 0.0059, 0.1429, 0.0214, 0.0335,
         0.0398, 0.0081, 0.0571, 0.0256, 0.0081],
        [0.0319, 0.0236, 0.0812, 0.0440, 0.0245, 0.0684, 0.0596, 0.1155, 0.0099,
         0.0695, 0.0122, 0.0596, 0.0346, 0.0158, 0.0098, 0.1217, 0.0238, 0.0407,
         0.0396, 0.0106, 0.0661, 0.0268, 0.0106],
        [0.0249, 0.0258, 0.0981, 0.0372, 0.0159, 0.0578, 0.0601, 0.1379, 0.0088,
         0.0625, 0.0163, 0.0601, 0.0299, 0.0164, 0.0090, 0.1473, 0.0215, 0.0358,
         0.0381, 0.0125, 0.0497, 0.0216, 0.0125],
        [0.0323, 0.0243, 0.0883, 0.0403, 0.0184, 0.0574, 0.0660, 0.1485, 0.0094,
         0.0623, 0.0208, 0.0660, 0.0298, 0.0133, 0.0103, 0.1036, 0.0288, 0.0333,
         0.0436, 0.0106, 0.0485, 0.0335, 0.0106],
        [0.0412, 0.0355, 0.0741, 0.0477, 0.0203, 0.0803, 0.0609, 0.0718, 0.0187,
         0.0454, 0.0277, 0.0609, 0.0374, 0.0238, 0.0204, 0.0906, 0.0361, 0.0414,
         0.0520, 0.0223, 0.0397, 0.0293, 0.0223],
        [0.0305, 0.0248, 0.0770, 0.0382, 0.0188, 0.0669, 0.0748, 0.1051, 0.0109,
         0.0466, 0.0179, 0.0748, 0.0362, 0.0167, 0.0103, 0.1405, 0.0259, 0.0421,
         0.0465, 0.0126, 0.0478, 0.0225, 0.0126],
        [0.0329, 0.0297, 0.0849, 0.0334, 0.0218, 0.0681, 0.0591, 0.1122, 0.0122,
         0.0612, 0.0186, 0.0591, 0.0369, 0.0215, 0.0143, 0.1155, 0.0248, 0.0429,
         0.0438, 0.0172, 0.0422, 0.0305, 0.0172],
        [0.0393, 0.0252, 0.0806, 0.0435, 0.0207, 0.0647, 0.0602, 0.1017, 0.0121,
         0.0573, 0.0204, 0.0602, 0.0319, 0.0221, 0.0166, 0.1072, 0.0279, 0.0410,
         0.0507, 0.0165, 0.0491, 0.0346, 0.0165],
        [0.0306, 0.0253, 0.0651, 0.0462, 0.0202, 0.0617, 0.0662, 0.1144, 0.0146,
         0.0506, 0.0215, 0.0662, 0.0403, 0.0230, 0.0128, 0.0985, 0.0243, 0.0548,
         0.0477, 0.0153, 0.0537, 0.0317, 0.0153],
        [0.0293, 0.0294, 0.0616, 0.0442, 0.0220, 0.0670, 0.0601, 0.0992, 0.0163,
         0.0612, 0.0226, 0.0601, 0.0379, 0.0188, 0.0147, 0.1012, 0.0268, 0.0423,
         0.0565, 0.0171, 0.0563, 0.0383, 0.0171],
        [0.0340, 0.0279, 0.0844, 0.0381, 0.0249, 0.0770, 0.0481, 0.1134, 0.0099,
         0.0550, 0.0208, 0.0481, 0.0306, 0.0158, 0.0108, 0.1177, 0.0279, 0.0430,
         0.0566, 0.0165, 0.0547, 0.0283, 0.0165],
        [0.0401, 0.0252, 0.0723, 0.0410, 0.0238, 0.0667, 0.0550, 0.1200, 0.0132,
         0.0581, 0.0199, 0.0550, 0.0381, 0.0193, 0.0125, 0.0991, 0.0315, 0.0348,
         0.0633, 0.0136, 0.0498, 0.0340, 0.0136],
        [0.0306, 0.0271, 0.0634, 0.0402, 0.0237, 0.0826, 0.0662, 0.1153, 0.0090,
         0.0519, 0.0196, 0.0662, 0.0391, 0.0171, 0.0114, 0.0872, 0.0296, 0.0529,
         0.0553, 0.0148, 0.0525, 0.0294, 0.0148],
        [0.0296, 0.0276, 0.0657, 0.0511, 0.0162, 0.0747, 0.0606, 0.1130, 0.0119,
         0.0516, 0.0221, 0.0606, 0.0410, 0.0194, 0.0133, 0.1114, 0.0257, 0.0460,
         0.0452, 0.0153, 0.0549, 0.0279, 0.0153],
        [0.0378, 0.0294, 0.0728, 0.0490, 0.0236, 0.0708, 0.0496, 0.0852, 0.0131,
         0.0649, 0.0198, 0.0496, 0.0394, 0.0208, 0.0173, 0.1098, 0.0327, 0.0394,
         0.0505, 0.0194, 0.0591, 0.0266, 0.0194],
        [0.0306, 0.0271, 0.0634, 0.0402, 0.0237, 0.0826, 0.0662, 0.1153, 0.0090,
         0.0519, 0.0196, 0.0662, 0.0391, 0.0171, 0.0114, 0.0872, 0.0296, 0.0529,
         0.0553, 0.0148, 0.0525, 0.0294, 0.0148]])