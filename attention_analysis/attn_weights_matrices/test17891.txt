17891
Test: public void testGetScopeRoot() { Compiler compiler = new Compiler(); NodeTraversal t = new NodeTraversal(compiler, new NodeTraversal.ScopedCallback() { @Override public void enterScope(NodeTraversal t) { Node root1 = t.getScopeRoot(); Node root2 = t.getScope().getRootNode(); } @Override public void exitScope(NodeTraversal t) { } @Override public boolean shouldTraverse(NodeTraversal t, Node n, Node parent) { return true; } @Override public void visit(NodeTraversal t, Node n, Node parent) { } } ); String code = "" + "var a; " + "function foo() {" + " var b" + "}"; Node tree = parse(compiler, code); t.traverse(tree); }
Code: public void enterScope(NodeTraversal t) { if (t.inGlobalScope()) { return; } referenceStack.push(referencedNames); referencedNames = Sets.newHashSet(); }
[[0.04053073 0.03400695 0.29436693 0.02081406 0.06386027 0.11024876
 0.05022265 0.06386027 0.04266903 0.01941688 0.11528689 0.04155033
 0.02612947 0.05761995 0.01941688]
[0.02846843 0.02884826 0.35832068 0.01305118 0.06795927 0.09755598
 0.03234197 0.06795927 0.03717357 0.0199274  0.11146008 0.0291275
 0.02627454 0.06160448 0.0199274 ]
[0.0265869  0.02216423 0.36841217 0.01293533 0.06100153 0.11909865
 0.05444789 0.06100153 0.03647907 0.01234836 0.10641734 0.02638992
 0.02268874 0.05768003 0.01234836]
[0.02249055 0.02176383 0.3544677  0.01270933 0.08727531 0.11214896
 0.03618063 0.08727531 0.03650865 0.01188532 0.08467837 0.0265017
 0.02361916 0.07060988 0.01188532]
[0.04752801 0.04192439 0.2534293  0.02437878 0.08156458 0.08117984
 0.04278324 0.08156458 0.0501533  0.02793776 0.084224   0.03880534
 0.03980044 0.07678865 0.02793776]
[0.01990243 0.01791023 0.4430843  0.00694014 0.06591173 0.12121332
 0.02966657 0.06591173 0.03889287 0.00913789 0.08507535 0.01610717
 0.01764476 0.05346356 0.00913788]
[0.02909906 0.02157891 0.3886334  0.01257108 0.07381509 0.09809201
 0.03841417 0.07381509 0.03567781 0.01582588 0.08611931 0.02652464
 0.02059715 0.06341045 0.01582588]
[0.04752801 0.04192439 0.2534293  0.02437878 0.08156458 0.08117984
 0.04278324 0.08156458 0.0501533  0.02793776 0.084224   0.03880534
 0.03980044 0.07678865 0.02793776]
[0.02887922 0.02183811 0.3348751  0.01406785 0.0702996  0.12335785
 0.04027124 0.0702996  0.04149709 0.01524919 0.1051302  0.03464995
 0.02345375 0.06088207 0.01524919]
[0.03079686 0.02949267 0.255208   0.01998338 0.08851338 0.1209074
 0.04345521 0.08851338 0.03734995 0.01859614 0.11109845 0.04138575
 0.02886566 0.06723759 0.01859614]
[0.04295678 0.0334012  0.28113154 0.02133121 0.08216128 0.10907908
 0.04720439 0.08216128 0.04015129 0.01727462 0.09633906 0.03606535
 0.0290367  0.06443161 0.01727462]
[0.03124966 0.02950252 0.29000175 0.01655856 0.08148591 0.1346058
 0.04909874 0.08148591 0.03310527 0.01265592 0.09616986 0.03439125
 0.02609347 0.07093943 0.01265592]
[0.05201571 0.04284924 0.1923385  0.03426368 0.06086569 0.115557
 0.0616119  0.06086569 0.05706385 0.02600391 0.11566679 0.03994331
 0.04373658 0.07121427 0.02600391]
[0.03262917 0.02831246 0.3173369  0.0177297  0.07498267 0.11487582
 0.051135   0.07498267 0.030747   0.01822316 0.09976789 0.03425204
 0.02796216 0.05884029 0.01822315]
[0.03079685 0.02949267 0.25520808 0.01998338 0.08851339 0.12090738
 0.04345521 0.08851339 0.03734995 0.01859614 0.11109844 0.04138575
 0.02886566 0.0672376  0.01859614]]