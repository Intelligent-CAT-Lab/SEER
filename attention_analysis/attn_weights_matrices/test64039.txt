64039
Test: public void test135() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test135"); com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer bytesToNameCanonicalizer0 = com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer.createRoot(); boolean boolean1 = bytesToNameCanonicalizer0.maybeDirty(); com.fasterxml.jackson.core.util.BufferRecycler bufferRecycler2 = null; com.fasterxml.jackson.core.io.IOContext iOContext5 = new com.fasterxml.jackson.core.io.IOContext(bufferRecycler2, (java.lang.Object) 0.0f, true); com.fasterxml.jackson.core.JsonEncoding jsonEncoding6 = com.fasterxml.jackson.core.JsonEncoding.UTF16_BE; java.lang.String str7 = jsonEncoding6.getJavaName(); com.fasterxml.jackson.core.io.IOContext iOContext8 = iOContext5.withEncoding(jsonEncoding6); com.fasterxml.jackson.core.util.BufferRecycler bufferRecycler10 = null; com.fasterxml.jackson.core.io.IOContext iOContext13 = new com.fasterxml.jackson.core.io.IOContext(bufferRecycler10, (java.lang.Object) 0.0f, true); com.fasterxml.jackson.core.JsonEncoding jsonEncoding14 = iOContext13.getEncoding(); java.io.InputStream inputStream15 = null; byte[] byteArray16 = com.fasterxml.jackson.core.json.UTF8JsonGenerator.HEX_CHARS; com.fasterxml.jackson.core.io.MergedStream mergedStream19 = new com.fasterxml.jackson.core.io.MergedStream(iOContext13, inputStream15, byteArray16, (int) '4', (-1)); boolean boolean20 = mergedStream19.markSupported(); int int21 = mergedStream19.available(); com.fasterxml.jackson.core.ObjectCodec objectCodec22 = null; com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer byteQuadsCanonicalizer23 = com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.createRoot(); java.lang.String str24 = byteQuadsCanonicalizer23.toString(); int int25 = byteQuadsCanonicalizer23.totalCount(); int int26 = byteQuadsCanonicalizer23.bucketCount(); byte[] byteArray27 = com.fasterxml.jackson.core.io.CharTypes.copyHexBytes(); com.fasterxml.jackson.core.json.UTF8StreamJsonParser uTF8StreamJsonParser31 = new com.fasterxml.jackson.core.json.UTF8StreamJsonParser(iOContext8, (int) (byte) -17, (java.io.InputStream) mergedStream19, objectCodec22, byteQuadsCanonicalizer23, byteArray27, (-1695542384), 208279835, false); java.lang.String str33 = uTF8StreamJsonParser31.getValueAsString("UTF-8"); int[] intArray34 = com.fasterxml.jackson.core.io.CharTypes.get7BitOutputEscapes(); uTF8StreamJsonParser31._quadBuffer = intArray34; try { int int37 = bytesToNameCanonicalizer0.calcHash(intArray34, 0); } catch (java.lang.IllegalArgumentException e) { } }
Code: public final String getValueAsString() throws IOException { if (_currToken == JsonToken.VALUE_STRING) { if (_tokenIncomplete) { _tokenIncomplete = false; _finishString(); } return _textBuffer.contentsAsString(); } return super.getValueAsString(null); }
tensor([[0.0272, 0.0221, 0.0346, 0.0361, 0.0628, 0.0146, 0.0383, 0.0734, 0.0270,
         0.0422, 0.0166, 0.0383, 0.0734, 0.0285, 0.0383, 0.0875, 0.0172, 0.0381,
         0.1446, 0.0120, 0.0302, 0.0288, 0.0120, 0.0302, 0.0139, 0.0120],
        [0.0245, 0.0164, 0.0381, 0.0335, 0.0647, 0.0153, 0.0414, 0.0819, 0.0248,
         0.0363, 0.0135, 0.0414, 0.0819, 0.0291, 0.0414, 0.0830, 0.0190, 0.0333,
         0.1529, 0.0082, 0.0357, 0.0220, 0.0082, 0.0357, 0.0098, 0.0082],
        [0.0286, 0.0217, 0.0332, 0.0476, 0.0769, 0.0160, 0.0414, 0.0832, 0.0303,
         0.0368, 0.0144, 0.0414, 0.0832, 0.0307, 0.0414, 0.0801, 0.0194, 0.0371,
         0.1120, 0.0106, 0.0288, 0.0223, 0.0106, 0.0288, 0.0130, 0.0106],
        [0.0233, 0.0231, 0.0394, 0.0478, 0.0647, 0.0174, 0.0428, 0.0682, 0.0282,
         0.0410, 0.0134, 0.0428, 0.0682, 0.0302, 0.0428, 0.1010, 0.0146, 0.0403,
         0.1272, 0.0105, 0.0275, 0.0253, 0.0105, 0.0275, 0.0115, 0.0105],
        [0.0171, 0.0141, 0.0319, 0.0311, 0.0816, 0.0112, 0.0428, 0.0762, 0.0227,
         0.0261, 0.0086, 0.0428, 0.0762, 0.0322, 0.0428, 0.0626, 0.0152, 0.0317,
         0.2253, 0.0083, 0.0282, 0.0193, 0.0083, 0.0282, 0.0074, 0.0083],
        [0.0219, 0.0186, 0.0384, 0.0282, 0.0848, 0.0119, 0.0369, 0.0891, 0.0248,
         0.0430, 0.0117, 0.0369, 0.0891, 0.0298, 0.0369, 0.0951, 0.0170, 0.0370,
         0.1293, 0.0080, 0.0311, 0.0227, 0.0080, 0.0311, 0.0107, 0.0080],
        [0.0311, 0.0305, 0.0467, 0.0482, 0.0555, 0.0206, 0.0480, 0.0539, 0.0275,
         0.0338, 0.0190, 0.0480, 0.0539, 0.0301, 0.0480, 0.0560, 0.0258, 0.0466,
         0.1069, 0.0172, 0.0361, 0.0299, 0.0172, 0.0361, 0.0159, 0.0172],
        [0.0140, 0.0120, 0.0290, 0.0226, 0.0802, 0.0102, 0.0352, 0.0810, 0.0223,
         0.0265, 0.0052, 0.0352, 0.0810, 0.0267, 0.0352, 0.0939, 0.0114, 0.0283,
         0.2734, 0.0052, 0.0188, 0.0184, 0.0052, 0.0188, 0.0050, 0.0052],
        [0.0257, 0.0190, 0.0322, 0.0372, 0.0786, 0.0139, 0.0406, 0.0863, 0.0283,
         0.0336, 0.0131, 0.0406, 0.0863, 0.0320, 0.0406, 0.0784, 0.0136, 0.0371,
         0.1354, 0.0086, 0.0333, 0.0225, 0.0086, 0.0333, 0.0127, 0.0086],
        [0.0145, 0.0138, 0.0381, 0.0304, 0.0669, 0.0117, 0.0402, 0.0793, 0.0287,
         0.0352, 0.0072, 0.0402, 0.0793, 0.0293, 0.0402, 0.0733, 0.0152, 0.0277,
         0.2249, 0.0081, 0.0240, 0.0241, 0.0081, 0.0240, 0.0073, 0.0081],
        [0.0200, 0.0211, 0.0392, 0.0328, 0.0716, 0.0129, 0.0372, 0.0766, 0.0282,
         0.0361, 0.0161, 0.0372, 0.0766, 0.0295, 0.0372, 0.0901, 0.0194, 0.0349,
         0.1437, 0.0101, 0.0311, 0.0357, 0.0101, 0.0311, 0.0111, 0.0101],
        [0.0311, 0.0305, 0.0467, 0.0482, 0.0555, 0.0206, 0.0480, 0.0539, 0.0275,
         0.0338, 0.0190, 0.0480, 0.0539, 0.0301, 0.0480, 0.0560, 0.0258, 0.0466,
         0.1069, 0.0172, 0.0361, 0.0299, 0.0172, 0.0361, 0.0159, 0.0172],
        [0.0140, 0.0120, 0.0290, 0.0226, 0.0802, 0.0102, 0.0352, 0.0810, 0.0223,
         0.0265, 0.0052, 0.0352, 0.0810, 0.0267, 0.0352, 0.0939, 0.0114, 0.0283,
         0.2734, 0.0052, 0.0188, 0.0184, 0.0052, 0.0188, 0.0050, 0.0052],
        [0.0213, 0.0173, 0.0356, 0.0294, 0.0677, 0.0148, 0.0417, 0.0690, 0.0281,
         0.0327, 0.0127, 0.0417, 0.0690, 0.0329, 0.0417, 0.0912, 0.0167, 0.0416,
         0.1720, 0.0089, 0.0318, 0.0227, 0.0089, 0.0318, 0.0098, 0.0089],
        [0.0311, 0.0305, 0.0467, 0.0482, 0.0555, 0.0206, 0.0480, 0.0539, 0.0275,
         0.0338, 0.0190, 0.0480, 0.0539, 0.0301, 0.0480, 0.0560, 0.0258, 0.0466,
         0.1069, 0.0172, 0.0361, 0.0299, 0.0172, 0.0361, 0.0159, 0.0172],
        [0.0252, 0.0254, 0.0385, 0.0381, 0.0696, 0.0163, 0.0381, 0.0761, 0.0299,
         0.0405, 0.0161, 0.0381, 0.0761, 0.0323, 0.0381, 0.0736, 0.0197, 0.0494,
         0.1287, 0.0110, 0.0292, 0.0249, 0.0110, 0.0292, 0.0140, 0.0110],
        [0.0350, 0.0295, 0.0418, 0.0382, 0.0528, 0.0218, 0.0379, 0.0772, 0.0289,
         0.0400, 0.0264, 0.0379, 0.0772, 0.0335, 0.0379, 0.0604, 0.0286, 0.0453,
         0.0720, 0.0168, 0.0381, 0.0320, 0.0168, 0.0381, 0.0189, 0.0168],
        [0.0301, 0.0224, 0.0435, 0.0380, 0.0635, 0.0185, 0.0396, 0.0623, 0.0285,
         0.0411, 0.0243, 0.0396, 0.0623, 0.0351, 0.0396, 0.0616, 0.0261, 0.0531,
         0.1040, 0.0161, 0.0344, 0.0324, 0.0161, 0.0344, 0.0172, 0.0161],
        [0.0152, 0.0169, 0.0411, 0.0307, 0.0699, 0.0111, 0.0411, 0.0777, 0.0315,
         0.0319, 0.0104, 0.0411, 0.0777, 0.0277, 0.0411, 0.1047, 0.0164, 0.0333,
         0.1793, 0.0061, 0.0234, 0.0255, 0.0061, 0.0234, 0.0106, 0.0061],
        [0.0189, 0.0167, 0.0346, 0.0282, 0.0798, 0.0143, 0.0444, 0.0719, 0.0220,
         0.0324, 0.0161, 0.0444, 0.0719, 0.0307, 0.0444, 0.0969, 0.0166, 0.0405,
         0.1333, 0.0098, 0.0400, 0.0202, 0.0098, 0.0400, 0.0123, 0.0098],
        [0.0180, 0.0167, 0.0384, 0.0373, 0.0655, 0.0144, 0.0367, 0.0734, 0.0244,
         0.0339, 0.0110, 0.0367, 0.0734, 0.0346, 0.0367, 0.0795, 0.0177, 0.0401,
         0.1891, 0.0100, 0.0259, 0.0314, 0.0100, 0.0259, 0.0093, 0.0100],
        [0.0229, 0.0225, 0.0331, 0.0379, 0.0630, 0.0178, 0.0421, 0.0693, 0.0279,
         0.0391, 0.0129, 0.0421, 0.0693, 0.0257, 0.0421, 0.0638, 0.0133, 0.0352,
         0.1744, 0.0095, 0.0409, 0.0245, 0.0095, 0.0409, 0.0110, 0.0095],
        [0.0189, 0.0167, 0.0346, 0.0282, 0.0798, 0.0143, 0.0444, 0.0719, 0.0220,
         0.0324, 0.0161, 0.0444, 0.0719, 0.0307, 0.0444, 0.0969, 0.0166, 0.0405,
         0.1333, 0.0098, 0.0400, 0.0202, 0.0098, 0.0400, 0.0123, 0.0098],
        [0.0180, 0.0167, 0.0384, 0.0373, 0.0655, 0.0144, 0.0367, 0.0734, 0.0244,
         0.0339, 0.0110, 0.0367, 0.0734, 0.0346, 0.0367, 0.0795, 0.0177, 0.0401,
         0.1891, 0.0100, 0.0259, 0.0314, 0.0100, 0.0259, 0.0093, 0.0100],
        [0.0192, 0.0200, 0.0345, 0.0307, 0.0597, 0.0158, 0.0356, 0.0692, 0.0266,
         0.0352, 0.0108, 0.0356, 0.0692, 0.0285, 0.0356, 0.0842, 0.0158, 0.0411,
         0.2065, 0.0108, 0.0299, 0.0253, 0.0108, 0.0299, 0.0087, 0.0108],
        [0.0189, 0.0167, 0.0346, 0.0282, 0.0798, 0.0143, 0.0444, 0.0719, 0.0220,
         0.0324, 0.0161, 0.0444, 0.0719, 0.0307, 0.0444, 0.0969, 0.0166, 0.0405,
         0.1333, 0.0098, 0.0400, 0.0202, 0.0098, 0.0400, 0.0123, 0.0098]])