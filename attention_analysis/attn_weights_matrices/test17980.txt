17980
Test: public void test5() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test5"); com.google.javascript.rhino.Node node1 = com.google.javascript.rhino.IR.name("[singleton]"); node1.setVarArgs(false); com.google.javascript.jscomp.Compiler compiler4 = new com.google.javascript.jscomp.Compiler(); com.google.javascript.rhino.Node node6 = compiler4.parseTestCode("NUMBER 2.0"); boolean boolean7 = compiler4.isTypeCheckingEnabled(); boolean boolean8 = com.google.javascript.jscomp.NodeUtil.mayHaveSideEffects(node1, (com.google.javascript.jscomp.AbstractCompiler) compiler4); com.google.javascript.jscomp.FlowSensitiveInlineVariables flowSensitiveInlineVariables9 = new com.google.javascript.jscomp.FlowSensitiveInlineVariables((com.google.javascript.jscomp.AbstractCompiler) compiler4); com.google.javascript.jscomp.AbstractCompiler abstractCompiler10 = null; com.google.javascript.jscomp.StrictModeCheck strictModeCheck11 = new com.google.javascript.jscomp.StrictModeCheck(abstractCompiler10); com.google.javascript.rhino.Node node13 = com.google.javascript.rhino.IR.name("[singleton]"); node13.setVarArgs(false); com.google.javascript.jscomp.Compiler compiler16 = new com.google.javascript.jscomp.Compiler(); com.google.javascript.rhino.Node node18 = compiler16.parseTestCode("NUMBER 2.0"); boolean boolean19 = compiler16.isTypeCheckingEnabled(); boolean boolean20 = com.google.javascript.jscomp.NodeUtil.mayHaveSideEffects(node13, (com.google.javascript.jscomp.AbstractCompiler) compiler16); com.google.javascript.jscomp.FlowSensitiveInlineVariables flowSensitiveInlineVariables21 = new com.google.javascript.jscomp.FlowSensitiveInlineVariables((com.google.javascript.jscomp.AbstractCompiler) compiler16); com.google.javascript.jscomp.PassFactory passFactory23 = com.google.javascript.jscomp.DefaultPassConfig.createEmptyPass(""); com.google.javascript.jscomp.Compiler compiler24 = new com.google.javascript.jscomp.Compiler(); com.google.javascript.jscomp.CompilerPass compilerPass25 = passFactory23.create((com.google.javascript.jscomp.AbstractCompiler) compiler24); com.google.javascript.rhino.Node node27 = new com.google.javascript.rhino.Node(15); compiler24.externAndJsRoot = node27; com.google.javascript.jscomp.PassFactory passFactory30 = com.google.javascript.jscomp.DefaultPassConfig.createEmptyPass(""); com.google.javascript.jscomp.Compiler compiler31 = new com.google.javascript.jscomp.Compiler(); com.google.javascript.jscomp.CompilerPass compilerPass32 = passFactory30.create((com.google.javascript.jscomp.AbstractCompiler) compiler31); com.google.javascript.rhino.Node node34 = new com.google.javascript.rhino.Node(15); compiler31.externAndJsRoot = node34; com.google.javascript.jscomp.CheckRegExp checkRegExp36 = new com.google.javascript.jscomp.CheckRegExp((com.google.javascript.jscomp.AbstractCompiler) compiler31); com.google.javascript.jscomp.NodeTraversal nodeTraversal37 = new com.google.javascript.jscomp.NodeTraversal((com.google.javascript.jscomp.AbstractCompiler) compiler24, (com.google.javascript.jscomp.NodeTraversal.Callback) checkRegExp36); boolean boolean38 = nodeTraversal37.inGlobalScope(); com.google.javascript.rhino.InputId inputId39 = nodeTraversal37.getInputId(); flowSensitiveInlineVariables21.exitScope(nodeTraversal37); com.google.javascript.rhino.Node node42 = com.google.javascript.rhino.IR.number((double) 2); java.lang.String str43 = node42.toString(); boolean boolean44 = node42.hasOneChild(); int int45 = node42.getCharno(); com.google.javascript.jscomp.GoogleCodingConvention googleCodingConvention46 = new com.google.javascript.jscomp.GoogleCodingConvention(); com.google.javascript.rhino.ErrorReporter errorReporter47 = null; com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry49 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter47, true); jSTypeRegistry49.incrementGeneration(); com.google.javascript.rhino.ErrorReporter errorReporter51 = null; com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry53 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter51, true); com.google.javascript.rhino.jstype.JSType[] jSTypeArray54 = new com.google.javascript.rhino.jstype.JSType[] {}; com.google.javascript.rhino.Node node55 = jSTypeRegistry53.createOptionalParameters(jSTypeArray54); com.google.javascript.rhino.Node node56 = jSTypeRegistry49.createParametersWithVarArgs(jSTypeArray54); boolean boolean57 = googleCodingConvention46.isPrototypeAlias(node56); strictModeCheck11.visit(nodeTraversal37, node42, node56); flowSensitiveInlineVariables9.exitScope(nodeTraversal37); }
Code: public void visit(NodeTraversal t, Node n, Node parent) { if (n.isName()) { Var dep = jsScope.getVar(n.getString()); if (dep == null) { def.unknownDependencies = true; } else { def.depends.add(dep); } } }
tensor([[0.0276, 0.0220, 0.0142, 0.0945, 0.0493, 0.0617, 0.0493, 0.0343, 0.0341,
         0.0741, 0.0235, 0.0341, 0.0241, 0.0221, 0.0172, 0.0252, 0.0741, 0.0231,
         0.0443, 0.0152, 0.0341, 0.0263, 0.0172, 0.0191, 0.0112, 0.0418, 0.0341,
         0.0186, 0.0112, 0.0112, 0.0112],
        [0.0210, 0.0175, 0.0078, 0.1407, 0.0525, 0.0888, 0.0525, 0.0247, 0.0330,
         0.0692, 0.0158, 0.0330, 0.0254, 0.0184, 0.0165, 0.0239, 0.0692, 0.0253,
         0.0309, 0.0106, 0.0330, 0.0211, 0.0165, 0.0166, 0.0102, 0.0464, 0.0330,
         0.0158, 0.0102, 0.0102, 0.0102],
        [0.0201, 0.0142, 0.0096, 0.1125, 0.0438, 0.0692, 0.0438, 0.0258, 0.0339,
         0.1023, 0.0180, 0.0339, 0.0294, 0.0223, 0.0130, 0.0194, 0.1023, 0.0268,
         0.0479, 0.0105, 0.0339, 0.0205, 0.0130, 0.0172, 0.0059, 0.0443, 0.0339,
         0.0147, 0.0059, 0.0059, 0.0059],
        [0.0259, 0.0141, 0.0100, 0.1273, 0.0541, 0.0616, 0.0541, 0.0342, 0.0389,
         0.0672, 0.0181, 0.0389, 0.0230, 0.0217, 0.0212, 0.0209, 0.0672, 0.0267,
         0.0351, 0.0110, 0.0389, 0.0216, 0.0212, 0.0190, 0.0077, 0.0411, 0.0389,
         0.0174, 0.0077, 0.0077, 0.0077],
        [0.0188, 0.0181, 0.0100, 0.1221, 0.0523, 0.0825, 0.0523, 0.0248, 0.0380,
         0.0701, 0.0230, 0.0380, 0.0236, 0.0198, 0.0169, 0.0238, 0.0701, 0.0224,
         0.0331, 0.0104, 0.0380, 0.0242, 0.0169, 0.0171, 0.0074, 0.0492, 0.0380,
         0.0169, 0.0074, 0.0074, 0.0074],
        [0.0224, 0.0148, 0.0153, 0.1346, 0.0451, 0.0820, 0.0451, 0.0225, 0.0399,
         0.0644, 0.0188, 0.0399, 0.0301, 0.0164, 0.0151, 0.0255, 0.0644, 0.0257,
         0.0332, 0.0124, 0.0399, 0.0246, 0.0151, 0.0178, 0.0090, 0.0403, 0.0399,
         0.0184, 0.0090, 0.0090, 0.0090],
        [0.0188, 0.0181, 0.0100, 0.1221, 0.0523, 0.0825, 0.0523, 0.0248, 0.0380,
         0.0701, 0.0230, 0.0380, 0.0236, 0.0198, 0.0169, 0.0238, 0.0701, 0.0224,
         0.0331, 0.0104, 0.0380, 0.0242, 0.0169, 0.0171, 0.0074, 0.0492, 0.0380,
         0.0169, 0.0074, 0.0074, 0.0074],
        [0.0237, 0.0174, 0.0087, 0.1237, 0.0530, 0.0668, 0.0530, 0.0213, 0.0395,
         0.0824, 0.0166, 0.0395, 0.0242, 0.0198, 0.0135, 0.0200, 0.0824, 0.0231,
         0.0352, 0.0112, 0.0395, 0.0209, 0.0135, 0.0154, 0.0085, 0.0485, 0.0395,
         0.0136, 0.0085, 0.0085, 0.0085],
        [0.0277, 0.0237, 0.0158, 0.0800, 0.0442, 0.0622, 0.0442, 0.0248, 0.0395,
         0.0484, 0.0248, 0.0395, 0.0354, 0.0200, 0.0228, 0.0348, 0.0484, 0.0305,
         0.0308, 0.0189, 0.0395, 0.0306, 0.0228, 0.0200, 0.0147, 0.0500, 0.0395,
         0.0219, 0.0147, 0.0147, 0.0147],
        [0.0156, 0.0116, 0.0057, 0.1859, 0.0531, 0.0746, 0.0531, 0.0168, 0.0319,
         0.0876, 0.0169, 0.0319, 0.0216, 0.0144, 0.0121, 0.0194, 0.0876, 0.0214,
         0.0323, 0.0060, 0.0319, 0.0141, 0.0121, 0.0140, 0.0049, 0.0655, 0.0319,
         0.0112, 0.0049, 0.0049, 0.0049],
        [0.0253, 0.0183, 0.0109, 0.0998, 0.0330, 0.0670, 0.0330, 0.0284, 0.0385,
         0.0736, 0.0217, 0.0385, 0.0270, 0.0221, 0.0189, 0.0287, 0.0736, 0.0273,
         0.0470, 0.0112, 0.0385, 0.0244, 0.0189, 0.0222, 0.0100, 0.0526, 0.0385,
         0.0210, 0.0100, 0.0100, 0.0100],
        [0.0277, 0.0237, 0.0158, 0.0800, 0.0442, 0.0622, 0.0442, 0.0248, 0.0395,
         0.0484, 0.0248, 0.0395, 0.0354, 0.0200, 0.0228, 0.0348, 0.0484, 0.0305,
         0.0308, 0.0189, 0.0395, 0.0306, 0.0228, 0.0200, 0.0147, 0.0500, 0.0395,
         0.0219, 0.0147, 0.0147, 0.0147],
        [0.0253, 0.0215, 0.0098, 0.1038, 0.0449, 0.0663, 0.0449, 0.0259, 0.0362,
         0.0762, 0.0256, 0.0362, 0.0308, 0.0205, 0.0172, 0.0282, 0.0762, 0.0284,
         0.0356, 0.0168, 0.0362, 0.0232, 0.0172, 0.0190, 0.0086, 0.0458, 0.0362,
         0.0178, 0.0086, 0.0086, 0.0086],
        [0.0244, 0.0190, 0.0118, 0.1019, 0.0398, 0.0572, 0.0398, 0.0261, 0.0459,
         0.0620, 0.0254, 0.0459, 0.0327, 0.0226, 0.0201, 0.0270, 0.0620, 0.0239,
         0.0371, 0.0156, 0.0459, 0.0243, 0.0201, 0.0192, 0.0102, 0.0465, 0.0459,
         0.0169, 0.0102, 0.0102, 0.0102],
        [0.0305, 0.0244, 0.0150, 0.0580, 0.0446, 0.0591, 0.0446, 0.0337, 0.0321,
         0.0671, 0.0330, 0.0321, 0.0291, 0.0258, 0.0246, 0.0310, 0.0671, 0.0341,
         0.0351, 0.0199, 0.0321, 0.0287, 0.0246, 0.0215, 0.0144, 0.0392, 0.0321,
         0.0229, 0.0144, 0.0144, 0.0144],
        [0.0209, 0.0209, 0.0132, 0.0874, 0.0445, 0.0597, 0.0445, 0.0250, 0.0360,
         0.0829, 0.0224, 0.0360, 0.0302, 0.0232, 0.0180, 0.0284, 0.0829, 0.0315,
         0.0411, 0.0158, 0.0360, 0.0255, 0.0180, 0.0203, 0.0111, 0.0377, 0.0360,
         0.0179, 0.0111, 0.0111, 0.0111],
        [0.0156, 0.0116, 0.0057, 0.1859, 0.0531, 0.0746, 0.0531, 0.0168, 0.0319,
         0.0876, 0.0169, 0.0319, 0.0216, 0.0144, 0.0121, 0.0194, 0.0876, 0.0214,
         0.0323, 0.0060, 0.0319, 0.0141, 0.0121, 0.0140, 0.0049, 0.0655, 0.0319,
         0.0112, 0.0049, 0.0049, 0.0049],
        [0.0266, 0.0180, 0.0135, 0.0804, 0.0433, 0.0716, 0.0433, 0.0264, 0.0410,
         0.0654, 0.0223, 0.0410, 0.0297, 0.0223, 0.0205, 0.0285, 0.0654, 0.0259,
         0.0346, 0.0161, 0.0410, 0.0279, 0.0205, 0.0219, 0.0114, 0.0494, 0.0410,
         0.0169, 0.0114, 0.0114, 0.0114],
        [0.0156, 0.0154, 0.0080, 0.1384, 0.0507, 0.0664, 0.0507, 0.0256, 0.0348,
         0.0863, 0.0163, 0.0348, 0.0269, 0.0189, 0.0158, 0.0268, 0.0863, 0.0221,
         0.0395, 0.0102, 0.0348, 0.0189, 0.0158, 0.0152, 0.0074, 0.0488, 0.0348,
         0.0127, 0.0074, 0.0074, 0.0074],
        [0.0201, 0.0151, 0.0110, 0.1009, 0.0465, 0.0741, 0.0465, 0.0332, 0.0397,
         0.0926, 0.0173, 0.0397, 0.0250, 0.0206, 0.0126, 0.0276, 0.0926, 0.0235,
         0.0390, 0.0131, 0.0397, 0.0181, 0.0126, 0.0183, 0.0065, 0.0395, 0.0397,
         0.0158, 0.0065, 0.0065, 0.0065],
        [0.0277, 0.0237, 0.0158, 0.0800, 0.0442, 0.0622, 0.0442, 0.0248, 0.0395,
         0.0484, 0.0248, 0.0395, 0.0354, 0.0200, 0.0228, 0.0348, 0.0484, 0.0305,
         0.0308, 0.0189, 0.0395, 0.0306, 0.0228, 0.0200, 0.0147, 0.0500, 0.0395,
         0.0219, 0.0147, 0.0147, 0.0147],
        [0.0238, 0.0140, 0.0112, 0.1062, 0.0533, 0.0647, 0.0533, 0.0328, 0.0348,
         0.0843, 0.0241, 0.0348, 0.0218, 0.0223, 0.0170, 0.0255, 0.0843, 0.0275,
         0.0364, 0.0120, 0.0348, 0.0188, 0.0170, 0.0231, 0.0071, 0.0415, 0.0348,
         0.0176, 0.0071, 0.0071, 0.0071],
        [0.0305, 0.0244, 0.0150, 0.0580, 0.0446, 0.0591, 0.0446, 0.0337, 0.0321,
         0.0671, 0.0330, 0.0321, 0.0291, 0.0258, 0.0246, 0.0310, 0.0671, 0.0341,
         0.0351, 0.0199, 0.0321, 0.0287, 0.0246, 0.0215, 0.0144, 0.0392, 0.0321,
         0.0229, 0.0144, 0.0144, 0.0144],
        [0.0223, 0.0186, 0.0103, 0.1320, 0.0419, 0.0645, 0.0419, 0.0270, 0.0368,
         0.0729, 0.0268, 0.0368, 0.0276, 0.0228, 0.0161, 0.0213, 0.0729, 0.0245,
         0.0358, 0.0153, 0.0368, 0.0241, 0.0161, 0.0204, 0.0081, 0.0468, 0.0368,
         0.0185, 0.0081, 0.0081, 0.0081],
        [0.0181, 0.0161, 0.0103, 0.1112, 0.0642, 0.0526, 0.0642, 0.0302, 0.0395,
         0.0683, 0.0203, 0.0395, 0.0312, 0.0204, 0.0156, 0.0238, 0.0683, 0.0279,
         0.0308, 0.0116, 0.0395, 0.0206, 0.0156, 0.0238, 0.0088, 0.0469, 0.0395,
         0.0150, 0.0088, 0.0088, 0.0088],
        [0.0219, 0.0161, 0.0095, 0.1254, 0.0475, 0.0751, 0.0475, 0.0267, 0.0364,
         0.0687, 0.0216, 0.0364, 0.0315, 0.0230, 0.0158, 0.0251, 0.0687, 0.0258,
         0.0360, 0.0119, 0.0364, 0.0187, 0.0158, 0.0203, 0.0079, 0.0511, 0.0364,
         0.0187, 0.0079, 0.0079, 0.0079],
        [0.0277, 0.0237, 0.0158, 0.0800, 0.0442, 0.0622, 0.0442, 0.0248, 0.0395,
         0.0484, 0.0248, 0.0395, 0.0354, 0.0200, 0.0228, 0.0348, 0.0484, 0.0305,
         0.0308, 0.0189, 0.0395, 0.0306, 0.0228, 0.0200, 0.0147, 0.0500, 0.0395,
         0.0219, 0.0147, 0.0147, 0.0147],
        [0.0275, 0.0181, 0.0113, 0.1038, 0.0416, 0.0757, 0.0416, 0.0271, 0.0321,
         0.0735, 0.0257, 0.0321, 0.0282, 0.0248, 0.0160, 0.0277, 0.0735, 0.0223,
         0.0361, 0.0143, 0.0321, 0.0258, 0.0160, 0.0192, 0.0126, 0.0559, 0.0321,
         0.0156, 0.0126, 0.0126, 0.0126],
        [0.0181, 0.0161, 0.0103, 0.1112, 0.0642, 0.0526, 0.0642, 0.0302, 0.0395,
         0.0683, 0.0203, 0.0395, 0.0312, 0.0204, 0.0156, 0.0238, 0.0683, 0.0279,
         0.0308, 0.0116, 0.0395, 0.0206, 0.0156, 0.0238, 0.0088, 0.0469, 0.0395,
         0.0150, 0.0088, 0.0088, 0.0088],
        [0.0181, 0.0161, 0.0103, 0.1112, 0.0642, 0.0526, 0.0642, 0.0302, 0.0395,
         0.0683, 0.0203, 0.0395, 0.0312, 0.0204, 0.0156, 0.0238, 0.0683, 0.0279,
         0.0308, 0.0116, 0.0395, 0.0206, 0.0156, 0.0238, 0.0088, 0.0469, 0.0395,
         0.0150, 0.0088, 0.0088, 0.0088],
        [0.0181, 0.0161, 0.0103, 0.1112, 0.0642, 0.0526, 0.0642, 0.0302, 0.0395,
         0.0683, 0.0203, 0.0395, 0.0312, 0.0204, 0.0156, 0.0238, 0.0683, 0.0279,
         0.0308, 0.0116, 0.0395, 0.0206, 0.0156, 0.0238, 0.0088, 0.0469, 0.0395,
         0.0150, 0.0088, 0.0088, 0.0088]])