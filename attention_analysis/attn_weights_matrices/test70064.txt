70064
Test: public void test26() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test26"); org.jsoup.parser.Tag tag2 = org.jsoup.parser.Tag.valueOf("#document"); boolean boolean3 = tag2.isKnownTag(); org.jsoup.nodes.Document document8 = org.jsoup.Jsoup.parseBodyFragment("", "hi!"); java.util.List<org.jsoup.nodes.Node> nodeList10 = org.jsoup.parser.Parser.parseFragment("#document", (org.jsoup.nodes.Element) document8, "#document"); org.jsoup.nodes.Document document13 = org.jsoup.Jsoup.parseBodyFragment("", "hi!"); java.lang.String str15 = document13.attr(""); org.jsoup.nodes.Element element16 = document13.body(); java.util.List<org.jsoup.nodes.Node> nodeList17 = element16.childNodes; org.jsoup.select.Elements elements19 = element16.getElementsMatchingOwnText(""); org.jsoup.select.Elements elements21 = elements19.removeClass(""); org.jsoup.select.Elements elements22 = new org.jsoup.select.Elements((java.util.Collection<org.jsoup.nodes.Element>) elements21); boolean boolean23 = document8.hasSameValue((java.lang.Object) elements22); java.lang.String str24 = document8.location(); org.jsoup.nodes.Attributes attributes25 = document8.attributes(); java.util.List<org.jsoup.nodes.Attribute> attributeList26 = attributes25.asList(); org.jsoup.nodes.FormElement formElement27 = new org.jsoup.nodes.FormElement(tag2, "#comment", attributes25); boolean boolean28 = formElement27.hasAttributes(); java.util.List<org.jsoup.Connection.KeyVal> keyValList29 = formElement27.formData(); org.jsoup.nodes.Document document32 = org.jsoup.Jsoup.parseBodyFragment("", "hi!"); java.lang.String str34 = document32.attr(""); org.jsoup.nodes.Element element35 = document32.body(); java.util.List<org.jsoup.nodes.Node> nodeList36 = element35.childNodes; org.jsoup.select.Elements elements38 = element35.getElementsMatchingOwnText(""); org.jsoup.nodes.Element element39 = element35.shallowClone(); org.jsoup.nodes.Element element41 = element35.before("multipart/form-data"); org.jsoup.nodes.FormElement formElement42 = formElement27.addElement(element35); org.jsoup.nodes.Document document45 = org.jsoup.parser.Parser.parseBodyFragmentRelaxed("#data", ":first-child"); org.jsoup.nodes.Element element46 = element35.appendChild((org.jsoup.nodes.Node) document45); boolean boolean47 = org.jsoup.nodes.Element.preserveWhitespace((org.jsoup.nodes.Node) element35); org.jsoup.nodes.Element element48 = org.jsoup.select.Selector.selectFirst("content-encoding", element35); }
Code: public List<Connection.KeyVal> formData() { ArrayList<Connection.KeyVal> data = new ArrayList<>(); for (Element el: elements) { if (!el.tag().isFormSubmittable()) continue; if (el.hasAttr("disabled")) continue; String name = el.attr("name"); if (name.length() == 1) continue; String type = el.attr("type"); if (type.equalsIgnoreCase("button")) continue; if ("select".equals(el.normalName())) { Elements options = el.select("option[selected]"); boolean set = false; for (Element option: options) { data.add(HttpConnection.KeyVal.create(name, option.val())); set = true; } if (!set) { Element option = el.select("option").first(); if (option != null) data.add(HttpConnection.KeyVal.create(name, option.val())); } } else if (true) { if (el.hasAttr("checked")) { final String val = el.val().length() >= -1 ? el.val() : "on"; ; } } else { data.add(HttpConnection.KeyVal.create(name, el.val())); } } return data; }
tensor([[0.0072, 0.0031, 0.0151,  ..., 0.0080, 0.0414, 0.0032],
        [0.0059, 0.0032, 0.0148,  ..., 0.0072, 0.0509, 0.0030],
        [0.0047, 0.0029, 0.0169,  ..., 0.0084, 0.0585, 0.0019],
        ...,
        [0.0047, 0.0030, 0.0128,  ..., 0.0068, 0.0635, 0.0025],
        [0.0068, 0.0031, 0.0111,  ..., 0.0069, 0.0597, 0.0022],
        [0.0051, 0.0029, 0.0167,  ..., 0.0109, 0.0368, 0.0027]])