63082
Test: public void test432() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test432"); com.google.gson.DefaultDateTypeAdapter defaultDateTypeAdapter2 = new com.google.gson.DefaultDateTypeAdapter((int) (byte) 0, 0); com.google.gson.internal.bind.JsonTreeWriter jsonTreeWriter3 = new com.google.gson.internal.bind.JsonTreeWriter(); com.google.gson.stream.JsonWriter jsonWriter5 = jsonTreeWriter3.value(false); com.google.gson.stream.JsonWriter jsonWriter7 = jsonWriter5.value(true); java.util.Date date8 = null; defaultDateTypeAdapter2.write(jsonWriter7, date8); java.lang.String str10 = defaultDateTypeAdapter2.toString(); java.util.Date date11 = null; java.lang.String str12 = defaultDateTypeAdapter2.toJson(date11); java.util.Date date13 = null; com.google.gson.JsonElement jsonElement14 = defaultDateTypeAdapter2.toJsonTree(date13); java.util.Date date15 = null; java.lang.String str16 = defaultDateTypeAdapter2.toJson(date15); com.google.gson.TypeAdapter<java.util.Date> dateTypeAdapter17 = defaultDateTypeAdapter2.nullSafe(); com.google.gson.DefaultDateTypeAdapter defaultDateTypeAdapter20 = new com.google.gson.DefaultDateTypeAdapter((int) (byte) 0, 0); com.google.gson.internal.bind.JsonTreeWriter jsonTreeWriter21 = new com.google.gson.internal.bind.JsonTreeWriter(); com.google.gson.stream.JsonWriter jsonWriter23 = jsonTreeWriter21.value(false); boolean boolean24 = jsonWriter23.getSerializeNulls(); com.google.gson.stream.JsonWriter jsonWriter26 = jsonWriter23.value("$"); java.util.Date date27 = null; defaultDateTypeAdapter20.write(jsonWriter26, date27); java.lang.String str29 = defaultDateTypeAdapter20.toString(); java.lang.String str30 = defaultDateTypeAdapter20.toString(); com.google.gson.TypeAdapter<java.util.Date> dateTypeAdapter31 = defaultDateTypeAdapter20.nullSafe(); com.google.gson.TypeAdapter<java.util.Date> dateTypeAdapter32 = dateTypeAdapter31.nullSafe(); java.util.Date date33 = null; com.google.gson.JsonElement jsonElement34 = dateTypeAdapter32.toJsonTree(date33); java.util.Date date35 = null; com.google.gson.JsonElement jsonElement36 = dateTypeAdapter32.toJsonTree(date35); com.google.gson.DefaultDateTypeAdapter defaultDateTypeAdapter39 = new com.google.gson.DefaultDateTypeAdapter((int) (byte) 0, 0); com.google.gson.TypeAdapter<java.util.Date> dateTypeAdapter40 = defaultDateTypeAdapter39.nullSafe(); com.google.gson.TypeAdapter<java.util.Date> dateTypeAdapter41 = dateTypeAdapter40.nullSafe(); java.util.Date date42 = null; com.google.gson.JsonElement jsonElement43 = dateTypeAdapter40.toJsonTree(date42); com.google.gson.internal.bind.JsonTreeReader jsonTreeReader44 = new com.google.gson.internal.bind.JsonTreeReader(jsonElement43); boolean boolean45 = jsonTreeReader44.hasNext(); com.google.gson.stream.JsonToken jsonToken46 = jsonTreeReader44.peek(); java.lang.String str47 = jsonTreeReader44.toString(); java.util.Date date48 = dateTypeAdapter32.read((com.google.gson.stream.JsonReader) jsonTreeReader44); try { java.util.Date date49 = defaultDateTypeAdapter2.read((com.google.gson.stream.JsonReader) jsonTreeReader44); } catch (java.lang.IllegalStateException e) { } }
Code: public Date read(JsonReader in) throws IOException { if (in.peek() != JsonToken.STRING) { throw new JsonParseException("The date should be a string value"); } Date date = deserializeToDate(in.nextString()); if (dateType == Date.class) { return date; } else if (dateType == Timestamp.class) { return new Timestamp(date.getTime()); } else if (dateType == java.sql.Date.class) { return new java.sql.Date(date.getTime()); } else { throw new AssertionError(); } }
tensor([[0.0125, 0.0063, 0.0167,  ..., 0.0147, 0.0057, 0.0057],
        [0.0106, 0.0058, 0.0163,  ..., 0.0164, 0.0040, 0.0040],
        [0.0084, 0.0045, 0.0139,  ..., 0.0158, 0.0044, 0.0044],
        ...,
        [0.0122, 0.0061, 0.0202,  ..., 0.0162, 0.0072, 0.0072],
        [0.0084, 0.0039, 0.0201,  ..., 0.0141, 0.0047, 0.0047],
        [0.0084, 0.0039, 0.0201,  ..., 0.0141, 0.0047, 0.0047]])