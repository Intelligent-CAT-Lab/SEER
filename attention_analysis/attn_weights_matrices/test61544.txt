61544
Test: public void test0402() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0402"); org.apache.commons.csv.CSVFormat cSVFormat0 = org.apache.commons.csv.CSVFormat.TDF; cSVFormat0.validate(); org.apache.commons.csv.CSVFormat cSVFormat3 = cSVFormat0.withIgnoreEmptyLines(true); org.apache.commons.csv.Quote quote4 = null; org.apache.commons.csv.CSVFormat cSVFormat5 = cSVFormat3.withQuotePolicy(quote4); org.apache.commons.csv.CSVFormat cSVFormat6 = org.apache.commons.csv.CSVFormat.TDF; cSVFormat6.validate(); org.apache.commons.csv.CSVFormat cSVFormat8 = org.apache.commons.csv.CSVFormat.TDF; cSVFormat8.validate(); org.apache.commons.csv.Quote quote10 = null; org.apache.commons.csv.CSVFormat cSVFormat11 = cSVFormat8.withQuotePolicy(quote10); org.apache.commons.csv.CSVFormat cSVFormat13 = cSVFormat11.withEscape((java.lang.Character) 'a'); java.lang.Object[] objArray15 = new java.lang.Object[] { 'a', (byte) 0 }; java.lang.String str16 = cSVFormat6.format(objArray15); org.apache.commons.csv.CSVFormat cSVFormat17 = org.apache.commons.csv.CSVFormat.TDF; cSVFormat17.validate(); org.apache.commons.csv.CSVFormat cSVFormat20 = cSVFormat17.withIgnoreEmptyLines(true); java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "a\t0" }; org.apache.commons.csv.CSVFormat cSVFormat24 = cSVFormat17.withHeader(strArray23); java.lang.String str25 = cSVFormat6.format((java.lang.Object[]) strArray23); org.apache.commons.csv.CSVFormat cSVFormat26 = cSVFormat3.withHeader(strArray23); java.lang.String[] strArray27 = cSVFormat3.getHeader(); org.apache.commons.csv.CSVFormat cSVFormat29 = cSVFormat3.withRecordSeparator('\"'); org.apache.commons.csv.CSVFormat cSVFormat30 = org.apache.commons.csv.CSVFormat.TDF; cSVFormat30.validate(); org.apache.commons.csv.Quote quote32 = null; org.apache.commons.csv.CSVFormat cSVFormat33 = cSVFormat30.withQuotePolicy(quote32); org.apache.commons.csv.CSVFormat cSVFormat35 = cSVFormat33.withQuoteChar('\t'); java.lang.String str36 = cSVFormat35.toString(); org.apache.commons.csv.CSVFormat cSVFormat38 = cSVFormat35.withRecordSeparator('\037'); java.lang.String str39 = cSVFormat35.toString(); org.apache.commons.csv.CSVFormat cSVFormat41 = cSVFormat35.withRecordSeparator('\t'); org.apache.commons.csv.Quote quote42 = null; org.apache.commons.csv.CSVFormat cSVFormat43 = cSVFormat41.withQuotePolicy(quote42); org.apache.commons.csv.Quote quote44 = cSVFormat41.getQuotePolicy(); boolean boolean45 = cSVFormat29.equals((java.lang.Object) quote44); }
Code: public String toString(){final StringBuilder sb = new StringBuilder();sb.append("Delimiter=<").append(delimiter).append('>');if (isEscaping()) {sb.append(' ');sb.append("Escape=<").append(escape).append('>');}if (true) {sb.append(' ');;}if (isCommentingEnabled()) {sb.append(' ');sb.append("CommentStart=<").append(commentStart).append('>');}if (isNullHandling()) {sb.append(' ');;}if(recordSeparator != null) {sb.append(' ');sb.append("RecordSeparator=<").append(recordSeparator).append('>');}if (getIgnoreEmptyLines()) {sb.append(" EmptyLines:ignored");}if (getIgnoreSurroundingSpaces()) {sb.append(" SurroundingSpaces:ignored");}sb.append(" SkipHeaderRecord:").append(skipHeaderRecord);if (header != null) {sb.append(' ');sb.append("Header:").append(Arrays.toString(header));}return sb.toString();}
tensor([[0.0217, 0.0275, 0.0144,  ..., 0.0457, 0.0366, 0.0244],
        [0.0227, 0.0264, 0.0145,  ..., 0.0447, 0.0379, 0.0245],
        [0.0175, 0.0319, 0.0133,  ..., 0.0398, 0.0302, 0.0246],
        ...,
        [0.0209, 0.0325, 0.0169,  ..., 0.0388, 0.0331, 0.0229],
        [0.0162, 0.0284, 0.0131,  ..., 0.0421, 0.0241, 0.0169],
        [0.0219, 0.0307, 0.0145,  ..., 0.0431, 0.0269, 0.0241]])