100195
Test: public void testNormalizedStandard_periodType_yearMonthWeekDay() { Period test = new Period(1, 15, 1, 12, 0, 0, 0, 0); Period result = test.normalizedStandard(PeriodType.yearMonthDayTime()); }
Code: public Period normalizedStandard(PeriodType type) { type = DateTimeUtils.getPeriodType(type); long millis = getMillis(); millis += (((long) getSeconds()) * ((long) DateTimeConstants.MILLIS_PER_SECOND)); millis += (((long) getMinutes()) * ((long) DateTimeConstants.MILLIS_PER_MINUTE)); millis += (((long) getHours()) * ((long) DateTimeConstants.MILLIS_PER_HOUR)); millis += (((long) getDays()) * ((long) DateTimeConstants.MILLIS_PER_DAY)); millis += (((long) getWeeks()) * ((long) DateTimeConstants.MILLIS_PER_WEEK)); Period result = new Period(millis, type, ISOChronology.getInstanceUTC()); int years = getYears(); int months = getMonths(); if (years != 0 || months != 0) { years = FieldUtils.safeAdd(years, months / 12); months = months % 12; if (years != 0) { result = result.withYears(years); } if (months != 0) { result = result.withMonths(months); } } return result; }
tensor([[0.0079, 0.0142, 0.0118,  ..., 0.0087, 0.0131, 0.0035],
        [0.0070, 0.0129, 0.0110,  ..., 0.0079, 0.0140, 0.0033],
        [0.0062, 0.0160, 0.0120,  ..., 0.0081, 0.0120, 0.0031],
        ...,
        [0.0050, 0.0138, 0.0109,  ..., 0.0072, 0.0135, 0.0028],
        [0.0072, 0.0155, 0.0107,  ..., 0.0102, 0.0142, 0.0029],
        [0.0056, 0.0191, 0.0108,  ..., 0.0120, 0.0104, 0.0030]])