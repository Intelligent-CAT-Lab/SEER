70263
Test: public void test024() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test024"); org.apache.commons.jxpath.ri.compiler.Constant constant1 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant3 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.NameAttributeTest nameAttributeTest4 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest((org.apache.commons.jxpath.ri.compiler.Expression) constant1, (org.apache.commons.jxpath.ri.compiler.Expression) constant3); org.apache.commons.jxpath.ri.EvalContext evalContext5 = null; org.apache.commons.jxpath.ri.compiler.Constant constant7 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant9 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.NameAttributeTest nameAttributeTest10 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest((org.apache.commons.jxpath.ri.compiler.Expression) constant7, (org.apache.commons.jxpath.ri.compiler.Expression) constant9); org.apache.commons.jxpath.ri.compiler.Constant constant12 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant14 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.NameAttributeTest nameAttributeTest15 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest((org.apache.commons.jxpath.ri.compiler.Expression) constant12, (org.apache.commons.jxpath.ri.compiler.Expression) constant14); boolean boolean16 = nameAttributeTest4.equal(evalContext5, (org.apache.commons.jxpath.ri.compiler.Expression) constant7, (org.apache.commons.jxpath.ri.compiler.Expression) nameAttributeTest15); int int17 = nameAttributeTest15.getPrecedence(); org.apache.commons.jxpath.ri.compiler.Constant constant19 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant21 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant23 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.NameAttributeTest nameAttributeTest24 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest((org.apache.commons.jxpath.ri.compiler.Expression) constant21, (org.apache.commons.jxpath.ri.compiler.Expression) constant23); org.apache.commons.jxpath.ri.compiler.CoreOperationEqual coreOperationEqual25 = new org.apache.commons.jxpath.ri.compiler.CoreOperationEqual((org.apache.commons.jxpath.ri.compiler.Expression) constant19, (org.apache.commons.jxpath.ri.compiler.Expression) nameAttributeTest24); boolean boolean26 = nameAttributeTest24.isContextDependent(); org.apache.commons.jxpath.ri.compiler.Constant constant28 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant30 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.NameAttributeTest nameAttributeTest31 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest((org.apache.commons.jxpath.ri.compiler.Expression) constant28, (org.apache.commons.jxpath.ri.compiler.Expression) constant30); org.apache.commons.jxpath.ri.EvalContext evalContext32 = null; org.apache.commons.jxpath.ri.compiler.Constant constant34 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant36 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.NameAttributeTest nameAttributeTest37 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest((org.apache.commons.jxpath.ri.compiler.Expression) constant34, (org.apache.commons.jxpath.ri.compiler.Expression) constant36); org.apache.commons.jxpath.ri.compiler.Constant constant39 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant41 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.NameAttributeTest nameAttributeTest42 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest((org.apache.commons.jxpath.ri.compiler.Expression) constant39, (org.apache.commons.jxpath.ri.compiler.Expression) constant41); boolean boolean43 = nameAttributeTest31.equal(evalContext32, (org.apache.commons.jxpath.ri.compiler.Expression) constant34, (org.apache.commons.jxpath.ri.compiler.Expression) nameAttributeTest42); org.apache.commons.jxpath.ri.compiler.Constant constant45 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant47 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant49 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.NameAttributeTest nameAttributeTest50 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest((org.apache.commons.jxpath.ri.compiler.Expression) constant47, (org.apache.commons.jxpath.ri.compiler.Expression) constant49); org.apache.commons.jxpath.ri.compiler.CoreOperationEqual coreOperationEqual51 = new org.apache.commons.jxpath.ri.compiler.CoreOperationEqual((org.apache.commons.jxpath.ri.compiler.Expression) constant45, (org.apache.commons.jxpath.ri.compiler.Expression) nameAttributeTest50); org.apache.commons.jxpath.ri.compiler.Constant constant53 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant55 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant57 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.NameAttributeTest nameAttributeTest58 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest((org.apache.commons.jxpath.ri.compiler.Expression) constant55, (org.apache.commons.jxpath.ri.compiler.Expression) constant57); org.apache.commons.jxpath.ri.compiler.CoreOperationEqual coreOperationEqual59 = new org.apache.commons.jxpath.ri.compiler.CoreOperationEqual((org.apache.commons.jxpath.ri.compiler.Expression) constant53, (org.apache.commons.jxpath.ri.compiler.Expression) nameAttributeTest58); boolean boolean60 = org.apache.commons.jxpath.util.ValueUtils.isCollection((java.lang.Object) constant53); org.apache.commons.jxpath.ri.compiler.Expression[] expressionArray61 = new org.apache.commons.jxpath.ri.compiler.Expression[] { nameAttributeTest42, constant45, constant53 }; nameAttributeTest24.args = expressionArray61; org.apache.commons.jxpath.ri.EvalContext evalContext63 = null; org.apache.commons.jxpath.ri.compiler.NodeTest nodeTest64 = null; org.apache.commons.jxpath.ri.axes.SelfContext selfContext65 = new org.apache.commons.jxpath.ri.axes.SelfContext(evalContext63, nodeTest64); int int66 = selfContext65.getCurrentPosition(); org.apache.commons.jxpath.ri.compiler.Constant constant68 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant70 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.NameAttributeTest nameAttributeTest71 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest((org.apache.commons.jxpath.ri.compiler.Expression) constant68, (org.apache.commons.jxpath.ri.compiler.Expression) constant70); org.apache.commons.jxpath.ri.EvalContext evalContext72 = null; org.apache.commons.jxpath.ri.compiler.NodeTest nodeTest73 = null; org.apache.commons.jxpath.ri.axes.SelfContext selfContext74 = new org.apache.commons.jxpath.ri.axes.SelfContext(evalContext72, nodeTest73); java.lang.Object obj75 = constant68.computeValue(evalContext72); org.apache.commons.jxpath.ri.compiler.Constant constant77 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant79 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.Constant constant81 = new org.apache.commons.jxpath.ri.compiler.Constant("<<unknown namespace>>"); org.apache.commons.jxpath.ri.compiler.NameAttributeTest nameAttributeTest82 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest((org.apache.commons.jxpath.ri.compiler.Expression) constant79, (org.apache.commons.jxpath.ri.compiler.Expression) constant81); org.apache.commons.jxpath.ri.compiler.CoreOperationEqual coreOperationEqual83 = new org.apache.commons.jxpath.ri.compiler.CoreOperationEqual((org.apache.commons.jxpath.ri.compiler.Expression) constant77, (org.apache.commons.jxpath.ri.compiler.Expression) nameAttributeTest82); boolean boolean84 = nameAttributeTest24.equal((org.apache.commons.jxpath.ri.EvalContext) selfContext65, (org.apache.commons.jxpath.ri.compiler.Expression) constant68, (org.apache.commons.jxpath.ri.compiler.Expression) nameAttributeTest82); java.lang.Object obj85 = nameAttributeTest15.computeValue((org.apache.commons.jxpath.ri.EvalContext) selfContext65); }
Code: protected boolean equal(EvalContext context,Expression left,Expression right){Object l = left.compute(context);Object r = right.compute(context);if (l instanceof InitialContext || l instanceof SelfContext) {;}if (r instanceof InitialContext || r instanceof SelfContext) {;}if (l instanceof Collection) {l = ((Collection) l).iterator();}if (r instanceof Collection) {r = ((Collection) r).iterator();}if ((l instanceof Iterator) && !(r instanceof Iterator)) {return contains((Iterator) l, r);}if (!(l instanceof Iterator) && (r instanceof Iterator)) {return contains((Iterator) r, l);}if (l instanceof Iterator && r instanceof Iterator) {return findMatch((Iterator) l, (Iterator) r);}return equal(l, r);}
tensor([[0.0168, 0.0294, 0.0148,  ..., 0.0086, 0.0238, 0.0201],
        [0.0169, 0.0357, 0.0155,  ..., 0.0114, 0.0312, 0.0214],
        [0.0189, 0.0272, 0.0148,  ..., 0.0079, 0.0283, 0.0241],
        ...,
        [0.0150, 0.0250, 0.0166,  ..., 0.0111, 0.0266, 0.0214],
        [0.0173, 0.0244, 0.0181,  ..., 0.0116, 0.0297, 0.0194],
        [0.0150, 0.0298, 0.0155,  ..., 0.0101, 0.0274, 0.0181]])