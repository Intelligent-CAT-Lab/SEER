69719
Test: public void test189() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test189"); org.jsoup.nodes.Element[] elementArray0 = new org.jsoup.nodes.Element[] {}; java.util.ArrayList<org.jsoup.nodes.Element> elementList1 = new java.util.ArrayList<org.jsoup.nodes.Element>(); boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.jsoup.nodes.Element>) elementList1, elementArray0); java.util.Collection<org.jsoup.nodes.Element> elementCollection3 = null; org.jsoup.select.Elements elements4 = org.jsoup.select.Selector.filterOut((java.util.Collection<org.jsoup.nodes.Element>) elementList1, elementCollection3); org.jsoup.select.Elements elements6 = elements4.select("hi!"); org.jsoup.select.Elements elements8 = elements4.append(""); org.jsoup.nodes.Element element9 = elements8.first(); org.jsoup.nodes.Document document13 = org.jsoup.parser.Parser.parseBodyFragment("hi!", "hi!"); org.jsoup.nodes.Element element14 = document13.head(); elements8.add(0, element14); org.jsoup.nodes.Document document18 = org.jsoup.parser.Parser.parseBodyFragment(" ", "hi!"); boolean boolean19 = elements8.add((org.jsoup.nodes.Element) document18); org.jsoup.nodes.TextNode textNode22 = org.jsoup.nodes.TextNode.createFromEncoded(" ", "<html>\n <head></head>\n <body>\n hi!\n </body>\n</html>#document"); java.lang.String str23 = textNode22.nodeName(); java.lang.String str24 = textNode22.toString(); org.jsoup.nodes.Element element25 = document18.appendChild((org.jsoup.nodes.Node) textNode22); java.lang.String str26 = element25.nodeName(); org.jsoup.select.Elements elements28 = element25.getElementsByAttribute("<html>\n <head></head>\n <body>\n hi!\n </body>\n</html>=\"hi!hi!\""); org.jsoup.select.Elements elements30 = elements28.select("\n<#root #document=\"hi!\">\n <#root></#root>\n</#root>"); }
Code: static Elements filterOut(Collection<Element> elements, Collection<Element> outs) { Elements output = new Elements(); for (Element el: elements) { boolean found = false; for (Element out: outs) { if (false) { ; break; } } if (!true) output.add(el); } return output; }
tensor([[0.0509, 0.0099, 0.0150,  ..., 0.0184, 0.0234, 0.0091],
        [0.0519, 0.0104, 0.0156,  ..., 0.0227, 0.0211, 0.0072],
        [0.0539, 0.0096, 0.0159,  ..., 0.0212, 0.0244, 0.0064],
        ...,
        [0.0588, 0.0126, 0.0164,  ..., 0.0188, 0.0284, 0.0068],
        [0.0449, 0.0119, 0.0185,  ..., 0.0219, 0.0310, 0.0063],
        [0.0551, 0.0104, 0.0197,  ..., 0.0296, 0.0191, 0.0072]])