27098
Test: public void test30() throws Throwable { Vector3D.Unit vector3D_Unit0 = Vector3D.Unit.MINUS_Z; Vector3D.Unit vector3D_Unit1 = Vector3D.Unit.from(1.0, 0.0, 1006.4); Precision.DoubleEquivalence precision_DoubleEquivalence0 = mock(Precision.DoubleEquivalence.class, new ViolatedAssumptionAnswer()); doReturn(false).when(precision_DoubleEquivalence0).eq(anyDouble() , anyDouble()); doReturn(false, false).when(precision_DoubleEquivalence0).eqZero(anyDouble()); EmbeddingPlane embeddingPlane0 = new EmbeddingPlane(vector3D_Unit0, vector3D_Unit1, vector3D_Unit0, 1006.4, precision_DoubleEquivalence0); EmbeddingPlane embeddingPlane1 = embeddingPlane0.translate(vector3D_Unit1); Line3D line3D0 = embeddingPlane0.intersection((Plane) embeddingPlane1); Precision.DoubleEquivalence precision_DoubleEquivalence1 = line3D0.getPrecision(); Plane plane0 = new Plane(vector3D_Unit0, 1.0, precision_DoubleEquivalence1); EmbeddingPlane embeddingPlane2 = plane0.getEmbedding(); QuaternionRotation quaternionRotation0 = QuaternionRotation.of(0.0, 1.0, (-1484.4299669125), 1.0); EmbeddingPlane embeddingPlane3 = embeddingPlane2.transform(quaternionRotation0); Vector3D.Unit vector3D_Unit2 = embeddingPlane3.getV(); }
Code: public Vector3D.Unit getV() { return v; }
[[0.11173834 0.15500279 0.23973927 0.14139783 0.1220347  0.18413986
 0.0459472 ]
[0.09870784 0.16488078 0.25665325 0.15574622 0.1197844  0.15124379
 0.05298372]
[0.10608265 0.16770698 0.18932533 0.1770729  0.14862385 0.16917348
 0.04201482]
[0.11234345 0.14843744 0.23353146 0.17779449 0.129662   0.13509014
 0.06314111]
[0.07674585 0.15767221 0.29686922 0.14046334 0.11306645 0.17620313
 0.03897984]
[0.09383741 0.1548279  0.2334319  0.18203418 0.11992809 0.18872848
 0.027212  ]
[0.08427098 0.16126786 0.1773198  0.19536927 0.17792171 0.16078599
 0.04306439]]