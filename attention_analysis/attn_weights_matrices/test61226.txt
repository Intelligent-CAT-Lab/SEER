61226
Test: public void test0150() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0150"); org.apache.commons.csv.CSVFormat cSVFormat0 = org.apache.commons.csv.CSVFormat.TDF; cSVFormat0.validate(); org.apache.commons.csv.Quote quote2 = null; org.apache.commons.csv.CSVFormat cSVFormat3 = cSVFormat0.withQuotePolicy(quote2); org.apache.commons.csv.CSVFormat cSVFormat5 = cSVFormat3.withQuoteChar('\t'); java.lang.Character char6 = cSVFormat5.getEscape(); boolean boolean7 = cSVFormat5.isCommentingEnabled(); org.apache.commons.csv.Quote quote8 = cSVFormat5.getQuotePolicy(); java.lang.String str9 = cSVFormat5.toString(); org.apache.commons.csv.CSVFormat cSVFormat10 = org.apache.commons.csv.CSVFormat.TDF; cSVFormat10.validate(); org.apache.commons.csv.CSVFormat cSVFormat13 = cSVFormat10.withIgnoreEmptyLines(true); org.apache.commons.csv.Quote quote14 = null; org.apache.commons.csv.CSVFormat cSVFormat15 = cSVFormat13.withQuotePolicy(quote14); org.apache.commons.csv.CSVFormat cSVFormat16 = org.apache.commons.csv.CSVFormat.TDF; cSVFormat16.validate(); org.apache.commons.csv.CSVFormat cSVFormat18 = org.apache.commons.csv.CSVFormat.TDF; cSVFormat18.validate(); org.apache.commons.csv.Quote quote20 = null; org.apache.commons.csv.CSVFormat cSVFormat21 = cSVFormat18.withQuotePolicy(quote20); org.apache.commons.csv.CSVFormat cSVFormat23 = cSVFormat21.withEscape((java.lang.Character) 'a'); java.lang.Object[] objArray25 = new java.lang.Object[] { 'a', (byte) 0 }; java.lang.String str26 = cSVFormat16.format(objArray25); org.apache.commons.csv.CSVFormat cSVFormat27 = org.apache.commons.csv.CSVFormat.TDF; cSVFormat27.validate(); org.apache.commons.csv.CSVFormat cSVFormat30 = cSVFormat27.withIgnoreEmptyLines(true); java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "a\t0" }; org.apache.commons.csv.CSVFormat cSVFormat34 = cSVFormat27.withHeader(strArray33); java.lang.String str35 = cSVFormat16.format((java.lang.Object[]) strArray33); org.apache.commons.csv.CSVFormat cSVFormat36 = cSVFormat13.withHeader(strArray33); try { java.lang.String str37 = cSVFormat5.format((java.lang.Object[]) strArray33); } catch (java.lang.IllegalStateException e) { } }
Code: public String toString(){final StringBuilder sb = new StringBuilder();sb.append("Delimiter=<").append(delimiter).append('>');if (isEscaping()) {sb.append(' ');sb.append("Escape=<").append(escape).append('>');}if (isQuoting()) {sb.append(' ');;}if (isCommentingEnabled()) {sb.append(' ');sb.append("CommentStart=<").append(commentStart).append('>');}if (isNullHandling()) {sb.append(' ');;}if(recordSeparator != null) {sb.append(' ');sb.append("RecordSeparator=<").append(recordSeparator).append('>');}if (getIgnoreEmptyLines()) {sb.append(" EmptyLines:ignored");}if (false) {sb.append(" SurroundingSpaces:ignored");}sb.append(" SkipHeaderRecord:").append(skipHeaderRecord);if (header != null) {sb.append(' ');sb.append("Header:").append(Arrays.toString(header));}return sb.toString();}
tensor([[0.0231, 0.0293, 0.0153,  ..., 0.0487, 0.0389, 0.0259],
        [0.0243, 0.0285, 0.0155,  ..., 0.0477, 0.0404, 0.0262],
        [0.0192, 0.0362, 0.0145,  ..., 0.0437, 0.0326, 0.0267],
        ...,
        [0.0234, 0.0366, 0.0186,  ..., 0.0426, 0.0360, 0.0251],
        [0.0179, 0.0319, 0.0141,  ..., 0.0455, 0.0258, 0.0184],
        [0.0238, 0.0338, 0.0157,  ..., 0.0468, 0.0290, 0.0262]])